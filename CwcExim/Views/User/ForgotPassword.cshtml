@model CwcExim.Models.ForgotPassword


@{

    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.OnBegin = "OnBegin";
    options.OnComplete = "OnComplete";
    options.OnFailure = "OnFailure";
    options.OnSuccess = "OnSuccess";
    options.LoadingElementDuration = 1000;
    options.LoadingElementId = "divProgress";
    options.UpdateTargetId = "divResponse";
    options.InsertionMode = InsertionMode.InsertAfter;


}
@using (Ajax.BeginForm("ForgotPassword", "User", null, options, new { id = "FormForgotPassword" }))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid form-horizontal">

        <div class="row">
            <div class="col-md-12 SignUp_head">
                <h4>Forgot Password</h4>
            </div>
        </div>
        <div class="row">
            <div class="singup_body col-md-12">
                <div class="big">
                    <div class="row Form_Space_top">
                        <div class="SignUp">
                            <div class="col-md-4">
                                <div class="boolean-container">
                                    @Html.RadioButtonFor(m => m.OptType, "OptLoginid", new { @id = "OptLoginid", @checked = true })
                                    <label for="OptLoginid"><i class="circle"></i><span style="margin-left:5px;">User Id:</span></label>
                                </div>
                                @*<div class="ForgotRadio">
                                    @Html.RadioButtonFor(m => m.OptType, "OptLoginid", new { @id = "OptLoginid", @checked = true })<label for="OptLoginid">User Id:</label>
                                    @Html.LabelFor(model => model.LoginId, htmlAttributes: new { @class = "control-label" })
                                </div>*@
                            </div>
                            <div class="col-md-8">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-user fa" aria-hidden="true"></i></span>
                                    @Html.TextBoxFor(model => model.LoginId, new { @class = "form-control" })
                                </div>
                               @Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-12">
                            <label class="Audit_Heading">Send Password To:</label>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="SignUp">
                            <div class="col-sm-4">
                                <div class="boolean-container">
                                    @Html.RadioButtonFor(m => m.OptType, "OptMobile", new { @id = "OptMobile" })
                                    <label for="OptMobile"><i class="circle"></i><span style="margin-left:5px;">Mobile:</span></label>
                                </div>
                                @*<div class="ForgotRadio">
                                    @Html.RadioButtonFor(m => m.OptType, "OptMobile", new { @id = "OptMobile"})<label for="OptMobile">Mobile:</label>
                                    @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "control-label" })
                                </div>*@
                            </div>
                            <div class="col-sm-8">
                                <div class="input-group">
                                    <span style="padding:4px 16px;" class="input-group-addon"><i class="fa fa-mobile-phone fa" aria-hidden="true"></i></span>
                                    @Html.TextBoxFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", id = "MobileNo" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="SignUp">
                            <div class="col-md-4">
                                <div class="boolean-container">
                                    @Html.RadioButtonFor(m => m.OptType, "OptEmail", new { @id = "OptEmail" })
                                    <label for="OptEmail"><i class="circle"></i><span style="margin-left:5px;">Email:</span></label>
                                </div>
                                @*<div class="ForgotRadio">
                                    @Html.RadioButtonFor(m => m.OptType, "OptEmail", new { @id = "OptEmail" })<label for="OptEmail">Email:</label>
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label"})onclick="ForgotPass()"   
                                </div>*@
                            </div>
                            <div class="col-md-8">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-envelope fa" aria-hidden="true"></i></span>
                                    @Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "Email" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row SignUp_space_top">
                        <div class="stoke"></div>
                    </div>
                    <div class="row SignUp_space_top">
                        <div class="col-md-offset-4 col-md-4">
                            <input type="submit" value="Send" class="btn log_Btn_sm" onclick="return CheckOption()" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<div class="logErrMsg" id="DivErrMsg"></div>
<div class="logSuccMsg" id="DivConfirmMsg"></div>

<script type="text/javascript">
    var MobileEmail = "";
    function OnBegin()
    {

    }
    function OnComplete() {
    }

    function OnSuccess(Result)
    {
        if (Result.Status == 1)
        {
           
            //MobileEmail = Result.Data;
            Clear();
            if ($('#OptLoginid').is(":checked"))
            {
                $('#DivConfirmMsg').html("Password has been sent to your registered Mobile and Email Successfully.");
            }
            else if($('#OptMobile').is(":checked"))
            {
                $('#DivConfirmMsg').html("Password has been sent to your Mobile Successfully.");
            }
            else
            {
                $('#DivConfirmMsg').html("Password has been sent to your Email Successfully.");
            }
            
        }
        else if (Result.Status == -1)
        {
            $('#DivConfirmMsg').html("Please fill all the required fields");
        }
        else {
            $('#DivConfirmMsg').html(Result.Message);
        }
    }


    function ForgotPass() {
        $.ajax({
            url: '@Url.Action("GeneratePassword", "User")',
            type: "POST",
            async: false,
            dataType: "JSON",
           // data: { NoDueCertAppId: NoDueCertAppId },
            success: function (data) {
                if (data.Status == 1) {
                    $('#DivConfirmMsg').html(data.Message);

                }
                else {
                    $('#DivConfirmMsg').html(data.Message);

                }
            }


        });
        
        @*$.ajax({
            url: '@Url.Action("GeneratePassword", "User")',
            data: {},
            type: 'GET',
            success: function (data) {
                alert(data);

            }
        });*@
    }

    function CheckOption()
    {       
        if ($('#OptLoginid').is(":checked") && $('#LoginId').val() == '')
        {
            $('#LoginId').focus();
            $('#DivErrMsg').html('Please Fill User Id');
            return false;
        }
        else
        {
            if ($('#OptMobile').is(":checked") && $('#MobileNo').val() == '')
            {
                $('#MobileNo').focus();
                $('#DivErrMsg').html('Please Fill Mobile No.');
                return false;
            }
            else
            {
                if ($('#OptEmail').is(":checked") && $('#Email').val() == '')
                {
                    $('#Email').focus();
                    $('#DivErrMsg').html('Please Fill Email.');
                    return false;
                }
                else {
                    return true;
                }
            }
        }
    }



    function Clear()
    {
        $('#DivErrMsg').html("");
        $("input[type=text]").val("");
        $("input[type=Email]").val("");
        $('#DivConfirmMsg').html("");
    }

</script>
