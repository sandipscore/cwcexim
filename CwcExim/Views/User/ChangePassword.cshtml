@model CwcExim.Models.ChangePassword


<script src="~/Scripts/md5.min.js"></script>
 

@{

    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.OnBegin = "OnBegin";
    options.OnComplete = "OnComplete";
    options.OnFailure = "OnFailure";
    options.OnSuccess = "OnSuccess";
    options.LoadingElementDuration = 1000;
    options.LoadingElementId = "divProgress";
    options.UpdateTargetId = "divResponse";
    options.InsertionMode = InsertionMode.InsertAfter;


}
@using (Ajax.BeginForm("ChangePassword", "User", null, options, new { id = "FormChangePassword" }))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid form-horizontal">

        <div class="row">
            <div class="col-md-12 SignUp_head">
                <h4 class="">Change Password</h4>
            </div>
        </div>
        <div class="row">
            <div class="singup_body" style="padding:0px 15px;">
                <div class="clearfix"></div>
                    <div class="row Form_Space_bottom SignUp_space_top2 SignUp">
                        <div class="col-md-4" style="padding-right:0px;">
                            @Html.LabelFor(model => model.OldPassword, new { @class = "control-label" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-8 Error_Msg">
                            @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control", id= "OldPassword" })
                            @Html.ValidationMessageFor(model => model.OldPassword)
                        </div>
                    </div>
                    <div class="row Form_Space_bottom SignUp_space_top2 SignUp">
                        <div class="col-sm-4" style="padding-right:0px;">
                            @Html.LabelFor(model => model.NewPassword, new { @class = "control-label" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-sm-8 Error_Msg">
                            <a style="right:18px;" class="Pass_popup" href="#" data-toggle="tooltip" data-placement="left" title="Password must contain at least : 1 Lowercase character,1 Upper Case character and 1 numeric digit. Special Character is optional and only specified ones are allowed : &amp; # . _ - $, Password should be minimum 8 characters and maximum 20 characters long."><i class="fa fa-2x fa-question-circle" aria-hidden="true"></i></a>
                            @Html.PasswordFor(model => model.NewPassword, new { @autocomplete = "off", @class = "form-control", id = "NewPassword" })
                            @Html.ValidationMessageFor(model => model.NewPassword)
                        </div>
                    </div>
                    <div class="row Form_Space_bottom SignUp_space_top2 SignUp">
                        <div class="col-sm-4 col-md-4" style="padding-right:0px;">
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label",style= "letter-spacing: -0.1px;" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-sm-8 col-md-8 Error_Msg">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @autocomplete = "off", @class = "form-control", id = "ConfirmPassword" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword)
                        </div>
                    </div>
                    <div class="row SignUp_space_top">
                        <div class="col-md-offset-4 col-md-4">
                            <input type="submit" value="Save" class="btn Log_Btn log" onclick="return Isvalid()" />
                        </div>
                    </div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<div class="logErrMsg" id="DivErrMsg"></div>
<div class="logSuccMsg" id="DivConfirmMsg"></div>

<script type="text/javascript">
    var website='@System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"]';
    function OnBegin()
    {

    }
    function OnComplete() {
    }

    function OnSuccess(data)
    {
        debugger;
        if (data.Status == 1)
        {
            Clear();
            var StrHtml = "";
            StrHtml = '<Div>';
            StrHtml = StrHtml + 'Password Changed Successfully.';
            //StrHtml = StrHtml + 'Click  ' + '<a href="/User/Login">Here</a>'
            StrHtml = StrHtml + 'Click  ' + '<a href='+website+'>Here</a>'
            StrHtml = StrHtml+'</Div>'
            $('#DivConfirmMsg').html(StrHtml);
            $('.close').hide();
            setTimeout(LoginSet, 3000);
        }
        
        //<a href="~/obj/Release/Package/PackageTmp/Views/Shared/_Layout.cshtml">~/obj/Release/Package/PackageTmp/Views/Shared/_Layout.cshtml</a>
        else if (data.Status == -1)
        {
            $('#DivConfirmMsg').html("Please fill all the required fields");
        }
        else {
            $('#DivConfirmMsg').html(data.Message);
            $('#NewPassword').val('');
            $('#OldPassword').val('')
            $('#ConfirmPassword').val('');
        }
    }

    
    function Clear()
    {
        $('#DivErrMsg').html("");        
        $("input[type=Password]").val("");
        $('#DivConfirmMsg').html("");
    }

    function Encrypt()
    {
      
        $('#NewPassword').val(md5($('#NewPassword').val()));
        $('#ConfirmPassword').val(md5($('#ConfirmPassword').val()));
        $('#OldPassword').val(md5($('#OldPassword').val()));
        return true;
    }

    function CheckPasswordPolicy()
    {
        debugger;
        var Status = true;
        var Password = $('#NewPassword').val();
        if (($('#NewPassword').val() != '' && $('#OldPassword').val()!='') && $('#NewPassword').val() == $('#OldPassword').val())
        {
            $('#DivErrMsg').html('NewPassword and OldPassword must not be same.');
            Status= false;
        }
        else if ($('#NewPassword').val()!='' && !Password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@('@')._$#-]+$/))
        {
            $('#DivErrMsg').html('Password Policy does not match');
            Status= false;
        }
        else if ($('#NewPassword').val()!='' && ((Password.length < 8) || (Password.length > 21)))
        {
            $('#DivErrMsg').html('Password must be minimum 8 characters long and maximum 20 characters long.');
            Status= false;
        }
        else if ($('#NewPassword').val() != ($('#ConfirmPassword').val()))
        {
            $('#DivErrMsg').html('NewPassword and confirm password should be same');
            Status = false;
        }
        return Status;
    }

    function Isvalid()
    {
        debugger;
        var PassPolicy = false;
        var PassEncryption = false;
        
        PassPolicy = CheckPasswordPolicy();
        if (PassPolicy)
        {
            if (($('#NewPassword').val() != '' && $('#OldPassword').val()!=''))
                PassEncryption = Encrypt();
            else
                $('#DivErrMsg').html('Please enter password');
            if (PassEncryption)
            {
                $('#DivErrMsg').html('');
                return true;
            }             
           
        }
        else
        {
            return false;
        }
           
    }
    
    function LoginSet()
    {
        window.location = '/MainDashBoard/MainLandingPage';
    }

</script>
<script>
$(document).ready(function(){
    $('[data-toggle="tooltip"]').tooltip();
});
</script>
