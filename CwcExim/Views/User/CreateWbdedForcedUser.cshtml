@model CwcExim.Models.WbdedForcedUser
@{

    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.Confirm = "Are you sure you want to save?";
    options.OnBegin = "OnBegin";
    options.OnComplete = "OnComplete";
    options.OnFailure = "OnFailure";
    options.OnSuccess = "OnSuccess";
    options.LoadingElementDuration = 1000;
    options.LoadingElementId = "divProgress";
    options.UpdateTargetId = "divResponse";
    options.InsertionMode = InsertionMode.InsertAfter;
}

@using (Ajax.BeginForm("ForcedUserCreation", "User", options))
{
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-10 col-md-offset-1">
                <form class="form-horizontal">
                    <div class="row Con_Heading ClearFix SignUp_space_bottom">
                        <div class="col-md-12">
                            <h4>Create Consumer</h4>
                            <div class="Heading_Stoke" style="width:20%;"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <small>@Html.LabelFor(model => model.Name, new { @class = "control-label" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-md-4">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                <small>@Html.LabelFor(model => model.LoginId, new { @class = "control-label" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(model => model.LoginId, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LoginId, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <small>@Html.LabelFor(model => model.MobileNo, new { @class = "control-label" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "Error_Msg" })
                            </div> 
                            <div class="col-md-1-5 col-md-offset-1">
                                <small>@Html.LabelFor(model => model.Email, new { @class = "control-label" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <small>@Html.LabelFor(model => model.Address, new { @class = "control-label" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                @Html.TextAreaFor(model => model.Address, new { @class = "form-control", id = "txtAddress" })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1" style="padding-right:0px;">
                                <small>@Html.LabelFor(model => model.RegistrationNo, new { @class = "control-label" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                @Html.TextBoxFor(model => model.RegistrationNo, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RegistrationNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                        </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <small>@Html.LabelFor(model => model.DistrictName, new { @class = "control-label" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-sm-2 col-md-4 col-lg-4">
                                <span class="ReQSimbol">*</span>                                
                                @if (Model.DistrictList != null && Model.DistrictList.Count() > 0)
                                {
                                    @Html.DropDownListFor(m => m.DistrictId, new SelectList(Model.DistrictList, "DistrictId", "DistrictName"), "-----Select-----", new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.DistrictId, "", new { @class = "Error_Msg" })
                                }
                                else
                                {
                                    <select class="form-control" data-val="true" data-val-number="The field District must be a number." data-val-required="Fill Out This Field" id="DistrictId" name="DistrictId">
                                        <option value="">-----Select-----</option>
                                    </select>
                                    <span class="field-validation-valid SignUpErr" data-valmsg-for="DistrictId" data-valmsg-replace="true"></span>
                                }

                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                <small>@Html.LabelFor(model => model.PinCode, new { @class = "control-label" })</small>
                            </div>
                            <div class="col-sm-4 col-md-4 col-lg-4">
                                @Html.TextBoxFor(model => model.PinCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row SignUp_space_top SignUp_space_bottom ClearFix">
                        <div class="col-md-offset-5 col-md-2">
                            <input type="submit" value="Save" class="btn Log_Btn log" />
                        </div>
                    </div>

                </form>
            </div>
        </div>
        <div id="DivConfirmMsg" class="logSuccMsg" style="background-color:transparent;"></div>
        <div class="row">
            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div id="DivWbdedForcedUserList">
                </div>  
            </div>
        </div>
    </div>
    <div id="divProgress"></div>
}
@Scripts.Render("~/bundles/jqueryval")


<script type="text/javascript">
    $(document).ready(function ()
    {
        GetWbdedForcedUserList();
    });

    function Clear() {
        $("input[type=text]").val("");
        $("input[type=Email]").val("");
        $("input[type=Password]").val("");
        $('textarea').val("");
        $('select').each(function (i) {
            $('select')[i].childNodes[0].selected = true
        });
    }
    function GetWbdedForcedUserList() {
        $('#DivWbdedForcedUserList').load('/User/WbdedForcedUserList');
    }

    function OnBegin() {
    }
    function OnComplete() {
    }
    function OnSuccess(data) {
        if (data.Status == 1) {
            Clear();           
            if ($('#DivConfirmMsg').hasClass('logErrMsg')) {
                $('#DivConfirmMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            }
            $('#DivConfirmMsg').html("User Created Successfully");
            setTimeout(function () { $('#DivConfirmMsg').html(""); },7000);
            GetWbdedForcedUserList();
        }
        else if (data.Status == -1) {
            $('#DivConfirmMsg').html("Please fill all the required fields").removeClass('logSuccMsg').addClass('logErrMsg');
        }
        else {
            $('#DivConfirmMsg').html(data.Message).removeClass('logSuccMsg').addClass('logErrMsg');
        }
        setTimeout(function () { $('#DivConfirmMsg').html(""); }, 7000);
    }
    function OnFailure() {
    }

</script>