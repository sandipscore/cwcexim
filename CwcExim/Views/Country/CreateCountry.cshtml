@model CwcExim.Models.Country

    <script>
        var TimeInSeconds;
        $(document).ready(function () {
            GetCountryList();
            TimeInSeconds = 5000;
        });
        function GetCountryList() {
            debugger;
            $('#DivCountryList').load('/Country/GetCountryList');
        }
        function ResetValidation() {
            $('.field-validation-error').each(function () {
                $(this).html("");
            })
        }
        function CountryReset() {
            debugger;
            ResetValidation();
            $('[data-valmsg-for="CountryName"]').html('<span></span>');
            $('[data-valmsg-for="CountryAlias"]').html('<span></span>');
            $('#CountryName').val('');
            $('#CountryAlias').val('');
            $('#DivCountryMsg').html("");
        }
        function CountryOnSuccess(data) {
            debugger;
            if (data.Status == 1) {
                if ($('#DivCountryMsg').hasClass('logErrMsg'))
                    $('#DivCountryMsg').removeClass('logErrMsg').addClass('logSuccMsg');
                $('#DivCountryMsg').html(data.Message);
                setTimeout(CountryReset, TimeInSeconds);
                GetCountryList();
            }
            else if (data.Status == 2) {
                $('[data-valmsg-for="CountryName"]').html('<span>'+data.Message+'</span>');
            }
            else if (data.Status == 3) {
                $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
            }
            else {
                if ($('#DivCountryMsg').hasClass('logSuccMsg'))
                    $('#DivCountryMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                $('#DivCountryMsg').html(data.Message);
            }
        }
        function CountryOnFailure() { }
    </script>
    @{
        AjaxOptions options = new AjaxOptions();
        options.Confirm = "Are You Sure You Want To Save?";
        options.HttpMethod = "POST";
        options.OnSuccess = "CountryOnSuccess";
        options.OnFailure = "CountryOnFailure";
        options.InsertionMode = InsertionMode.InsertAfter;
    }
   
        
            <div class="row">
                <div class="col-md-12">
                    <div class="Head_h4">
                        <div class="row SignUp_space_bottom">
                            <div class="col-md-12">
                                <h4>Country Master</h4>
                            </div>
                        </div>
                        <div class="content_wrp">
                            @using (Ajax.BeginForm("AddEditCountryDetail", "Country", options))
                            {
                                @Html.AntiForgeryToken()

                                <div class="row Form_Space_top">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <span class="ReQSimbol">*</span>
                                            <label>Country Name:</label>
                                            @Html.TextBoxFor(m => m.CountryName, "", new { @class = "" })
                                            @Html.ValidationMessageFor(m => m.CountryName, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>

                                    <div class="col-md-3 col-md-offset-6">
                                        <span class="ReQSimbol">*</span>
                                        <label>Country Alias:</label>
                                       @Html.TextBoxFor(m => m.CountryAlias, "", new { @class = "" })
                                    @Html.ValidationMessageFor(m => m.CountryAlias, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>

                                @*<div class="row">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2">
                                            @Html.LabelFor(m => m.CountryName, new { @class = "InputLabel" })
                                        </div>
                                        <div class="col-md-4 col-sm-4">
                                            <span class="ReQSimbol">*</span>
                                            @Html.TextBoxFor(m => m.CountryName, "", new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.CountryName, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                            @Html.LabelFor(m => m.CountryAlias)
                                        </div>
                                        <div class="col-md-2">
                                            <span class="ReQSimbol">*</span>
                                            @Html.TextBoxFor(m => m.CountryAlias, "", new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.CountryAlias, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>*@

                                <div class="row">
                                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                                </div>

                                <div class="d-flex justify-content-left">
                                    <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save" id="BtnCountrySave">
                                    <input type="button" class="btn btn-primary-border btn-100px" value="Reset" onclick="CountryReset()" id="BtnCountryReset">
                                </div>

                                @*<div class="row SignUp_space_bottom">
                                    <div class="col-md-offset-4 col-md-2" style="text-align:center">
                                        <input type="submit" id="BtnCountrySave" value="Save" class="btn log_Btn_sm" />
                                    </div>
                                    <div class="col-md-2">
                                        <input type="button" id="BtnCountryReset" value="Reset" class="btn log_Btn_sm" onclick="CountryReset()" />
                                    </div>
                                </div>*@


                                <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                                    <div id="DivCountryMsg"></div>
                                </div>
                            }
                            <div class="row">
                                <div class="col-md-12 SignUp_space_bottom">
                                    <div id="DivCountryList">
                                    </div>
                                </div>
                            </div>
                        </div>
                </div>
            </div>
        </div>
    

@Scripts.Render("~/bundles/jqueryval")
@*<div id="google_translate_elementa"></div>*@

@*<script type="text/javascript">
function googleTranslateElementInit() {
new google.translate.TranslateElement({pageLanguage: 'en'}, 'google_translate_elementa');
}
</script>*@

@*<script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>*@

@*<div id="google_translate_element">
</div>
<script type="text/javascript">
function googleTranslateElementInit() {
  new google.translate.TranslateElement({pageLanguage: 'en', includedLanguages: 'hi', layout: google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');
}
</script>
<script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>*@