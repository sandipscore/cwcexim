@model CwcExim.Models.Bank
<script>
    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 5000;
        GetBankList();
    });
    function GetBankList() {
        $('#DivBankList').load('/Bank/GetBankList');
    }
    function ClearValidationMessage() {
        $('.field-validation-error').each(function () {
            $(this).html('');
        });
    }
    function ResetBank() {
        ClearValidationMessage();
        $('#DivBankMsg').html('');
        $('#DivBankErrMsg').html('');
        $('#DivCreateBank #AccountNo').val('');
        $('#DivCreateBank #BankName').val('');
        $('#DivCreateBank #Address').val('');
        $('#DivCreateBank #IFSC').val('');
        $('#DivCreateBank #MobileNo').val('');
        $('#DivCreateBank #Branch').val('');
        $('#DivCreateBank #FaxNo').val('');
        $('#DivCreateBank #Email').val('');
    }
    function BankOnSuccess(data) {
        if (data.Status == 1) {
            $('#DivBankMsg').html(data.Message);
            setTimeout(ResetBank, 5000);
            GetBankList();
        }
        else if (data.Status == 2) {
            $('[data-valmsg-for="BankName"]').html('<span>' + data.Message + '</span>');
        }
        else {
            $('#DivBankErrMsg').html(data.Message);
        }
    }
    function BankOnFailure() { }
</script>
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.Confirm = "Are You Sure You Want To Save?";
    options.OnSuccess = "BankOnSuccess";
    options.OnFailure = "BankOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}

<div id="DivCreateBank">
    <div class="row">
        <div class="col-md-12">
            <div class="Head_h4">
                <div class="row SignUp_space_bottom">
                    <div class="col-md-12">
                        <h4>Bank Master</h4>
                    </div>
                </div>
                <div class="content_wrp">
                    @using (Ajax.BeginForm("AddBankDetail", "Bank", options))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <span class="ReQSimbol">*</span>
                                    @Html.LabelFor(m => m.AccountNo, new { @class = "InputLabel" })<span class="InputLabel">:</span>
                                    @Html.TextBoxFor(m => m.AccountNo, new { placeholder = "Enter Account No" })
                                    @Html.ValidationMessageFor(m => m.AccountNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <span class="ReQSimbol">*</span>
                                    @Html.LabelFor(m => m.BankName, new { @class = "InputLabel" })<span class="InputLabel">:</span>
                                    @Html.TextBoxFor(m => m.BankName, new { placeholder = "Enter Bank Name" })
                                    @Html.ValidationMessageFor(m => m.BankName, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.IFSC, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.IFSC, new { placeholder = "Enter IFSC Code" })
                                    @Html.ValidationMessageFor(m => m.IFSC, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <span class="ReQSimbol">*</span>
                                @Html.LabelFor(m => m.Branch, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.Branch, new { placeholder = "Enter Branch" })
                                @Html.ValidationMessageFor(m => m.Branch, "", new { @class = "Error_Msg" })
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextAreaFor(m => m.Address, new { placeholder = "Enter Address", style = "width:100%;height:75px;" })
                                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>

                            <div class="row Form_Space_top">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <span class="ReQSimbol">*</span>
                                        <label>Phone No:</label>
                                        @Html.TextBoxFor(m => m.MobileNo, new { placeholder = "Enter Phone No" })
                                        @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(m => m.FaxNo, new { @class = "InputLabel" })<span class="InputLabel">:</span>
                                    @Html.TextBoxFor(m => m.FaxNo, new { placeholder = "Enter Fax No" })
                                    @Html.ValidationMessageFor(m => m.FaxNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <span class="ReQSimbol">*</span>
                                        @Html.LabelFor(m => m.Email, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                        @Html.TextBoxFor(m => m.Email, new { placeholder = "Enter Email" })
                                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                            </div>

                            <div class="d-flex justify-content-left">
                                <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save">
                                <input type="button" class="btn btn-primary-border btn-100px" value="Reset" onclick="ResetBank()">
                            </div>

                            <div class="logSuccMsg" style="background-color:transparent">
                                <div id="DivBankMsg"></div>
                            </div>

                            <div id="DivBankErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                    }

                    <div class="row Form_Space_top">
                        <div class="col-md-12 SignUp_space_bottom">
                            <div id="DivBankList"></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")


