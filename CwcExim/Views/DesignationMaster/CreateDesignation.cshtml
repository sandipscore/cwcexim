@model CwcExim.Models.DesignationMaster

@{
    ViewBag.Title = "CreateDesignation";
    Layout = null; 
}

<div>
    <script src="~/Scripts/Extended.Jquery.Plugins.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#divProgress").css("display", "none");
            GetDesignationList();
            $('#ApprovalLevel').ForceNumeric();
           
        });

        function OnBegin() {
            $('#SpnResult').html("");
        }
        function OnComplete() {

        }
        function OnSuccess(data)
        {
            if (data.Status == 1)
            {
                Clear();
                if ($('#SpnResult').parent().hasClass('logErrMsg')) {
                    $('#SpnResult').parent().addClass('logSuccMsg').removeClass('logErrMsg');
                }

                $('#SpnResult').html(data.Message);
                LoadHigherAuthority();
                GetDesignationList();
            }
            else
            {
                if ($('#SpnResult').parent().hasClass('logSuccMsg')) {
                    $('#SpnResult').parent().addClass('logErrMsg').removeClass('logSuccMsg');
                }
                $('#SpnResult').html(data.Message);
            }
        }
        function OnFailure() {
        }
        function GetDesignationList()
        {
            $('#DivDesignationList').load('/DesignationMaster/GetDesignationList');
        }
        function LoadHigherAuthority() {
            $('#DivBody').load('/DesignationMaster/CreateDesignation');
        }
        function Clear() {
            $("input[type=text]").val("");
            $('select').each(function () {
                $(this).find('option[value=""]').attr('selected', true);
            });
        }
    </script>


    @{

        AjaxOptions options = new AjaxOptions();
        options.HttpMethod = "POST";
        options.Confirm = "Are you sure you want to Save?";
        options.OnBegin = "OnBegin";
        options.OnComplete = "OnComplete";
        options.OnFailure = "OnFailure";
        options.OnSuccess = "OnSuccess";
        options.LoadingElementDuration = 1000;
        options.LoadingElementId = "divProgress";
        options.UpdateTargetId = "divResponse";
        options.InsertionMode = InsertionMode.InsertAfter;

    }



    @using (Ajax.BeginForm("CreateDesignation", "DesignationMaster", options))
    {
        @Html.AntiForgeryToken()

        <div class="container-fluid">
            <div class="row">
                <div class="col-md-10 col-md-offset-1">
                    <div class="row Con_Heading SignUp_space_bottom">
                        <div class="col-md-12">
                            <h4>Designation Creation</h4>
                            <div class="Heading_Stoke" style="width:24%;"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col-md-offset-1">
                                <small>@Html.LabelFor(m => m.Designation, new { @class = "InputLabel" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-md-3-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.Designation, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Designation, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5  col-md-offset-1" style="padding-right:0px;">
                                <small>@Html.LabelFor(m => m.HigherAuthorityName, new { @class = "InputLabel" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-md-3-5">
                                @Html.DropDownListFor(m => m.HigherAuthority, new SelectList(Model.HigherAuthorityList, "DesignationId", "Designation"), "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.HigherAuthorityName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5  col-md-offset-1">
                                <small>@Html.LabelFor(m => m.ApprovalLevel, new { @class = "InputLabel" })<span class="LabelColon">:</span></small>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.ApprovalLevel, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ApprovalLevel, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row ClearFix SignUp_space_bottom SignUp_space_top">
                        <div class="col-md-offset-5 col-md-2" style="text-align:center">
                            <input type="submit" value="Save" class="btn log Log_Btn" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 logSuccMsg" style="text-align:center;background-color:transparent;">
                            <span id="SpnResult"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom"></div>
            </div>
            <div class="row">
                <div class="col-md-10 col-md-offset-1">
                    <div id="DivDesignationList">
                    </div>
                </div>
            </div>
        </div>
            <div id="divMsg"></div>
            <div id="divProgress"></div>
    }
    @Scripts.Render("~/bundles/jqueryval")
</div>
