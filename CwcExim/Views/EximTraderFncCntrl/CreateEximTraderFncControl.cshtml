@model CwcExim.Models.EximTraderFinanceControl
<script>
    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 5000;
        GetEximFinanceControlList();
    });
    function ResetEximFinanceControl() {
        $('[data-valmsg-for]').html('<span></span>');
        $('#DivEximFinanceControl #DivFinanceControlErrMsg').html('');
        $('#DivEximFinanceControl #DivFinanceControlMsg').html('');
        $('#DivEximFinanceControl #EximTraderName').val('');
        $('#DivEximFinanceControl #Address').val('');
        $('#DivEximFinanceControl #Tan').val('');
        $('#DivEximFinanceControl #GSTNo').val('');
        $('#DivEximFinanceControl #PreviousBalance').val('');
        $('#DivEximFinanceControl #CurrentBalance').val('');
        $('#DivEximFinanceControl #CreditLimit').val('');
        $('#DivEximFinanceControl #CreditPeriod').val('');
    }
    function GetEximFinanceControlList() {
        $('#DivFinanceControlList').load('/EximTraderFncCntrl/GetEximTraderFncControlList');
    }
    function FinanceControlOnSuccess(data) {
        debugger;
        if (data.Status == 1) {
            $('#DivEximFinanceControl #DivFinanceControlMsg').html(data.Message);
            setTimeout(ResetEximFinanceControl, TimeInSeconds);
            $('#cus_list #'+$('#EximTraderId').val()).remove();
            GetEximFinanceControlList();
        }
        else {
            $('#DivEximFinanceControl #DivFinanceControlErrMsg').html(data.Message);
        }
    }
    function FinanceControlOnFailure() {

    }
    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
 
    $('.navList li').on("click", function () {
        var EximTraderName = $(this).text();
        var EximTraderId = $(this).attr('id');
        $('#EximTraderName').val(EximTraderName);
        $('#EximTraderId').val(EximTraderId);
        var Data=@Html.Raw(Json.Encode(Model.LstEximTraders));
        $.each(Data,function(i,item){
            if(item.EximTraderId==EximTraderId)
            {
                $('#Address').val(item.Address);
                $('#GSTNo').val(item.GSTNo);
                $('#Tan').val(item.Tan);
                return false;

            }
        });
        GetEximTraderNew(EximTraderId);
        $("#myModal").modal("hide");
       
    });

    function  GetEximTraderNew(EximTraderId) {
        debugger;
        $.ajax({
            url: '/EximTraderFncCntrl/GetEximTraderNew',
            type: 'GET',
            dataType: 'JSON',
            async:false,
            data: { EximTraderId: EximTraderId},
            success: function (data) {
                debugger;
                $('#PreviousBalance').val(data.Data[0].PreviousBalance);
                $('#CurrentBalance').val(data.Data[0].CurrentBalance);
                   
                
            }
        });
    }
</script>

@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.Confirm = "Are You Sure You Want To Save?";
    options.OnSuccess = "FinanceControlOnSuccess";
    options.OnFailure = "FinanceControlOnFailure";
}
<div class="container-fluid">
        <div class="row">
            <div class="col-md-offset-0-5 col-md-11">
                <div class="Head_h4">
                @using (Ajax.BeginForm("AddEditEximTraderFncControl", "EximTraderFncCntrl", options))
                {
                    @Html.AntiForgeryToken()
                    <div id="DivEximFinanceControl">
                        <div class="row SignUp_space_bottom">
                            <div class="col-md-12">
                                <h4>Exim Trader Finance Control</h4>
                            </div>
                        </div>
                        <div class="row">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.EximTraderName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-10-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.EximTraderName, new { @class = "form-control input-sm", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m=>m.EximTraderName,"",new { @class="Error_Msg"})
                                    @Html.HiddenFor(m=>m.EximTraderId)
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-10-5">
                                    @Html.TextAreaFor(m => m.Address, new { @style = "width=100%;height:75px;", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.Tan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.Tan, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Tan, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-1">
                                    @Html.LabelFor(m => m.GSTNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.GSTNo, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.GSTNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 padding_rt">
                                    <label>Previous Balance:</label>
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(m => m.PreviousBalance, new { @class = "form-control input-sm" @*, @readonly = "readonly"*@ })
                                    @Html.ValidationMessageFor(m => m.PreviousBalance, "", new { @class="Error_Msg"})
                                </div>
                                <div class="col-md-1-5 col-md-offset-3 padding_rt">
                                   <label>Current Balance:</label>
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(m => m.CurrentBalance, new { @class = "form-control input-sm" @*, @readonly = "readonly"*@ })
                                    @Html.ValidationMessageFor(m => m.CurrentBalance, "", new { @class="Error_Msg"})
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 padding_rt">
                                    <label>Credit Limit:</label>
                                </div>
                                <div class="col-md-2">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.CreditLimit, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.CreditLimit, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-3 padding_rt">
                                   <label>Credit Period:</label>
                                </div>
                                <div class="col-md-2">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.CreditPeriod, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.CreditPeriod, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                        </div>
                        <div class="row SignUp_space_bottom">
                            <div class="col-md-offset-4 col-md-2" style="text-align:center">
                                <input type="submit" class="btn log_Btn_sm" value="Save" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Reset" class="btn log_Btn_sm" onclick="ResetEximFinanceControl()" />
                            </div>
                        </div>
                        <div class="logSuccMsg" style="background-color:transparent">
                            <div id="DivFinanceControlMsg"></div>
                        </div>
                        <div id="DivFinanceControlErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                    </div>
                }
                <div class="row">
                            <div class="col-md-12 SignUp_space_bottom">
                                <div id="DivFinanceControlList"></div>
                            </div>
                        </div>
                    
            </div>
        </div>
    </div>
    </div>


<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Exim Trader</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="cus_list">
                    @{ 
                        foreach(var item in Model.LstEximTraders)
                        {
                            <li id="@item.EximTraderId">@item.EximTraderName</li>
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
               
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")