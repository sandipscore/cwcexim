@model CwcExim.Models.Announcement
@{
    AjaxOptions objAjaxOpt = new AjaxOptions();
    objAjaxOpt.Confirm = "Are you sure you want to Save/Publish?";
    objAjaxOpt.HttpMethod = "POST";
    objAjaxOpt.OnSuccess = "EAnnounceOnSuccess";
    objAjaxOpt.OnFailure = "EAnnounceOnFailure";
    objAjaxOpt.InsertionMode = InsertionMode.InsertAfter;
}

<script>
    $(function () {
        $("#StartDate,#EndDate").datepicker({
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            dateFormat: "dd/mm/yy",
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });
    });
</script>
@using (Ajax.BeginForm("AddEditAnnounce", "Announcement", objAjaxOpt))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.AnnounceId)
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-offset-1 col-md-10 ClearFix">
                <div class="row Con_Heading SignUp_space_bottom">
                    <div class="col-md-12">
                        <h4>Edit Announcement Details</h4>
                        <div class="Heading_Stoke"></div>
                    </div>
                </div>
                <div class="row ClearFix">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            <small>@Html.LabelFor(m => m.Title, new { @class = "InputLabel" })<span class="LabelColon">:</span></small>
                        </div>
                        <div class="col-md-10-5">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            <small>@Html.LabelFor(m => m.Description, new { @class = "InputLabel" })<span class="LabelColon">:</span></small>
                        </div>
                        <div class="col-md-10-5">
                            <span class="ReQSimbol">*</span>
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            <small>@Html.LabelFor(m => m.StartDate, new { @class = "InputLabel" })<span class="LabelColon">:</span></small>
                        </div>
                        <div class="col-md-2-5 Date_Img">
                            <span class="ReQSimbol">*</span>
                            <span>@Html.TextBoxFor(m => m.StartDate, new { @class = "form-control input-sm", @readonly = true })</span>
                            @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "Error_Msg" })
                            @Html.HiddenFor(m=>m.StartDate)
                        </div>
                        <div class="col-md-offset-4 col-md-1-5">
                            <small>@Html.LabelFor(m => m.EndDate, new { @class = "InputLabel" })<span class="LabelColon">:</span></small>
                        </div>
                        <div class="col-md-2-5 Date_Img">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "Error_Msg" })
                            @Html.HiddenFor(m => m.EndDate)
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            <small>@Html.LabelFor(m => m.IsActive, new { @class = "InputLabel" })</small>
                        </div>
                        <div class="col-md-3">
                            @Html.CheckBoxFor(m => m.IsActive, new { @class = "RegCheck",@style="margin-left:0px !important;" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top ClearFix"></div>
                </div>
                <div class="row SignUp_space_bottom ClearFix">
                    <div class="col-md-offset-3 col-md-2" style="text-align:center">
                        <input type="submit" id="BtnEAnnounceSave" style="width:100%;" name="Command" value="Save" onclick="return valid()" class="btn Log_Btn log" />
                    </div>
                    <div class="col-md-2">
                        <input type="submit" id="BtnEAnnounceSubmit" style="width:100%;" name="Command" value="Publish" class="btn Log_Btn log" disabled />
                    </div>
                    <div class="col-md-2">
                        <input type="submit" id="BtnEAnnounceUpdate" style="width:100%;" name="Command" value="Update" class="btn Log_Btn log" disabled />
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12" style="text-align:center;color:red;font-size:11px;">
                        <span id="SpnResult"></span>
                    </div>
                </div>
                <div class="logSuccMsg" style="background-color:transparent">
                    <div id="DivEAnnounceMsg"></div>
                </div>
            </div>
        </div>

        <div id="divMsg"></div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<script>
    function valid() {
        debugger;
        var SD = new Date();
        var ED = new Date();
        SD = $('#StartDate').val();
        ED = $('#EndDate').val();
        if (ED < SD) {
            $("span[data-valmsg-for='EndDate'] > span").html('End Date must be greater than or equal to Start Date');
            return false;
        }
        return true;
    }

    function EAnnounceOnFailure() { }
    function EAnnounceOnSuccess(data) {
        debugger;
        if (data.Status == 1) {
            $('#AnnounceId').val(data.Data);
            $('#BtnEAnnounceSave').prop("disabled", true);
            $('#BtnEAnnounceSubmit').prop("disabled", false);
            if ($('#DivEAnnounceMsg').parent().hasClass('logErrMsg'))
                $('#DivEAnnounceMsg').parent().removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEAnnounceMsg').html(data.Message);
        }
        else if (data.Status == 2) {
            debugger;
            $('#BtnEAnnounceSave').prop("disabled", true);
            $('#BtnEAnnounceSubmit').prop("disabled", true);
            if ($('#DivEAnnounceMsg').parent().hasClass('logErrMsg'))
                $('#DivEAnnounceMsg').parent().removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEAnnounceMsg').html(data.Message);
            setTimeout(ReloadAnnouncePage, 5000);
        }
        else {
            $('#DivEAnnounceMsg').html(data.Message);
        }
    }
    function ReloadAnnouncePage()
    {
        debugger;
        $('#DivBody').load('/Announcement/CheckExistingAnnounce');
    }

    $(document).ready(function () {
        debugger;
        var IsPublished = '@Model.IsPublished';
        if (IsPublished == "True")
        {
            $('#Title').prop("readonly", true);
            $('#Description').prop("readonly", true);
            $('#StartDate').datepicker("option", "disabled", true);
            $('#EndDate').datepicker("option", "disabled", true);
            $('#BtnEAnnounceSubmit').prop("disabled", true);
            $('#BtnEAnnounceSave').prop("disabled", true);
            $('#BtnEAnnounceUpdate').prop("disabled",false);

        }
        else {
            $('#BtnEAnnounceUpdate').prop("disabled", true);
        }
    });
</script>