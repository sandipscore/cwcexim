@model CwcExim.Areas.GateOperation.Models.VIZ_EntryThroughGateBond
<script type="text/javascript">
    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 5000;
    });

    function GetEntryThroughGateList() {
        $('#DivGateEntryList').load("/GateOperation/VIZ_GateOperation/EntryThroughGateList?OperationType=Bond");
    }
</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
                @using (Ajax.BeginForm("AddEditEntryThroughGateBond", "VIZ_GateOperation", new AjaxOptions
                {
                    Confirm = "Are You Sure You Want To Save?",
                    HttpMethod = "POST",
                    OnSuccess = "GateEntryOnSuccess",
                    OnFailure = "GateEntryOnFailure"
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.EntryId)
                    @Html.ValidationMessageFor(m => m.EntryId)
                    @Html.HiddenFor(m=>m.ContainerType)
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Edit Entry Through Gate Bond</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-2 col-md-1-5">
                                <div class="boolean-container">
                                    @Html.HiddenFor(m => m.IsVehicle)
                                    @Html.ValidationMessageFor(m => m.IsVehicle)
                                    @Html.RadioButton("Container", "Container", new { @class = "", @id = "idContainer", @disabled = true })
                                    <label for="idContainer"><i class="circle"></i><span>Container</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("CBT", "CBT", new { @class = "", @id = "idCBT", @disabled = true })
                                    <label for="idCBT"><i class="circle"></i><span>CBT</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("Vehicle", "Vehicle", new { @class = "", @id = "idVehicle", @disabled = true })
                                    <label for="idVehicle"><i class="circle"></i><span>Vehicle</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-2 col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("Loaded", "Loaded", new { @class = "", @id = "Loaded", @disabled = true })
                                    <label for="Loaded"><i class="circle"></i><span>Loaded</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("Empty", "Empty", new { @class = "", @id = "Empty", @disabled = true })
                                    <label for="Empty"><i class="circle"></i><span>Empty</span></label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_0_5 padding_rt">
                                <label>CFS Code:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control", @readonly = true })
                                @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                                <label>System Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <input type="text" value="" id="Time1" />
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.GateInNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                                <label>Entry Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2">
                                <div class="input-group clockpicker" data-placement="left" data-align="top">
                                    <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                    <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.ReferenceNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.ReferenceNoId, new { @value = "0" })
                                @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ReferenceNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-4-5 col_cus_offset_3 padding_rt">
                                @Html.LabelFor(m => m.ReferenceDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ReferenceDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ReferenceDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt DivContainerNo">
                                <label>Container No:</label>
                            </div>
                            <div class="col-md-2-5 DivContainerNo" id="ContainerNo1Div">
                                @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 padding_rt divSize">
                                @Html.LabelFor(m => m.Size, new { @class = "InputLabel" ,@id= "lblsize"})<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5 divSize">
                                @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"}
                                //new SelectListItem { Text="ODC",Value="ODC"},
                                }, "----Select----", new { @class = "form-control input-sm", @onblur = "ClearValidationMsg(this)" })
                                @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5" style="display:none;">
                                <div class="boolean-container">
                                    @Html.HiddenFor(m => m.IsCBT)
                                    <label for="CBT"><span style="margin: 0 5px 0 0;">CBT:</span><i class="square"></i></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" id="DivCBT">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>CBT No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CBTNo, new { @onkeyup = "SetVehicleNo()" })
                                @Html.ValidationMessageFor(m => m.CBTNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Custom Seal No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.VehicleNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_2 col_cus_offset_3">
                                <label>Godown No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.GodownId)
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-cotrol input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.GodownName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CargoType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="HAZ",Value="1"},
                                    new SelectListItem { Text="NON-HAZ",Value="2"},
                                    new SelectListItem { Text="Extra Haz",Value="3"},
                                    new SelectListItem { Text="ODC",Value="4"},
                                }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 col_cus_offset_3 col_cus_2">
                                @Html.LabelFor(m => m.GrossWeight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                            </div>

                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>No of Packages:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 col_cus_offset_3 col_cus_2">
                                <label>Type of Package:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.TypeofPackage, new { @class = "form-control intpu-sm", @readonly = true })
                                @Html.TextBoxFor(m => m.Others, new { @class = "form-control intpu-sm", @readonly = true, @style = "display:none;" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Importer Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.DepositorName, new { @class = "form-control intpu-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;", @readonly = true })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-12 SignUp_space_bottom">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="submit" value="Save" class="btn log_Btn_sm" id="BtnGateEntry" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Back" class="btn log_Btn_sm" onclick="LoadGateEntryView()" />
                            </div>
                        </div>
                        <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                            <div id="DivEntryThroughGateMsg"></div>
                        </div>
                    </div>

                }
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        debugger;
        if ('@Model.IsCBT' == "1") {
            $('#idCBT').prop("checked", true);
            $('#CBTNo').val($('#ContainerNo').val());
            $('#ContainerNo').val('');
            $('.DivContainerNo').css("display", "none");
            $('#lblsize').parent().removeClass('col-md-offset-4');
            $('.divSize').removeClass('hidden');
        }
        else if ('@Model.IsVehicle' == "1") {
            $('#idVehicle').prop("checked", true);
            $('#DivCBT').css("display", "none");
            $('.DivContainerNo').css("display", "none");
            $('#lblsize').parent().removeClass('col-md-offset-4');
            $('.divSize').addClass('hidden');
        }
        else {            
            $('#idContainer').prop("checked", true);
            $('#DivCBT').css("display", "none");
            $('.DivContainerNo').css("display", "block");
            $('#lblsize').parent().addClass('col-md-offset-4');
            $('.divSize').removeClass('hidden');
        }
        if ('@Model.ContainerType' == "Loaded")
        {
            $('#Loaded').prop("checked", true);
        }
        else
        {
            $('#Empty').prop("checked", true);
        }

        $('#Time1').val('@Model.SystemDateTime.Split(' ')[1] @Model.SystemDateTime.Split(' ')[2]');
        $('#SystemDateTime').val('@Model.SystemDateTime.Split(' ')[0]');

        @*$('#Time').val('@Model.EntryDateTime.Split(' ')[1] @Model.EntryDateTime.Split(' ')[2]');
        $('#SystemDateTime').val('@Model.EntryDateTime.Split(' ')[0]');*@

        @*$('#SystemTime').val('@Model.SystemDateTime.Split(' ')[1] @Model.SystemDateTime.Split(' ')[2]');
        $('#Entrytime').val('@Model.EntryDateTime.Split(' ')[1] @Model.EntryDateTime.Split(' ')[2]');
        $('#EntryDateTime').val('@Model.EntryDateTime.Split(' ')[0]');*@
        ($('#TypeofPackage').val() == "Others") ? $('#Others').css("display", "block") : $('#Others').css("display", "none");
    });
    function LoadGateEntryView() {
        $('#DivBody').load('/GateOperation/VIZ_GateOperation/CreateEntryThroughGateBond');
    }

    function ClearValidationMsg(TxtBoxId) {
        var TxtBoxId = TxtBoxId.id;
        $('[data-valmsg-for=' + TxtBoxId + ']').html("<span></span>");
    }

    function GateEntryOnSuccess(data) {
        if (data.Status == 1 || data.Status == 2) {
            if ($('#DivEntryThroughGateMsg').hasClass('logErrMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
            setTimeout(ResetGateEntry, 5000);
        }
        else {
            if ($('#DivEntryThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
        }
    }
    function GateEntryOnFailure() {
        alert("Error");
    }

    $("#EntryDateTime").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $("#ReferenceDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });
    $(document).ready(function () {

        var editTime = $("#EditTime").val();
        //alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
    });
    $('#BtnGateEntry').on("click", function (e) {
        var conf = true;//confirm("Are you sure you want to Save?");
        if (conf == true) {
            $('[data-valmsg-for]').html('');
            var data = true;
            if ($('#idContainer').is(":checked") == true) {
                if ($('#ContainerNo').val() == "") {
                    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                    data = false;
                }
                if ($('#Size').val() == "") {
                    $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                    data = false;
                }
            }
            else if ($('#idCBT').is(":checked") == true) {
                if ($('#CBTNo').val() == "") {
                    $('[data-valmsg-for="CBTNo"]').html('<span>Fill Out This Field</span>');
                    data = false;
                }
            }
            if (data == true) {
                return true;
            }
            else return false;
        }
    });
    function SetVehicleNo() {
        $('#VehicleNo').val($('#CBTNo').val());
    }
</script>