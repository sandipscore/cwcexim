@model CwcExim.Areas.GateOperation.Models.VIZ_EntryThroughGate
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Entry Through Gate Empty</h4>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Transport Mode:</label>
                        </div>


                        @if (Model.TransportMode == 1)
                        {
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("Mode", "By Train", new { @id = "Train", @checked = true, @disabled = true })
                                    <label for="Train"><i class="circle"></i><span>By Train</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("Mode", "By Road", new { @id = "Road", @disabled = true })
                                    <label for="Road"><i class="circle"></i><span>By Road</span></label>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("Mode", "By Train", new { @id = "Train", @disabled = true })
                                    <label for="Train"><i class="circle"></i><span>By Train</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("Mode", "By Road", new { @id = "Road", @checked = true, @disabled = true })
                                    <label for="Road"><i class="circle"></i><span>By Road</span></label>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Operation Type:</label>
                        </div>
                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("OperationType", "Import", new { @class = "", @id = "Import", @disabled = true })
                                <label for="Import"><i class="circle"></i><span>Import</span></label>
                            </div>
                        </div>
                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("OperationType", "Export", new { @class = "", @id = "Export", @disabled = true })
                                <label for="Export"><i class="circle"></i><span>Export</span></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Container Type:</label>
                        </div>
                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("ContainerType", "Empty", new { @class = "", @id = "Empty", @disabled = true })
                                <label for="Empty"><i class="circle"></i><span>Empty</span></label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.RadioButton("ContainerType", "EmptyVehicle", new { @class = "", @id = "EmptyVehicle", @disabled = true })
                                <label for="EmptyVehicle"><i class="circle"></i><span>Empty Vehicle</span></label>
                            </div>
                        </div>
                        <div class="col-md-1-5">
                            <label>Container No:</label>
                        </div>
                        <div class="col-md-2">
                            <div id="LoadedDiv">
                                @Html.HiddenFor(m => m.ContainerId, new { @value = "0" })
                                @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="ShippingLineSearch"></span>
                                @Html.ValidationMessageFor(m => m.ContainerNo)
                            </div>
                            @*<div id="EmptyDiv" style="display:none;">
                                    @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm" })
                                     @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                                </div>*@
                        </div>

                        @*<div class="col-md-4-5">
                                <input type="radio" id="Empty" name="ContainerType" checked  /> <label for="Empty">Empty</label>
                                <input type="radio" id="Loaded" name="ContainerType" /> <label for="Loaded">Loaded</label>
                            </div>*@
                    </div>
                </div>

              
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.Label("CFS Code", new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-2 col_cus_offset_0_5 padding_rt">
                            <label>System Date & Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                            @Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <div>
                                <input type="text" id="SysEditTime" name="SysEditTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Gate In No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_0_5 col-md-offset-4 padding_rt">
                            <label>Entry Date & Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                            @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg" })
                        </div>
                        @*<div class="col-md-2 col_cus_2_5">
                                <div class="input-group clockpicker" data-placement="left" data-align="top" style="display:none;">
                                    <input type="text" id="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>*@
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Reference No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.ReferenceNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                            @Html.LabelFor(m => m.ReferenceDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.ReferenceDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                            @Html.ValidationMessageFor(m => m.ReferenceDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Shipping Line:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.ShippingLine, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Container No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @Style = "text-transform:uppercase " })
                            @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1" style="padding-right:0px;">
                            @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                new SelectListItem { Text="ODC",Value="ODC"},
                                }, "----Select----", new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1">
                            <label style="display:none">Reefer:</label>
                        </div>
                        <div class="col-md-1">
                            <div class="boolean-container" style="display:none">
                                @Html.CheckBoxFor(m => m.Reefer)
                                <label for="Reefer"><i class="square"></i></label>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Container Load Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.ContainerLoadType, new { @class = "form-cotrol input-sm", @readonly = true })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-4 col_cus_offset_3 padding_rt">
                            <label>Transport From:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.TransportFrom, new { @class = "form-cotrol input-sm", @readonly = true })
                        </div>
                    </div>
                </div>


                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Custom Seal No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-cotrol input-sm" })
                            @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4 padding_rt">
                            <label>Shipping Line No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.ShippingLineSealNo, new { @class = "form-cotrol input-sm" })
                            @Html.ValidationMessageFor(m => m.ShippingLineSealNo, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Vehicle No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm", @Style = "text-transform:uppercase " })
                            @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5  padding_rt">
                            <label>Challan No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-cotrol input-sm" })
                            @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                @*<div class="row">
                        <div class="form-group Form_Input">
                            <div class="col-md-2">
                                @Html.LabelFor(m => m.CargoDescription, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>*@
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Cargo Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"},
                                     new SelectListItem { Text="ODC",Value="3"}
                                }, "----Select----", new { @class = "form-control input-sm dropdown" })
                            @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>No of Packages:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                            @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-4 col_cus_offset_3 padding_rt">
                            @Html.LabelFor(m => m.GrossWeight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Depositor Name:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextBoxFor(m => m.DepositorName, new { @class = "form-control intpu-sm", @maxlength = "100" })
                            @Html.ValidationMessageFor(m => m.DepositorName, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                            @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Cargo Description:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                            @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>


                @*<div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.CargoDescription, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>*@



                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-2 col-md-offset-5">
                        <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateEntryView()" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    function LoadGateEntryView() {
        $('#DivBody').load( '/GateOperation/VIZ_GateOperation/CreateEntryThroughGateEmpty');
    }
    $(function () {
        $('input[type="text"],textarea').prop('readonly', true);
        $('input[type="checkbox"]').prop('disabled', true);

        var SystemDateTime = $('#SystemDateTime').val();
        var SplitSysDateTime = SystemDateTime.split(' ', 3);
        $('#SystemDateTime').val(SplitSysDateTime[0]);
        $('#SysEditTime').val(SplitSysDateTime[1] + " " + SplitSysDateTime[2]);


        var EntryDateTime = $('#EntryDateTime').val();
        var SplitEntryDateTime = EntryDateTime.split(' ', 3);
        $('#EntryDateTime').val(SplitEntryDateTime[0]);
        $('#time').val(SplitEntryDateTime[1] + " " + SplitEntryDateTime[2]);
    });
</script>




