@model CwcExim.Areas.GateOperation.Models.EntryThroughGate

@{
    AjaxOptions options = new AjaxOptions();
    // options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateEntryOnSuccess";
    options.OnFailure = "GateEntryOnFailure";
    //options.OnComplete = "GetRadioVal";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
                @using (Ajax.BeginForm("AddEditEntryThroughGate", "kol_CWCGateOperation", options))
                {

                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.EntryId)
                    @Html.HiddenFor(m => m.BranchId)
                    @Html.HiddenFor(m => m.OperationType)

                    <div class="time_sec" onload="startTime()"><span id="Time"></span></div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Entry Through Gate</h4>
                        </div>
                    </div>
                    @*<div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.ContainerNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>*@
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Container Type :</label>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("ContainerType", "Empty", new { @class = "", @id = "Empty", @onclick = "GetRadioVal();" })
                                    <label for="Empty"><i class="circle"></i><span>Empty</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("ContainerType", "Loaded", new { @class = "", @id = "Loaded", @onclick = "GetRadioVal();" })
                                    <label for="Loaded"><i class="circle"></i><span>Loaded</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-3-5 col_cus_offset_2_5 padding_rt">
                                <label>Container No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <div id="LoadedDiv">
                                    @Html.HiddenFor(m => m.ContainerId, new { @value = "0" })
                                    @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search" id="ShippingLineSearch"></span>
                                    @Html.ValidationMessageFor(m => m.ContainerNo)
                                </div>
                                @*<div id="EmptyDiv" style="display:none;">
                                        @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm" })
                                         @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                                    </div>*@
                            </div>

                            @*<div class="col-md-4-5">
                                    <input type="radio" id="Empty" name="ContainerType" checked  /> <label for="Empty">Empty</label>
                                    <input type="radio" id="Loaded" name="ContainerType" /> <label for="Loaded">Loaded</label>
                                </div>*@
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Operation Type :</label>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Import", new { @class = "", @id = "Import", @checked = true })
                                    <label for="Import"><i class="circle"></i><span>Import</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Export", new { @class = "", @id = "Export" })
                                    <label for="Export"><i class="circle"></i><span>Export</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Bond", new { @class = "", @id = "Bond" })
                                    <label for="Bond"><i class="circle"></i><span>Bond</span></label>
                                </div>
                            </div>

                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "LoadedContainer", new { @class = "", @id = "LoadedContainer" })
                                    <label for="LoadedContainer"><i class="circle"></i><span>Loaded Container</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CFSCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Gate In No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_0_5 col-md-offset-2 padding_rt">
                                <label>Entry Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div class="input-group clockpicker" data-placement="left" data-align="top">
                                    <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                    <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                               <label>Reference No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ReferenceNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                               <label>Reference Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ReferenceDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ReferenceDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Shipping Line:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ShippingLine, "", new { @class = "Error_Msg" })
                                @Html.HiddenFor(m=>m.ShippingLineId)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @if (Model.ContainerType =="Loaded")
                                {
                                    @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm",@readonly=true })
                                    @Html.ValidationMessageFor(m => m.ContainerNo1, "", new { @class = "Error_Msg" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm"})
                                    @Html.ValidationMessageFor(m => m.ContainerNo1, "", new { @class = "Error_Msg" })
                                }
                            </div>
                            <div class="col-md-1" style="padding-right:0px;">
                                @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                new SelectListItem { Text="ODC",Value="ODC"},
                                }, "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1">
                                <label>Reefer:</label>
                            </div>
                            <div class="col-md-1">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Reefer)
                                    <label for="Reefer"><i class="square"></i></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Custom Seal No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4 padding_rt">
                                <label>Shipping Line No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ShippingLineSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ShippingLineSealNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                               <label>Vehicle No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-4 col_cus_offset_3">
                                <label>Challan No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Cargo Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"}
                                }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5">
                                @Html.LabelFor(m => m.ContainerClass, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.ContainerClass, new List<SelectListItem>
                               {
                                new SelectListItem { Text="ODC",Value="ODC"},
                                new SelectListItem { Text="OPEN TOP",Value="OPENTOP"},
                                new SelectListItem { Text="FLAT RAKE",Value="FLATRAKE"},
                                }, "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ContainerClass, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>No of Packages:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                <label>Gross Weight:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Depositor Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.DepositorName, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.DepositorName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row SignUp_space_bottom2">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" value="Save" class="btn log_Btn_sm" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateEntryView()" />
                        </div>

                    </div>
                    <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                        <div id="DivEntryThroughGateMsg"></div>
                    </div>
                }
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivGateEntryList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var TimeInSeconds;
    $(document).ready(function () {

        TimeInSeconds =3000;
    });

    function LoadGateEntryView() {
        $('#DivBody').load( '/GateOperation/kol_CWCGateOperation/CreateEntryThroughGate');
    }
    function GateEntryOnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            ResetGateEntry();
            if ($('#DivEntryThroughGateMsg').hasClass('logErrMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
            setTimeout(LoadGateEntryView, TimeInSeconds);
           // LoadGateEntryView();
            GetEntryThroughGateList();
        }
            //else if (data.Status == 2) {
            //    $('[data-valmsg-for="CountryName"]').html('<span>' + data.Message + '</span>');
            //}
            //else if (data.Status == 3) {
            //    $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
            //}
        else {
            if ($('#DivEntryThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
        }

    }

    function ResetGateEntry() {
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
    }
    function GetEntryThroughGateList() {
        debugger;

        $('#DivGateEntryList').load('/GateOperation/kol_CWCGateOperation/EntryThroughGateList');
    }
    function GateEntryOnFailure() { }



    $(document).ready(function () {

       // GetRadioVal();

        var editTime = $("#EditTime").val();
       // alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }

        $("#EntryDateTime").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage:  "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

        $("#ReferenceDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage:  "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });

    function GetRadioVal() {
        debugger;
        var Radio = $('input[name=ContainerType]:checked').val();
        // alert(Radio);
        $("#ContainerNo1").val('');
        $("#ContainerNo1").prop('readonly', true);
        if (Radio == "Loaded") {
            //$("#LoadedDiv").show();
            //$("#EmptyDiv").hide();
            var Status = true;
            // alert(($("#txtContainerNo").val()));
            if ($('#EntryDateTime').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            if ($('#ReferenceDate').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            //if ($('#ShippingLine').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#CHAName').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#ContainerNo').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}

        }
        else {
            //$("#EmptyDiv").show();
            // $("#LoadedDiv").hide();ContainerNo1
            //$("#ContainerNo1Div").show();
            $("#ContainerNo1").val('');
            $("#ContainerNo1").removeAttr("readonly");
        }

    }
</script>

