@model CwcExim.Areas.GateOperation.Models.HDB_EntryThroughGate

@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateEntryOnSuccess";
    options.OnFailure = "GateEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<script type="text/javascript">
    var TimeInSeconds;
    $(document).ready(function () {
        GetEntryThroughGateList();
        TimeInSeconds = 3000;
        var SystemDateTime = $('#SystemDateTime').val();
        var SplitSysDateTime = SystemDateTime.split(' ', 3);
        $('#SystemDateTime').val(SplitSysDateTime[0]);
        $('#SysEditTime').val(SplitSysDateTime[1] + " " + SplitSysDateTime[2]);

       
    });

    function GetEntryThroughGateList() {
        debugger;
       
        $('#DivGateEntryList').load( '/GateOperation/HDB_CWCGateOperation/EntryThroughGateList');
    }


</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
                @*@using (Ajax.BeginForm("", "", new AjaxOptions
            {
                Confirm = "Are you sure you want to Save?",
                HttpMethod = "POST",
                OnSuccess = "GateEntryOnSuccess",
                OnFailure = "GateEntryOnFailure"
            }))
            {*@

                @using (Ajax.BeginForm("AddEditEntryThroughGate", "HDB_CWCGateOperation", options))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m=>m.OperationType)
                    @*@Html.HiddenFor(m=>m.JsonContainer)*@
                    @*<input type="hidden" id="JsonContainer" value="@ViewBag.JSONResult" name="JsonContainer" />*@
                    // <input type="hidden" id="lstGateEntryExport" name="lstGateEntryExport" value="@ViewBag.lstGateEntryExport" />

                    if (@ViewBag.lstReferenceNumberList != null && @ViewBag.lstReferenceNumberList != "")
                    {
                    <input type="hidden" id="lstReferenceNumberList" name="lstReferenceNumberList" value="@ViewBag.lstReferenceNumberList" />
                    }
                    if (@ViewBag.lstReferenceNumberList != null && @ViewBag.lstReferenceNumberList != "")
                    {
                        <input type="hidden" id="lstShippingLine" name="lstShippingLine" value="@ViewBag.lstShippingLine" />
                    }
                    if (@ViewBag.lstReferenceNumberList != null && @ViewBag.lstReferenceNumberList != "")
                    {
                        <input type="hidden" id="lstChaName" name="lstChaName" value="@ViewBag.lstChaName" />
                    }
                    else
                    {
                        <input type="hidden" id="lstReferenceNumberList" name="lstReferenceNumberList" value="" />
                    }
                    <input type="hidden" id="lstForwarder" name="lstForwarder" value="@ViewBag.lstForwarder" />
                    @Html.HiddenFor(m => m.EntryId)

                    <div class="time_sec" onload="startTime()"><span id="Time"></span></div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Entry Through Gate Loaded</h4>
                        </div>
                    </div>                    

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Operation Type :</label>
                            </div>
                            @*<div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Import", new { @class = "", @id = "Import"})

                                    <label for="Import"><i class="circle"></i><span>Import</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Export", new { @class = "", @id = "Export"})
                                   
                                    <label for="Export"><i class="circle"></i><span>Export</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Bond", new { @class = "", @id = "Bond"})
                                    
                                    <label for="Bond"><i class="circle"></i><span>Bond</span></label>
                                </div>
                            </div>*@
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "LoadedContainer", new { @class = "", @id = "LoadedContainer", @checked = true })
                                   
                                    <label for="LoadedContainer"><i class="circle"></i><span>Loaded Container</span></label>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Container Type :</label>
                            </div>
                            @*<div class="col-md-1-5">
                                    <div class="boolean-container">
                                        @Html.RadioButton("ContainerType", "Empty", new { @class = "", @id = "Empty", @onclick = "GetRadioVal();" })
                                        <label for="Empty"><i class="circle"></i><span>Empty</span></label>
                                    </div>
                                </div>*@
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("ContainerType", "Loaded", new { @class = "", @id = "Loaded", @onclick = "GetRadioVal();", @checked = true })
                                    <label for="Loaded"><i class="circle"></i><span>Loaded</span></label>
                                </div>
                            </div>
                            @*<div class="col-md-1-5 col-md-offset-4">
                                    @Html.LabelFor(m => m.ContainerNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-2-5" >
                                    <div id="LoadedDiv">
                                        @Html.HiddenFor(m => m.ContainerId, new { @value = "0" })
                                        @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                                        <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                                        @Html.ValidationMessageFor(m => m.ContainerNo)
                                    </div>
                                </div>*@
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CFSCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                                <label>System Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div>
                                    <input type="text" id="SysEditTime" name="SysEditTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.GateInNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm",@readonly = "true" })
                                @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                                <label>Entry Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div class="input-group clockpicker" data-placement="left" data-align="top">
                                    <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                    <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.ReferenceNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.ReferenceNoId, new { @value = "0" })
                                @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ReferenceModal"></i></span>
                                @Html.ValidationMessageFor(m => m.ReferenceNo)
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-4-5 col_cus_offset_3 padding_rt">
                                @Html.LabelFor(m => m.ReferenceDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ReferenceDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ReferenceDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.ShippingLine, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @*@Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ShippingLine, "", new { @class = "Error_Msg" })*@

                                @Html.HiddenFor(m => m.ShippingLineId)
                                @Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm", @readonly = "true" })
                                @*, @readonly = true*@ 
                                <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingLineModal"></i></span>
                                @Html.ValidationMessageFor(m => m.ShippingLine)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>


                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.CHAId)
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ChaNameModal"></i></span>
                                @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                            </div>
                            @*<div class="col-md-10-5 col_cus_10">
                                    @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                                </div>*@
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Consolidator/Forwarder Name:</label>
                            </div>


                            <div class="col-md-10-5 col_cus_8">
                                @Html.HiddenFor(m => m.ForwarderId)
                                @Html.TextBoxFor(m => m.ForwarderName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="ChaNameSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ForwarderModal"></i></span>
                                @Html.ValidationMessageFor(m => m.ForwarderName, "", new { @class = "Error_Msg" })
                            </div>
                            @*<div class="col-md-10-5 col_cus_10">
                                    @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                                </div>*@
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container/CBT No:</label>
                            </div>
                            <div class="col-md-2-5" id="ContainerNo1Div">
                                @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ContainerNo1, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1 padding_rt">
                                @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"}
                                //new SelectListItem { Text="ODC",Value="ODC"},
                                }, "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Reefer)
                                    <label for="Reefer"><span style="margin: 0 5px 0 0;">Reefer:</span><i class="square"></i></label>
                                </div>
                            </div>

                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Custom Seal No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                               <label>Shipping Line No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ShippingLineSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ShippingLineSealNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.VehicleNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1">
                                <label>Purpose:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.Purpose, new List<SelectListItem>
                               {
                                new SelectListItem { Text="Carting",Value="Carting"},
                                new SelectListItem { Text="Franchise",Value="Franchise"},
                                  new SelectListItem { Text="Stuffing",Value="Stuffing"},
                                    new SelectListItem { Text="Back to Town",Value="Backtotown"},
                                      new SelectListItem { Text="Reefer",Value="Reefer"}
                                }, "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Purpose, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1 col_cus_2 col_cus_offset_1">
                                <label>Challan No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                    <div class="form-group Form_Input">
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.CargoDescription, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10">
                            @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                            @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>*@
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CargoType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"}
                                }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                               <label>No of Packages:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 col_cus_offset_3 col_cus_2">
                                @Html.LabelFor(m => m.GrossWeight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Exporter Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.DepositorName, new { @class = "form-control intpu-sm",@readonly="true" })
                                @Html.ValidationMessageFor(m => m.DepositorName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                              <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-12 SignUp_space_bottom">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="submit" onclick="ValidedField();" value="Save" class="btn log_Btn_sm" id="BtnGateEntry"/>
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Reset" id="btnReset" class="btn log_Btn_sm" onclick="ResetGateEntry()" />
                            </div>
                        </div>
                        <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                            <div id="DivEntryThroughGateMsg"></div>
                        </div>
                    </div>

                    <div id="ContainerModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">Container</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="Containerbox" type="text" />
                                    <ul class="navList" id="lstContainer">
                                        @{
                                            if (@ViewBag.Lstcontainer != null)
                                            {
                                                foreach (var item in @ViewBag.Lstcontainer)
                                                {
                                                <li id="@item.ContainerName">@item.ContainerName</li>
                                                    }
                                                }
                                            }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="ForwarderModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List Of Consolidator/Forwarder</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="Forwarderbox" type="text" />
                                    <ul class="navList" id="lstFor">
                                        @*@{
                                                if (@ViewBag.ViewBag.lstReferenceNumberList != null)
                                                {
                                                    foreach (var item in @ViewBag.ViewBag.lstReferenceNumberList)
                                                    {
                                                        <li id="@item.CartingAppId">@item.CartingNo</li>
                                                    }
                                                }
                                            }*@
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="ChaNameModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">CHA Name</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="ChaNamebox" type="text" />
                                    <ul class="navList" id="lstCha">
                                        @*@{
                                                if (@ViewBag.ViewBag.lstReferenceNumberList != null)
                                                {
                                                    foreach (var item in @ViewBag.ViewBag.lstReferenceNumberList)
                                                    {
                                                        <li id="@item.CartingAppId">@item.CartingNo</li>
                                                    }
                                                }
                                            }*@
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="ReferenceModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">Reference Number</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="ReferenceNobox" type="text" />
                                    <ul class="navList" id="lstReferenceNo">
                                        @*@{
                                            if (@ViewBag.ViewBag.lstReferenceNumberList != null)
                                            {
                                                foreach (var item in @ViewBag.ViewBag.lstReferenceNumberList)
                                                {
                                                    <li id="@item.CartingAppId">@item.CartingNo</li>
                                                }
                                            }
                                        }*@
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div id="ShippingLineModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">Shipping Line</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="ShippingLinebox" type="text" />
                                    <ul class="navList" id="lstShipping">
                                        @*@{
                                                if (@ViewBag.ViewBag.lstReferenceNumberList != null)
                                                {
                                                    foreach (var item in @ViewBag.ViewBag.lstReferenceNumberList)
                                                    {
                                                        <li id="@item.CartingAppId">@item.CartingNo</li>
                                                    }
                                                }
                                            }*@
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                                            }
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivGateEntryList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    function LoadGateEntryView() {
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateLoadContainer');
    }

    function ValidedField() {
        
    }
    $('#Containerbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstContainer > li').show();
        else {
            $('#lstContainer > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#ReferenceNobox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstReferenceNo > li').show();
        else {
            $('#lstReferenceNo > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    var ContainerName = "";

    $('#lstContainer > li').on("click", function () {
        $('#ContainerNo').val($(this).text());
        $('#ContainerId').val($(this).attr('id'));
        $("#ContainerModal").modal("hide");
        ContainerName = $('#ContainerNo').val();       
       
        if (ContainerName != null && ContainerName !="")
        {
            //alert(ContainerName);
            AutoPopulate(ContainerName);
        }
        
        
    });


    function AutoPopulate(ContainerName)
    {
        $.ajax({
            url:  '/GateOperation/HDB_CWCGateOperation/GetFieldsForContainer',
            type: 'GET',
            async: false,
           datatype:JSON,
            data: { ContainerName: ContainerName },        
            success: function (data) {
                debugger;             
                if (data != undefined || data != null) {
                    debugger;
                    //alert(data);

                    populateJsondata(data);
                    //$('.modal-backdrop').removeClass();
                    //
                    //$('#DivBody').html('');
                   // $('#DivBody').html(data);
                   
                }
                else {
                    alert("fail");

                }
                
            }
        });

    }
    function populateJsondata(data)
    {
        $("#EntryDateTime").val(data.EntryDateTime);
        $("#ReferenceDate").val(data.ReferenceDate);

        $("#time").val(data.EntryTime);
        $("#ReferenceNo").val(data.ReferenceNo);

        $("#ShippingLine").val(data.ShippingLine);
        $("#CHAName").val(data.CHAName);
        $("#ContainerNo").val(data.ContainerNo);
        $("#Size").val(data.Size);
        $("#CargoType").val(data.CargoType);
      
    }
   
    function GetRadioVal()
    {
        debugger;
        var Radio = $('input[name=ContainerType]:checked').val();
        // alert(Radio);
        $("#ContainerNo1").val('');
        $("#ContainerNo1").prop('readonly', true);
        if (Radio == "Loaded") {
            //$("#LoadedDiv").show();
            //$("#EmptyDiv").hide();
            var Status = true;
            // alert(($("#txtContainerNo").val()));
            if ($('#EntryDateTime').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            if ($('#ReferenceDate').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            //if ($('#ShippingLine').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#CHAName').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#ContainerNo').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}

        }
        else {
            //$("#EmptyDiv").show();
            // $("#LoadedDiv").hide();ContainerNo1
            //$("#ContainerNo1Div").show();
            $("#ContainerNo1").val('');
            $("#ContainerNo1").removeAttr("readonly");
        }

    }
    function ResetGateEntry() {
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
    }
    //function GateEntryOnSuccess(data) { }
   // function GateEntryOnFailure() { }


    function GateEntryOnSuccess(data) {
       
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            ResetGateEntry();
            if ($('#DivEntryThroughGateMsg').hasClass('logErrMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
            setTimeout(LoadGateEntryView, TimeInSeconds);
            GetEntryThroughGateList();
        }
        //else if (data.Status == 2) {
        //    $('[data-valmsg-for="CountryName"]').html('<span>' + data.Message + '</span>');
        //}
        //else if (data.Status == 3) {
        //    $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
        //}
        else {
            if ($('#DivEntryThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
        }
    }
    function GateEntryOnFailure() {
        alert("Error");
    }

    $("#EntryDateTime").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $("#ReferenceDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });
    $(document).ready(function () {

        var editTime = $("#EditTime").val();
        //alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
    });

    function GoToExport() {
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateExport');
    }
    function GoToImport() {
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGate');
    }
    function GoToBond() {
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateBond');
    }
    function GoToLoaadedContainer() {
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateLoadContainer');
    }
</script>

<script>
    GenerateLstReferenceNumber();
    function GenerateLstReferenceNumber() {
        debugger;
        var parties = JSON.parse($('#lstReferenceNumberList').val());
        var html = '';
        $.each(parties, function (i, item) {
            html += '<li id="' + item.LoadContReqId + '" " onclick="GetPayByDetails(this)">' + item.LoadContReqNo + '</li>';
        });
        debugger;
        $('#lstReferenceNo').html(html);

        var shippingLine = JSON.parse($('#lstShippingLine').val()); //JSON.parse('#lstShippingLine').val();
        var html1 = '';
        $.each(shippingLine, function (i, item) {
            html1 += '<li id="' + item.ShippingLineId + '" " onclick="GetShippingLine(this)">' + item.ShippingLine + '</li>';
        });
        $('#lstShipping').html(html1);
        var CHAName = JSON.parse($('#lstChaName').val()); //JSON.parse('#lstShippingLine').val();
        var html2 = '';
        $.each(CHAName, function (i, item) {
            html2 += '<li id="' + item.CHAId + '" " onclick="GetChaName(this)">' + item.CHAName + '</li>';
        });
        $('#lstCha').html(html2);
        var ForwarderName = JSON.parse($('#lstForwarder').val()); //JSON.parse('#lstShippingLine').val();
        var html3 = '';
        $.each(ForwarderName, function (i, item) {
            html3 += '<li id="' + item.ForwarderId + '" " onclick="GetForwarderName(this)">' + item.ForwarderName + '</li>';
        });
        $('#lstFor').html(html3);

    }

    $('#ShippingLinebox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstShipping > li').show();
        else {
            $('#lstShipping > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    function GetShippingLine(elem) {

        $('#ShippingLine').val($(elem).text());
        $('#ShippingLineId').val($(elem).attr('id'));
        $("#ShippingLineModal").modal("hide");
    }
    $('#ChaNamebox').keyup(function () {
        debugger;
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCha > li').show();
        else {
            $('#lstCha > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    function GetChaName(elem) {
        debugger;
        $('#CHAName').val($(elem).text());
        $('#CHAId').val($(elem).attr('id'));
        $("#ChaNameModal").modal("hide");
    }
    $('#Forwarderbox').keyup(function () {
        debugger;
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstFor > li').show();
        else {
            $('#lstFor > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    function GetForwarderName(elem) {
        debugger;
        $('#ForwarderName').val($(elem).text());
        $('#ForwarderId').val($(elem).attr('id'));
        $("#ForwarderModal").modal("hide");
    }

    function GetPayByDetails(elem) {

        $('#ReferenceNo').val($(elem).text());
        $('#ReferenceNoId').val($(elem).attr('id'));
        var selectedReference = $('#ReferenceNo').val();
        $("#ReferenceModal").modal("hide");
        debugger;
        //var parties = JSON.parse($('#lstGateEntryExport').val());
        //var payby = $.grep(parties, function (item) { return item.ReferenceNo == selectedReference; })[0];
        
        //$('#ReferenceDate').val(payby.ReferenceDate);
        ////$('#ContainerSize').val(payby.ContainerSize);
        //$('#CargoType').val(payby.CargoType);
        //$('#CHAName').val(payby.CHAName);
        //$('#CargoDescription').val(payby.CargoDescription);
       
    }
    $("#BtnGateEntry").on("click", function () {
        debugger;
        if ($.trim($('#ContainerNo1').val()) != '') {
            if ($('#Size').val() == '') {
                $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                return false;
            }
        }
    });
</script>