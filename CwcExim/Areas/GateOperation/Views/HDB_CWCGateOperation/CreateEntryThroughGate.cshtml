@model CwcExim.Areas.GateOperation.Models.HDB_EntryThroughGate

@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateEntryOnSuccess";
    options.OnFailure = "GateEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<script type="text/javascript">
    var TimeInSeconds;
    $(document).ready(function () {
        //GetEntryThroughGateList();
        TimeInSeconds = 3000;
        var time = new Date();
        time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
        document.getElementById("SysTime").value = time;
        var t = setTimeout(StartSysTime, 500);

       
    });

    function GetEntryThroughGateList() {
        debugger;
       
        $('#DivGateEntryList').load( '/GateOperation/HDB_CWCGateOperation/EntryThroughGateList');
    }
    function StartSysTime() {
        var time = new Date();
        time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
        document.getElementById("SysTime").value = time;
        var t = setTimeout(StartSysTime, 500);
       
    }


    //function testTime() {

    //    debugger;
    //    var currentdate = new Date();

    //    var SystemDate = currentdate.getDate() > 9 ? currentdate.getDate() : "0" + currentdate.getDate() + "/";
    //    var SystemMonth = (currentdate.getMonth() + 1) > 9 ? (currentdate.getMonth() + 1) : "0" + (currentdate.getMonth() + 1) + "/"
    //    var SystemYear = currentdate.getFullYear();
    //    var SystemDateTime = SystemDate + SystemMonth + SystemYear;
    //    document.getElementById("SystemDateTime").value = SystemDateTime;

    //    var time = new Date();
    //    time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
    //    document.getElementById("SysTime").value = time;

    //    setTimeout(testTime, 500);
    //}

</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
                @*@using (Ajax.BeginForm("", "", new AjaxOptions
            {
                Confirm = "Are you sure you want to Save?",
                HttpMethod = "POST",
                OnSuccess = "GateEntryOnSuccess",
                OnFailure = "GateEntryOnFailure"
            }))
            {*@

                @using (Ajax.BeginForm("AddEditEntryThroughGate", "HDB_CWCGateOperation", options))
                {
                    @Html.AntiForgeryToken()
                    @*@Html.HiddenFor(m=>m.JsonContainer)*@
                    @*<input type="hidden" id="JsonContainer" value="@ViewBag.JSONResult" name="JsonContainer" />*@
                    @Html.HiddenFor(m => m.EntryId)
                    @Html.HiddenFor(m=>m.ShippingLineId)

                    <div class="time_sec" onload="startTime()"><span id="Time"></span></div>

                    <div class="row">
                        <div class="col-md-12">
                            <h4>Entry Through Gate</h4>
                        </div>
                    </div>
                    
                    <div class="row Form_Space_top" id="GateEntryRbtn">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Operation Type:</label>
                            </div>
                            <div class="col-md-1-5" id="DivGateEntryRbtnImport">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Import", new { @class = "", @id = "Import", @checked = true, @onclick = "GoToImport();" })
                                    <label for="Import"><i class="circle"></i><span>Import</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5" id="DivGateEntryRbtnExport">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Export", new { @class = "", @id = "Export", @onclick = "GoToExport();" })
                                    <label for="Export"><i class="circle"></i><span>Export</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5"id="DivGateEntryRbtnBond" style="display:none;">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "Bond", new { @class = "", @id = "Bond", @onclick = "GoToBond();" })
                                    <label for="Bond"><i class="circle"></i><span>Bond</span></label>
                                </div>
                            </div>

                           @*<div class="col-md-2 col_cus_3" id="DivGateEntryRbtnLoadedCont">
        <div class="boolean-container">
            @Html.RadioButton("OperationType", "LoadedContainer", new { @class = "", @id = "LoadedContainer", @onclick = "GoToLoaadedContainer();" })
            <label for="LoadedContainer"><i class="circle"></i><span>Loaded Container</span></label>
        </div>
    </div>*@ 
                            <div class="col-md-2 col_cus_3" id="DivGateEntryRbtnEmpty">
                                <div class="boolean-container">
                                    @Html.RadioButton("OperationType", "EmptyContainer", new { @class = "", @id = "EmptyContainer", @onclick = "GoToEmpty();" })
                                    <label for="EmptyContainer"><i class="circle"></i><span>Empty</span></label>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container Type:</label>
                            </div>
                            @*<div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("ContainerType", "Empty", new { @class = "", @id = "Empty", @onclick = "GetRadioVal();" })
                                    <label for="Empty"><i class="circle"></i><span>Empty</span></label>
                                </div>
                            </div>*@
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("ContainerType", "Loaded", new { @class = "", @id = "Loaded", @onclick = "GetRadioVal();", @checked = true })
                                    <label for="Loaded"><i class="circle"></i><span>Loaded</span></label>
                                </div>
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-3-5 col_cus_offset_2_5 padding_rt">
                                <label>Container/CBT No:</label>
                            </div>

                            <div class="col-md-2-5">
                                <div id="LoadedDiv">
                                    @Html.HiddenFor(m => m.ContainerId, new { @value = "0" })
                                    @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @onchange = "clearall();" })
                                    <span class="search" id="ContainerCbt"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                                    @Html.ValidationMessageFor(m => m.ContainerNo)
                                </div>
                                <div id="EmptyDiv" style="display:none">
                                    @Html.Hidden("ContainerNoIdEmp", "", new { @value = "0" })
                                    @Html.TextBox("ContainerNoEmp", "", new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search" id="ShippingLineSearch"></span>
                                    @Html.ValidationMessage("ContainerNoEmp")
                                </div>
                                @*<div id="EmptyDiv" style="display:none;">
                                        @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm" })
                                         @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                                    </div>*@
                            </div>

                            @*<div class="col-md-4-5">
                                    <input type="radio" id="Empty" name="ContainerType" checked  /> <label for="Empty">Empty</label>
                                    <input type="radio" id="Loaded" name="ContainerType" /> <label for="Loaded">Loaded</label>
                                </div>*@
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CFSCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                                <label>System Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div id="DivSysTime">
                                    <input type="text" id="SysTime" name="SysTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                               <label>Gate In No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm",@readonly = "true" })
                                @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                                <label>Entry Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div class="input-group clockpicker" data-placement="left" data-align="top">
                                    <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                    <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Reference No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control input-sm",@readonly=true })
                                @Html.ValidationMessageFor(m => m.ReferenceNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-4-5 col_cus_offset_3 padding_rt">
                                <label>Reference Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ReferenceDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ReferenceDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Shipping Line:</label>
                            </div>

                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.ShippingLine, "", new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="ShippingLinelt"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingLineModal"></i></span>
                                @Html.HiddenFor(m => m.ShippingLineId)
                                @Html.ValidationMessageFor(m => m.ShippingLine, "", new { @class = "Error_Msg" })
                            </div>
                            @*<div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ShippingLine, "", new { @class = "Error_Msg" })
                            </div>*@
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>


                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.CHAId)
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="chalt"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAHdrModal"></i></span>
                                @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                            </div>
                            @*<div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                            </div>*@
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container/CBT No:</label>
                            </div>
                            <div class="col-md-2-5" id="ContainerNo1Div">
                                @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm" ,@readonly=true,@onblur="CheckContSize()"})
                                @Html.ValidationMessageFor(m => m.ContainerNo1, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1" style="padding-right:0px;">
                                @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"}
                                //new SelectListItem { Text="ODC",Value="ODC"},
                                }, "----Select----", new { @class = "form-control input-sm", @onblur = "ClearValidationMsg(this)" })
                                @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Reefer)
                                    <label for="Reefer"><span style="margin: 0 5px 0 0;">Reefer:</span><i class="square"></i></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.CBT)
                                    <label for="CBT"><span style="margin: 0 5px 0 0;">CBT:</span><i class="square"></i></label>
                                </div>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.IsODC)
                                    <label for="IsODC"><span style="margin: 0 5px 0 0;">ODC:</span><i class="square"></i></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Custom Seal No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1">
                                <label>FCL/LCL:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.LCLFCL, new List<SelectListItem>
                               {
                                new SelectListItem { Text="FCL",Value="FCL"},
                                new SelectListItem { Text="LCL",Value="LCL"}
                                }, "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.LCLFCL, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                               <label>Shipping Line No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ShippingLineSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ShippingLineSealNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                               <label>Vehicle No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1">
                                <label>Transport Mode:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.TransPortMode, new List<SelectListItem>
                               {
                                new SelectListItem { Text="CWC",Value="CWC"},
                                new SelectListItem { Text="Private",Value="PVT"}
                                }, "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.TransPortMode, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                <label>Challan No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                    <div class="form-group Form_Input">
                        <div class="col-md-2">
                            @Html.LabelFor(m => m.CargoDescription, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10">
                            @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                            @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>*@
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"}
                                }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                               <label>No of Packages:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 col_cus_2 col_cus_offset_3">
                                @Html.LabelFor(m => m.GrossWeight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container / CBT From:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CBTFrom, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.CBTFrom, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                              <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-12 SignUp_space_bottom">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="submit" onclick="ValidedField();" value="Save" class="btn log_Btn_sm" id="BtnGateEntry"/>
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Reset" id="btnReset" class="btn log_Btn_sm" onclick="ResetGateEntry()" />
                            </div>
                        </div>
                        <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                            <div id="DivEntryThroughGateMsg"></div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-2 SignUp_space_bottom">
                            <input type="button" id="BtnGateEntryByTrainListLoad" value="Show List" class="btn log_Btn_sm" onclick="GetEntryThroughGateList()" />
                        </div>
                    </div>
                    <div id="ContainerModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">Container</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="Containerbox" type="text" />
                                    <ul class="navList" id="lstContainer">
                                        @*@{
                                            if (@ViewBag.Lstcontainer != null)
                                            {
                                                foreach (var item in @ViewBag.Lstcontainer)
                                                {
                                                <li id="@item.ContainerName">@item.ContainerName</li>
                                                    }
                                                }
                                            }*@
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="modal fade" id="CHAHdrModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List Of CHA</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="SearchCHAHdr" type="text" />
                                    <ul class="navList" id="ListOfCHAHdr">
                                        @*@{
                                            if (ViewBag.CHAList != null)
                                            {
                                                foreach (var data in ViewBag.CHAList)
                                                {
                                                    <li id="@data.Value">@data.Text</li>
                                                }
                                            }
                                        }*@

                                       
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="ShippingLineModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List of Shipping Line</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="ShippingLineBox" type="text" />
                                    <ul class="navList" id="ShippingLineList">
                                        @*@{
                                            if (ViewBag.ShippingLineList != null)
                                            {
                                                foreach (var item in ViewBag.ShippingLineList)
                                                {
                                                    <li id="@item.Value">@item.Text</li>
                                                }
                                            }
                                        }*@
                                        
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                                            }
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivGateEntryList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $('#ShippingLineBox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#ShippingLineModal .navList > li').show();
        } else {
            $('#ShippingLineModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    //$('#ShippingLineList li').on("click", function () {
    //    $('#ShippingLine').val($(this).text());
    //    $('#ShippingLineId').val($(this).attr('id'));
    //    $("#ShippingLineModal").modal("hide");
    //});


    //$('#ListOfCHAHdr li').on("click", function () {
    //    debugger;
    //    $('#CHAName').val($(this).text());
    //    $('#CHAId').val($(this).attr('id'));
    //    //$('#CHA').val($(this).text());
    //    //$('#CHANameId').val($(this).attr('id'));
    //    $("#CHAHdrModal").modal("hide");
    //});
    $('#SearchCHAHdr').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#CHAHdrModal .navList > li').show();
        } else {
            $('#CHAHdrModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    function ValidedField() {

    }
    function ClearValidationMsg(TxtBoxId) {
        debugger;
        var TxtBoxId = TxtBoxId.id;
        $('[data-valmsg-for=' + TxtBoxId + ']').html("<span></span>");
    }
    $('#Containerbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstContainer > li').show();
        else {
            $('#lstContainer > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    var ContainerName = "";

    //$('#lstContainer > li').on("click", function () {
    //    debugger;
    //    var ContainerNo = $(this).text();
    //    ContainerNo= ContainerNo.split('_');
    //    $('#ContainerNo').val(ContainerNo[0]);
    //    $('#ContainerId').val($(this).attr('id'));
    //    $("#ContainerModal").modal("hide");
    //    ContainerName = $('#ContainerNo').val();
    //   // alert(ContainerName);
    //    if (ContainerName != null && ContainerName !="")
    //    {

    //        AutoPopulate(ContainerName);
    //    }


    //});

    function clearall()

    {
        $("#ReferenceNo").val('');

        $("#ShippingLine").val('');
        $("#CHAName").val('');
        //$("#ContainerNo").val('');
        $("#Size").val('');
        $("#CargoType").val('');

        $("#ContainerNo1").val('');

        $("#CustomSealNo").val('');
        $("#LCLFCL").val('');
        //$("#ContainerNo").val('');
        $("#ShippingLineSealNo").val('');
        $("#VehicleNo").val('');
        $("#ChallanNo").val('');
        $("#NoOfPackages").val('');
        $("#GrossWeight").val('');
        $("#CBTFrom").val('');
        $("#Remarks").val('');
        $("#CargoDescription").val('');
    }

    function AutoPopulate(ContainerName)
    {
        // alert("blank");
        //$("#EntryDateTime").val('');
        //$("#ReferenceDate").val('');

        //$("#time").val('');
        $("#ReferenceNo").val('');

        $("#ShippingLine").val('');
        $("#CHAName").val('');
        //$("#ContainerNo").val('');
        $("#Size").val('');
        $("#CargoType").val('');

        $.ajax({
            url:  '/GateOperation/HDB_CWCGateOperation/GetFieldsForContainer',
            type: 'GET',
            async: false,
           datatype:JSON,
            data: { ContainerName: ContainerName },
            success: function (data) {
               // debugger;
                if (data != undefined || data != null) {
                   // debugger;
                    //alert(data);

                    populateJsondata(data);
                

                }
                else {
                    alert("fail");
                    $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGate');
                }

            }
        });

    }

    function LoadGateEntryView() {
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGate');
    }

    function populateJsondata(data)
    {
        debugger;
        $("#EntryDateTime").val(data.EntryDateTime);
        $("#ReferenceDate").val(data.ReferenceDate);

        $("#time").val(data.EntryTime);
        $("#ReferenceNo").val(data.ReferenceNo);
        
        $("#ShippingLine").val(data.ShippingLine);
        //
        $("#ShippingLineId").val(data.ShippingLineId);
        //
        $("#CHAName").val(data.CHAName);
        $("#ContainerNo").val(data.ContainerNo);
        $("#Size").val(data.Size);
        $("#CargoType").val(data.CargoType);
        $("#CargoDescription").val(data.CargoDescription);
        $("#CustomSealNo").val(data.CustomSealNo);
        $("#GrossWeight").val(data.GrossWeight);
        $("#NoOfPackages").val(data.NoOfPackages);
        $("#LCLFCL").val(data.LCLFCL);
        $("#CustomSealNo").val(data.CustomSealNo);
        $("#Remarks").val(data.Remarks);
        $("#CBTFrom").val(data.CBTFrom);
        $("#ContainerNo1").val($('#ContainerNo').val());
        $("#ShippingLineSealNo").val(data.ShippingLineSealNo);
        if (data.Reefer == true) {
            $("#Reefer").prop('checked', true);
        } else {
            $("#Reefer").prop('checked', false);
        }
        if (data.CBT == true) {
            $('#CBT').prop('checked', true);
        }
        else {
            $('#CBT').prop('checked', false);
        }
        if (data.IsODC == true) {
            $("#IsODC").prop('checked', true);
        } else {
            $("#IsODC").prop('checked', false);
        }
        
    }

    function GetRadioVal()
    {
        debugger;
        var Radio = $('input[name=ContainerType]:checked').val();
        // alert(Radio);
        $("#ContainerNo1").val('');
        $("#ContainerNo1").prop('readonly', true);
        if (Radio == "Loaded") {

            $('#EmptyDiv').hide();
            $('#LoadedDiv').show();
            //$("#LoadedDiv").show();
            //$("#EmptyDiv").hide();
            var Status = true;
            // alert(($("#txtContainerNo").val()));
            if ($('#EntryDateTime').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            if ($('#ReferenceDate').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            //if ($('#ShippingLine').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#CHAName').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#ContainerNo').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}

        }
        else {
            //$("#EmptyDiv").show();
            // $("#LoadedDiv").hide();ContainerNo1
            //$("#ContainerNo1Div").show();
            $('#EmptyDiv').show();
            $('#LoadedDiv').hide();

            $("#ContainerNo1").val('');
            $("#ContainerNo1").removeAttr("readonly");
        }

    }

    function GoToExport()
    {
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateExport');
    }
    function ResetGateEntry() {
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
        var Today = new Date();
        var dd = (Today.getDate() < 10 ? ("0" + Today.getDate()) : (Today.getDate())) + "/" + ((Today.getMonth() + 1) < 10 ? ("0" + (Today.getMonth() + 1)) : (Today.getMonth() + 1))
            + "/" + Today.getFullYear();
        $('#SystemDateTime').val(dd);
    }
    //function GateEntryOnSuccess(data) { }
   // function GateEntryOnFailure() { }


    function GateEntryOnSuccess(data) {

        debugger;
        if (data.Status == 1 || data.Status == 2) {
            ResetGateEntry();
            if ($('#DivEntryThroughGateMsg').hasClass('logErrMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
            setTimeout(LoadGateEntryView, TimeInSeconds);
            //GetEntryThroughGateList();
           
            debugger;
        }
        //else if (data.Status == 2) {
        //    $('[data-valmsg-for="CountryName"]').html('<span>' + data.Message + '</span>');
        //}
        //else if (data.Status == 3) {
        //    $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
        //}
        else {
            if ($('#DivEntryThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
        }
    }
    function GateEntryOnFailure() {
        alert("Error");
    }

    $("#EntryDateTime").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        maxDate: new Date(),
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $("#ReferenceDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });
    $(document).ready(function () {

        var editTime = $("#EditTime").val();
        //alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
    });

    

    function GoToExport() {
        debugger;
       // $("#DivGateEntryRbtnBond").hide();
      //  $("#DivGateEntryRbtnImport").hide();
       
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateExport');
    }
    function GoToImport() {
        debugger;
        $("#DivGateEntryRbtnBond").hide();
        $("#DivGateEntryRbtnExport").hide();
        $("#DivGateEntryRbtnLoadedCont").hide();
        $("#DivGateEntryRbtnEmpty").hide();
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGate');
    }
    function GoToBond() {
        debugger;
       // $("#DivGateEntryRbtnImport").hide();
      //  $("#DivGateEntryRbtnExport").hide();
       // $("#DivGateEntryRbtnLoadedCont").hide();
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateBond');
    }

    function GoToLoaadedContainer() {
        debugger;
      //  $("DivGateEntryRbtnBond").hide();
      //  $("DivGateEntryRbtnImport").hide();
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateLoadContainer');
    }
    function GoToEmpty() {
        debugger;
        //  $("DivGateEntryRbtnBond").hide();
        //  $("DivGateEntryRbtnImport").hide();
        $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateEmpty');
    }
    function CheckContSize() {
        if ($.trim($('#ContainerNo1').val()) != '') {
            if ($('#Size').val() == '') {
                $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                return false;
            }
        }
    }
    $("#BtnGateEntry").on("click", function () {
        debugger;
        if ($.trim($('#ContainerNo1').val()) != '') {
            if ($('#Size').val() == '') {
                $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                return false;
            }
        }
        var FormOneDate = $('#ReferenceDate').val();
        var GateEntryDate = $('#EntryDateTime').val();
        var FormOneDt = FormOneDate.split('/');
        var GateEntryDt = GateEntryDate.split('/');
        var FrmDt = new Date(FormOneDt[2], (Number(FormOneDt[1])-1), FormOneDt[0]);
        var EntryDt = new Date(GateEntryDt[2], (Number(GateEntryDt[1]) - 1), GateEntryDt[0]);
        if (EntryDt < FrmDt)
        {
            $('[data-valmsg-for="EntryDateTime"]').html('<span>Entry Date Time Cannot Be Less Than Form One Date</span>');
            return false;
        }
    });



    $('#ContainerCbt').on("click", function () {
        debugger;

        $.ajax({
            url: '/GateOperation/Hdb_CWCGateOperation/LoadContainer',
            type: 'GET',
            //data: '',
            success: function (data) {
                debugger;
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data, function (item, elem) {
                        debugger;
                      
                       // html += '<li id="' + elem.CHAId + '" onclick="selectCHADl(' + elem.ContainerName + ',' + elem.ContainerName + ');">' + elem.ContainerName + '</li>';

                        html += '<li id="' + elem.CHAId + '" onclick="selectContainer(' + '&quot;' + elem.ContainerName + '&quot;);">' + elem.ContainerName + '</li>';
                    });
                    $('#lstContainer').html(html);

                }
            }
        });
    });

   
    function selectContainer(ContainerName)
    {
        
        debugger;
        var ContainerNo = ContainerName;
        ContainerNo = ContainerNo.split('_');
        $('#ContainerNo').val(ContainerNo[0]);
        $('#ContainerId').val(ContainerNo);
        $("#ContainerModal").modal("hide");
        ContainerName = $('#ContainerNo').val();
        // alert(ContainerName);
        if (ContainerName != null && ContainerName != "") {

            AutoPopulate(ContainerName);
        }
    }

    $('#ShippingLinelt').on("click", function () {
        debugger;

        $.ajax({
            url: '/GateOperation/Hdb_CWCGateOperation/LoadShippingLine',
            type: 'GET',
            //data: '',
            success: function (data) {
                debugger;
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data, function (item, elem) {
                        debugger;
                        html += '<li id="' + elem.ShippingLineId + '" onclick="selectShipline(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName + '&quot;);">' + elem.ShippingLineName + '</li>';


                    });
                    $('#ShippingLineList').html(html);

                }
            }
        });
    });
    function selectShipline(ShippingLineId, ShippingLineName) {
        $('#ShippingLine').val(ShippingLineName);
        $('#ShippingLineId').val(ShippingLineId);
        $("#ShippingLineModal").modal("hide");
    }

    $('#chalt').on("click", function () {
        debugger;

        $.ajax({
            url: '/GateOperation/Hdb_CWCGateOperation/LoadCHA',
            type: 'GET',
            //data: '',
            success: function (data) {
                debugger;
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data, function (item, elem) {
                        debugger;
                        html += '<li id="' + elem.CHAId + '" onclick="selectCHADtl(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;);">' + elem.CHAName + '</li>';


                    });
                    $('#ListOfCHAHdr').html(html);

                }
            }
        });
    });
    function selectCHADtl(CHAId,CHAName)
    {
        
            debugger;
            $('#CHAName').val(CHAName);
            $('#CHAId').val(CHAId);
            $('#CHA').val(CHAName);
            $('#CHANameId').val(CHAId);
            $("#CHAHdrModal").modal("hide");
  
    }


   // chalt,

   // ShippingLinelt ShippingLineList
</script>

