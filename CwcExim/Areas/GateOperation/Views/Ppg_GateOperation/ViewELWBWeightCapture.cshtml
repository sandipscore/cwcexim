@model CwcExim.Areas.GateOperation.Models.WeightCapture

@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateExitOnSuccess";
    options.OnFailure = "GateExitOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<style>
    #tbleSline.dataTable tbody > tr > td {
        cursor: pointer;
    }

    #tbleCha.dataTable tbody > tr > td {
        cursor: pointer;
    }

    .slimScrollDiv {
        height: 300px;
    }

    .table.tblhd {
        border-bottom: 0;
    }
</style>
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script type="text/javascript">
    $(function () {
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });
    $(function () {
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });

    var TimeInSeconds;
    $(document).ready(function () {
        debugger;
        //GetEntryThroughGateList();
        TimeInSeconds = 3000;

        var SystemDateTime = $('#SystemDateTime').val();
        var SplitSysDateTime = SystemDateTime.split(' ', 3);
        $('#SystemDateTime').val(SplitSysDateTime[0]);
        $('#SysEditTime').val(SplitSysDateTime[1] + " " + SplitSysDateTime[2]);

    });

    //function GetEntryThroughGateList() {
    //    debugger;

    //    $('#DivGateEntryList').load( '/GateOperation/Ppg_GateOperation/EntryThroughGateList');
    //}

</script>
<div id="divWeightCapture">
    <div class="row">
        <div class="col-md-12">
            <div class="Head_h4">
                <div class="row SignUp_space_bottom">
                    <div class="col-md-12">
                        <h4>ELWB Weight Capture</h4>
                    </div>
                </div>
                @*<div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    @Html.HiddenFor(m => m.ELEWId)
                    @Html.HiddenFor(m => m.VContNo,new { @id= "txtVContNo" })
                    @Html.HiddenFor(m => m.VVeichelNo, new { @id = "txtVVeichelNo" })
                    @Html.HiddenFor(m => m.VWeight, new { @id = "txtVWeight" })
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        <label class="InputLabel">Ref No. :</label>
                    </div>
                    <div class="col-md-3">
                        @Html.TextBoxFor(m => m.RefNo, "", new { @class = "form-control input-sm", @readonly = true })
                        @Html.ValidationMessageFor(m => m.RefNo, "", new { @class = "Error_Msg" })
                    </div>
                    <div class="col-md-offset-2-5 col_cus_offset_2_5 col-md-1-5 col_cus_2 padding_rt">
                        <label class="InputLabel">Date :</label>
                    </div>
                    <div class="col-md-3 col_cus_2_5 Date_Img">
                        @Html.TextBoxFor(m => m.RefNoDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", Value = DateTime.Now.ToString("dd/MM/yyyy"), @readonly = true })
                        @Html.ValidationMessageFor(m => m.RefNoDate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>*@
                <div class="content_wrp">
                    <div class="row Form_Space_top">
                        <div class="col-md-3">
                            @Html.HiddenFor(m => m.ELEWId)
                            @Html.HiddenFor(m => m.VContNo, new { @id = "txtVContNo" })
                            @Html.HiddenFor(m => m.VVeichelNo, new { @id = "txtVVeichelNo" })
                            @Html.HiddenFor(m => m.VWeight, new { @id = "txtVWeight" })
                            <div class="form-group">
                                <label>Ref No. :</label>
                            </div>
                            @Html.TextBoxFor(m => m.RefNo, new { @readonly = "true" })
                            @Html.ValidationMessageFor(m => m.RefNo, "", new { @class = "Error_Msg" })
                        </div>
                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>Date:</label>
                                </div>
                            <div class="col-md-6 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.RefNoDate, new { placeholder = "dd/mm/yyyy", @readonly = true, Value = (Model.RefNoDate == null ? DateTime.Now.ToString("dd/MM/yyyy") : Model.RefNoDate) })
                                @Html.ValidationMessageFor(m => m.RefNoDate, "", new { @class = "Error_Msg", Value = (Model.RefNoDate == null ? DateTime.Now.ToString("dd/MM/yyyy") : Model.RefNoDate) })
                            </div>
                            <div class="col-md-6 col_cus_2_5">
                                <div class="input-group clockpicker" data-placement="left" data-align="top">
                                    @Html.TextBoxFor(m => m.Time, new { @value = "00:00", @readonly = "readonly", @style = "background-color:#fff;z-index:0;", @id = "time" })
                                    @*<input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />*@
                                    <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Container No:</label>
                            </div>
                            @Html.TextBoxFor(m => m.ContNo, "", new { @readonly = true })
                            @Html.ValidationMessageFor(m => m.ContNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-3 col-md-offset-6">
                            <div class="form-group">
                                <label>CFS Code :</label>
                            </div>
                            @Html.TextBoxFor(m => m.CFSCode, "", new { @readonly = true })
                            @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="InputLabel">Vechicle No. :</label>
                            </div>
                            <div class="col-md-4" style="padding-right: 0px;">
                                @Html.TextBoxFor(m => m.VeichelNo, "", new { @readonly = true })
                                @Html.ValidationMessageFor(m => m.VeichelNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-6" style="padding-left: 0px;" id="divTxtVeichelNo">
                                @Html.TextBoxFor(m => m.VeichelNoOther, "", new { @readonly = true })
                                @Html.ValidationMessageFor(m => m.VeichelNoOther, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-4" style="padding-left: 0px; display:none;" id="divddlVeichelNo">
                                @Html.DropDownListFor(m => m.VeichelNoList, new List<SelectListItem>
                            {
                                new SelectListItem { Text="----Select----",Value=""}
                            }, new { @readonly = true })
                                @Html.ValidationMessageFor(m => m.VeichelNoList, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Weight For :</label>
                            </div>
                            <label class="Radiocontainer">
                                Gross
                                @Html.RadioButton("WeightFor", "Gross", new { @class = "", @id = "Gross", @readonly = true, @checked = true })
                                <span class="checkmark"></span>
                            </label>
                            <label class="Radiocontainer">
                                Tare
                                @Html.RadioButton("WeightFor", "Tare", new { @class = "", @id = "Tare", @readonly = true })
                                <span class="checkmark"></span>
                            </label>
                            @*<div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.RadioButton("WeightFor", "Gross", new { @class = "", @id = "Gross", @readonly = true, @checked = true })
                                    <label for="Gross"><i class="circle"></i><span>Gross</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.RadioButton("WeightFor", "Tare", new { @class = "", @id = "Tare", @readonly = true })
                                    <label for="Tare"><i class="circle"></i><span>Tare</span></label>
                                </div>
                            </div>*@
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Weight :</label>
                            </div>
                            @Html.TextBoxFor(m => m.WeightInKg, "", new {  @readonly = true })
                            @Html.ValidationMessageFor(m => m.WeightInKg, "", new { @class = "Error_Msg" })
                        </div>
                            <div class="col-md-1-5 col_cus_2 padding_rt" style="padding-left: 10px;">
                                <label class="InputLabel"><b>Kg</b></label>
                                @*<input type="button" id="btnPullWT" class="btn log_Btn_sm" value="Pull WT" />*@
                            </div>
                        </div>
                        <div class="Form_Space_top"></div>
                        <div class="SignUp_space_bottom2"></div>
                        <div class="d-flex justify-content-left">
                            <input type="button" class="btn btn-primary mr-1 btn-100px" onclick="fnBackDetail()" value="Back" />
                        </div>
                    <div class="logErrMsg" style="background-color:transparent" id="divExtendGPErrMsg"></div>
                </div>
            </div>
        </div>

    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function(){
        //var editTime = $("#EditTime").val();
        //if (editTime != null && editTime != "") {
        //    $("#time").val(editTime);
        //}
        //LoadGateExitView();
    });
    function fnBackDetail() {
        //debugger;
        $('#DivBody').load( '/GateOperation/Ppg_GateOperation/ELWBWeightCapture?TransportMode='+2);
    }
    function GateExitOnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {

            if ($('#DivExitThroughGateMsg').hasClass('logErrMsg'))
                $('#DivExitThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
            //setTimeout(LoadGateExitView, TimeInSeconds);
        }
        else {
            if ($('#DivExitThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivExitThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
        }
    }
    function GateExitOnFailure() {

    }
    //function LoadGateExitView() {
    //    debugger;
    //    $('#ContNo').html('');
    //    var _ContNo = $('#txtVContNo').val();
    //    var _Html = '<option value="">----Select----</option>';
    //    if(_ContNo != "")
    //        _Html += '<option value="' + _ContNo + '">' + _ContNo + '</option>';
    //    $('#ContNo').append(_Html);
    //    $('#ContNo').val(_ContNo);
    //}
</script>