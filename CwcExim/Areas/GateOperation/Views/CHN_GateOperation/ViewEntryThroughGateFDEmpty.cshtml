@model CwcExim.Areas.GateOperation.Models.DSREntryThroughGate
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">                
                <div class="row">
                    <div class="col-md-12">
                        <h4>Entry Through Gate(FD)</h4>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Transport Mode:</label>
                        </div>

                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("Mode", "By Road", new { @id = "Road", @checked = true })
                                <label for="Road"><i class="circle"></i><span>By Road</span></label>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Operation Type:</label>
                        </div>
                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("OperationType", "Import", new { @class = "", @id = "Import", @checked = true, @onclick = "GoToImport();" })
                                <label for="Import"><i class="circle"></i><span>Import</span></label>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Container Type:</label>
                        </div>                       
                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("ContainerType", "Empty", new { @class = "", @id = "Empty", @onclick = "GetRadioVal();", @checked = true })
                                <label for="Empty"><i class="circle"></i><span>Empty(FD)</span></label>
                            </div>
                        </div>

                    </div>
                </div>


                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.Label("CFS Code", new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm", @readonly = true })                          
                        </div>

                        <div class="col-md-1-5 col_cus_2 col-md-offset-2 col_cus_offset_0_5 padding_rt">
                            <label>System Date & Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })                           
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <div id="DivSysTime">
                                <input type="text" id="SysTime" name="SysTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Gate In No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm", @readonly = "true" })                            
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-2 col_cus_offset_0_5 padding_rt">
                            <label>Entry Date & Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })                            
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <div class="input-group clockpicker" data-placement="left" data-align="top">
                                <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                <span class="input-group-addon" style="padding:2px 10px;">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Container No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.HiddenFor(m => m.ContainerId, new { @value = "0" })
                            @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                           
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3">

                        </div>
                        <div class="col-md-2-5">

                        </div>
                        <div class="col-md-1-5 col_cus_2 padding_rt" style="display:none">
                            <label>Container No:</label>
                        </div>
                        <div class="col-md-2-5" style="display:none">
                            @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm", @readonly = true })                      
                        </div>

                    </div>
                </div>


                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Shipping Line:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm", @readonly = true })
                            @Html.HiddenFor(m => m.ShippingLineId, new { @value = "0" })                                               
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                            @Html.HiddenFor(m => m.CHAId, new { @value = "0" })                                                        
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                }, new { @class = "form-control input-sm" , @disabled = "disabled" })
                           
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3">

                        </div>
                        <div class="col-md-2-5">

                        </div>
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Cargo Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="---Select---",Value="0"},
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"}
                                }, new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                          
                        </div>

                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Container Load Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="----Select----",Value=""},
                                       new SelectListItem { Text="FCL",Value="FCL"},
                                       new SelectListItem { Text="LCL",Value="LCL" },
                                       new SelectListItem { Text="DD",Value="DD" }
                                   }, new { @class = "form-control input-sm dropdown" , @disabled = "disabled" })
                          
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3" style="display:none">
                            <label>Transport From:</label>
                        </div>
                        <div class="col-md-2-5" style="display:none">

                            @Html.DropDownListFor(m => m.TransportFrom, (List<SelectListItem>)ViewBag.Lstpickup, "----Select----", new { @class = "form-control input-sm dropdown", @disabled = "disabled" })                           
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3">
                        </div>
                        <div class="col-md-2-5">
                        </div>
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>ODC Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownListFor(m => m.IsOdc, new List<SelectListItem>{
                                        new SelectListItem {Text="Normal",Value="0" },
                                        new SelectListItem {Text="Single Side ODC",Value="1" },
                                        new SelectListItem {Text="Double Side ODC",Value="2" },
                                        new SelectListItem {Text="Three Side ODC",Value="3" }
                                      }, new { @class = "form-control input-sm dropdown" , @disabled = "disabled" })

                        </div>


                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Vehicle No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm", @readonly = true })                            
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3">
                        </div>
                        <div class="col-md-2-5">
                        </div>
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Movement:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.Movement, new { @class = "form-cotrol input-sm", @readonly = true })
                        </div>

                    </div>
                </div>


                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" , @readonly = true })                           
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-2 col-md-offset-5">
                        <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateFDEmptyEntryView()" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    function LoadGateFDEmptyEntryView() {
        $('#DivBody').load('/GateOperation/DSR_GateOperation/CreateEntryThroughGateFDEmpty');
    }
    $(function () {
        $('input[type="text"],textarea').prop('readonly', true);
        $('input[type="checkbox"]').prop('disabled', true);

        var SystemDateTime = $('#SystemDateTime').val();
        var SplitSysDateTime = SystemDateTime.split(' ', 3);
        $('#SystemDateTime').val(SplitSysDateTime[0]);
        $('#SysEditTime').val(SplitSysDateTime[1] + " " + SplitSysDateTime[2]);

        var EntryDateTime = $('#EntryDateTime').val();
        var SplitEntryDateTime = EntryDateTime.split(' ', 3);
        $('#EntryDateTime').val(SplitEntryDateTime[0]);
        //$('#time').val(SplitEntryDateTime[1] + " " + SplitEntryDateTime[2]);
    });

    $(document).ready(function () {

        var editTime = $("#EditTime").val();       
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
    });
   
</script>


