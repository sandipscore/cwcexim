@model CwcExim.Areas.GateOperation.Models.DSRGateExitFactoryStuffing

@{
    AjaxOptions options = new AjaxOptions();
    options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    //options.OnBegin = "EditGateExitDet";
    //options.OnSuccess = "GateEntryOnSuccess";
    //options.OnFailure = "GateEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}

<style>
    .btngrp {
        text-align: center;
    }

    .btngrpwrp {
        display: inline-block;
    }

        .btngrpwrp .log_Btn_sm {
            margin-left: 0;
            width: auto;
            padding: 3px 25px;
        }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.StrExitThroughGateDetails)
                @Html.HiddenFor(m => m.ExitIdHeader)
                @Html.HiddenFor(m => m.BranchId)
                @Html.HiddenFor(m => m.FSRequestId)
                @{
                    if (ViewBag.LstcontainerJson != null)
                    {
                        <input type="hidden" id="LstcontainerJson" value="@ViewBag.LstcontainerJson.ToString()" />
                    }
                    else
                    {
                        <input type="hidden" id="LstcontainerJson" value="" />
                    }
                }
                <input type="hidden" id="ShippingLineId" name="ShippingLineId" />
                <input type="hidden" id="CFSCode" name="CFSCode" />
                <input type="hidden" id="ContID" name="ContID" />
                <div class="row">
                    <div class="col-md-12">
                        <h4>Gate Exit For Factory Stuffing</h4>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Gate Exit No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GateExitNo, new { @class = "form-control input-sm", @readonly = "true" })                           
                        </div>
                        <div class="col-md-2 col-md-offset-1-5 col_cus_2 col_cus_offset_0_5">
                            <label>Gate Exit & Date Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.GateExitDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })                           
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <div class="input-group clockpicker" data-placement="left" data-align="top">
                                <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                <span class="input-group-addon" style="padding:2px 10px;">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top Form_Space_bottom">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Request No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.FSRequestNo, new { @class = "form-control input-sm", @readonly = "true" })

                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                            @Html.LabelFor(m => m.FSRequestDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.FSRequestDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })                           
                        </div>
                    </div>
                </div>

                <div class="Head_h5">
                    <div id="EditGateExitDtls">
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                @Html.Hidden("ExitIdDtls")
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("Container/CBT/Cargo No:")
                                </div>
                                <div class="col-md-2-5">
                                    @Html.Hidden("txtContainerId")
                                    <input type="text" id="txtContainerNo" name="txtContainerNo" readonly="readonly" class="form-control input-sm" />
                                                                       
                                </div>
                                <div class="col-md-1" style="padding-right:0px;">
                                    @Html.Label("Size:")
                                </div>
                                <div class="col-md-2 col_cus_2_5">
                                    @Html.DropDownList("txtSize", new List<SelectListItem>
                               {
                                 new SelectListItem { Text="----Select----",Value="",Selected = true },
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                }, new { @class = "form-control input-sm",@readonly=true ,@disabled="disabled"})                                  
                                </div>
                                <div class="col-md-1 padding_rt" style="display:none;">
                                    <label>Reefer:</label>
                                </div>
                                <div class="col-md-1" style="display:none;">
                                    <div class="boolean-container">
                                        @Html.CheckBox("txtReefer")
                                        <label for="txtReefer"><i class="square"></i></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                @Html.Hidden("ShippingLineId")
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("Shipping Line:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextBox("txtShippingLine", "", new { @class = "form-control input-sm", @readonly = true })                                   
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("CHA Name:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextBox("txtCHAName", "", new { @class = "form-control input-sm", @readonly = true })                                    
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    @Html.Label("Vehicle No:")
                                </div>
                                <div class="col-md-2-5">
                                    <input type="text" id="txtVehicleNo" name="txtVehicleNo" readonly="readonly" />
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_2 col_cus_offset_3">

                                </div>
                                <div class="col-md-2-5">

                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("Depositor Name:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextBox("txtDepositorName", "", new { @class = "form-control intpu-sm", @readonly = true })
                                   
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    @Html.Label("Remarks:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextArea("txtRemarks", new { @class = "form-control intpu-sm", @readonly = true })
                                   
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                   
                    <div class="row">
                        <div class="col-md-12">
                            <div id="tblExitThroughGateDet"></div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>

                <div class="row Form_Space_bottom">
                    <div class="btngrp">
                        
                        <div class="btngrpwrp">
                            <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateExitView()" />
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>                

            </div>
        </div>
    </div>
    
</div>
@Scripts.Render("~/bundles/jqueryval")

<script>
    var ArrayEditGateExitDet = [];
    $(function () {
        debugger;
        ArrayEditGateExitDet = @Html.Raw(Json.Encode(Model.containerList));
        var FSRequestId= @Html.Raw(Json.Encode(Model.FSRequestId));
        $('#FSRequestId').val(FSRequestId);
        GenerateTable();
    });

    function GenerateTable() {      
        var tablehtml = '<table id="tblExitThroughGateDet" class="table table-striped table-bordered dataTable" style="width:100%;"><thead><tr><th class="text-center" style="width:8%;">SL No</th><th>Container / OBL No</th><th>Shipping Line</th><th class="text-center" style="width:10%;">Edit</th><th class="text-center" style="width:10%;">View</th></tr></thead><tbody>';
        $.each(ArrayEditGateExitDet, function (i, data) {
            tablehtml += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.ShippingLine + '</td><td class="text-center"><a><i class="fa fa-pencil-square Edit"></i></a></td><td class="text-center"><a href="#" onclick="ViewStuffingDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblExitThroughGateDet').html(tablehtml);
    }

    function ViewStuffingDet(i) {
        debugger;
        $('#ExitIdHeader').val(ArrayEditGateExitDet[i].ExitIdHeader);
        $('#ExitIdDtls').val(ArrayEditGateExitDet[i].ExitIdDtls);
        $('#txtContainerNo').val(ArrayEditGateExitDet[i].ContainerNo);      
        $('#txtSize').val(ArrayEditGateExitDet[i].size);
        $('#ShippingLineId').val(ArrayEditGateExitDet[i].ShippingLineId);
        $('#txtCFSCode').val(ArrayEditGateExitDet[i].CFSCode);
        $('#txtShippingLine').val(ArrayEditGateExitDet[i].ShippingLine);
        $('#txtCHAName').val(ArrayEditGateExitDet[i].CHAName);
        $('#txtVehicleNo').val(ArrayEditGateExitDet[i].VehicleNo);
        $('#txtDepositorName').val(ArrayEditGateExitDet[i].DepositorName);
        $('#txtRemarks').val(ArrayEditGateExitDet[i].Remarks);

    }

</script>

<script>




    function LoadGateExit() {
        $('#DivBody').load('/GateOperation/CHN_GateOperation/AddEditExitThroughGate');
    }

    function ResetGateExitDet() {

        $('#txtContainerNo,#txtSize,#txtCFSCode,#txtShippingLine,#ShippingLineId,#txtCHAName,#txtVehicleNo,#txtDepositorName,#txtRemarks,#ExitIdDtls').val('');
        $('input:checkbox').removeAttr('checked');

    }

    function ResetAjaxGateExitDet() {
        //alert("ResetAfter");
        $('#ContainerNo,#Size,#Reefer,#ShippingLine,#ShippingLineId,#CHAName,#CFSCode,#VehicleNo,#DepositorName,#Remarks').val('');
        $('input:checkbox').removeAttr('checked');

    }

    function LoadGateExitView() {
        $('#DivBody').load('/GateOperation/CHN_GateOperation/CreateGateExitFactoryStuffing');
    }


    var TimeInSeconds;

    $(document).ready(function () {
        TimeInSeconds = 3000;
        var editTime = $("#EditTime").val();
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
    });
   
</script>

