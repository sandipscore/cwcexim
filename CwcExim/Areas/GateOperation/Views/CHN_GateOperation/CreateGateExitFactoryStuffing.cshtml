@model CwcExim.Areas.GateOperation.Models.DSRGateExitFactoryStuffing

@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateExitOnSuccess";
    options.OnFailure = "GateExitOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<script type="text/javascript">
    var TimeInSeconds;
    $(document).ready(function () {
       
        TimeInSeconds = 3000;


       
    });

    //function GetExitThroughGateList() {
    //    debugger;
    //    //$('#DivGateExitList').load('/GateOperation/kol_CWCGateExit/EntryThroughGateList');
    //    var Token = $('input[name="__RequestVerificationToken"]').val();
    //    $.ajax({
    //        url: '/GateOperation/DSR_GateExit/getExitHeaderList',
    //        type: 'GET',
    //        headers: { '__RequestVerificationToken': Token },
    //        dataType: 'text',
    //        async: false,
    //        success: function (data) {
    //           // alert(data);
    //            if (data != null && data != "" && data !=undefined) {
    //                $("#DivGateExitList").html('');
    //                $("#DivGateExitList").html(data);
    //            }
    //            else
    //            {
    //                $("#DivGateExitList").html('');

    //            }
    //        }
    //    });
    //}


</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">

                @using (Ajax.BeginForm("AddEditGateExitFactoryStuffing", "CHN_GateOperation", options))
                {
                   
                    @Html.HiddenFor(m => m.StrExitThroughGateDetails)
                    @Html.HiddenFor(m => m.FSRequestId)
                   
                    <input type="hidden" id="ViewMode" name="ViewMode" value= @ViewBag.ViewMode />
                    <input type="hidden" id="txtCFSCode" name="txtCFSCode" />

                    <input type="hidden" id="txtOperationType" name="OperationType" />
                 
                     <input type="hidden" id="LstcontainerJson" value="" />
                   
                    <input type="hidden" id="ShippingLineId" name="ShippingLineId" />

                    if (ViewBag.HeaderId !=null && @ViewBag.HeaderId >0)
                    { 
                    <input type="hidden" id="ViewIdOfHdr" name="ViewIdOfHdr" value=@ViewBag.HeaderId />
                     }                   
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Gate Exit For Factory Stuffing</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                               <label>Gate Exit No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateExitNo, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.GateExitNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2 col-md-offset-1-5 col_cus_2 col_cus_offset_0_5 padding_rt">
                               <label>Gate Exit & Date Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.GateExitDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.GateExitDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div class="input-group clockpicker" data-placement="left" data-align="top">
                                    <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                    <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top Form_Space_bottom">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Request No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.FSRequestNo, new { @class = "form-control input-sm" , @readonly = "true" })
                                <span class="search" id="FSRequestSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#FSRequestModal"></i></span>
                                @Html.ValidationMessageFor(m => m.FSRequestNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                @Html.LabelFor(m => m.FSRequestDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.FSRequestDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.FSRequestDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="Head_h5">
                        <div id="EditGateExitDtls">
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        @Html.Label("Container/CBT/Cargo No:")
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.Hidden("txtContainerId")                                        
                                        <input type="text" id="txtContainerNo" name="txtContainerNo" readonly="readonly" class="form-control input-sm" />
                                        <span class="search" id="ContainerNoSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                                        @Html.ValidationMessage("txtContainerNo","",new { @class = "Error_Msg" })

                                    </div>
                                    <div class="col-md-1" style="padding-right:0px;">
                                        @Html.Label("Size:")
                                    </div>
                                    <div class="col-md-2 col_cus_2_5">
                                        @Html.DropDownList("txtSize", new List<SelectListItem>
                               {
                                new SelectListItem { Text="----Select----",Value="",Selected = true },
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                
                                }, new { @class = "form-control input-sm" })
                                        @Html.ValidationMessage("txtSize", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="col-md-1 padding_rt" style="display:none;">
                                     
                                    </div>
                                    <div class="col-md-2" style="display:none;">
                                        <div class="boolean-container">
                                          
                                        </div>

                                    </div>

                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        @Html.Label("Shipping Line :")
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.TextBox("txtShippingLine", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30", @readonly = "true" })
                                        @Html.ValidationMessage("txtShippingLine", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        @Html.Label("CHA Name:")
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.TextBox("txtCHAName", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
                                        @Html.ValidationMessage("txtCHAName", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                            
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        @Html.Label("Vehicle No :")
                                    </div>
                                    <div class="col-md-2-5">
                                        <input type="text" id="txtVehicleNo" name="txtVehicleNo" />
                                        @Html.ValidationMessage("txtVehicleNo", "", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4 padding_rt">
                                       
                                    </div>
                                    <div class="col-md-2-5">
                                       
                                    </div>
                                </div>
                            </div>
                            
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        @Html.Label("Depositor Name:")
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.TextBox("txtDepositorName", "", new { @class = "form-control intpu-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
                                        @Html.ValidationMessage("txtDepositorName", "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        @Html.Label("Remarks:")
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.TextArea("txtRemarks", new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "1000" })
                                        @Html.ValidationMessage("txtRemarks", "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2  SignUp_space_bottom">
                                <input type="button" id="btnAddExitThroughGateDet" class="btn log_Btn_sm" value="Add" onclick="AddGateExitDet()" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" id="btnResetExitThroughGateDet" class="btn log_Btn_sm" value="Reset" onclick="ResetGateExitDet()" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div id="tblExitThroughGateDet"></div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_top2 SignUp_space_bottom2"></div>
                    </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllFields()" />
                            </div>
                        </div>
                        <div class="row" id="Back" style="display:none">
                                <div class="col-md-2 col-md-offset-5">
                                    <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateExitView()" />
                                </div>
                            </div>

                        <div class="logSuccMsg Form_Space_top" id="DivMsg" style="background-color:transparent"></div>
                        <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                            <div id="DivExitThroughGateMsg" style="background-color:transparent"></div>
                        </div>
                   

                    <div id="ContainerModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title"> Entered Container</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="Containerbox" type="text" />
                                    <ul class="navList" id="lstContainer">
                                        
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div id="FSRequestModal" class="modal fade" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title"> Factory Stuffing Request No</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="FSRequestbox" type="text" />
                                    <ul class="navList" id="lstFSRequestNo">
                                        
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

             }
                <div class="form-group Form_Input">
                    <div class="col-md-2 SignUp_space_bottom">
                        <input type="button" id="BtnGateEntryListLoad" value="Show List" class="btn log_Btn_sm" onclick="GetGetExitList()" tabindex="39">
                    </div>
                    <div class="col-md-offset-7 col-md-3 Error_Msg">
                        <input id="ContainerNoSearchByList" name="ContainerNoSearchByList" placeholder="Search By Container / CBT" tabindex="40" type="text" value="">
                        <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="GetGetExitListSearchByContainerNo()"></i></span>
                        @Html.ValidationMessage("ContainerNoSearcherr", "", new { @class = "Error_Msg" })
                    </div>
                </div>
               
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivGateExitList"></div>
                    </div>
                </div>
            </div>

</div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    function GetGetExitList() {
        debugger;
        //$('#tblEntryDet').hide();

        $('#DivGateExitList').load('/GateOperation/CHN_GateOperation/getGateExitFactoryStuffingList');
    }

    function GetGetExitListSearchByContainerNo()
    {
        debugger;
        if ($('#ContainerNoSearchByList').val() != '')
        {
            $('span[data-valmsg-for="ContainerNoSearcherr"]').text('');
            $('#DivGateExitList').load('/GateOperation/CHN_GateOperation/getGateExitFactoryStuffingListSearchByContainerNo?ContainerNo=' + $('#ContainerNoSearchByList').val() + '');

        }
        else
        {
            $('span[data-valmsg-for="ContainerNoSearcherr"]').text('Fill out this field');
        }
 }
    function GenerateLstContainer() {
        
        if ($('#LstcontainerJson').val() != null && $('#LstcontainerJson').val() != "") {
            var parties = JSON.parse($('#LstcontainerJson').val());
            if (parties != null) {
                var html = '';
                $.each(parties, function (i, item) {
                    html += '<li id="' + item.ContainerNo + '" " onclick="GetContainerDetails(this)">' + item.ContainerNo + '</li>';
                });
                $('#lstContainer').html(html);
            }
            else {
                alert("No Data Found Against This Request No Or All Container Exited");

                $('#txtShippingLine').val('');
                $('#ShippingLineId').val('');
                $('#txtCFSCode').val('');
                
                $('#txtContainerNo').val('');
               
                    //$('#txtReefer').prop('checked', false);
                
                    $('#txtSize').val('');
                    //$('#txtCargoType').val('');
                    //$('#txtCargoDescription').val('');
                    //$('#txtNoOfPackages').val('');
                    $('#txtVehicleNo').val('');
                    //$('#txtGrossWeight').val('');
                    $('#txtOperationType').val('');
            }
        }
    }


    function GetContainerDetails(elem) {

        $('#txtContainerNo').val($(elem).text());
        $('#txtContainerId').val($(elem).attr('id'));

        $("#ContainerModal").modal("hide");
        //$('#DivExitThroughGateMsg').html('');
        debugger;
        var container = JSON.parse($('#LstcontainerJson').val());
        var Cont = $.grep(container, function (item) { return item.ContainerNo == $(elem).attr('id'); })[0];

        $('#txtShippingLine').val(Cont.ShippingLine);
        $('#ShippingLineId').val(Cont.ShippingLineId);
        $('#txtCFSCode').val(Cont.CFSCode);

        $('#txtSize').val(Cont.size);
       
        $('#txtCHAName').val(Cont.CHAName);

    }

    $('#Containerbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstContainer > li').show();
        else {
            $('#lstContainer > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#FSRequestbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstFSRequestNo > li').show();
        else {
            $('#lstFSRequestNo > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });


    $('#lstFSRequestNo > li').on("click", function () {

        debugger;
        $('#FSRequestNo').val($(elem).text());
        $('#FSRequestId').val($(elem).attr('id'));
        $("#FSRequestModal").modal("hide");


        var FSRequestId = $('#FSRequestId').val();
        //alert("id" + $('#GatePassId').val());
        debugger;
        GetContaierAgainstFS(FSRequestId);
      


    });
    
    function GetContaierAgainstFS(FSRequestId) {

        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetContainerForFSRequestNo", "CHN_GateOperation", new { area = "GateOperation" })',
            headers: { '__RequestVerificationToken': Token },
            data: { FSRId: FSRequestId },
            dataType: 'JSON',           
            success: function (data) {
                
                if (data != undefined || data != null) {                   
                    var FScontainerJson =JSON.stringify( data.Data);
                    $("#LstcontainerJson").val(FScontainerJson);                    
                    GenerateLstContainer();
                }
                else {
                    alert("No Data Found");

                }
            }
        });
    }
   
    function LoadGateExitView() {
        debugger;
        $('#DivBody').load('/GateOperation/CHN_GateOperation/CreateGateExitContainerStuffing');
    }

    var viewMode = $("#ViewMode").val();
    if (viewMode != null && viewMode == "view" && viewMode!="")
    {
        //alert("inViewMode");
        $("#Back").show();
        $("#btnSave").hide();
        $("#btnReset").hide();
        $(function () {
            $('input[type="text"],textarea').prop('readonly', true);
            $('input[type="checkbox"]').prop('disabled', true);
        });
        ViewExitThroughGateListDetails();
    }
    function ViewExitThroughGateListDetails() {
        debugger;
        var HeaderId = $("#ViewIdOfHdr").val();
        //alert("HeaderId=" + HeaderId);
        if (HeaderId != null && HeaderId != "") {

            var Token = $('input[name="__RequestVerificationToken"]').val();
            $.ajax({
                url: '/GateOperation/CHN_GateOperation/getExitDetailsList',
                type: 'GET',
                headers: { '__RequestVerificationToken': Token },
                dataType: 'text',
                data: { HeaderId: HeaderId },
                async: false,
                success: function (data) {
                    // alert(data);
                    if (data != null && data != "" && data != undefined) {
                        $("#tblExitThroughGateDet").html('');
                        $("#tblExitThroughGateDet").html(data);
                    }
                    else {
                        $("#tblExitThroughGateDet").html('');

                    }
                }
            });
        }
    }

    $(document).ready(function () {
       


     //   GetExitThroughGateList();

        var editTime = $("#EditTime").val();
        //alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }

        $("#GateExitDateTime").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage:  "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

        $("#GatePassDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage:  "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

    });
    function ResetGateEntry() {
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
    }
  
    function LoadGateExitView() {
        $('#DivBody').load('/GateOperation/CHN_GateOperation/CreateGateExitFactoryStuffing');
    }

    function GateExitOnSuccess(data) {
       
        debugger;
        if (data.Status == 1 || data.Status == 2) {

            if ($('#DivExitThroughGateMsg').hasClass('logErrMsg'))
                $('#DivExitThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
            setTimeout(LoadGateExitView, TimeInSeconds);
           // LoadGateExitView();
            GetExitThroughGateList();
        }
       
        else {
            if ($('#DivExitThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivExitThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
        }
    }
    function GateExitOnFailure() {
        //alert("Error");
        LoadGateExitView();
    }

    

    function ClearErrMsg(elem) {
        $('[data-valmsg-for="' + elem.id + '"]').html('');
    }

    function ValidateData(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if (CharCode == 32) {
            return true;
        }
        if ((CharCode > 31 & CharCode < 48) || (CharCode > 57 & CharCode < 65) || (CharCode > 90 & CharCode < 97) || (CharCode > 122)) {
            evt.preventDefault();
            return false;
        }
        return true;
    }

    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }


    $('#FSRequestSearch').on("click", function () {
        debugger;
        $.ajax({
            url: '@Url.Action("GetFSRequestNo", "CHN_GateOperation", new { Area = "GateOperation" })',
            dataType: 'JSON',
            type: 'GET',
            success: function (data) {
                debugger;
               // ViewCHAShippingLine = data;
                var html = '';
                $.each(data, function (i, item) {
                    html += '<li id="' + item.FSRequestId + '" " onclick="GetContainer(' + item.FSRequestId +',&quot;'+ item.FSRequestNo + '&quot;,&quot;' + item.FSRequestDate + '&quot;)">' + item.FSRequestNo + '</li>';
                });
                $('#lstFSRequestNo').html(html);
            }
        });

    });

    function GetContainer(FSRequestId, FSRequestNo, FSRequestDate) {
        debugger;
        $('#FSRequestNo').val(FSRequestNo);
        $('#FSRequestId').val(FSRequestId);
        $('#FSRequestDate').val(FSRequestDate);
        $("#FSRequestModal").modal("hide");

        var FSRequestId = $('#FSRequestId').val();        
        debugger;
        GetContaierAgainstFS(FSRequestId);

      
    }


    var ArrayGateExitDet = [];
    function AddGateExitDet() {
       
        if (ValidateExitDet()) {
            //var CargoType = $('#txtCargoType').val();
            var Size = $('#txtSize').val();
           
            if(Size==null || Size =="")
            {
                Size=0;
            }
           
            var slid = $("#ShippingLineId").val();
            if (slid == null || slid =="")
            {
                slid = 0;
            }
            //alert(slid);
            var GateExitDet = {                
                "ContainerNo": $('#txtContainerNo').val(),
                "Size": Size,
                //"Reefer": $('#txtReefer').is(':checked') ? 'true' : 'false',
                "ShippingLine": $('#txtShippingLine').val(),
                "ShippingLineId": slid,
                "CFSCode": $('#txtCFSCode').val(),                
                "CHAName": $('#txtCHAName').val(),                              
                "VehicleNo": $('#txtVehicleNo').val(),                
                "DepositorName": $('#txtDepositorName').val(),
                "Remarks": $('#txtRemarks').val(),
                "OperationType": $('#txtOperationType').val(),
            };
          
            var flag = 0;
            $.each(ArrayGateExitDet, function (j, elem1) {
                if (elem1.ContainerNo == GateExitDet.ContainerNo) {
                    flag = 1;
                    setTimeout($('#DivExitThroughGateMsg').html('Same Container/CBT No Already added'), TimeInSeconds);
                    
                }

            });

            if (flag == 0)

                ArrayGateExitDet.push(GateExitDet)

                $('#tblExitThroughGateDet').html('');
                GenerateTable();
                ResetGateExitDet();
            
        }
    }

    function GenerateTable() {
        //alert("Generate table");
        var tablehtml = '<table id="tblExitThroughGateDet" class="table table-striped table-bordered dataTable" style="width:100%;"><thead><tr><th class="text-center" style="width:8%;">SL No</th><th>Container / OBL No</th><th>Shipping Line</th><th class="text-center" style="width:10%;">Edit</th><th class="text-center" style="width:10%;">View</th></tr></thead><tbody>';
        $.each(ArrayGateExitDet, function (i, data) {
            tablehtml += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.ShippingLine + '</td><td class="text-center"><a href="#" onclick="EditShippingDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td><td class="text-center"><a href="#" onclick="ViewShippingDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblExitThroughGateDet').html(tablehtml);
    }
    function ResetGateExitDet() {
       
        $('#txtContainerNo,#txtSize,#txtCFSCode,#txtShippingLine,#ShippingLineId,#txtCHAName,#txtVehicleNo,#txtDepositorName,#txtRemarks,#txtOperationType').val('');
        $('input:checkbox').removeAttr('checked');
      
    }
   

    function EditShippingDet(i) {
        debugger;
       
            $('#txtContainerNo').val(ArrayGateExitDet[i].ContainerNo);
            $('#txtSize').val(ArrayGateExitDet[i].Size);
            $('#ShippingLineId').val(ArrayGateExitDet[i].ShippingLineId);
            $('#txtCFSCode').val(ArrayGateExitDet[i].CFSCode);
           
            $('#txtShippingLine').val(ArrayGateExitDet[i].ShippingLine);
            $('#txtCHAName').val(ArrayGateExitDet[i].CHAName);
           
            $('#txtVehicleNo').val(ArrayGateExitDet[i].VehicleNo);
           
            $('#txtDepositorName').val(ArrayGateExitDet[i].DepositorName);
            $('#txtRemarks').val(ArrayGateExitDet[i].Remarks);
            $('#txtOperationType').val(ArrayGateExitDet[i].OperationType);
           
            ArrayGateExitDet.splice(i, 1);
            $('#tblExitThroughGateDet').html('');
            GenerateTable();
               
    }

    function ViewShippingDet(i) {

        $('#btnAddExitThroughGateDet').prop('disabled', true);
        $('#txtContainerNo').val(ArrayGateExitDet[i].ContainerNo);
        $('#txtSize').val(ArrayGateExitDet[i].Size);
        
        $('#txtShippingLine').val(ArrayGateExitDet[i].ShippingLine);
        $('#txtCHAName').val(ArrayGateExitDet[i].CHAName);
       
        $('#txtVehicleNo').val(ArrayGateExitDet[i].VehicleNo);
     
        $('#txtDepositorName').val(ArrayGateExitDet[i].DepositorName);
        $('#txtRemarks').val(ArrayGateExitDet[i].Remarks);
        $('#txtOperationType').val(ArrayGateExitDet[i].OperationType);
    }

    $('#btnSave').on("click", function () {
        
        debugger;
        var Status = true;
        
            if ($('#tblExitThroughGateDet>tbody').html() == "" || $('#tblExitThroughGateDet>tbody').html() == undefined || $('#tblExitThroughGateDet>tbody').html() == null) {
                $('#DivMsg').html('Add The Record To Save');
                Status = false;
            }
       
            if (Status == true)

            var dtt = $('#FSRequestDate').val();
            var dt = dtt.split("/");
            var dt1 = dt[2] + "-" + dt[1] + "-" + dt[0];
           
            $('#FSRequestDate').val(dt1);
            edtt = $('#GateExitDateTime').val();
           
            edt = edtt.split("/");
           
             edt1 = edt[2] + "-" + edt[1] + "-" + edt[0];
             $('#GateExitDateTime').val(edt1);
            $('#StrExitThroughGateDetails').val(JSON.stringify(ArrayGateExitDet));        
        return Status;
    });

    function ResetAllFields() {
        $('[data-valmsg-for]').html('');
        $('input[type="text"],Select,textarea').val('');       
        $('#tblExitThroughGateDet').html('');
        ArrayGateExitDet = [];
       
    }

    function ValidateExitDet() {
        var Status = true;
        // alert(($("#txtContainerNo").val()));
        debugger;
        if ($('#txtContainerNo').val() ==null  || $('#txtContainerNo').val() == "") {
            $('[data-valmsg-for="txtContainerNo"]').html('<span>Fill Out This Field</span>');
            Status = false;
        }

        if ($('#txtVehicleNo').val() == null || $('#txtVehicleNo').val() == "") {
            $('[data-valmsg-for="txtVehicleNo"]').html('<span>Fill Out This Field</span>');
            Status = false;
        }


        return Status;
    }

    function EditBtnDisabl() {
        var buttonValueEdit = $('#ViewFlagEdit').val();
        //alert(buttonValueEdit);
        if (buttonValueEdit != null && buttonValueEdit != "") {

            if (buttonValueEdit == "Edit") {
                //$("#DetailsEditSave").hide();
                $("#btnAddExitThroughGateDet").hide();
            }
        }
    }
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });
</script>

