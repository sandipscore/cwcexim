@model CwcExim.Areas.GateOperation.Models.DSRGateExitFactoryStuffing

@{
    AjaxOptions options = new AjaxOptions();
    options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    //options.OnBegin = "EditGateExitDet";
    //options.OnSuccess = "GateEntryOnSuccess";
    //options.OnFailure = "GateEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}

<style>
    .btngrp {
        text-align: center;
    }
    .btngrpwrp {
        display: inline-block;
    }
    .btngrpwrp .log_Btn_sm {
        margin-left: 0;
        width: auto;
        padding: 3px 25px;
    }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.StrExitThroughGateDetails)
                @Html.HiddenFor(m => m.ExitIdHeader)               
                @Html.HiddenFor(m => m.BranchId)
                @Html.HiddenFor(m => m.FSRequestId)
                @{
                    if (ViewBag.LstcontainerJson != null)
                    {
                        <input type="hidden" id="LstcontainerJson" value="@ViewBag.LstcontainerJson.ToString()" />
                    }
                    else
                    {
                        <input type="hidden" id="LstcontainerJson" value="" />
                    }
                }                
                <input type="hidden" id="ShippingLineId" name="ShippingLineId" />
                <input type="hidden" id="CFSCode" name="CFSCode" />
                <input type="hidden" id="ContID" name="ContID" />
                <div class="row">
                    <div class="col-md-12">
                        <h4>Gate Exit For Factory Stuffing</h4>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Gate Exit No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GateExitNo, new { @class = "form-control input-sm", @readonly = "true" })
                            @Html.ValidationMessageFor(m => m.GateExitNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2 col-md-offset-1-5 col_cus_2 col_cus_offset_0_5">
                            <label>Gate Exit & Date Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.GateExitDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                            @Html.ValidationMessageFor(m => m.GateExitDateTime, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <div class="input-group clockpicker" data-placement="left" data-align="top">
                                <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                <span class="input-group-addon" style="padding:2px 10px;">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top Form_Space_bottom">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Request No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.FSRequestNo, new { @class = "form-control input-sm", @readonly = "true" })
                           
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                            @Html.LabelFor(m => m.FSRequestDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.FSRequestDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                            @Html.ValidationMessageFor(m => m.FSRequestDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>

                <div class="Head_h5">
                    <div id="EditGateExitDtls">
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                @Html.Hidden("ExitIdDtls")
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("Container/CBT/Cargo No:")
                                </div>
                                <div class="col-md-2-5">
                                    @Html.Hidden("txtContainerId")
                                    <input type="text" id="txtContainerNo" name="txtContainerNo" readonly="readonly" class="form-control input-sm" />
                                    <span class="search" id="ContainerNoSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                                    @Html.ValidationMessage("txtContainerNo", "", new { @class = "Error_Msg" })

                                </div>
                                <div class="col-md-1" style="padding-right:0px;">
                                    @Html.Label("Size:")
                                </div>
                                <div class="col-md-2 col_cus_2_5">
                                    @Html.DropDownList("txtSize", new List<SelectListItem>
                               {
                                 new SelectListItem { Text="----Select----",Value="",Selected = true },
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},                               
                                }, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessage("txtSize", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1 padding_rt" style="display:none;">
                                    <label>Reefer:</label>
                                </div>
                                <div class="col-md-1" style="display:none;">
                                    <div class="boolean-container">
                                        @Html.CheckBox("txtReefer")                                       
                                        <label for="txtReefer"><i class="square"></i></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                @Html.Hidden("ShippingLineId")
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("Shipping Line:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextBox("txtShippingLine", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30", @readonly = "true" })
                                    @Html.ValidationMessage("txtShippingLine", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("CHA Name:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextBox("txtCHAName", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
                                    @Html.ValidationMessage("txtCHAName", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    @Html.Label("Vehicle No:")
                                </div>
                                <div class="col-md-2-5">
                                    <input type="text" id="txtVehicleNo" name="txtVehicleNo" />
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_2 col_cus_offset_3">
                                   
                                </div>
                                <div class="col-md-2-5">
                                   
                                </div>
                            </div>
                        </div>
                        
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    @Html.Label("Depositor Name:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextBox("txtDepositorName", "", new { @class = "form-control intpu-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
                                    @Html.ValidationMessage("txtDepositorName", "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    @Html.Label("Remarks:")
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextArea("txtRemarks", new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "1000" })
                                    @Html.ValidationMessage("txtRemarks", "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row Form_Space_bottom">
                        <div class="col-md-offset-5 col-md-2">
                            <input type="button" id="btnAddExitThroughGateDet" class="btn log_Btn_sm" value="Add" onclick="AddGateExitDet()" />
                        </div>
                        @*<div class="col-md-2">
                            <input type="button" id="btnResetExitThroughGateDet" class="btn log_Btn_sm" value="Reset" onclick="ResetGateExitDet()" />
                        </div>*@
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div id="tblExitThroughGateDet"></div>
                        </div>
                    </div>

                    @*<div class="row Form_Space_top">
                        <div class="col-md-12">
                            <div id="DivEditGateExitList"></div>
                        </div>
                    </div>*@
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                
                <div class="row Form_Space_bottom">
                    <div class="btngrp">
                        <div id="DetailsEditSave" class="btngrpwrp">
                            <input type="button" value="Save" id="ExitFSDetailsSave" class="btn log_Btn_sm" onclick="EditFSGateExitDet();" />
                        </div>
                        <div class="btngrpwrp">
                            <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateExitView()" />
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>

                <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                    <div id="DivExitThroughGateMsg"></div>
                </div>

            </div>
        </div>
    </div>

    
    
    <div id="ContainerModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title"> Entered Container</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="Containerbox" type="text" />
                    <ul class="navList" id="lstContainer">
                        @{
                            if (@ViewBag.Lstcontainer != null)
                            {
                                @*foreach (var item in @ViewBag.Lstcontainer)
                                    {
                                        <li id="@item.ContainerName">@item.ContainerName</li>
                                    }*@
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")

<script>
    var ArrayEditGateExitDet = [];
    $(function () {
        debugger;
        ArrayEditGateExitDet = @Html.Raw(Json.Encode(Model.containerList));
        var FSRequestId= @Html.Raw(Json.Encode(Model.FSRequestId));
        $('#FSRequestId').val(FSRequestId);
        $('#btnAddExitThroughGateDet').prop('disabled',true);
        GenerateTable();
    });

    function GenerateTable() {
        //alert("Generate table");
        var tablehtml = '<table id="tblExitThroughGateDet" class="table table-striped table-bordered dataTable" style="width:100%;"><thead><tr><th class="text-center" style="width:8%;">SL No</th><th>Container / OBL No</th><th>Shipping Line</th><th class="text-center" style="width:10%;">Edit</th><th class="text-center" style="width:10%;">View</th></tr></thead><tbody>';
        $.each(ArrayEditGateExitDet, function (i, data) {
            tablehtml += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.ShippingLine + '</td><td class="text-center"><a href="#" onclick="EditStuffingDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td><td class="text-center"><a href="#" onclick="ViewStuffingDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblExitThroughGateDet').html(tablehtml);
    }

    function EditStuffingDet(i) {
       
        debugger;
        if($('#btnAddExitThroughGateDet').prop('disabled')==true)
        {
                      
            
            $('#btnAddExitThroughGateDet').prop('disabled',false);
            $('#ExitIdHeader').val(ArrayEditGateExitDet[i].ExitIdHeader);
            $('#ExitIdDtls').val(ArrayEditGateExitDet[i].ExitIdDtls);
            $('#txtContainerNo').val(ArrayEditGateExitDet[i].ContainerNo);
            $('#txtSize').val(ArrayEditGateExitDet[i].size);            
            $('#ShippingLineId').val(ArrayEditGateExitDet[i].ShippingLineId);
            $('#txtCFSCode').val(ArrayEditGateExitDet[i].CFSCode);    
            $('#txtShippingLine').val(ArrayEditGateExitDet[i].ShippingLine);
            $('#txtCHAName').val(ArrayEditGateExitDet[i].CHAName);    
            $('#txtVehicleNo').val(ArrayEditGateExitDet[i].VehicleNo);       
            $('#txtDepositorName').val(ArrayEditGateExitDet[i].DepositorName);
            $('#txtRemarks').val(ArrayEditGateExitDet[i].Remarks);       
           
            ArrayEditGateExitDet.splice(i, 1);
            $('#tblExitThroughGateDet').html('');
            GenerateTable();
        }
        else
        {
            setTimeout($('#DivExitThroughGateMsg').html('Another Record Open'), TimeInSeconds)
        }        
               
    }

    function ViewStuffingDet(i) {
        $('#btnAddExitThroughGateDet').prop('disabled', true);
        $('#ExitIdHeader').val(ArrayEditGateExitDet[i].ExitIdHeader);
        $('#ExitIdDtls').val(ArrayEditGateExitDet[i].ExitIdDtls);
        $('#txtContainerNo').val(ArrayEditGateExitDet[i].ContainerNo);
        $('#txtSize').val(ArrayEditGateExitDet[i].size);
        $('#ShippingLineId').val(ArrayEditGateExitDet[i].ShippingLineId);
        $('#txtCFSCode').val(ArrayEditGateExitDet[i].CFSCode);    
        $('#txtShippingLine').val(ArrayEditGateExitDet[i].ShippingLine);
        $('#txtCHAName').val(ArrayEditGateExitDet[i].CHAName);    
        $('#txtVehicleNo').val(ArrayEditGateExitDet[i].VehicleNo);       
        $('#txtDepositorName').val(ArrayEditGateExitDet[i].DepositorName);
        $('#txtRemarks').val(ArrayEditGateExitDet[i].Remarks);
        
    }

</script>

<script>

  

    function chkBoxVal() {
        //alert($('#txtReefer').val());
    }
    

    
    function AddGateExitDet() {
        debugger;
        if (ValidateExitDet()) {           
            var Size = $('#txtSize').val();           
            if(Size==null || Size =="")
            {
                Size=0;
            }
            
            var slid = $("#ShippingLineId").val();
            if (slid == null || slid =="")
            {
                slid = 0;
            }
            //alert(slid);
            var GateExitDet = { 
                "ExitIdHeader":$('#ExitIdHeader').val(),
                "ExitIdDtls":$('#ExitIdDtls').val(),
                "ContainerNo": $('#txtContainerNo').val(),
                "Size": Size,                
                "ShippingLine": $('#txtShippingLine').val(),
                "ShippingLineId": slid,
                "CFSCode": $('#txtCFSCode').val(),                
                "CHAName": $('#txtCHAName').val(),                              
                "VehicleNo": $('#txtVehicleNo').val(),                
                "DepositorName": $('#txtDepositorName').val(),
                "Remarks": $('#txtRemarks').val(),
               
            };
          
            var flag = 0;
            $.each(ArrayEditGateExitDet, function (j, elem1) {
                if (elem1.ContainerNo == GateExitDet.ContainerNo) {
                    flag = 1;
                    setTimeout($('#DivExitThroughGateMsg').html('Same Container/CBT No Already added'), TimeInSeconds);                    
                }
            });

            if (flag == 0)

                ArrayEditGateExitDet.push(GateExitDet)

            $('#tblExitThroughGateDet').html('');
            GenerateTable();
            ResetGateExitDet();
            $('#btnAddExitThroughGateDet').prop('disabled',true);
            
        }
    }

    
    function LoadGateExit() {
        $('#DivBody').load('/GateOperation/DSR_GateExit/AddEditExitThroughGate');
    }

    function ResetGateExitDet() {
       
        $('#txtContainerNo,#txtSize,#txtCFSCode,#txtShippingLine,#ShippingLineId,#txtCHAName,#txtVehicleNo,#txtDepositorName,#txtRemarks,#ExitIdDtls').val('');
        $('input:checkbox').removeAttr('checked');
      
    }

    function ResetAjaxGateExitDet() {
        //alert("ResetAfter");
        $('#ContainerNo,#Size,#Reefer,#ShippingLine,#ShippingLineId,#CHAName,#CFSCode,#VehicleNo,#DepositorName,#Remarks').val('');
        $('input:checkbox').removeAttr('checked');

    }

    function LoadGateExitView() {
        $('#DivBody').load('/GateOperation/CHN_GateOperation/CreateGateExitFactoryStuffing');
    }


    var TimeInSeconds;

    $(document).ready(function () {
        TimeInSeconds = 3000;       
        var editTime = $("#EditTime").val();      
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
        
        $("#EntryDateTime,#GateExitDateTime").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

        $("#ReferenceDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });
</script>
<script>

    $('#ContainerNoSearch').on("click", function () {
       
        var FSRequestId= $('#FSRequestId').val();

        GetContaierAgainstFS(FSRequestId);

    });

    function GetContaierAgainstFS(FSRequestId) {

        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetContainerForFSRequestNo", "CHN_GateOperation", new { area = "GateOperation" })',
            headers: { '__RequestVerificationToken': Token },
            data: { FSRId: FSRequestId },
            dataType: 'JSON',
            success: function (data) {
                if (data != undefined || data != null) {
                    // populateJsondata(data);
                    var FScontainerJson = JSON.stringify(data.Data);
                    $("#LstcontainerJson").val(FScontainerJson);
                    GenerateLstContainer();
                }
                else {
                    alert("No Data Found");

                }
            }
        });
    }
    function GenerateLstContainer() {
        
        if ($('#LstcontainerJson').val() != null && $('#LstcontainerJson').val() != "") {
            var parties = JSON.parse($('#LstcontainerJson').val());
            if (parties != null) {
                var html = '';
                $.each(parties, function (i, item) {
                    html += '<li id="' + item.ContainerNo + '" " onclick="GetContainerDetails(this)">' + item.ContainerNo + '</li>';
                });
                $('#lstContainer').html(html);
            }
            else {
                alert("No Data Found Against This Request No Or All Container Exited");

                $('#txtShippingLine').val('');
                $('#ShippingLineId').val('');
                $('#txtCFSCode').val('');                
                $('#txtContainerNo').val('');                                             
                $('#txtSize').val('');               
                $('#txtVehicleNo').val('');               
               
            }
        }
    }

    function GetContainerDetails(elem) {
       
        $('#txtContainerNo').val($(elem).text());
        $('#txtContainerId').val($(elem).attr('id'));       
        $("#ContainerModal").modal("hide");
       
        debugger;
        var container = JSON.parse($('#LstcontainerJson').val());
        var Cont = $.grep(container, function (item) { return item.ContainerNo == $(elem).attr('id'); })[0];
        
        $('#txtShippingLine').val(Cont.ShippingLine);
        $('#ShippingLineId').val(Cont.ShippingLineId);
        $('#txtCFSCode').val(Cont.CFSCode);       
        $('#txtSize').val(Cont.size == 0 ? '' : Cont.size);        
        $('#txtCHAName').val(Cont.CHAName);
       
    }
    
    function EditFSGateExitDet(){

        debugger;
        
        $('#StrExitThroughGateDetails').val(JSON.stringify(ArrayEditGateExitDet));
      
        //ResetGateExitDet();
       
        var Token = $('input[name="__RequestVerificationToken"]').val();
        var StrGateExitNo = $("#GateExitNo").val();
       
        var objExitGate = new Object;
        objExitGate.GateExitNo = StrGateExitNo;
        objExitGate.GateExitDateTime = $("#GateExitDateTime").val();
        objExitGate.FSRequestNo = $("#FSRequestNo").val();
        objExitGate.FSRequestId = $("#FSRequestId").val();
        
        var dtt = $('#FSRequestDate').val();
        var dt = dtt.split("/");
        var dt1 = dt[2] + "-" + dt[1] + "-" + dt[0];
           
        $('#FSRequestDate').val(dt1);
        edtt = $('#GateExitDateTime').val();
           
        edt = edtt.split("/");
           
        edt1 = edt[2] + "-" + edt[1] + "-" + edt[0];
        $('#GateExitDateTime').val(edt1);
       
        objExitGate.FSRequestDate = $("#FSRequestDate").val();
        objExitGate.GateExitDateTime = $("#GateExitDateTime").val();
        objExitGate.ExitIdHeader = $("#ExitIdHeader").val();
        objExitGate.Time = $("#time").val();
        objExitGate.StrExitThroughGateDetails = $('#StrExitThroughGateDetails').val();

        $.ajax({
            url: '/GateOperation/CHN_GateOperation/AddEditGateExitFactoryStuffing',
            type: 'POST',
            headers: { '__RequestVerificationToken': Token },
            data: objExitGate,
            dataType: 'text',
            async: false,
            success: function (data) {
                // alert("save");

                //EditExitThroughGateListDetails();
                ResetAjaxGateExitDet();
                GateExitOnSuccess(data);
            }
        });
    }
    
    function GateExitOnSuccess(data) {
        debugger;
        var data=JSON.parse(data)
        console.log(data.Status);
        if (data.Status == 1 || data.Status == 2) {
           
            if ($('#DivExitThroughGateMsg').hasClass('logErrMsg'))
                $('#DivExitThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
            setTimeout(LoadGateExitView, TimeInSeconds);           
        }
          
        else {
            if ($('#DivExitThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivExitThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
        }
    }
</script>
