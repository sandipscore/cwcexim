@model CwcExim.Areas.GateOperation.Models.WljExitThroughGateHeader
<style>
    .table-striped > tbody > tr > td > input[type=text], .table-striped > tbody > tr > td > select, .table-striped > tfoot > tr > td > input[type=text], .table-striped > tfoot > tr > td > select {
        width: auto !important;
    }
</style>
@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateExitOnSuccess";
    options.OnFailure = "GateExitOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<script type="text/javascript">
    var TimeInSeconds;
    $(document).ready(function () {

        TimeInSeconds = 3000;



    });

    function GetExitThroughGateList() {
        debugger;
        //$('#DivGateExitList').load('/GateOperation/Hdb_CWCImport/EntryThroughGateList');
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: '/GateOperation/Wlj_CWCGateExit/getExitHeaderList',
            type: 'GET',
            headers: { '__RequestVerificationToken': Token },
            dataType: 'text',
            async: false,
            success: function (data) {
                // alert(data);GetContainerForGatePass
                if (data != null && data != "" && data !=undefined) {
                    $("#DivGateExitList").html('');
                    $("#DivGateExitList").html(data);
                }
                else
                {
                    $("#DivGateExitList").html('');

                }
            }
        });
    }


</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">

                @using (Ajax.BeginForm("AddEditExitThroughGate", "Wlj_CWCGateExit", options))
                {
                    //@Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.StrExitThroughGateDetails)
                    @Html.HiddenFor(m => m.GatePassId)
                    @Html.HiddenFor(m => m.SCMTRXML)
                    @*@Html.HiddenFor(m=>m.CFSCode);*@
                    //@Html.HiddenFor(m => m.BranchId)
                    <input type="hidden" id="ViewMode" name="ViewMode" value=@ViewBag.ViewMode />
                    <input type="hidden" id="txtCFSCode" name="txtCFSCode" />

                    <input type="hidden" id="txtOperationType" name="OperationType" />
                    @*if(ViewBag.LstcontainerJson != null)
                        {
                         <input type="hidden" id="LstcontainerJson" value="@ViewBag.LstcontainerJson.ToString()" />
                         }
                         else
                         {*@
                    <input type="hidden" id="LstcontainerJson" value="" />
                        @*}*@

                        <input type="hidden" id="shippingLineId" name="shippingLineId" />

                    if (ViewBag.HeaderId != null && @ViewBag.HeaderId > 0)
                    {
                        <input type="hidden" id="ViewIdOfHdr" name="ViewIdOfHdr" value=@ViewBag.HeaderId />
                    }
                    @*<input type="hidden"   id="GatePassId" name="GatePassId">*@
                    @*<div class="row">
                        <div class="col-md-12">
                            <h4>Exit Through Gate</h4>
                        </div>
                    </div>*@

                    <div class="panel with-nav-tabs panel-primary cwc_panel">
                        <div class="panel-heading cwc_panel_heading">
                            <ul class="nav nav-tabs" id="DivTabs">
                                <li class="active"><a href="#DivContainerStuffing" data-toggle="tab">Exit Through Gate</a></li>
                                <li id="smli" disabled="disabled"><a href="#DivInvoice" data-toggle="tab">SCMTR INFO</a></li>
                            </ul>
                        </div>

                        <div class="panel-body">
                            <div class="tab-content">
                                <div class="tab-pane fade in active" id="DivContainerStuffing">
                                    <div id="DivAddContainerStuffing">

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Gate Exit No:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.TextBoxFor(m => m.GateExitNo, new { @class = "form-control input-sm", @readonly = "true" })
                                                    @Html.ValidationMessageFor(m => m.GateExitNo, "", new { @class = "Error_Msg" })
                                                </div>
                                                <div class="col-md-2 col-md-offset-1-5 col_cus_2 col_cus_offset_0_5 padding_rt">
                                                    <label>Gate Exit & Date Time:</label>
                                                </div>
                                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                                    @Html.TextBoxFor(m => m.GateExitDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                                    @Html.ValidationMessageFor(m => m.GateExitDateTime, "", new { @class = "Error_Msg", Value = ViewBag.CurrentDt })
                                                </div>
                                                <div class="col-md-2 col_cus_2_5">
                                                    <div class="input-group clockpicker" data-placement="left" data-align="top">
                                                        <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                                        <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                                        <span class="input-group-addon" style="padding:2px 10px;">
                                                            <span class="glyphicon glyphicon-time"></span>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top Form_Space_bottom">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                                    <label>Gate Pass No:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.TextBoxFor(m => m.GatePassNo, new { @class = "form-control input-sm", @readonly = "true" })
                                                    <span class="search" id="GatePassModalSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GatePassModal"></i></span>
                                                    @Html.ValidationMessageFor(m => m.GatePassNo, "", new { @class = "Error_Msg" })
                                                </div>
                                                <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                                    @Html.LabelFor(m => m.GatePassDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                                </div>
                                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                                    @Html.TextBoxFor(m => m.GatePassDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                                    @Html.ValidationMessageFor(m => m.GatePassDate, "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="Head_h5">
                                            <div id="EditGateExitDtls">
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2">
                                                            <label>Container/BL/SB No:</label>
                                                        </div>
                                                        <div class="col-md-2-5">
                                                            @Html.Hidden("txtContainerId")
                                                            @*@Html.TextBox("txtContainerNo", new { @class = "form-control input-sm", @readonly = true })*@
                                                            <input type="text" id="txtContainerNo" name="txtContainerNo" readonly="readonly" class="form-control input-sm" />
                                                            <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                                                            @Html.ValidationMessage("txtContainerNo", "", new { @class = "Error_Msg" })

                                                            @*@Html.TextBox("txtContainerNo", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
                                                                @Html.ValidationMessage("txtContainerNo", new { @class = "Error_Msg" })*@
                                                        </div>
                                                        <div class="col-md-1" style="padding-right:0px;">
                                                            @Html.Label("Size:")
                                                        </div>
                                                        <div class="col-md-2 col_cus_2_5">
                                                            @Html.DropDownList("txtSize", new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"}
                                }, "----Select----", new { @class = "form-control input-sm" })
                                                            @Html.ValidationMessage("txtSize", new { @class = "Error_Msg" })
                                                        </div>
                                                        <div class="col-md-1 padding_rt">
                                                            <label>Reefer:</label>
                                                        </div>
                                                        <div class="col-md-2">
                                                            <div class="boolean-container">
                                                                @Html.CheckBox("txtReefer")
                                                                <label for="txtReefer"><i class="square"></i></label>
                                                            </div>

                                                            @*<div class="boolean-container">
                                                                    @Html.CheckBox("Reefer", new { @class = "form-control input-sm" })
                                                                </div>*@
                                                        </div>

                                                    </div>
                                                </div>
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                                            @Html.Label("Shipping Line :")
                                                        </div>
                                                        <div class="col-md-10-5 col_cus_10">
                                                            @Html.TextBox("txtShippingLine", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30", @readonly = "true" })
                                                            @Html.ValidationMessage("txtShippingLine", new { @class = "Error_Msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2">
                                                            @Html.Label("CHA Name:")
                                                        </div>
                                                        <div class="col-md-10-5 col_cus_10">
                                                            @Html.TextBox("txtCHAName", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
                                                            @Html.ValidationMessage("txtCHAName", new { @class = "Error_Msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                                            <label>Cargo Description:</label>
                                                        </div>
                                                        <div class="col-md-10-5 col_cus_10">
                                                            @Html.TextArea("txtCargoDescription", new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "1000" })
                                                            @Html.ValidationMessage("txtCargoDescription", "", new { @class = "Error_Msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2">
                                                            <label>Cargo Type:</label>
                                                        </div>
                                                        <div class="col-md-2-5">
                                                            <select id="txtCargoType" name="txtCargoType">
                                                                <option value="" selected>--Select--</option>
                                                                <option value="1">HAZ</option>
                                                                <option value="2">NON-HAZ</option>
                                                            </select>
                                                        </div>
                                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4 padding_rt">
                                                            @Html.Label("Vehicle No :")
                                                        </div>
                                                        <div class="col-md-2-5">
                                                            <input type="text" id="txtVehicleNo" name="txtVehicleNo" />
                                                            @Html.ValidationMessage("txtVehicleNo", "", new { @class = "Error_Msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2">
                                                            @Html.Label("No of Packages:")
                                                        </div>
                                                        <div class="col-md-2-5">
                                                            @*@Html.TextBox("txtNoOfPackages", null,new { @class = "form-control intpu-sm"})*@
                                                            @Html.TextBox("txtNoOfPackages", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyInteger(event)", maxlength = "10" })
                                                            @Html.ValidationMessage("txtNoOfPackages", "", new { @class = "Error_Msg" })
                                                        </div>
                                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                                            <label>Gross Weight:</label>
                                                        </div>
                                                        <div class="col-md-2-5">
                                                            @Html.TextBox("txtGrossWeight", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyDecimal(event)", maxlength = "12" })
                                                            @Html.ValidationMessage("txtGrossWeight", new { @class = "Error_Msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                                            @Html.Label("Depositor Name:")
                                                        </div>
                                                        <div class="col-md-10-5 col_cus_10">
                                                            @Html.TextBox("txtDepositorName", "", new { @class = "form-control intpu-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
                                                            @Html.ValidationMessage("txtDepositorName", "", new { @class = "Error_Msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row Form_Space_top">
                                                    <div class="form-group Form_Input">
                                                        <div class="col-md-1-5 col_cus_2">
                                                            @Html.Label("Remarks:")
                                                        </div>
                                                        <div class="col-md-10-5 col_cus_10">
                                                            @Html.TextArea("txtRemarks", new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "1000" })
                                                            @Html.ValidationMessage("txtRemarks", "", new { @class = "Error_Msg" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                                        </div>

                                    </div>
                                </div>

                                <div class="tab-pane fade" id="DivInvoice">
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div id="DivFormOneDet" style="overflow-x:auto;">
                                                <table class="table table-striped table-bordered dataTable" id="TblSCMTR">
                                                    <thead>
                                                        <tr>
                                                            <th width="2%">Sl No</th>
                                                            @*<th width="5%">Cont/CBT No</th>
                                                                <th width="2%">SB No.</th>*@
                                                            <th>CIM No.</th>
                                                            <th>CIM Date</th>
                                                            <th width="5%">Reporting party Code</th>
                                                            <th width="5%">Next Destination of Unlading</th>

                                                            <th width="5%">Transport Means Type</th>
                                                            <th width="5%">Transport Means No.</th>
                                                            <th width="5%">Total Equipment’s</th>
                                                            <th width="5%">Actual Time of Departure</th>
                                                            <th width="5%">Equip.type</th>
                                                            <th width="8%">Equip. ID</th>
                                                            <th width="5%">Equip.Size</th>
                                                            <th width="5%">Equip. Status</th>
                                                            <th width="5%">Equip.Serial No.</th>
                                                            <th width="5%">Doc.Serial no..</th>
                                                            <th width="5%">Doc.Reference No.</th>
                                                            <th width="5%">Doc.Type Code</th>

                                                            @*<th width="3%" class="text-center">Action</th>*@
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @*<tr ng-repeat="j in OblEntryDetails">
                                                                <td width="2%">
                                                                    {{$index+1}}<input type="hidden" ng-model="j.ID" /><input type="hidden" ng-model="j.AddID" />
                                                                    <input type="hidden" ng-model="j.DetailsID" />
                                                                </td>
                                                                <td width="5%"><input type="text" ng-model="j.ContainerNo" ng-blur="onchangetext(j);" maxlength="15" /></td>
                                                                <td width="2%">
                                                                    <select ng-model="j.ContainerSize" required>
                                                                        <option value="">--Select--</option>
                                                                        <option value="{{s.id}}" ng-repeat="s in ContainerSizeList">{{s.ContainerSize}}</option>
                                                                    </select>
                                                                </td>
                                                                <td width="5%">
                                                                    <input type="text" ng-model="j.NoOfPkg" onkeypress="return isNumber(event)" />
                                                                </td>
                                                                <td width="5%"><input type="text" ng-model="j.GR_WT" onkeypress="return isDecimalNumber(event)" /></td>

                                                                <td style="position:relative;">
                                                                    <input type="text" ng-model="j.ShippingLineName" id="ShippingLineName_{{$index}}" ng-disabled="true" required />
                                                                    <input type="text" ng-hide="true" ng-model="j.ShippingLineId" />
                                                                    <span class="search" style="top: 6px; right: 13px;" id="ShippingLineSerach"><i class="fa fa-search" aria-hidden="true" ng-model="j.ShippingLineModal" ng-click="onShippingLineChange($index)" data-toggle="modal" data-target="#ShippingLineModal"></i></span>
                                                                </td>
                                                                <td width="3%" style="text-align:center;">
                                                                    <input type="hidden" ng-model="j.IsProcessed" />
                                                                    <a href="#" ng-click="Delete($index,j)"><i class="fa fa-window-close-o Delete" aria-hidden="true"></i></a>
                                                                </td>
                                                            </tr>*@
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-offset-4 col-md-2  SignUp_space_bottom">
                                <input type="button" id="btnAddExitThroughGateDet" class="btn log_Btn_sm" value="Add" onclick="AddGateExitDet()" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" id="btnResetExitThroughGateDet" class="btn log_Btn_sm" value="Reset" onclick="ResetGateExitDet()" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div id="tblExitThroughGateDet"></div>
                            </div>
                        </div>
                   
                                        <div class="row">
                                            <div class="stoke SignUp_space_top2 SignUp_space_bottom2"></div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-offset-4 col-md-2">
                                                <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" />
                                            </div>
                                            <div class="col-md-2">
                                                <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllFields()" />
                                            </div>
                                        </div>
                                        <div class="row" id="Back" style="display:none">
                                            <div class="col-md-2 col-md-offset-5">
                                                <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateExitView()" />
                                            </div>
                                        </div>

                                        <div class="logSuccMsg Form_Space_top" id="DivMsg" style="background-color:transparent"></div>
                                        <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                                            <div id="DivExitThroughGateMsg" style="background-color:transparent"></div>
                                        </div>
                                        @*}*@

                                        <div id="ContainerModal" class="modal fade" role="dialog">
                                            <div class="modal-dialog">
                                                <!-- Modal content-->
                                                <div class="modal-content popup_modal">
                                                    <div class="modal-header popup_header">
                                                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                                        <h4 class="modal-title"> Entered Container</h4>
                                                    </div>
                                                    <div class="modal-body popup_body">
                                                        <input placeholder="Search Me" id="Containerbox" type="text" />
                                                        <ul class="navList" id="lstContainer">
                                                            @{
                                                                @*if (@ViewBag.Lstcontainer != null)
                                                        {
                                                            foreach (var item in @ViewBag.Lstcontainer)
                                                            {
                                                                <li id="@item.ContainerName">@item.ContainerName</li>
                                                            }
                                                        }*@
                                                            }
                                                        </ul>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <div class="row">
                                                            <div class="col-md-offset-6 col-md-6">
                                                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div id="GatePassModal" class="modal fade" role="dialog">
                                            <div class="modal-dialog">
                                                <!-- Modal content-->
                                                <div class="modal-content popup_modal">
                                                    <div class="modal-header popup_header">
                                                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                                        <h4 class="modal-title"> Gate Pass No</h4>
                                                    </div>
                                                    <div class="modal-body popup_body">
                                                        <input placeholder="Search Me" id="GatePassbox" type="text" />
                                                        <ul class="navList" id="lstGatePass">
                                                            @{
                                                                if (@ViewBag.LstGatePass != null)
                                                                {
                                                                    foreach (var item in @ViewBag.LstGatePass)
                                                                    {
                                                                        <li id="@item.GatePassId">@item.GatePassNo</li>
                                                                    }
                                                                }
                                                            }
                                                        </ul>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <div class="row">
                                                            <div class="col-md-offset-6 col-md-6">
                                                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
</div>
                                        }

                                        <div class="row Form_Space_top Form_Space_bottom">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-offset-5 col-md-4" style="text-align:right;">
                                                    <label>GE No/GE Date/GP No/Invoice No/Container No/ Vehicle No:</label>
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.TextBox("GESearch", "", new { placeholder = "Search Here" })
                                                    @*<input id="PartyCode" name="PartyCode" type="text" value="gfh gf">*@
                                                    <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="SearchGateExit()"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div id="DivGateExitList"></div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        @Scripts.Render("~/bundles/jqueryval")
                        <script>
                            var ArrayOfSCMTR = [];
                            function GenerateLstContainer() {
                                debugger;
                                if ($('#LstcontainerJson').val() != null && $('#LstcontainerJson').val() != "") {
                                    var parties = JSON.parse($('#LstcontainerJson').val());
                                    if (parties != null) {
                                        var html = '';
                                        var HtmlScmtr = '';
                                        $.each(parties, function (i, item) {
                                            html += '<li id="' + item.ContainerName + '" " onclick="GetPayByDetails(this)">' + item.ContainerName + '</li>';
                                        });
                                        $('#lstContainer').html(html);
                                    }
                                    else {
                                        alert("No Data Found Against This Gate Pass Or All Container Exited");


                                        $('#txtShippingLine').val('');
                                        $('#shippingLineId').val('');
                                        $('#txtCFSCode').val('');

                                        $('#txtContainerNo').val('');

                                        $('#txtReefer').prop('checked', false);

                                        $('#txtSize').val('');
                                        $('#txtCargoType').val('');
                                        $('#txtCargoDescription').val('');
                                        $('#txtNoOfPackages').val('');
                                        $('#txtVehicleNo').val('');
                                        $('#txtGrossWeight').val('');
                                        $('#txtOperationType').val('');
                                    }
                                }
                            }


                            function GetPayByDetails(elem) {

                                $('#txtContainerNo').val($(elem).text());
                                $('#txtContainerId').val($(elem).attr('id'));

                                $("#ContainerModal").modal("hide");
                                debugger;
                                var parties = JSON.parse($('#LstcontainerJson').val());
                                if (parties[0].IsBond == true) {
                                    var payby = $.grep(parties, function (item) { return item.IsBond == true; })[0];
                                }
                                else {
                                    var payby = $.grep(parties, function (item) { return item.ContainerName == $(elem).attr('id'); })[0];
                                }


                                $('#txtShippingLine').val(payby.shippingLine);
                                $('#shippingLineId').val(payby.ShippingLineId);
                                $('#txtCFSCode').val(payby.CFSCode);
                                if (payby.IsReefer == 0) {
                                    $('#txtReefer').prop('checked', false);
                                }
                                else {
                                    $('#txtReefer').prop('checked', true);
                                }
                                $('#txtSize').val(payby.size);
                                $('#txtCargoType').val(payby.CargoType);
                                $('#txtCargoDescription').val(payby.CargoDescription);
                                $('#txtNoOfPackages').val(payby.NoOfUnits);
                                $('#txtVehicleNo').val(payby.VehicleNo);
                                $('#txtGrossWeight').val(payby.Weight);
                                $('#txtOperationType').val(payby.OperationType);
                                $('#txtCHAName').val(payby.CHAName);
                                $('#txtDepositorName').val(payby.DepositorName)
                                //alert($('#txtCFSCode').val());
                                //alert($('#shippingLineId').val());F
                            }

                            $('#Containerbox').keyup(function () {
                                var val = $(this).val().toLowerCase();
                                if (val == "")
                                    $('#lstContainer > li').show();
                                else {
                                    $('#lstContainer > li').each(function () {
                                        var text = $(this).text().toLowerCase();
                                        (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
                                    });
                                }
                            });

                            $('#GatePassbox').keyup(function () {
                                var val = $(this).val().toLowerCase();
                                if (val == "")
                                    $('#lstGatePass > li').show();
                                else {
                                    $('#lstGatePass > li').each(function () {
                                        var text = $(this).text().toLowerCase();
                                        (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
                                    });
                                }
                            });


                            $('#lstGatePass > li').on("click", function () {
                                $('#GatePassNo').val($(this).text());
                                $('#GatePassId').val($(this).attr('id'));
                                $("#GatePassModal").modal("hide");


                                var gatepassID = $('#GatePassId').val();
                                //alert("id" + $('#GatePassId').val());
                                debugger;
                                GetContaierAgainstGP(gatepassID);
                                //alert("id" + $('#GatePassId').val());
                                //alert("Gp" + $('#GatePassNo').val());





                            });
                            //var ContainerName = "";

                            //$('#lstContainer > li').on("click", function () {
                            //    $('#txtContainerNo').val($(this).text());
                            //    //var containerval = $('#txtContainerNo').val();
                            //    //alert(containerval);
                            //    $('#txtContainerId').val($(this).attr('id'));
                            //    $("#ContainerModal").modal("hide");
                            //    ContainerName = $('#ContainerNo').val();

                            //    if (ContainerName != null && ContainerName != "") {
                            //        //alert(ContainerName);
                            //        //AutoPopulate(ContainerName);
                            //    }


                            //});


                            //function GateExitOnSuccess(data) {

                            //    debugger;
                            //    if (data.Status == 1 || data.Status == 2) {
                            //        //ResetGateEntry();
                            //        if ($('#DivExitThroughGateMsg').hasClass('logErrMsg'))
                            //            $('#DivExitThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
                            //        $('#DivExitThroughGateMsg').html(data.Message);
                            //        //setTimeout(CountryReset, TimeInSeconds);
                            //        //LoadGateExitView();
                            //    }
                            //        //else if (data.Status == 2) {
                            //        //    $('[data-valmsg-for="CountryName"]').html('<span>' + data.Message + '</span>');
                            //        //}
                            //        //else if (data.Status == 3) {
                            //        //    $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
                            //        //}
                            //    else {
                            //        if ($('#DivExitThroughGateMsg').hasClass('logSuccMsg'))
                            //            $('#DivExitThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                            //        $('#DivExitThroughGateMsg').html(data.Message);
                            //    }
                            //}

                            function GetContaierAgainstGP(gatepassId) {

                                var Token = $('input[name="__RequestVerificationToken"]').val();
                                $.ajax({
                                    type: 'POST',
                                    url: '@Url.Action("GetContainerForGatePass", "Wlj_CWCGateExit", new { area = "GateOperation" })',
                                    headers: { '__RequestVerificationToken': Token },
                                    data: { GPId: gatepassId },
                                    dataType: 'JSON',
                                    success: function (data) {

                                        debugger;
                                        if (data.Status == 1) {
                                            $('#GatePassDate').val(data.Data[0].GatePassDate);
                                            var GPcontainerJson = JSON.stringify(data.Data);
                                            $("#LstcontainerJson").val(GPcontainerJson);
                                            debugger;
                                            if (data.Data[0].IsBond == true) {
                                                GetPayByDetails();
                                            }
                                            else {
                                                debugger;
                                                GenerateLstContainer();
                                            }


                                        }
                                        else {
                                            alert("No Data Found");

                                        }

                                    }
                                });



                            }
                            //function populateJsondata(data) {
                            //    $("#EntryDateTime").val(data.EntryDateTime);
                            //    $("#time").val(data.EntryTime);
                            //    $("#ReferenceNo").val(data.ReferenceNo);

                            //    $("#ShippingLine").val(data.ShippingLine);
                            //    $("#CHAName").val(data.CHAName);
                            //    $("#ContainerNo").val(data.ContainerNo);
                            //    $("#Size").val(data.Size);
                            //    $("#CargoType").val(data.CargoType);

                            //}


                            function LoadGateExitView() {
                                debugger;
                                $('#DivBody').load('/GateOperation/Wlj_CWCImport/CreateExitThroughGate');
                            }

                            var viewMode = $("#ViewMode").val();
                            if (viewMode != null && viewMode == "view" && viewMode != "") {
                                //alert("inViewMode");
                                $("#Back").show();
                                $("#btnSave").hide();
                                $("#btnReset").hide();
                                $(function () {
                                    $('input[type="text"],textarea').prop('readonly', true);
                                    $('input[type="checkbox"]').prop('disabled', true);
                                });
                                ViewExitThroughGateListDetails();
                            }
                            function ViewExitThroughGateListDetails() {
                                debugger;
                                var HeaderId = $("#ViewIdOfHdr").val();
                                //alert("HeaderId=" + HeaderId);
                                if (HeaderId != null && HeaderId != "") {

                                    var Token = $('input[name="__RequestVerificationToken"]').val();
                                    $.ajax({
                                        url: '/GateOperation/Wlj_CWCGateExit/getExitDetailsList',
                                        type: 'GET',
                                        headers: { '__RequestVerificationToken': Token },
                                        dataType: 'text',
                                        data: { HeaderId: HeaderId },
                                        async: false,
                                        success: function (data) {
                                            // alert(data);
                                            if (data != null && data != "" && data != undefined) {
                                                $("#tblExitThroughGateDet").html('');
                                                $("#tblExitThroughGateDet").html(data);
                                            }
                                            else {
                                                $("#tblExitThroughGateDet").html('');

                                            }
                                        }
                                    });
                                }
                            }

                            $(document).ready(function () {



                                GetExitThroughGateList();

                                var editTime = $("#EditTime").val();
                                //alert(editTime);
                                if (editTime != null && editTime != "") {
                                    $("#time").val(editTime);
                                }

                                $("#GateExitDateTime").datepicker({
                                    dateFormat: "dd/mm/yy",
                                    showOn: "button",
                                    buttonImage: "/Content/images/calendar.png",
                                    buttonImageOnly: true,
                                    buttonText: "Select date",
                                    changeMonth: true,
                                    changeYear: true,
                                    showAnima: "fadein",
                                    onClose: function () {
                                        $(".Date_Img .Error_Msg").text("");
                                        $('[data-valmsg-for="Data"]').html('<span></span>');
                                        $('#DivBody').load('/GateOperation/Wlj_CWCGateExit/CreateExitThroughGate?date=' + $("#GateExitDateTime").val().split('/')[2] + '-' + $("#GateExitDateTime").val().split('/')[1] + '-' + $("#GateExitDateTime").val().split('/')[0])
                                    }
                                });

                                $("#GatePassDate").datepicker({
                                    dateFormat: "dd/mm/yy",
                                    showOn: "button",
                                    buttonImage: "/Content/images/calendar.png",
                                    buttonImageOnly: true,
                                    buttonText: "Select date",
                                    changeMonth: true,
                                    changeYear: true,
                                    showAnima: "fadein",
                                    onClose: function () {
                                        $(".Date_Img .Error_Msg").text("");
                                        $('[data-valmsg-for="Data"]').html('<span></span>');
                                    }
                                });

                                //var Token = $('input[name="__RequestVerificationToken"]').val();
                                //$.ajax({
                                //    url: '/GateOperation/Hdb_CWCImport/getExitHeaderList',
                                //    type: 'GET',
                                //    headers: { '__RequestVerificationToken': Token },
                                //    dataType: 'text',
                                //    async: false,
                                //    success: function (data) {
                                //        alert("success");
                                //        ("#DivGateExitList").html('');
                                //        ("#DivGateExitList").html(data);

                                //    }
                                //});

                                var i = 0;
                                var HtmlScmtr = "";
                                var dt = $('#GateExitDateTime').val();

                                var dtvalue = dt.split("/");

                                var dtval = dtvalue[2] + "-" + dtvalue[1] + "-" + dtvalue[0] + " " + $('#time').val().substring(0, 5);
                                HtmlScmtr += '<tr><td class="text-center">' + (i + 1) + '</td><td><input type="number" id="CIMNo' + (i + 1) + '" name="CIMNo' + (i + 1) + '" max="999999999999"></td><td><input type="text" id="CIMDate' + (i + 1) + '" name="CIMDate' + (i + 1) + '"  pattern="^[0-9]{4}(0[1-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$" maxlength="8" placeholder="YYYYMMDD"></td><td><input type="text" id="RptPartyCd' + (i + 1) + '" name="RptPartyCd' + (i + 1) + '" pattern="^[a-zA-Z0-9]{10}$" maxlength="15"></td><td><input type="text" id="DestinationUnlading' + (i + 1) + '" name="DestinationUnlading' + (i + 1) + '" pattern="[I][N])([A-Z]|[0-9]){8}$" maxlength="10"></td><td><select id="TransportMeansType' + (i + 1) + '" name="TransportMeansType' + (i + 1) + '"><option value="1">Sea</option><option value="2">Rail</option><option value="3">Truck</option><option value="4">Air</option></select></td><td><input type="text" id="TransportMeansNo' + (i + 1) + '" name="TransportMeansNo' + (i + 1) + '" maxlength="12"></td><td><input type="number" id="TotalEquipment' + (i + 1) + '" name="TotalEquipment' + (i + 1) + '" max="9999"></td><td><input type="text" id="ActualDeparture' + (i + 1) + '" name="ActualDeparture' + (i + 1) + '"  class="masked" pattern="^([0-9]{4})-([0-1][0-9])-([0-3][0-9])[T]([0-1][0-9]|[2][0-3]):([0-5][0-9])$" maxlength="20" value="' + dtval + '"></td><td><select id="Equipmenttype' + (i + 1) + '" name="Equipmenttype' + (i + 1) + '"><option value="C">Container</option><option value="B">Bonded truck</option><option value="W">Wagon</option></select></td><td><input type="text" id="ContainerID' + (i + 1) + '" name="ContainerID' + (i + 1) + '" maxlength="17"></td><td><input type="text" id="EquipmentSize' + (i + 1) + '" name="EquipmentSize' + (i + 1) + '" pattern="^[a-zA-Z0-9]{4}$" maxlength="4"></td><td><select id="EquipStatus' + (i + 1) + '" name="EquipStatus' + (i + 1) + '"><option value="Damaged">Damaged</option><option value="Intact">Intact </option><option value="Short landed">Short landed</option><option value="Delay">Delay</option></select></td><td><input type="number" id="EquipSrNo' + (i + 1) + '" name="EquipSrNo' + (i + 1) + '" pattern="\d{5}" max="99999"></td><td><input type="number" id="DocSrNo' + (i + 1) + '" name="DocSrNo' + (i + 1) + '" pattern="\d{4}" max="9999"></td><td><input type="text" id="DocRefNo' + (i + 1) + '" name="DocRefNo' + (i + 1) + '" maxlength="17"></td><td><input type="text" id="DocTypeCode' + (i + 1) + '" name="DocTypeCode' + (i + 1) + '" maxlength="6" ></td></tr>';
                                $('#TblSCMTR>tbody').html(HtmlScmtr);
                                $('#TblSCMTR').show();

                            });
                            function ResetGateEntry() {
                                $('input[type="text"],textarea,select').val('');
                                $('input[type="checkbox"').prop('checked', false);
                                $('[data-valmsg-for]').html('');
                            }
                            //function GateEntryOnSuccess(data) { }
                            // function GateEntryOnFailure() { }
                            function LoadGateExitView() {
                                $('#DivBody').load('/GateOperation/Wlj_CWCGateExit/CreateExitThroughGate');
                            }

                            function GateExitOnSuccess(data) {

                                debugger;
                                if (data.Status == 1 || data.Status == 2) {

                                    if ($('#DivExitThroughGateMsg').hasClass('logErrMsg'))
                                        $('#DivExitThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
                                    $('#DivExitThroughGateMsg').html(data.Message);
                                    setTimeout(LoadGateExitView, TimeInSeconds);
                                    // LoadGateExitView();
                                    GetExitThroughGateList();
                                }
                                    //else if (data.Status == 2) {
                                    //    $('[data-valmsg-for="CountryName"]').html('<span>' + data.Message + '</span>');
                                    //}
                                    //else if (data.Status == 3) {
                                    //    $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
                                    //}
                                else {
                                    if ($('#DivExitThroughGateMsg').hasClass('logSuccMsg'))
                                        $('#DivExitThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                                    $('#DivExitThroughGateMsg').html(data.Message);
                                }
                            }
                            function GateExitOnFailure() {
                                //alert("Error");
                                LoadGateExitView();
                            }

                            //$(document).ready(function () {

                            //    $("#GateExitDateTime").datepicker({
                            //        dateFormat: "dd/mm/yy",
                            //        showOn: "button",
                            //        buttonImage: "/Content/images/calendar.png",
                            //        buttonImageOnly: true,
                            //        buttonText: "Select date",
                            //        changeMonth: true,
                            //        changeYear: true,
                            //        showAnima: "fadein",
                            //        onClose: function () {
                            //            $(".Date_Img .Error_Msg").text("");
                            //            $('[data-valmsg-for="Data"]').html('<span></span>');
                            //        }
                            //    });

                            //    $("#GatePassDate").datepicker({
                            //        dateFormat: "dd/mm/yy",
                            //        showOn: "button",
                            //        buttonImage: "/Content/images/calendar.png",
                            //        buttonImageOnly: true,
                            //        buttonText: "Select date",
                            //        changeMonth: true,
                            //        changeYear: true,
                            //        showAnima: "fadein",
                            //        onClose: function () {
                            //            $(".Date_Img .Error_Msg").text("");
                            //            $('[data-valmsg-for="Data"]').html('<span></span>');
                            //        }
                            //    });
                            //});

                            function ClearErrMsg(elem) {
                                $('[data-valmsg-for="' + elem.id + '"]').html('');
                            }

                            function ValidateData(evt) {
                                var CharCode;
                                if (window.event) {
                                    CharCode = window.event.keyCode;
                                }
                                else {
                                    CharCode = evt.which;
                                }
                                if (CharCode == 32) {
                                    return true;
                                }
                                if ((CharCode > 31 & CharCode < 48) || (CharCode > 57 & CharCode < 65) || (CharCode > 90 & CharCode < 97) || (CharCode > 122)) {
                                    evt.preventDefault();
                                    return false;
                                }
                                return true;
                            }

                            function AllowOnlyInteger(evt) {
                                var CharCode;
                                if (window.event) {
                                    CharCode = window.event.keyCode;
                                }
                                else {
                                    CharCode = evt.which;
                                }
                                if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
                                    return true;
                                }
                                else {
                                    evt.preventDefault;
                                    return false;
                                }
                            }
                            function AllowOnlyDecimal(evt) {
                                var CharCode;
                                if (window.event) {
                                    CharCode = window.event.keyCode;
                                }
                                else {
                                    CharCode = evt.which;
                                }
                                if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
                                    return true;
                                }
                                else {
                                    evt.preventDefault;
                                    return false;
                                }
                            }
                            var ArrayGateExitDet = [];
                            function AddGateExitDet() {

                                if (ValidateExitDet()) {
                                    var CargoType = $('#txtCargoType').val();
                                    var Size = $('#txtSize').val();
                                    if (CargoType == null || CargoType == "") {
                                        CargoType = 0;
                                    }
                                    if (Size == null || Size == "") {
                                        Size = 0;
                                    }
                                    var txtNoOfPackages = $('#txtNoOfPackages').val();
                                    if (txtNoOfPackages == null || txtNoOfPackages == "") {
                                        txtNoOfPackages = 0;
                                    }
                                    var txtGrossWeight = $('#txtGrossWeight').val();
                                    if (txtGrossWeight == null || txtGrossWeight == "") {
                                        txtGrossWeight = 0;
                                    }
                                    var slid = $("#shippingLineId").val();
                                    if (slid == null || slid == "") {
                                        slid = 0;
                                    }
                                    //alert(slid);
                                    var GateExitDet = {
                                        "ContainerNo": $('#txtContainerNo').val(),
                                        "Size": Size,
                                        "Reefer": $('#txtReefer').is(':checked') ? 'true' : 'false',
                                        "ShippingLine": $('#txtShippingLine').val(),
                                        "ShippingLineId": slid,
                                        "CFSCode": $('#txtCFSCode').val(),
                                        //$('#shippingLineId').val(),
                                        "CHAName": $('#txtCHAName').val(),
                                        "CargoDescription": $('#txtCargoDescription').val(),
                                        "CargoType": CargoType,
                                        "VehicleNo": $('#txtVehicleNo').val(),
                                        "NoOfPackages": txtNoOfPackages,

                                        "GrossWeight": txtGrossWeight,

                                        "DepositorName": $('#txtDepositorName').val(),
                                        "Remarks": $('#txtRemarks').val(),
                                        "OperationType": $('#txtOperationType').val(),
                                    };
                                    var flag = 0;
                                    $.each(ArrayGateExitDet, function (j, elem1) {
                                        if (elem1.ContainerNo == GateExitDet.ContainerNo) {
                                            flag = 1;
                                            setTimeout($('#DivExitThroughGateMsg').html('Same Container/CBT No Already added'), TimeInSeconds);

                                        }

                                    });

                                    if (flag == 0)
                                        //alert($('#txtCFSCode').val());
                                        // alert("array="+GateExitDet);
                                        ArrayGateExitDet.push(GateExitDet);
                                    $('#tblExitThroughGateDet').html('');
                                    GenerateTable();
                                    ResetGateExitDet();
                                }
                            }

                            function GenerateTable() {
                                //alert("Generate table");
                                var tablehtml = '<table id="tblExitThroughGateDet" class="table table-striped table-bordered dataTable" style="width:100%;"><thead><tr><th class="text-center" style="width:8%;">SL No</th><th>Container/BL/SB No</th><th>Shipping Line</th><th class="text-center" style="width:10%;">Edit</th><th class="text-center" style="width:10%;">View</th></tr></thead><tbody>';
                                $.each(ArrayGateExitDet, function (i, data) {
                                    tablehtml += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.ShippingLine + '</td><td class="text-center"><a href="#" onclick="EditShippingDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td><td class="text-center"><a href="#" onclick="ViewShippingDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
                                });
                                tablehtml += '</tbody></table>';
                                $('#tblExitThroughGateDet').html(tablehtml);
                            }
                            function ResetGateExitDet() {

                                $('#txtContainerNo,#txtSize,#txtCFSCode,#txtReefer,#txtShippingLine,#shippingLineId,#txtCHAName,#txtCargoDescription,#txtCargoType,#txtVehicleNo,#txtNoOfPackages,#txtGrossWeight,#txtDepositorName,#txtRemarks,#txtOperationType').val('');
                                $('input:checkbox').removeAttr('checked');

                            }


                            function EditShippingDet(i) {
                                debugger;

                                $('#txtContainerNo').val(ArrayGateExitDet[i].ContainerNo);
                                $('#txtSize').val(ArrayGateExitDet[i].Size);
                                $('#shippingLineId').val(ArrayGateExitDet[i].ShippingLineId);
                                $('#txtCFSCode').val(ArrayGateExitDet[i].CFSCode);
                                var refer = ArrayGateExitDet[i].Reefer;
                                if (refer == "true") {
                                    $('#txtReefer').prop("checked", true);
                                }
                                $('#txtShippingLine').val(ArrayGateExitDet[i].ShippingLine);
                                $('#txtCHAName').val(ArrayGateExitDet[i].CHAName);
                                $('#txtCargoDescription').val(ArrayGateExitDet[i].CargoDescription);
                                $('#txtCargoDescription').val(ArrayGateExitDet[i].CargoDescription);
                                $('#txtCargoType').val(ArrayGateExitDet[i].CargoType);
                                $('#txtVehicleNo').val(ArrayGateExitDet[i].VehicleNo);
                                $('#txtNoOfPackages').val(ArrayGateExitDet[i].NoOfPackages);
                                $('#txtGrossWeight').val(ArrayGateExitDet[i].GrossWeight);
                                $('#txtDepositorName').val(ArrayGateExitDet[i].DepositorName);
                                $('#txtRemarks').val(ArrayGateExitDet[i].Remarks);
                                $('#txtOperationType').val(ArrayGateExitDet[i].OperationType);

                                ArrayGateExitDet.splice(i, 1);
                                $('#tblExitThroughGateDet').html('');
                                GenerateTable();

                                //setTimeout(function () { $('#DivMsgEdit').html(''); }, 5000);
                            }

                            function ViewShippingDet(i) {

                                $('#btnAddExitThroughGateDet').prop('disabled', true);
                                $('#txtContainerNo').val(ArrayGateExitDet[i].ContainerNo);
                                $('#txtSize').val(ArrayGateExitDet[i].Size);
                                $('#txtReefer').val(ArrayGateExitDet[i].Reefer);
                                $('#txtShippingLine').val(ArrayGateExitDet[i].ShippingLine);
                                $('#txtCHAName').val(ArrayGateExitDet[i].CHAName);
                                $('#txtCargoDescription').val(ArrayGateExitDet[i].CargoDescription);
                                $('#txtCargoType').val(ArrayGateExitDet[i].CargoType);
                                $('#txtVehicleNo').val(ArrayGateExitDet[i].VehicleNo);
                                $('#txtNoOfPackages').val(ArrayGateExitDet[i].NoOfPackages);
                                $('#txtGrossWeight').val(ArrayGateExitDet[i].GrossWeight);
                                $('#txtDepositorName').val(ArrayGateExitDet[i].DepositorName);
                                $('#txtRemarks').val(ArrayGateExitDet[i].Remarks);
                                $('#txtOperationType').val(ArrayGateExitDet[i].OperationType);
                            }

                            $('#btnSave').on("click", function () {
                                //alert("clicked");
                                debugger;
                                var Status = true;
                                //|| $('#txtCHAName').val() != "" || $('#txtCargoDescription').val() != "" || $('#txtCargoType').val() != "" || $('#txtVehicleNo').val() != "" ||
                                //    $('#txtNoOfPackages').val() != "" || $('#txtGrossWeight').val() != "" || $('#txtDepositorName').val() != "" || $('#txtRemarks').val() != ""
                                //if ($('#txtContainerNo').val() == ""  || $('#txtShippingLine').val() == ""  )
                                //     {
                                //    $('#DivMsg').html('Add The Record To Save');
                                //    Status = false;
                                //}
                                //else {
                                if ($('#tblExitThroughGateDet>tbody').html() == "" || $('#tblExitThroughGateDet>tbody').html() == undefined || $('#tblExitThroughGateDet>tbody').html() == null) {
                                    $('#DivMsg').html('Add The Record To Save');
                                    Status = false;
                                }
                                //}

                                var dtt = $('#GatePassDate').val();
                                var dt = dtt.split("/");
                                var dt1 = dt[2] + "-" + dt[1] + "-" + dt[0];

                                $('#GatePassDate').val(dt1);
                                dtt = $('#GateExitDateTime').val();

                                dt = dtt.split("/");

                                dt1 = dt[2] + "-" + dt[1] + "-" + dt[0];
                                $('#GateExitDateTime').val(dt1);
                                $('#StrExitThroughGateDetails').val(JSON.stringify(ArrayGateExitDet));


                                ArrayOfSCMTR = [];
                                var flg = 0;
                                var i = 0;
                                // for (i = 0; i < ArrayOfContainerStuff.length; i++) {

                                var idd = "CIMNo" + (i + 1);
                                var idval = $('#' + idd).val();

                                if (idval == '') {
                                    flg = 1;

                                }

                                idd = "CIMDate" + (i + 1);
                                idval = $('#' + idd).val();

                                if (idval == '') {
                                    flg = 1;

                                }


                                idd = "RptPartyCd" + (i + 1);
                                var idval = $('#' + idd).val();



                                if (idval == '') {
                                    flg = 1;

                                }

                                idd = "ContainerID" + (i + 1);
                                idval = $('#' + idd).val();
                                if (idval == '') {
                                    flg = 1;

                                }

                                idd = "EquipSize" + (i + 1);
                                idval = $('#' + idd).val();
                                if (idval == '') {
                                    flg = 1;

                                }


                                idd = "DestinationUnlading" + (i + 1);
                                idval = $('#' + idd).val();
                                if (idval == '') {
                                    flg = 1;

                                }


                                idd = "TransportMeansNo" + (i + 1);
                                idval = $('#' + idd).val();
                                if (idval == '') {
                                    flg = 1;

                                }



                                idd = "TotalEquipment" + (i + 1);
                                idval = $('#' + idd).val();
                                var idv = parseInt(idval);

                                if (idv > 9999) {
                                    flg = 2;

                                }
                                if (idval == '') {
                                    flg = 1;

                                }


                                idd = "EquipSrNo" + (i + 1);
                                idval = $('#' + idd).val();
                                idv = parseInt(idval);
                                if (idv > 99999) {
                                    flg = 3;

                                }

                                if (idval == '') {
                                    flg = 1;

                                }
                                idd = "DocSrNo" + (i + 1);
                                idval = $('#' + idd).val();
                                idv = parseInt(idval);
                                if (idv > 9999) {
                                    flg = 4;

                                }
                                if (idval == '') {
                                    flg = 1;

                                }

                                idd = "DocRefNo" + (i + 1);
                                idval = $('#' + idd).val();
                                if (idval == '') {
                                    flg = 1;

                                }

                                idd = "DocTypeCode" + (i + 1);
                                idval = $('#' + idd).val();
                                if (idval == '') {
                                    flg = 1;

                                }


                                var SCMTRDtl = {

                                    "CIMNo": $('#CIMNo' + (i + 1)).val(),
                                    "CIMDate": $('#CIMDate' + (i + 1)).val(),
                                    "ReportingpartyCode": $('#RptPartyCd' + (i + 1)).val(),
                                    "DestinationUnlading": $('#DestinationUnlading' + (i + 1)).val(),
                                    "TransportMeansType": $('#TransportMeansType' + (i + 1)).val(),
                                    "TransportMeansNo": $('#TransportMeansNo' + (i + 1)).val(),
                                    "TotalEquipment": $('#TotalEquipment' + (i + 1)).val(),
                                    "ActualDeparture": $('#ActualDeparture' + (i + 1)).val(),
                                    "ContainerID": $('#ContainerID' + (i + 1)).val(),
                                    "Equipmenttype": $('#Equipmenttype' + (i + 1)).val(),
                                    "EquipmentSize": $('#EquipmentSize' + (i + 1)).val(),
                                    "EquipStatus": $('#EquipStatus' + (i + 1)).val(),
                                    "EquipmentSerialNo": $('#EquipSrNo' + (i + 1)).val(),
                                    "DocumentSerialNo": $('#DocSrNo' + (i + 1)).val(),
                                    "DocumentReferenceNo": $('#DocRefNo' + (i + 1)).val(),
                                    "DocumentTypeCode": $('#DocTypeCode' + (i + 1)).val(),
                                }
                                ArrayOfSCMTR.push(SCMTRDtl);





                                // }
                                if (flg == 0) {
                                    $('#SCMTRXML').val(JSON.stringify(ArrayOfSCMTR));
                                }
                                flg = 0;

                                if (flg == 1) {
                                    alert("Please fill up SCMTR INFO");
                                    return false;
                                }
                                if (flg == 2) {
                                    alert("Maximum value exceed in Total Equipment ");
                                    return false;
                                }
                                if (flg == 3) {
                                    alert("Maximum value exceed in Equipement Serial No. ");
                                    return false;
                                }
                                if (flg == 4) {
                                    alert("Maximum value exceed in Document Serial No. ");
                                    return false;
                                }


                                if (confirm("Are You Sure You Want To Save?")) {

                                    //$('#SCMTRXML').val(JSON.stringify(ArrayOfSCMTR));
                                    $('#btnSave').attr('disabled', true);
                                    $('#btnSave').submit();
                                }

                                //if (Status == true)
                                  //  $('#StrExitThroughGateDetails').val(JSON.stringify(ArrayGateExitDet));
                                //setTimeout(function () { $('#DivMsg').html(''); }, 5000);
                                //return Status;
                            });

                            function ResetAllFields() {
                                $('[data-valmsg-for]').html('');
                                $('input[type="text"],Select,textarea').val('');
                                @*$('#ApplicationDate,#ShippingBillDate').val('@Model.ApplicationDate');*@
                                $('#tblExitThroughGateDet').html('');
                                ArrayGateExitDet = [];
                                ArrayOfSCMTR = [];
                            }

                            function ValidateExitDet() {
                                var Status = true;
                                // alert(($("#txtContainerNo").val()));
                                debugger;
                                if ($('#lstContainer >li').length > 0) {
                                    if ($('#txtContainerNo').val() == null || $('#txtContainerNo').val() == "") {
                                        $('[data-valmsg-for="txtContainerNo"]').html('<span>Fill Out This Field</span>');
                                        Status = false;
                                    }
                                }

                                if ($('#txtVehicleNo').val() == null || $('#txtVehicleNo').val() == "") {
                                    $('[data-valmsg-for="txtVehicleNo"]').html('<span>Fill Out This Field</span>');
                                    Status = false;
                                }




                                //if ($('#txtGrossWeight').val() == "") {
                                //    $('[data-valmsg-for="txtGrossWeight"]').html('<span>Fill Out This Field</span>');
                                //    Status = false;
                                //}
                                //if ($('#txtGrossWeight').val() != "") {
                                //    if (!DecimalValidation("txtGrossWeight")) {
                                //        $('[data-valmsg-for="txtGrossWeight"]').html('<span>Weight must be a decimal up to 2 places and less then 99999999.99<span>');
                                //        Status = false;
                                //    }
                                //}
                                //if ($('#Size').val() == "") {
                                //    $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                                //    Status = false;
                                //}
                                //if ($('#ShippingLine').val() == "") {
                                //    $('[data-valmsg-for="ShippingLine"]').html('<span>Fill Out This Field</span>');
                                //    Status = false;
                                //}
                                //if ($('#CHAName').val() == "") {
                                //    $('[data-valmsg-for="CHAName"]').html('<span>Fill Out This Field</span>');
                                //    Status = false;
                                //}
                                //if ($('#CargoType').val() == "") {
                                //    $('[data-valmsg-for="CargoType"]').html('<span>Fill Out This Field</span>');
                                //    Status = false;
                                //}

                                //if ($('#GrossWeight').val() == "") {
                                //    $('[data-valmsg-for="GrossWeight"]').html('<span>Fill Out This Field</span>');
                                //    Status = false;
                                //}
                                //if ($('#GrossWeight').val() != "") {
                                //    if (!DecimalValidation("GrossWeight")) {
                                //        $('[data-valmsg-for="GrossWeight"]').html('<span>Weight must be a decimal up to 2 places and less then 99999999.99<span>');
                                //        Status = false;
                                //    }
                                //}

                                return Status;
                            }

                            function EditBtnDisabl() {
                                var buttonValueEdit = $('#ViewFlagEdit').val();
                                //alert(buttonValueEdit);
                                if (buttonValueEdit != null && buttonValueEdit != "") {

                                    if (buttonValueEdit == "Edit") {
                                        //$("#DetailsEditSave").hide();
                                        $("#btnAddExitThroughGateDet").hide();
                                    }
                                }
                            }
                            $('.clockpicker').clockpicker({
                                donetext: 'Done',
                                twelvehour: true
                            });

                            function SearchGateExit() {
                                debugger;
                                if ($('#GESearch').val().trim() == "" || $('#GESearch').val().trim() == null) {
                                    GetExitThroughGateList();
                                }
                                else {
                                    $('#DivGateExitList').load('/GateOperation/Wlj_CWCGateExit/SearchGateExit?Value=' + $('#GESearch').val().trim());

                                }
                            }

                        </script>


