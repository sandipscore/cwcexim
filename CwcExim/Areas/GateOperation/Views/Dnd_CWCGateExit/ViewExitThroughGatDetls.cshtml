@model CwcExim.Areas.GateOperation.Models.Dnd_ExitThroughGateDetails


@Html.AntiForgeryToken()
@Html.HiddenFor(m => m.ExitIdDtls)
@Html.HiddenFor(m => m.ExitIdHeader)

<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5">
            <input type="hidden" id="ViewFlag" name="ViewFlag" value="@ViewBag.ViewFlag" />
            <label>Container/BL/SB No:</label>
        </div>
        <div class="col-md-2-5">
            @Html.TextBoxFor(m => m.ContainerNo, "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
            @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
        </div>
        <div class="col-md-1" style="padding-right:0px;">
            @Html.Label("Size :")
        </div>
        <div class="col-md-2">
            @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                new SelectListItem { Text="45",Value="45"},
                                }, "----Select----", new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
        </div>
        <div class="col-md-1" style="padding-right:0px;">
            <label>Reefer:</label>
        </div>
        <div class="col-md-2">
            <div class="boolean-container">
                @Html.CheckBoxFor(m => m.Reefer)
                <label for="txtReefer"><i class="square"></i></label>
                @Html.ValidationMessageFor(m => m.Reefer, "", new { @class = "Error_Msg" })
            </div>


            @*<div class="boolean-container">
                    @Html.CheckBox("Reefer", new { @class = "form-control input-sm" })
                </div>*@
        </div>
    </div>    
</div>
<div id="divReefer" class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5 col_cus_2 padding_rt">
            <label>Plug In Date & Time :</label>
        </div>
        <div class="col-md-2-5 Date_Img ">
            @Html.TextBox("PlugInDateTime", "", new { @readonly = true, Value = "" })
        </div>
        <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
            <label>Plug Out Date & Time :</label>
        </div>
        <div class="col-md-2 col_cus_2_5 Date_Img ">
            @Html.TextBox("PlugOutDateTime", "", new { @readonly = true, Value = "" })
        </div>
    </div>
</div>
<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5" style="padding-right:0px;">
            @Html.Label("ShippingLine:")
        </div>
        <div class="col-md-10-5">
            @Html.TextBoxFor(m => m.ShippingLine, "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
            @Html.ValidationMessageFor(m => m.ShippingLine, "", new { @class = "Error_Msg" })
        </div>
    </div>
</div>
<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5" style="padding-right:0px;">
            @Html.Label("CHA Name :")
        </div>
        <div class="col-md-10-5">
            @Html.TextBoxFor(m => m.CHAName, "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
            @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
        </div>
    </div>
</div>
<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5">
            @Html.Label("Cargo Description:")
        </div>
        <div class="col-md-10-5">
            @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "1000" })
            @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
        </div>
    </div>
</div>

<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5">
            @Html.Label("Cargo Type:")
        </div>
        <div class="col-md-2-5">
            @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                               {
                                new SelectListItem { Text="HAZ",Value="1"},
                                new SelectListItem { Text="NON-HAZ",Value="2"},

                                }, "----Select----", new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
        </div>
        <div class="col-md-1-5 col-md-offset-4" style="padding-right:0px;">
            @Html.Label("Vehicle No:")
        </div>
        <div class="col-md-2-5">
            @*<input type="text" id="txtVehicleNo" name="txtVehicleNo" />*@
            @Html.TextBoxFor(m => m.VehicleNo, "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyInteger(event)", maxlength = "10" })
            @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
        </div>
    </div>
</div>

<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5">
            @Html.Label("No of Packages:")
        </div>
        <div class="col-md-2-5">
            @*@Html.TextBox("txtNoOfPackages", null,new { @class = "form-control intpu-sm"})*@
            @Html.TextBoxFor(m => m.NoOfPackages, "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyInteger(event)", maxlength = "10" })
            @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
        </div>
        <div class="col-md-1-5 col-md-offset-4 padding_rt">
            <label>Gross Weight:</label>
        </div>
        <div class="col-md-2-5">
            @Html.TextBoxFor(m => m.GrossWeight, "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyDecimal(event)", maxlength = "12" })
            @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
        </div>
    </div>
</div>
<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5">
            @Html.Label("Depositor Name:")
        </div>
        <div class="col-md-10-5">
            @Html.TextBoxFor(m => m.DepositorName, "", new { @class = "form-control intpu-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30" })
            @Html.ValidationMessageFor(m => m.DepositorName, "", new { @class = "Error_Msg" })
        </div>
    </div>
</div>
<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5 col_cus_2">
            @Html.Label("Driver Name:")
        </div>
        <div class="col-md-5 col_cus_6">
            @* @Html.TextBox("Driver","", new { @readonly = "true" })*@
            @Html.TextBoxFor(m => m.Driver, "", new { @readonly = "true" })
        </div>

        <div class="col-md-1-5 col_cus_2 col-md-offset-1-5">
            <label>Contact No:</label>
        </div>
        <div class="col-md-2 col_cus_2">
            @Html.TextBoxFor(m => m.Contact, "", new { @readonly = "true" })
        </div>
    </div>
</div>




<div class="row Form_Space_top">
    <div class="form-group Form_Input">
        <div class="col-md-1-5">
            @Html.Label("Remarks:")
        </div>
        <div class="col-md-10-5">
            @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "1000" })
            @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
        </div>
    </div>
</div>

<div class="logSuccMsg Form_Space_bottom Form_Space_top" id="DivMsg" style="background-color:transparent"></div>




@Scripts.Render("~/bundles/jqueryval")
<script>
            $(function () {
                $('input[type="text"],textarea').prop('readonly', true);
                $('input[type="checkbox"]').prop('disabled', true);
            });

            function LoadGateEntryView() {
                $('#DivBody').load('/GateOperation/Dnd_CWCGateExit/CreateEntryThroughGate');
            }
</script>



