@model CwcExim.Areas.GateOperation.Models.DSREntryThroughGate

@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateEntryOnSuccess";
    options.OnFailure = "GateEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<style>
    #tbleSline.dataTable tbody > tr > td {
        cursor: pointer;
    }

    #tbleCha.dataTable tbody > tr > td {
        cursor: pointer;
    }

    .slimScrollDiv {
        height: 300px;
    }

    .table.tblhd {
        border-bottom: 0;
    }
    .hideblock{
        display:none;
    }
</style>
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script type="text/javascript">
    $(function(){
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });
    $(function(){
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });

    var TimeInSeconds;
    $(document).ready(function () {
        //GetEntryThroughGateList();
        TimeInSeconds = 3000;

        //TimeInSeconds = 3000;

        var time = new Date();
        time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
        document.getElementById("SysTime").value = time;
        var t = setTimeout(StartSysTime, 500);
       
    });

    function StartSysTime() {
        var time = new Date();
        time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
        document.getElementById("SysTime").value = time;
        var t = setTimeout(StartSysTime, 500);
    }

    function GetEntryThroughGateList() {
        debugger;
       
        $('#DivGateEntryList').load( '/GateOperation/DSR_GateOperation/EntryThroughGateList');
    }


</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
        

                @using (Ajax.BeginForm("AddEditEntryThroughGate", "DSR_GateOperation", options))
                {
                    @Html.AntiForgeryToken()




                    @*@Html.HiddenFor(m=>m.JsonContainer)*@
                    @*<input type="hidden" id="JsonContainer" value="@ViewBag.JSONResult" name="JsonContainer" />*@
                    @*<input type="hidden" id="lstGateEntryExport" name="lstGateEntryExport" value="@ViewBag.lstReferenceNumberList" />*@

                if (ViewBag.lstReferenceNumberList != null)
                {
                    <input type="hidden" id="lstReferenceNumberList" name="lstReferenceNumberList" value="@ViewBag.lstReferenceNumberList" />
                }
                else
                {
                    <input type="hidden" id="lstReferenceNumberList" name="lstReferenceNumberList" value="" />
                }

                if (ViewBag.lstShippingLine != null)
                {


                    <input type="hidden" id="lstShippingLine" name="lstShippingLine" value="@ViewBag.lstShippingLine" />
                    }
                    else
                    {
                        <input type="hidden" id="lstShippingLine" name="lstShippingLine" value="" />
                    }


                    if (ViewBag.lstCHA != null)
                    {
                     <input type="hidden" id="CHAList" name="CHAList" value="@ViewBag.lstCHA" />
                    }
                    else
                    {
                        <input type="hidden" id="CHAList" name="CHAList" value="" />
                    }

                    if (ViewBag.RightsList != null)
                    {
                <input type="hidden" id="hdnRights" value="@ViewBag.RightsList" />
                }
                else
                {
                <input type="hidden" id="hdnRights" value="" />
                }

                 //  @Html.HiddenFor(m=>m.OperationType)
                    @Html.HiddenFor(m=>m.EntryId)

                    <div class="time_sec" onload="startTime()"><span id="Time"></span></div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Entry Through Gate Export By Road</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Transport Mode:</label>
                            </div>
                            @Html.HiddenFor(m => m.TransportMode)

                            @{
                                if (Model.TransportMode == 1)
                                {

                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("Mode", "By Road", new { @id = "Road", @checked = true, @onclick = "TransPortModeFunc();" })
                                            <label for="Road"><i class="circle"></i><span>By Road</span></label>
                                        </div>
                                    </div>
                                }
                                else
                                {

                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("Mode", "By Road", new { @id = "Road", @checked = true, @onclick = "TransPortModeFunc();" })
                                            <label for="Road"><i class="circle"></i><span>By Road</span></label>
                                        </div>
                                    </div>
                                }

                            }
                        </div>
                    </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Operation Type:</label>
                        </div>
                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("OperationType", "Import", new { @class = "", @id = "Import", @onclick = "GoToImport();" })
                                <label for="Import"><i class="circle"></i><span>Import</span></label>
                            </div>
                        </div>
                        <div class="col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("OperationType", "Export", new { @class = "", @id = "Export", @checked = true, @onclick = "GoToExport();" })
                                <label for="Export"><i class="circle"></i><span>Export</span></label>
                            </div>
                        </div>
                       
                        <div class="col-md-4">
                            <div class="boolean-container">
                                @Html.RadioButton("OperationType", "LoadedContainer", new { @class = "", @id = "LoadedContainer", @onclick = "GoToLoaadedContainer();" })
                                <label for="LoadedContainer"><i class="circle"></i><span>Export Loaded Container</span></label>
                            </div>
                        </div>
                    </div>
                </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container Type:</label>
                            </div>
                            <div class="col-md-1-5">
                                <div class="boolean-container">
                                    @Html.RadioButton("ContainerType", "Empty", new { @class = "", @id = "Empty", @onclick = "GetRadioVal();", @checked = true })
                                    <label for="Empty"><i class="circle"></i><span>Empty</span></label>
                                </div>
                            </div>
                           
                            
                        </div>
                    </div>
                  

                  

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.Label("CFS Code", new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-2 col_cus_offset_0_5 padding_rt">
                                <label>System Date & Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div id="DivSysTime">
                                    <input type="text" id="SysTime" name="SysTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.GateInNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm",@readonly = "true" })
                                @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-2" style="padding-right:0px;">
                                <label>Entry Date & Time:</label>
                            </div>
                            <div class="col-md-2 Date_Img">
                               @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @onkeyup = "checks()", @onblur = "checkdat()", @maxlength = 10 })
                              @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            <div class="field-validation-error" id="Msges" style="background-color:transparent"></div>
                            </div>
                            <div class="col-md-2">
                                <div class="input-group clockpicker" data-placement="left" data-align="top">
                                    <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                    <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                    <span class="input-group-addon" style="padding:2px 10px;">
                                        <span class="glyphicon glyphicon-time"></span>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.ReferenceNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.ReferenceNoId, new { @value = "0" })
                                @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ReferenceModal"></i></span>
                                @Html.ValidationMessageFor(m => m.ReferenceNo)
                            </div>
                            <div class="col-md-1-5 col-md-offset-4">
                                @Html.LabelFor(m => m.ReferenceDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 Date_Img">
                                @Html.TextBoxFor(m => m.ReferenceDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ReferenceDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                                @Html.LabelFor(m => m.ShippingLine, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5">
                                
                                @Html.HiddenFor(m => m.ShippingLineId)
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ShippingLineModal');" })
                                <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingLineModal"></i></span>
                                @Html.ValidationMessageFor(m => m.ShippingLine)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                @Html.HiddenFor(m => m.CHAId, new { @value = "0" })
                                <span class="search" id="CHASearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>
                                @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                                <label>Container No:</label>
                            </div>
                            <div class="col-md-2-5" id="ContainerNo1Div">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ContainerNo1, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1" style="padding-right:0px;">
                                @Html.LabelFor(m => m.Size, new { @class = "InputLabel",@required="false" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="----Select----",Value="",Selected = true },
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                }, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1">
                                <label style="display:none">Reefer:</label>
                            </div>
                            <div class="col-md-1">
                                <div class="boolean-container" style="display:none">
                                    @Html.CheckBoxFor(m => m.Reefer)
                                    <label for="Reefer"><i class="square"></i></label>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container Load Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="----Select----",Value=""},
                                       new SelectListItem { Text="FCL",Value="FCL"},
                                       new SelectListItem { Text="LCL",Value="LCL" },
                                       new SelectListItem { Text="DD",Value="DD" }
                                   }, new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.ContainerLoadType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-4 col_cus_offset_3 padding_rt">
                                <label>Transport From:</label>
                            </div>
                            <div class="col-md-2-5">
                               
                                @Html.DropDownListFor(m => m.TransportFrom, (List<SelectListItem>)ViewBag.Lstpickup, new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.TransportFrom, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                                <label>Custom Seal No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4" style="padding-right:0px;">
                               <label>Shipping Line No:</label>
                            </div>
                            <div class="col-md-2-5">                                
                                @Html.TextBoxFor(m => m.ShippingLineSealNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ShippingLineSealNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.VehicleNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5  padding_rt hideblock">
                                <label>Challan No:</label>
                            </div>
                            <div class="col-md-2-5 hideblock">
                                @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-cotrol input-sm" })
                                @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                   
                   <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.CargoType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"}
                                }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                               <label>No of Packages:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5">
                                @Html.LabelFor(m => m.GrossWeight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                                <label>Tare Weight:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.TareWeight, new { @class = "form-control intpu-sm" })
                                @Html.ValidationMessageFor(m => m.TareWeight, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                                <label>Depositor Name:</label>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextBoxFor(m => m.DepositorName, new { @class = "form-control intpu-sm", @maxlength = "100" })
                                @Html.ValidationMessageFor(m => m.DepositorName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top hideblock">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="padding-right:0px;">
                              <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-12 SignUp_space_bottom">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="submit" onclick="ValidedField();" value="Save" class="btn log_Btn_sm" id="btnSave"/>
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Reset" id="btnReset" class="btn log_Btn_sm" onclick="ResetGateEntry()" />
                            </div>
                        </div>
                        <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                            <div id="DivEntryThroughGateMsg"></div>
                        </div>
                    </div>

                    <div id="ContainerModal" class="modal fade mTabindex" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">Container</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="Containerbox" type="text" tabindex="401" />
                                    <ul class="navList" id="lstContainer">
                                        @{
                                            if (@ViewBag.Lstcontainer != null)
                                            {
                                                var tabvalue = 401;
                                                var tab = 0;
                                                var u = "_";
                                                foreach (var item in @ViewBag.Lstcontainer)
                                                {
                                                <li tabindex="@tabvalue@u@tab" id="@item.ContainerName">@item.ContainerName</li>
                                                    }
                                                }
                                            }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div id="ReferenceModal" class="modal fade mTabindex" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">Reference Number</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="ReferenceNobox" type="text" tabindex="401" />
                                    <ul class="navList" id="lstReferenceNo">
                                        
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="modal fade mTabindex" id="ShippingLineModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" onclick="CloseEximTrade()"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List of Shipping Line Name</h4>
                                </div>
                                <div class="modal-body popup_body" style="position:relative;">
                                    <input placeholder="Search By Shipping Line Name Or Party Code" id="ShpngLinebox" type="text" tabindex="401" />
                                    <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchByPartyCode()"></i></span>
                                    <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                                        <thead>
                                            <tr>
                                                <th colspan="8" width="80%">Shipping Line Name</th>
                                                <th colspan="4" width="20%">Party Code</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <div id="slim_scroll">
                                        <table class="table dataTable table-bordered table-striped slim_tble" id="tbleSline">
                                            <tbody>
                                                @{
                                                    if (ViewBag.lstShippingLine != null)
                                                    {
                                                        var tabvalue = 401;
                                                        var tab = 0;
                                                        var u = "_";
                                                        foreach (var item in ViewBag.lstShippingLine)
                                                        {
                                                            <tr tabindex="@tabvalue@u@tab" onkeypress="SelectShippingLine(@item.ShippingLineId,'@item.ShippingLineName','@item.PartyCode')" onclick="SelectShippingLine(@item.ShippingLineId,'@item.ShippingLineName','@item.PartyCode')">
                                                                <td colspan="8" width="80%" class="txt_wrp">@item.ShippingLineName</td>
                                                                <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                                            </tr>
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-6">
                                            @if (ViewBag.State != null && Convert.ToBoolean(ViewBag.State) == true)
                                            {
                                                <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreEximTrader()" class="btn log_Btn_sm" id="btnLoadMore">Load More Data</button>
                                            }
                                            else
                                            {
                                                <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreEximTrader()" class="btn log_Btn_sm" id="btnLoadMore" disabled>Load More Data</button>
                                            }
                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn log_Btn_sm" onclick="CloseEximTrade()">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade mTabindex" id="CHAModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" onclick="CloseCHA()"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List of CHA Name</h4>
                                </div>
                                <div class="modal-body popup_body" style="position:relative;">
                                    <input placeholder="Search By CHA Name Or Party Code" id="Chabox" type="text" />
                                    <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchChaByPartyCode()"></i></span>
                                    <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                                        <thead>
                                            <tr>
                                                <th colspan="8" width="80%">CHA Name</th>
                                                <th colspan="4" width="20%">Party Code</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <div id="slim_scroll_1">
                                        <table class="table dataTable table-bordered table-striped slim_tble" id="tbleCha">
                                            @{
                                                if (ViewBag.lstCHA != null)
                                                {
                                                    foreach (var item in ViewBag.lstCHA)
                                                    {
                                                        var tabvalue = 401;
                                                        var tab = 0;
                                                        var u = "_";
                                                        <tr tabindex="@tabvalue@u@tab" onkeypress="SelectCHA(@item.CHAId,'@item.CHAName')" onclick="SelectCHA(@item.CHAId,'@item.CHAName')">
                                                            <td colspan="8" width="80%" class="txt_wrp">@item.CHAName</td>
                                                            <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        </table>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-6">
                                            @if (ViewBag.CHAState != null && Convert.ToBoolean(ViewBag.CHAState) == true)
                                            {
                                                <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCHA()" class="btn log_Btn_sm" id="btnLoadCHA">Load More Data</button>
                                            }
                                            else
                                            {
                                                <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCHA()" class="btn log_Btn_sm" id="btnLoadCHA" disabled>Load More Data</button>
                                            }
                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn log_Btn_sm" onclick="CloseCHA()">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top Form_Space_bottom">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 SignUp_space_bottom">
                                <input type="button" id="BtnGateEntryListLoad" value="Show List" class="btn log_Btn_sm" onclick="GetGateEntryList()" />
                            </div>
                            <div class="col-md-offset-7 col-md-3">
                                @Html.TextBox("ContainerNoSearch", "", new { placeholder = "Search By Container / CBT" })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="SearchByContainerNo()"></i></span>
                            </div>
                        </div>
                    </div>
                                                }
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivGateEntryList"></div>
                    </div>
                </div>
            </div>
        </div>       
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $('#EntryDateTime').focus();
    $('#btnSave').on('click', function () {

        var Radio = $('input[name=ContainerType]:checked').val();
        if (Radio == 'EmptyVehicle' || Radio == 'LoadedVehicle') {
           
            $("#ShippingLine").rules("remove", "required");
        }
        else {
           
            $("#ShippingLine").rules("add", "required");
        }
        if (Radio == 'EmptyVehicle') {
            $("#CargoType").rules("remove", "required");
            $("#CargoType").rules("remove", "range");
        }
        else {
            $("#CargoType").rules("add", "required");
            $("#CargoType").rules("add", { "range": [1, 2147483647] });
        }

        if ($('#IsCBT').is(':checked') && $('#TPNo').val() == '') {
            $('#errTP').html('<span>Enter TP No.</span>');
            return false;
        }
        else {
            $('#errTP').html('<span></span>');
            return true;
        }
    });

    function LoadGateEntryView() {
        $('#DivBody').load('/GateOperation/DSR_GateOperation/CreateEntryThroughGateExport');
    }

    function ValidedField() {

        $('#TransportMode').val(2);
    }
    $('#Containerbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstContainer > li').show();
        else {
            $('#lstContainer > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#ReferenceNobox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstReferenceNo > li').show();
        else {
            $('#lstReferenceNo > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });


    $('#CHAbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCHA > li').show();
        else {
            $('#lstCHA > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    var ContainerName = "";

    $('#lstContainer > li').on("click", function () {
        $('#ContainerNo').val($(this).text());
        $('#ContainerId').val($(this).attr('id'));
        $("#ContainerModal").modal("hide");
        ContainerName = $('#ContainerNo').val();       
       
        if (ContainerName != null && ContainerName !="")
        {
            //alert(ContainerName);
            AutoPopulate(ContainerName);
        }
        
        
    });


    function AutoPopulate(ContainerName)
    {
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/GetFieldsForContainer',
            type: 'GET',
            async: false,
           datatype:JSON,
            data: { ContainerName: ContainerName },        
            success: function (data) {
                debugger;             
                if (data != undefined || data != null) {
                    debugger;
                    //alert(data);

                    populateJsondata(data);
                    //$('.modal-backdrop').removeClass();
                    //
                    //$('#DivBody').html('');
                   // $('#DivBody').html(data);
                   
                }
                else {
                    alert("fail");

                }
                
            }
        });

    }

    function TransPortModeFunc() {
        var Radio = $('input[name=Mode]:checked').val();
            $('#TransportMode').val(2);
       
    }
    function populateJsondata(data)
    {
        $("#EntryDateTime").val(data.EntryDateTime);
        $("#ReferenceDate").val(data.ReferenceDate);
        //$("#EntryDateTime").datepicker("option", "minDate", data.ReferenceDate);

        $("#time").val(data.EntryTime);
        $("#ReferenceNo").val(data.ReferenceNo);

        $("#ShippingLine").val(data.ShippingLine);
        $("#CHAName").val(data.CHAName);
        $("#ContainerNo").val(data.ContainerNo);
        $("#Size").val(data.Size);
        $("#CargoType").val(data.CargoType);
      
    }
   
    function GetRadioVal()
    {
        debugger;
        var Radio = $('input[name=ContainerType]:checked').val();
        $("#ContainerType").val(Radio);
        // alert(Radio);
        $("#ContainerNo1").val('');
       // $("#ContainerNo1").prop('readonly', true);
        if (Radio == "Loaded") {
            //$("#LoadedDiv").show();
            //$("#EmptyDiv").hide();
            var Status = true;
            // alert(($("#txtContainerNo").val()));
            if ($('#EntryDateTime').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            if ($('#ReferenceDate').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            

        }
        else if (Radio == "EmptyVehicle") {

        }
        else {
          
            $("#ContainerNo1").val('');
            $("#ContainerNo1").removeAttr("readonly");
        }

    }
    function ResetGateEntry() {
        var EditTime= $('#EditTime').val();
       // var EditTime= $('#EditTime').val();
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
        $('#errTP').html('');
        var fullDate = new Date();
        var twoDigitMonth = ((fullDate.getMonth().length + 1) === 1) ? (fullDate.getMonth() + 1) : '0' + (fullDate.getMonth() + 1);
        var currentDate = fullDate.getDate() + "/" + twoDigitMonth + "/" + fullDate.getFullYear();
        $('#SystemDateTime').val(currentDate);
        $('#EntryDateTime').val(currentDate);
        
        //$('#time').val(((new Date().toLocaleTimeString('en-US', { hour: 'numeric', hour12: true, minute: 'numeric' })).replace(/\s+/g,"")).insertAt(0, "0"));
        //alert((new Date().toLocaleTimeString('en-US', { hour: 'numeric', hour12: true, minute: 'numeric' })).replace(/\s+/g, ''));
        //alert( $('#time').val());
        //time = time.toLocaleString('en-US', {hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });

        var date = new Date();
        var hours = date.getHours() > 12 ? date.getHours() - 12 : date.getHours();
        var am_pm = date.getHours() >= 12 ? "PM" : "AM";
        hours = hours < 10 ? "0" + hours : hours;
        var minutes = date.getMinutes() < 10 ? "0" + date.getMinutes() : date.getMinutes();
        var seconds = date.getSeconds() < 10 ? "0" + date.getSeconds() : date.getSeconds();
        time = hours + ":" + minutes+ am_pm;
        $('#time').val(time);
        $('#EditTime').val();
        //alert(time);
       // var lblTime = document.getElementById("lblTime");
        //lblTime.innerHTML = time;
    }
    //function GateEntryOnSuccess(data) { }
   // function GateEntryOnFailure() { }


    function GateEntryOnSuccess(data) {
       
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            ResetGateEntry();
            if ($('#DivEntryThroughGateMsg').hasClass('logErrMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
            setTimeout(LoadGateEntryView, TimeInSeconds);
            GetEntryThroughGateList();
        }
        //else if (data.Status == 2) {
        //    $('[data-valmsg-for="CountryName"]').html('<span>' + data.Message + '</span>');
        //}
        //else if (data.Status == 3) {
        //    $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
        //}
        else {
            if ($('#DivEntryThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
        }
    }
    function GateEntryOnFailure() {
        alert("Error");
    }

    $("#EntryDateTime").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $("#ReferenceDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });
    $(document).ready(function () {

        var editTime = $("#EditTime").val();
        //alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }

        $("#Size").rules("remove", "required");
        $("#ContainerLoadType").rules("remove", "required");
        $("#TransportFrom").rules("remove", "required");
        $("#CargoType").rules("remove", "required");
        //alert($('input[name=OperationType]:checked').val());
    });

    //function GoToExport() {
    //    $('#DivBody').load('/GateOperation/kdl_CWCGateOperation/CreateEntryThroughGateExport');
    //}

</script>

<script>
    GenerateLstReferenceNumber();
    function GenerateLstReferenceNumber() {
        debugger;
        
        var html = '';
        if ($('#lstReferenceNumberList').val() != '') {
            var parties = JSON.parse($('#lstReferenceNumberList').val());
            var tab=401;
            $.each(parties, function (i, item) {
                html += '<li tabindex='+ tab +'_'+ i +' id="' + item.CCINId + '" " onkeypress="GetPayByDetails(this)" onclick="GetPayByDetails(this)">' + item.CCINNo + '</li>';
            });
        }
        $('#lstReferenceNo').html(html);

        var html1 = '';
        if ($('#lstShippingLine').val() != '') {
            var shippingLine = JSON.parse($('#lstShippingLine').val()); //JSON.parse('#lstShippingLine').val();
            var tab=401;
            $.each(shippingLine, function (i, item) {
                html1 += '<li tabindex='+ tab +'_'+ i +' id="' + item.ShippingLineId + '" " onkeypress="GetShippingLine(this)" onclick="GetShippingLine(this)">' + item.ShippingLine + '</li>';
            });
        }
        $('#lstShipping').html(html1);
    }
    GenerateLstCHA();
    function GenerateLstCHA() {
        debugger;
        
        var html = '';
        if ($('#CHAList').val() != '') {
            var CHA = JSON.parse($('#CHAList').val());
            var tab=401;
            $.each(CHA, function (i, item) {
                html += '<li tabindex='+ tab +'_'+ i +' id="' + item.CHAId + '" " onkeypress="GetCHA(this)" onclick="GetCHA(this)">' + item.CHAName + '</li>';
            });
            $('#lstCHA').html(html);
        }
    }

    $('#ShippingLinebox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstShipping > li').show();
        else {
            $('#lstShipping > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    function GetShippingLine(elem) {

        $('#ShippingLine').val($(elem).text());
        $('#ShippingLineId').val($(elem).attr('id'));
        $("#ShippingLineModal").modal("hide");
    }

    function GetCHA(elem)
    {
        debugger;
        $('#CHAName').val($(elem).text());
        $('#CHAId').val($(elem).attr('id'));
        $("#CHAModal").modal("hide");
    }

    function SelectShippingLine(ShippingLineId, ShippingLineName, PartyCode) {
        debugger;
        $('#ShippingLine').val(ShippingLineName);
        $('#ShippingLineId').val(ShippingLineId);
        $('#ShippingLineSealNo').val(PartyCode);
        $("#ShippingLineModal").modal("hide");
        $('#ShpngLinebox').val('');
        LoadEximTrader();
        $('#ContainerNo1').focus();
    }
    var Page = 0;

    $('#ShpngLinebox').keyup(function(){
        SearchByPartyCode();
    });

    function SearchByPartyCode() {
        if ($('#ShpngLinebox').val() != '') {
            $.ajax({
                url: '/GateOperation/DSR_GateOperation/SearchByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#ShpngLinebox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        var tab=401;
                        $.each(data.Data.lstShippingLine, function (item, elem) {
                            html += '<tr tabindex='+ tab +'_'+ item +' onkeypress="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)" onclick="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ShippingLineName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tbleSline tbody').html('');
                        $('#tbleSline tbody').html(html);
                        $('#btnLoadMore').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleSline tbody').html('');
                        Page = -1;
                        $('#btnLoadMore').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadEximTrader();
    }


    function LoadMoreEximTrader() {
        debugger;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadEximtradeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstShippingLine, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item +' onkeypress="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)" onclick="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ShippingLineName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tbleSline tbody').html(html);
                    else
                        $('#tbleSline tbody').append(html);
                    Page++;

                    if (data.Data.State == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function LoadEximTrader() {
        Page=0;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadEximtradeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page},
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstShippingLine, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item +' onkeypress="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)" onclick="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ShippingLineName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    $('#tbleSline tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function CloseEximTrade(){
        $('#ShpngLinebox').val('');
        $("#ShippingLineModal").modal("hide");
        LoadEximTrader();
        $('#ShippingLine').focus();
    }

    function LoadMoreCHA() {
        debugger;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadCHAList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstCHA, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item +' onkeypress="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)" onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tbleCha tbody').html(html);
                    else
                        $('#tbleCha tbody').append(html);
                    Page++;

                    debugger;
                    if (data.Data.State == true)
                        $('#btnLoadCHA').prop('disabled', false);
                    else $('#btnLoadCHA').prop('disabled', true);
                }
            }
        });
    }

    function LoadCHA() {
        debugger;
        Page = 0;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadCHAList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstCHA, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item +' onkeypress="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)" onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });

                    $('#tbleCha tbody').html(html);
                 
                    if (data.Data.State == true)
                        $('#btnLoadCHA').prop('disabled', false);
                    else $('#btnLoadCHA').prop('disabled', true);
                }
            }
        });
    }

    function SelectCHA(CHAId, CHAName) {
        debugger;
        $('#CHAName').val(CHAName);
        $('#CHAId').val(CHAId);
        $("#CHAModal").modal("hide");
        $('#Chabox').val('');
        LoadCHA();
    }

    function SearchChaByPartyCode() {
        if ($('#Chabox').val() != '') {
            $.ajax({
                url: '/GateOperation/DSR_GateOperation/CHASearchByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#Chabox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        var tab=401;
                        $.each(data.Data.lstCHA, function (item, elem) {
                            html += '<tr tabindex='+ tab + '_' + item +' onkeypress="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)" onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tbleCha tbody').html('');
                        $('#tbleCha tbody').html(html);
                        $('#btnLoadCHA').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleCha tbody').html('');
                        Page = -1;
                        $('#btnLoadCHA').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadCHA();
    }

    function CloseCHA() {
        $('#Chabox').val('');
        $("#CHAModal").modal("hide");
        LoadCHA();
    }

    function GetPayByDetails(elem) {

        $('#ReferenceNo').val($(elem).text());
        $('#ReferenceNoId').val($(elem).attr('id'));
        var selectedReference = $('#ReferenceNoId').val();
        $("#ReferenceModal").modal("hide");
        debugger;
        var parties = JSON.parse($('#lstReferenceNumberList').val());
        var payby = $.grep(parties, function (item) { return item.CCINId == selectedReference; })[0];

        var shippingLine = JSON.parse($('#lstShippingLine').val());
        var CHA = JSON.parse($('#CHAList').val());
        var ShippingLines = $.grep(shippingLine, function (item) { return item.ShippingLineId == payby.ShippingLineId; })[0];
        var CHAName=$.grep(CHA, function (item) { return item.CHAId == payby.CHAId; })[0];
        
       // debugger;
        $('#ReferenceDate').val(payby.CCINDate);
        //$('#ContainerSize').val(payby.ContainerSize);
        $('#GrossWeight').val(payby.Weight);
        $('#NoOfPackages').val(payby.NoOfUnits);
        $('#ShippingLine').val(ShippingLines.ShippingLine);
        $('#ShippingLineId').val(ShippingLines.ShippingLineId);
        $('#CHAName').val(CHAName.CHAName);
        $('#CHAId').val(payby.CHAId);
        $('#CargoType').val(payby.CargoType);

        $('#ShippingLine').val(payby.ShippingLine);
        $('#ShippingLineId').val(payby.ShippingLineId);

    }

    
    function GoToImport() {
        $('#DivBody').load('/GateOperation/DSR_GateOperation/CreateEntryThroughGate');
    }
    function GoToExport() {
        $('#DivBody').load('/GateOperation/DSR_GateOperation/CreateEntryThroughGateExport');
    }
    function GoToBond() {
        $('#DivBody').load('/GateOperation/DSR_GateOperation/CreateEntryThroughGateBond');
    }

    function GoToLoaadedContainer() {
        $('#DivBody').load('/GateOperation/DSR_GateOperation/CreateEntryThroughGateLoadContainer');
    }
    function GetGateEntryList() {
        debugger;
       //$('#tblEntryDet').html('');
        $('#DivGateEntryList').load( '/GateOperation/DSR_GateOperation/EntryThroughGateList?OperationType=Export'+'&ContainerType=' + "Empty");
    }

    function SearchByContainerNo() {
        //debugger;
        $('#tblEntryDet').hide();
        $('#DivGateEntryList').load('/GateOperation/DSR_GateOperation/EntryThroughGateSearchList?ContainerNo=' + $('#ContainerNoSearch').val().trimLeft()+'&OperationType=' + "Export"+'&ContainerType=' + "Empty");
    }

    $('.mTabindex').keydown(function (e) {
        //debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });


    $('#ShippingLineModal').on('shown.bs.modal', function () {
        $('#ShpngLinebox').focus();
    });
    

    function PopupActivate(Id) {
        debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {

            $('#' + Id).modal('show');

            
            if (Id == "ShippingLineModal") {
              
                $('#ShpngLinebox').focus();
            }
           
        }
    }

    function checks() {
        debugger;

        $('#EntryDateTime').val($('#EntryDateTime').val().replace(/^(\d\d)(\d)$/g, '$1/$2').replace(/^(\d\d\/\d\d)(\d+)$/g, '$1/$2').replace(/[^\d\/]/g, ''));

    }
    function checkdat() {
        debugger;
        var today = new Date();          
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();
        
        if (dd < 10) {
            dd = '0' + dd;
        }
        if (mm < 10) {
            mm = '0' + mm;
        }
        
        var date = dd + '/' + mm + '/' + yyyy;       
        var dateTime = date ;
        if ($('#EntryDateTime').val() != '') {
            var result = moment($('#EntryDateTime').val(), "DD/MM/YYYY", true).isValid();
            if (!result) {
                $('#Msges').html('Incorrect Date');
                setTimeout(function () { $('#Msges').html(''); }, 3000);
                $('#EntryDateTime').val(dateTime);
            }
        }

    }
</script>