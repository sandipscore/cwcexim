@model CwcExim.Areas.GateOperation.Models.DSREntryThroughGate

@{
    AjaxOptions options = new AjaxOptions();
    // options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateEntryOnSuccess";
    options.OnFailure = "GateEntryOnFailure";
    //options.OnComplete = "GetRadioVal";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<style>
    #tbleSline.dataTable tbody > tr > td {
        cursor: pointer;
    }

    #tbleCha.dataTable tbody > tr > td {
        cursor: pointer;
    }

    .slimScrollDiv {
        height: 300px;
    }

    .table.tblhd {
        border-bottom: 0;
    }
    .hideblock{
        display:none;
    }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
                @using (Ajax.BeginForm("AddEditEntryThroughGate", "DSR_GateOperation", options))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.EntryId)
                    @Html.HiddenFor(m => m.BranchId)
                    @Html.HiddenFor(m => m.OperationType)
                    @Html.HiddenFor(x => x.TransportMode)
                    <div class="time_sec" onload="startTime()"><span id="Time"></span></div>
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Entry Through Gate</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Transport Mode:</label>
                            </div>
                            
                                @if(Model.TransportMode == 1)
                                {

                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("Mode", "By Train", new { @id = "Train", @checked = true, @disabled = true })
                                            <label for="Train"><i class="circle"></i><span>By Train</span></label>
                                        </div>
                                    </div>
                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("Mode", "By Road", new { @id = "Road", @disabled = true })
                                            <label for="Road"><i class="circle"></i><span>By Road</span></label>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("Mode", "By Train", new { @id = "Train", @disabled = true })
                                            <label for="Train"><i class="circle"></i><span>By Train</span></label>
                                        </div>
                                    </div>

                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("Mode", "By Road", new { @id = "Road", @checked = true, @disabled = true })
                                            <label for="Road"><i class="circle"></i><span>By Road</span></label>
                                        </div>
                                    </div>
                                    }

                               
                            @*<div class="col-md-1-5">
                                    <div class="boolean-container">
                                        @Html.RadioButton("Mode", "By Train", new { @id = "Train", @disabled = true })
                                        <label for="Train"><i class="circle"></i><span>By Train</span></label>
                                    </div>
                                </div>
                                <div class="col-md-1-5">
                                    <div class="boolean-container">
                                        @Html.RadioButton("Mode", "By Road", new { @id = "Road", @disabled = true })
                                        <label for="Road"><i class="circle"></i><span>By Road</span></label>
                                    </div>
                                </div>*@
                        </div>
                    </div>
                    @*<div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.ContainerNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>*@
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Operation Type :</label>
                                        </div>
                                        <div class="col-md-1-5">
                                            <div class="boolean-container">
                                                @Html.RadioButton("OperationType", "Import", new { @class = "", @id = "Import", @checked = true })
                                                <label for="Import"><i class="circle"></i><span>Import</span></label>
                                            </div>
                                        </div>
                                        <div class="col-md-1-5">
                                            <div class="boolean-container">
                                                @Html.RadioButton("OperationType", "Export", new { @class = "", @id = "Export" })
                                                <label for="Export"><i class="circle"></i><span>Export</span></label>
                                            </div>
                                        </div>
                                        @*<div class="col-md-1-5">
                                                <div class="boolean-container">
                                                    @Html.RadioButton("OperationType", "Bond", new { @class = "", @id = "Bond" })
                                                    <label for="Bond"><i class="circle"></i><span>Bond</span></label>
                                                </div>
                                            </div>*@

                                        <div class="col-md-5">
                                            <div class="boolean-container">
                                                @Html.RadioButton("OperationType", "LoadedContainer", new { @class = "", @id = "LoadedContainer" })
                                                <label for="LoadedContainer"><i class="circle"></i><span>Export Loaded Container</span></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2">
                                            <label>Container Type :</label>
                                        </div>
                                        <div class="col-md-1-5 hideblock">
                                            <div class="boolean-container">
                                                @Html.RadioButton("ContainerType", "Empty", new { @class = "", @id = "Empty", @onclick = "GetRadioVal();" })
                                                <label for="Empty"><i class="circle"></i><span>Empty</span></label>
                                            </div>
                                        </div>
                                        <div class="col-md-1-5">
                                            <div class="boolean-container">
                                                @Html.RadioButton("ContainerType", "Loaded", new { @class = "", @id = "Loaded", @onclick = "GetRadioVal();" })
                                                <label for="Loaded"><i class="circle"></i><span>Loaded</span></label>
                                            </div>
                                        </div>
                                        <div id="divFDEmpty" class="col-md-1-5">
                                            <div class="boolean-container">
                                                @Html.RadioButton("ContainerType", "FDEmpty", new { @class = "", @id = "FDEmpty", @onclick = "GoToFDEmpty();" })
                                                <label for="FDEmpty"><i class="circle"></i><span>Empty(FD)</span></label>
                                            </div>
                                        </div>

                                        <div class="col-md-offset-3-5 col-md-1-5 col_cus_3 padding_rt">
                                            <label>Container No:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            <span class="ReQSimbol">*</span>
                                            <div id="LoadedDiv">
                                                @Html.HiddenFor(m => m.ContainerId, new { @value = "0" })
                                                @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })                                               
                                                @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                                            </div>                                           
                                        </div>
                                    </div>
                                </div>


                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2">
                                            @Html.Label("CFS Code", new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm", @readonly = "true" })
                                            @Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                                            <label>System Date & Time:</label>
                                        </div>
                                        <div class="col-md-2 col_cus_2_5">
                                            @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                            @Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                                        </div>
                                        <div class="col-md-2 col_cus_2_5">
                                            <div id="DivSysTime">
                                                <input type="text" id="SysEditTime" name="SysEditTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Gate In No:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm", @readonly = "true" })
                                            @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_0_5 col-md-offset-2-5 padding_rt">
                                            <label>Entry Date & Time:</label>
                                        </div>
                                        <div class="col-md-2 col_cus_2_5">
                                            @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control input-sm", placeholder = "dd/mm/yyyy", @readonly = true })
                                            @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-2 col_cus_2_5">
                                            <div class="input-group clockpicker" data-placement="left" data-align="top">
                                                <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                                <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                               
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2">
                                            <label>Job Order No:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.ReferenceNo, new { @class = "form-control input-sm", @readonly = true })
                                            @Html.ValidationMessageFor(m => m.ReferenceNo, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                            <label>Job Order Date:</label>
                                        </div>
                                        <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                            @Html.TextBoxFor(m => m.ReferenceDate, new { @class = "form-control input-sm", placeholder = "dd/mm/yyyy", @readonly = true })
                                            @Html.ValidationMessageFor(m => m.ReferenceDate, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Shipping Line:</label>
                                        </div>
                                        <div class="col-md-10-5 col_cus_10">
                                            @Html.TextBoxFor(m => m.ShippingLine, new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ShippingLineModal');" })
                                            @Html.HiddenFor(m => m.ShippingLineId, new { @value = "0" })
                                            <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingLineModal"></i></span>
                                            @Html.ValidationMessageFor(m => m.ShippingLine, "", new { @class = "Error_Msg" })
                                            @Html.ValidationMessageFor(m => m.ShippingLineId, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                        </div>
                                        <div class="col-md-10-5 col_cus_10">
                                            @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('CHAModal');" })
                                            @Html.HiddenFor(m => m.CHAId, new { @value = "0" })
                                            <span class="search" id="CHASearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>
                                            @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Container No:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @if (Model.ContainerType == "Loaded")
                                            {
                                                @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm", @readonly = true })
                                                @Html.ValidationMessageFor(m => m.ContainerNo1, "", new { @class = "Error_Msg" })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(m => m.ContainerNo1, new { @class = "form-control input-sm" })
                                                @Html.ValidationMessageFor(m => m.ContainerNo1, "", new { @class = "Error_Msg" })
                                            }
                                        </div>
                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3">
                                            @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="----Select----",Value="",Selected = true },
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"},
                                }, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 col_cus_2">
                                            <label>Cargo Type:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="---Select---",Value="0"},
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"}
                                }, new { @class = "form-control input-sm dropdown" })
                                            @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Container Load Type:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="----Select----",Value=""},
                                       new SelectListItem { Text="FCL",Value="FCL"},
                                       new SelectListItem { Text="LCL",Value="LCL" },
                                       new SelectListItem { Text="DD",Value="DD" }
                                   }, new { @class = "form-control input-sm dropdown" })
                                            @Html.ValidationMessageFor(m => m.ContainerLoadType, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 padding_rt">
                                            <label>ODC Type:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.DropDownListFor(m => m.IsOdc, new List<SelectListItem>{
                                        new SelectListItem {Text="Normal",Value="0" },
                                        new SelectListItem {Text="Single Side ODC",Value="1" },
                                        new SelectListItem {Text="Double Side ODC",Value="2" },
                                        new SelectListItem {Text="Three Side ODC",Value="3" }
                                      }, new { @class = "form-control input-sm dropdown" })

                                        </div>
                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 padding_rt">
                                            <label>Transport From:</label>
                                        </div>
                                        <div class="col-md-2-5">                                           
                                            @Html.DropDownListFor(m => m.TransportFrom, (List<SelectListItem>)ViewBag.Lstpickup, "----Select----", new { @class = "form-control input-sm dropdown" })
                                            @Html.ValidationMessageFor(m => m.TransportFrom, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>No of Packages:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                                            @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3">
                                            <label>Gross Weight:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 padding_rt">
                                            <label>Shipping Seal No:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.ShippingLineSealNo, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.ShippingLineSealNo, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Vehicle No:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            <span class="ReQSimbol">*</span>
                                            @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 col-md-offset-4 col_cus_2">
                                            <label>Custom Seal No:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                                        </div>
                                        <div class="col-md-1-5 hideblock  padding_rt">
                                            <label>Challan No:</label>
                                        </div>
                                        <div class="col-md-2-5 hideblock">
                                            @Html.TextBoxFor(m => m.ChallanNo, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.ChallanNo, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="row Form_Space_top hideblock">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Tare Weight:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            @Html.TextBoxFor(m => m.TareWeight, new { @class = "form-control intpu-sm" })
                                            @Html.ValidationMessageFor(m => m.TareWeight, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top hideblock">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Depositor Name:</label>
                                        </div>
                                        <div class="col-md-10-5 col_cus_10">
                                            @Html.TextBoxFor(m => m.DepositorName, new { @class = "form-control intpu-sm", @maxlength = "100" })
                                            @Html.ValidationMessageFor(m => m.DepositorName, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2">
                                            @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                        </div>
                                        <div class="col-md-10-5 col_cus_10">
                                            @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                                            @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top hideblock">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5 col_cus_2 padding_rt">
                                            <label>Cargo Description:</label>
                                        </div>
                                        <div class="col-md-10-5 col_cus_10">
                                            @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                            @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top hideblock">
                                    <div class="form-group Form_Input">
                                        
                                        
                                        <div class="col-md-1" style="padding-right:0px;">
                                            <label>Reefer:</label>
                                        </div>
                                        <div class="col-md-1">
                                            <div class="boolean-container">
                                                @Html.CheckBoxFor(m => m.Reefer)
                                                <label for="Reefer"><i class="square"></i></label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                                </div>
                                <div class="row SignUp_space_bottom2">
                                    <div class="col-md-offset-4 col-md-2">
                                        <input type="submit" value="Save" id="btnSave" class="btn log_Btn_sm" />
                                    </div>
                                    <div class="col-md-2">
                                        <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateEntryView()" />
                                    </div>

                                </div>
                                <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                                    <div id="DivEntryThroughGateMsg"></div>
                                </div>

                                <div class="modal fade mTabindex" id="ShippingLineModal" role="dialog">
                                    <div class="modal-dialog">
                                        <!-- Modal content-->
                                        <div class="modal-content popup_modal">
                                            <div class="modal-header popup_header">
                                                <button type="button" class="close" onclick="CloseEximTrade()"><i class="fa fa-times" aria-hidden="true"></i></button>
                                                <h4 class="modal-title">List of Shipping Line Name</h4>
                                            </div>
                                            <div class="modal-body popup_body" style="position:relative;">
                                                <input placeholder="Search By Shipping Line Name Or Party Code" id="ShpngLinebox" type="text" tabindex="401" />
                                                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchByPartyCode()"></i></span>
                                                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                                                    <thead>
                                                        <tr>
                                                            <th colspan="8" width="80%">Shipping Line Name</th>
                                                            <th colspan="4" width="20%">Party Code</th>
                                                        </tr>
                                                    </thead>
                                                </table>
                                                <div id="slim_scroll">
                                                    <table class="table dataTable table-bordered table-striped slim_tble" id="tbleSline">
                                                        <tbody>
                                                            @{
                                                                if (ViewBag.lstShippingLine != null)
                                                                {
                                                                    var tabvalue = 401;
                                                                    var tab = 0;
                                                                    var u = "_";
                                                                    foreach (var item in ViewBag.lstShippingLine)
                                                                    {
                                                                        <tr tabindex="@tabvalue@u@tab" onkeypress="SelectShippingLine(@item.ShippingLineId,'@item.ShippingLineName','@item.PartyCode')" onclick="SelectShippingLine(@item.ShippingLineId,'@item.ShippingLineName','@item.PartyCode')">
                                                                            <td colspan="8" width="80%" class="txt_wrp">@item.ShippingLineName</td>
                                                                            <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                                                        </tr>
                                                                    }
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        @if (ViewBag.State != null && Convert.ToBoolean(ViewBag.State) == true)
                                                        {
                                                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreEximTrader()" class="btn log_Btn_sm" id="btnLoadMore">Load More Data</button>
                                                        }
                                                        else
                                                        {
                                                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreEximTrader()" class="btn log_Btn_sm" id="btnLoadMore" disabled>Load More Data</button>
                                                        }
                                                    </div>
                                                    <div class="col-md-6">
                                                        <button type="button" class="btn log_Btn_sm" onclick="CloseEximTrade()">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="modal fade mTabindex" id="CHAModal" role="dialog">
                                    <div class="modal-dialog">
                                        <!-- Modal content-->
                                        <div class="modal-content popup_modal">
                                            <div class="modal-header popup_header">
                                                <button type="button" class="close" onclick="CloseCHA()"><i class="fa fa-times" aria-hidden="true"></i></button>
                                                <h4 class="modal-title">List of CHA Name</h4>
                                            </div>
                                            <div class="modal-body popup_body" style="position:relative;">
                                                <input placeholder="Search By CHA Name Or Party Code" id="Chabox" type="text" tabindex="401" />
                                                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchChaByPartyCode()"></i></span>
                                                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                                                    <thead>
                                                        <tr>
                                                            <th colspan="8" width="80%">CHA Name</th>
                                                            <th colspan="4" width="20%">Party Code</th>
                                                        </tr>
                                                    </thead>
                                                </table>
                                                <div id="slim_scroll_1">
                                                    <table class="table dataTable table-bordered table-striped slim_tble" id="tbleCha">
                                                        @{
                                                            if (ViewBag.lstCHA != null)
                                                            {
                                                                var tabvalue = 401;
                                                                var tab = 0;
                                                                var u = "_";
                                                                foreach (var item in ViewBag.lstCHA)
                                                                {
                                                                    <tr tabindex="@tabvalue@u@tab" onkeypress="SelectCHA(@item.CHAId,'@item.CHAName')" onclick="SelectCHA(@item.CHAId,'@item.CHAName')">
                                                                        <td colspan="8" width="80%" class="txt_wrp">@item.CHAName</td>
                                                                        <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                                                    </tr>
                                                                }
                                                            }
                                                        }
                                                    </table>
                                                </div>
                                            </div>
                                            <div class="modal-footer">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        @if (ViewBag.CHAState != null && Convert.ToBoolean(ViewBag.CHAState) == true)
                                                        {
                                                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCHA()" class="btn log_Btn_sm" id="btnLoadCHA">Load More Data</button>
                                                        }
                                                        else
                                                        {
                                                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCHA()" class="btn log_Btn_sm" id="btnLoadCHA" disabled>Load More Data</button>
                                                        }
                                                    </div>
                                                    <div class="col-md-6">
                                                        <button type="button" class="btn log_Btn_sm" onclick="CloseCHA()">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                                            }
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivGateEntryList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script>
    $(function () {
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });
    $(function () {
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });

    var TimeInSeconds;

    $('#btnSave').on('click', function () {
        debugger;
        var Radio = $('input[name=ContainerType]:checked').val();
        if (Radio == 'EmptyVehicle') {
            $("#Size").rules("remove", "required");
            $("#ContainerLoadType").rules("remove", "required");
            $("#TransportFrom").rules("remove", "required");
            $("#CargoType").rules("remove", "required");
            $("#CargoType").rules("remove", "range");
            $("#ShippingLine").rules("remove", "required");
        }
        else {
            $("#Size").rules("add", "required");
            $("#ContainerLoadType").rules("add", "required");
            $("#TransportFrom").rules("add", "required");
            $("#CargoType").rules("add", "required");
            $("#CargoType").rules("add", { "range": [1, 2147483647] });
            $("#ShippingLine").rules("add", "required");
        }

        var Radio2 = $('input[name=Mode]:checked').val();
        if (Radio2 == 'By Road') {
            $("#TransportFrom").rules("remove", "required");
        }
        else {
            $("#TransportFrom").rules("add", "required");
            $("#VehicleNo").rules("remove", "required");  
        }

        if ($('#IsCBT').is(':checked') && $('#TPNo').val()=='') {
            $('#errTP').html('<span>Enter TP No.</span>');
            return false;
        }
        var OperationType = $('input[name=OperationType]:checked').val();

        if(Radio=='Loaded' && OperationType=='Import')
        {
            if($('#ContainerNo').val()=="" || $('#ContainerNo').val()=='undefined' )
            {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                return false;
            }
        }
        else {
            $('#errTP').html('<span></span>');
            return true;
        }


    });

    $(document).ready(function () {
        debugger;
        ($('#TransportMode').val() == 1 ? $('#Train').prop('checked', true) : $('#Road').prop('checked', true));
        if($('input[name=ContainerType]:checked').val()=='Empty' && $('input[name=OperationType]:checked').val()=='Import')
        {
            $("#ContainerNo").prop("disabled", true);
        }

        TimeInSeconds = 3000;
        var SystemDateTime = $('#SystemDateTime').val();
        var SplitSysDateTime = SystemDateTime.split(' ', 3);
        $('#SystemDateTime').val(SplitSysDateTime[0]);
        $('#SysEditTime').val(SplitSysDateTime[1] + " " + SplitSysDateTime[2]);
        $("#TransportFrom").rules("remove", "required");
    });

    function SelectShippingLine(ShippingLineId, ShippingLineName, PartyCode) {
        debugger;
        $('#ShippingLine').val(ShippingLineName);
        $('#ShippingLineId').val(ShippingLineId);
        $('#ShippingLineSealNo').val(PartyCode);
        $("#ShippingLineModal").modal("hide");
        $('#ShpngLinebox').val('');
        $('#CHAName').focus();
        LoadEximTrader();
    }
    var Page = 0;

    $('#ShpngLinebox').keyup(function(){
        SearchByPartyCode();
    });
    function SearchByPartyCode() {
        if ($('#ShpngLinebox').val() != '') {
            $.ajax({
                url: '/GateOperation/DSR_GateOperation/SearchByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#ShpngLinebox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        var tab=401;
                        $.each(data.Data.lstShippingLine, function (item, elem) {
                            html += '<tr tabindex='+ tab + '_' + item + ' onkeypress="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)" onclick="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ShippingLineName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tbleSline tbody').html('');
                        $('#tbleSline tbody').html(html);
                        $('#btnLoadMore').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleSline tbody').html('');
                        Page = -1;
                        $('#btnLoadMore').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadEximTrader();
    }


    function LoadMoreEximTrader() {
        debugger;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadEximtradeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstShippingLine, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item + ' onkeypress="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)" onclick="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ShippingLineName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tbleSline tbody').html(html);
                    else
                        $('#tbleSline tbody').append(html);
                    Page++;

                    if (data.Data.State == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function LoadEximTrader() {
        Page=0;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadEximtradeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page},
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstShippingLine, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item + ' onkeypress="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)" onclick="SelectShippingLine(' + elem.ShippingLineId + ',&quot;' + elem.ShippingLineName.replace(/\r?\n|\r/g, "") + '&quot;,&quot;' + elem.PartyCode.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ShippingLineName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    $('#tbleSline tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function CloseEximTrade(){
        $('#ShpngLinebox').val('');
        $("#ShippingLineModal").modal("hide");
        LoadEximTrader();
    }

    function LoadMoreCHA() {
        debugger;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadCHAList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstCHA, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item + ' onkeypress="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)" onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tbleCha tbody').html(html);
                    else
                        $('#tbleCha tbody').append(html);
                    Page++;

                    debugger;
                    if (data.Data.State == true)
                        $('#btnLoadCHA').prop('disabled', false);
                    else $('#btnLoadCHA').prop('disabled', true);
                }
            }
        });
    }

    function LoadCHA() {
        debugger;
        Page = 0;
        $.ajax({
            url: '/GateOperation/DSR_GateOperation/LoadCHAList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab=401;
                    $.each(data.Data.lstCHA, function (item, elem) {
                        debugger;
                        html += '<tr tabindex='+ tab + '_' + item + ' onkeypress="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)" onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });

                    $('#tbleCha tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadCHA').prop('disabled', false);
                    else $('#btnLoadCHA').prop('disabled', true);
                }
            }
        });
    }

    function SelectCHA(CHAId, CHAName) {
        debugger;
        $('#CHAName').val(CHAName);
        $('#CHAId').val(CHAId);
        $("#CHAModal").modal("hide");
        $('#Chabox').val('');
        $('#Size').focus();
        LoadCHA();
    }

    $('#Chabox').keyup(function(){
        SearchChaByPartyCode();
    });
    function SearchChaByPartyCode() {
        if ($('#Chabox').val() != '') {
            $.ajax({
                url: '/GateOperation/DSR_GateOperation/CHASearchByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#Chabox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        var tab=401;
                        $.each(data.Data.lstCHA, function (item, elem) {
                            html += '<tr tabindex='+ tab + '_' + item + ' onkeypress="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)" onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tbleCha tbody').html('');
                        $('#tbleCha tbody').html(html);
                        $('#btnLoadCHA').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleCha tbody').html('');
                        Page = -1;
                        $('#btnLoadCHA').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadCHA();
    }

    function CloseCHA() {
        $('#Chabox').val('');
        $("#CHAModal").modal("hide");
        LoadCHA();
    }
  
    function LoadGateEntryView() {
        $('#DivBody').load( '/GateOperation/DSR_GateOperation/CreateEntryThroughGate');
    }
    function GateEntryOnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            ResetGateEntry();
            if ($('#DivEntryThroughGateMsg').hasClass('logErrMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
            setTimeout(LoadGateEntryView, TimeInSeconds);
            // LoadGateEntryView();
            GetEntryThroughGateList();
        }
           
        else {
            if ($('#DivEntryThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
        }

    }

    function ResetGateEntry() {
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
    }
    function GetEntryThroughGateList() {
        debugger;

        $('#DivGateEntryList').load('/GateOperation/DSR_GateOperation/EntryThroughGateList');
    }
    function GateEntryOnFailure() {
    
    }

    $(document).ready(function () {
        $('#ShippingLine').focus();
        // GetRadioVal();

        var editTime = $("#EditTime").val();
        // alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }

    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });

    function GetRadioVal() {
        debugger;
        var Radio = $('input[name=ContainerType]:checked').val();
        // alert(Radio);
        $("#ContainerNo1").val('');
        $("#ContainerNo1").prop('readonly', true);
        if (Radio == "Loaded") {
            //$("#LoadedDiv").show();
            //$("#EmptyDiv").hide();
            var Status = true;
            // alert(($("#txtContainerNo").val()));
            if ($('#EntryDateTime').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            if ($('#ReferenceDate').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            //if ($('#ShippingLine').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#CHAName').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            //if ($('#ContainerNo').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}

        }
        else if (Radio == "Empty Vehicle") {

        }
        else {
            //$("#EmptyDiv").show();
            // $("#LoadedDiv").hide();ContainerNo1
            //$("#ContainerNo1Div").show();
            $("#ContainerNo1").val('');
            $("#ContainerNo1").removeAttr("readonly");
        }

    }
   
    $('#ShippingLineModal').on('shown.bs.modal', function () {
        $('#ShpngLinebox').focus();
    });
    $('#CHAModal').on('shown.bs.modal', function () {
        $('#Chabox').focus();
    }); 
    
    function PopupActivate(Id) {
        debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {

            $('#' + Id).modal('show');

            if (Id == "ShippingLineModal") {
                //TrainNoSearch();
                $('#ShpngLinebox').focus();
            }
            if (Id == "CHAModal") {
                //LoadEximTrader();
                $('#Chabox').focus();
            }                       
        }
    }

    $('.mTabindex').keydown(function (e) {
        //debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });
</script>
