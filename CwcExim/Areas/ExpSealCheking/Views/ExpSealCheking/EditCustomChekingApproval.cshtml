@model CwcExim.Areas.ExpSealCheking.Models.CHN_CustomChekingApproval

@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "CustomEntryOnSuccess";
    options.OnFailure = "CustomEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
                @using (Ajax.BeginForm("AddEditCustomChekingApproval", "ExpSealCheking", options))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.CustomId)
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Approval For Custom Application</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>TruckSlip No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.TruckSlipNo, "", new { @class = "form-control input-sm", @readonly = true })
                                @*<span class="search" id="TruckSlipSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#TruckSlipModal"></i></span>*@
                                @Html.ValidationMessageFor(m => m.TruckSlipNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                <label>Vehicle No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div id="DivShippingLine" class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Container No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                                @*@Html.DropDownListFor(m=>m.Size, new List<SelectListItem> {
                                       new SelectListItem { Text="20",Value="20"},
                                       new SelectListItem {Text="40",Value="40" },
                                       new SelectListItem {Text="ODC",Value="ODC" }
                                       }, "---Select---", new { @class = "form-control input-sm dropdown", @disabled = true })
                                    @Html.ValidationMessageFor(m => m.Size,"", new { @class = "Error_Msg" })*@
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                <label>Size:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Size, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>CHA:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                @Html.HiddenFor(m => m.CHAId)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Exam Required:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.ExamRequired, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="NO",Value="NO",Selected=true},
                                     new SelectListItem { Text="YES",Value="YES"}
                                }, new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.ExamRequired, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-12 SignUp_space_bottom">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="submit" onclick="ValidedField();" value="Save" class="btn log_Btn_sm" id="BtnCustomEntry" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Reset" id="btnReset" class="btn log_Btn_sm" onclick="ResetCustomEntry()" />
                            </div>
                        </div>
                        @*<div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                                <div id="DivEntryCustomMsg"></div>
                            </div>*@
                    </div>
                    <div id="CustomChekingMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>

                }
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivCustomChekingList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")

@*<div class="modal fade" id="TruckSlipModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of TruckSlip No</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="TruckSlipBox" type="text" />
                    <ul class="navList" id="TruckSlipList"></ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@
    <script>
        var TimeInSeconds;


        $(document).ready(function () {
            debugger;
            CustomChekingApprovalList();
        });

      /*  $(document).ready(function ()
        {
            debugger;
            CustomChekingApprovalList();
            TimeInSeconds = 3000;
            var time = new Date();
            time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
            document.getElementById("SysTime").value = time;
            var t = setTimeout(StartSysTime, 500);


        }); */

        //$('#TruckSlipBox').keyup(function () {
        //    var valThis = $(this).val().toLowerCase();
        //    if (valThis == "") {
        //        $('#TruckSlipModal .navList > li').show();
        //    } else {
        //        $('#TruckSlipModal .navList > li').each(function () {
        //            var text = $(this).text().toLowerCase();
        //            (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
        //        });
        //    };
        //});

        //$('#TruckSlipSearch').on("click", function () {
        //    $.ajax({
        //        url: "/ExpSealCheking/ExpSealCheking/GetTruckSlipList",
        //        type: "GET",
        //        dataType: "JSON",
        //        success: function (data) {
        //            debugger;
        //            if (data.Status == 1) {
        //                var Html = '';
        //                $.each(data.Data, function (i, item) {

        //                    Html += '<li id=' + item.TruckSlipNo + ' onclick="FillTruckSlipTxtBox(&quot;' + item.TruckSlipNo + '&quot;)">' + item.TruckSlipNo + '</li>';
        //                });
        //                $('#TruckSlipList').html(Html);
        //            }
        //        }

        //    });
        //});

        //function FillTruckSlipTxtBox(TruckSlipNo) {
        //    debugger;
        //    $('#TruckSlipNo').val(TruckSlipNo);
        //    $("#TruckSlipModal").modal("hide");
        //    GetContainerDet(TruckSlipNo);
        //}
        //$('#TruckSlipList > li').on("click", function () {
        //    $('#TruckSlipNo').val($(this).text());
        //    var TruckSlipNo = $('#TruckSlipNo').val();
        //    $("#TruckSlipModal").modal("hide");

        //});
        function GetContainerDet(TruckSlipNo) {
            debugger;
            $.ajax({
                url: '/ExpSealCheking/ExpSealCheking/GetContainerDetailsForCustomChecking',
                type: 'GET',
                dataType: 'JSON',
                async: false,
                data: { TruckSlipNo: TruckSlipNo },
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        $('#ContainerNo').val(data.Data.ContainerNo);
                        $('#Size').val(data.Data.Size);
                        $('#CHAName').val(data.Data.CHAName);
                        $('#VehicleNo').val(data.Data.VehicleNo);
                        $('#TruckSlipNo').val(data.Data.TruckSlipNo);
                        data.Data.AppraisementStatus == 1 ? $('#Pass').prop("checked", true) : $('#Fail').prop("checked", true);
                        // ArrayOfDestuffingEntry = data.Data.LstDestuffing;
                        //  GenerateDestuffingTable();
                    }
                }
            });
        }

        function CustomEntryOnSuccess(data) {

            debugger;
            if (data.Status == 1 || data.Status == 2 || data.Status==4) {
                ResetCustomEntry();
                if ($('#CustomChekingMsg').hasClass('logErrMsg'))
                    $('#CustomChekingMsg').removeClass('logErrMsg').addClass('logSuccMsg');
                $('#CustomChekingMsg').html(data.Message);
                $('#BtnCustomEntry').prop('disabled', true);
                CustomChekingApprovalList();
                setTimeout(LoadCustomEntryView, 5000);
                
            }
                //else if (data.Status == 2) {
                //    $('[data-valmsg-for="CountryName"]').html('<span>' + data.Message + '</span>');
                //}
                //else if (data.Status == 3) {
                //    $('[data-valmsg-for="CountryAlias"]').html('<span>' + data.Message + '</span>');
                //}
            else {
                if ($('#CustomChekingMsg').hasClass('logSuccMsg'))
                    $('#CustomChekingMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                $('#CustomChekingMsg').html(data.Message);
            }
        }

        function CustomEntryOnFailure() {
            alert("Error");
        }

        function ResetCustomEntry() {
            $('input[type="text"],textarea').val('');
            $('input[type="checkbox"').prop('checked', false);
            $('#ExamRequired').val('NO');
            $('[data-valmsg-for]').html('');
        }

        function LoadCustomEntryView() {
            $('#DivBody').load('/ExpSealCheking/ExpSealCheking/CreateCustomChekingApproval');
        }

        $("#BtnCustomEntry").on("click", function () {
            debugger;
            if ($.trim($('#ContainerNo').val()) != '') {
                if ($('#Size').val() == '') {
                    $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                    //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                    return false;
                }
            }
        });

        function CustomChekingApprovalList() {
            debugger;

            $('#DivCustomChekingList').load('/ExpSealCheking/ExpSealCheking/CustomChekingApprovalList');
        }
    </script>




