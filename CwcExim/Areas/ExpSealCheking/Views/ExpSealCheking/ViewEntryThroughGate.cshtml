@model CwcExim.Areas.ExpSealCheking.Models.CHN_EntryThroughGate
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Entry Through Gate</h4>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Gate In No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm", @readonly = "true" })
                            @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-1 col_cus_offset_1 padding_rt">
                            <label>System Date:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                            @*@Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })*@
                        </div>
                        <div class="col-md-1 col_cus_2 padding_rt">
                            <label>Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <div id="DivSysTime">
                                <input type="text" id="SysEditTime" name="SysEditTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                            </div>
                            @*@Html.TextBoxFor(m => m.SysTime, new { @class = "form-control", @readonly = true })*@
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 col-md-offset-5 col_cus_offset_5 padding-right:0">
                            <label>Entry Date:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })  
                        </div>
                        <div class="col-md-1 col_cus_2 padding_rt">
                            <label>Time:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <div class="input-group clockpicker" data-placement="left" data-align="top">
                                <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                <span class="input-group-addon" style="padding:2px 10px;">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Truck Slip No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.TruckSlipNo, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-1 col_cus_offset_1 padding_rt">
                            <label>Truck Slip Date:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.TruckSlipDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Container/CBT No:</label>
                        </div>
                        <div class="col-md-2-5" id="ContainerNoDiv">
                            @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1" style="padding-right:0px;">
                            @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.Size, new { @class = "form-cotrol",@readonly=true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Custom Seal No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Cargo Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.CargoType, new { @class = "form-control", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Vehicle No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol", @readonly = true })
                            @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-4 col_cus_offset_3 padding_rt">
                            <label>Driving License No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.DrivingLicenseNo, new { @class = "form-cotrol", @readonly = true })
                            @Html.ValidationMessageFor(m => m.DrivingLicenseNo, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>No of Packages:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-offset-4 col-md-1-5 col_cus_2 col_cus_offset_3">
                            @Html.LabelFor(m => m.GrossWeight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>CHA:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.Hidden("CHAId", "0")
                            @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                            <span id="ErrCHAName"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Exporter:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.Hidden("ExporterId", new { @value = "0" })
                            @Html.TextBoxFor(m => m.Exporter, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Cargo Description:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol", @readonly = true })
                            @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-2 col-md-offset-5">
                        <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadGateEntryView()" />
                    </div>
                </div>
              </div>
            </div>
        </div>
    </div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    function LoadGateEntryView() {
        debugger;
        $('#DivBody').load('/ExpSealCheking/ExpSealCheking/CreateGateEntry');
    }
    $(function () {
        debugger;
        $('input[type="text"],textarea').prop('readonly', true);
        $('input[type="checkbox"]').prop('disabled', true);
            var SystemDateTime = $('#SystemDateTime').val();
            var SplitSysDateTime = SystemDateTime.split(' ', 3);
            $('#SystemDateTime').val(SplitSysDateTime[0]);
            $('#SysEditTime').val(SplitSysDateTime[1] + " " + SplitSysDateTime[2]);


            var EntryDateTime = $('#EntryDateTime').val();
            var SplitEntryDateTime = EntryDateTime.split(' ', 3);
            $('#EntryDateTime').val(SplitEntryDateTime[0]);
            $('#time').val(SplitEntryDateTime[1] + " " + SplitEntryDateTime[2]);
    });
</script>

