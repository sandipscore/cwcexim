@model CwcExim.Areas.ExpSealCheking.Models.CHN_SealChangeEntry
@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "SealChangeEntryOnSuccess";
    options.OnFailure = "SealChangeEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<div id="DivSealChange" class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">
    @using (Ajax.BeginForm("AddEditSealChangeEntry", "ExpSealCheking", options))

    {
         @Html.AntiForgeryToken()
         @Html.HiddenFor(m=>m.JobOrderid)
         @Html.HiddenFor(m => m.JobOrderDetailsJS)
         @Html.ValidationMessageFor(m => m.JobOrderDetailsJS)
                <div class="row">
                    <div class="col-md-12">
                        <h4>Seal Change Entry</h4>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Job Order No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.JobOrderNo, "", new { @class = "form-control input-sm", @readonly = true })
                            <span class="search" id="JobOrderSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#JobOrderModal"></i></span>
                            @Html.ValidationMessageFor(m => m.JobOrderNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                            <label>Job Order Date:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.JobOrderDate, "{0:dd-MM-yyyy}", new { @class = "form-control input-sm", @readonly = "true" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Container/CBT No:</label>
                        </div>
                        <div class="col-md-2-5" id="ContainerNoDiv">
                            @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                            @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                            <label>Size:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.Size, new { @class = "form-control input-sm", @readonly = "true" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>TruckSlip No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.TruckSlipNo, "", new { @class = "form-control input-sm", @readonly = true })
                            @Html.ValidationMessageFor(m => m.TruckSlipNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col-md-offset-2-5 col_cus_offset_0_5 padding_rt">
                            <label>Truck Slip Date:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.TruckSlipDate, "{0:dd-MM-yyyy}", new { @class = "form-control input-sm", @readonly = "true" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Present Seal No:</label>
                        </div>
                        <div class="col-md-2-5" id="PresentSealNoDiv">
                            @Html.TextBoxFor(m => m.PresentSealNo, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.PresentSealNo, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>New Seal No:</label>
                        </div>
                        <div class="col-md-2-5" id="NewSealNoDiv">
                            @Html.TextBoxFor(m => m.NewSealNo, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.NewSealNo, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Lock Provided:</label>
                        </div>
                        <div class="col-md-1 padding_rt">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.LockProvided, new { @onclick = "ClearCheckBoxValidation()" })
                                <label for="LockProvided"><i class="square"></i></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-offset-4 col-md-2">
                        <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetSealChange()" />
                    </div>
                </div>

                <div id="DivsucMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>

                <div class="row">
                    <div class="col-md-12">
                        <div id="DivSealChangeList"></div>
                    </div>
                </div>

    }
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="JobOrderModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Job Order No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="JobOrderBox" type="text" />
                <ul class="navList" id="JobOrderList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>

    $(document).ready(function () {
        debugger;
        SealChangeList();
    });
    
    $('#JobOrderBox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#JobOrderModal .navList > li').show();
        } else {
            $('#JobOrderModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });


    $('#JobOrderSearch').on("click", function () {
        debugger;
        $.ajax({
            url: "/ExpSealCheking/ExpSealCheking/GetJobOrderNoList",
            type: "GET",
            dataType: "JSON",
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    var Html = '';
                    $.each(data.Data, function (i, item) {

                        Html += '<li id=' + item.JobOrderNo + ' onclick="FillJobOrderBox(&quot;' + item.JobOrderNo + '&quot;)">' + item.JobOrderNo + '</li>';
                    });
                    $('#JobOrderList').html(Html);
                }
            }

        });
    });

    function FillJobOrderBox(JobOrderNo) {
        debugger;
        $('#JobOrderDetailsJS').val('');
        $('#JobOrderNo').val(JobOrderNo);
        $("#JobOrderModal").modal("hide");
        GetContainerDet(JobOrderNo);
    }

    function GetContainerDet(JobOrderNo) {
        debugger;
        $.ajax({
            url: '/ExpSealCheking/ExpSealCheking/GetContainerDetailsByJobOrder',
            type: 'GET',
            dataType: 'JSON',
            async: false,
            data: { JobOrderNo: JobOrderNo },
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    $('#ContainerNo').val(data.Data.ContainerNo);
                    $('#Size').val(data.Data.Size);
                    var ContArray = [];
                    var Object = {
                        ContainerNo: data.Data.ContainerNo,
                        Size: data.Data.Size,

                    };
                    ContArray.push(Object);
                    $('#JobOrderDetailsJS').val(JSON.stringify(ContArray));
                    var a = $('#JobOrderDetailsJS').val();
                    // $('#JobOrderDetailsJS').val();
                    $('#JobOrderDate').val(data.Data.JobOrderDate);
                    $('#JobOrderid').val(data.Data.JobOrderid);
                    $('#TruckSlipNo').val(data.Data.TruckSlipNo);
                    $('#TruckSlipDate').val(data.Data.TruckSlipDate);
                    data.Data.AppraisementStatus == 1 ? $('#Pass').prop("checked", true) : $('#Fail').prop("checked", true);
                    // ArrayOfDestuffingEntry = data.Data.LstDestuffing;
                    //  GenerateDestuffingTable();
                }
            }
        });
    }

    function ClearCheckBoxValidation() {
        debugger;
        $('[data-valmsg-for="CheckBoxValidation"]').html('<span></span>');
    }

    function SealChangeEntryOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivsucMsg').hasClass('logErrMsg'))
                $('#DivsucMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivSealChange #DivsucMsg').html(data.Message);
            SealChangeList();
           // $('#btnSave').prop('disabled', true);
            //setTimeout(CreateSealChangeEntry, 5000);
            ResetSealChange();
        }
        else {
            $('#DivErrorMsg').html(data.Message);
            //alert(data.Message);
        }

        
    }
    

    function SealChangeEntryOnFailure() { }

    $("#btnSave").on("click", function () {
        debugger;
        var Size = $('#Size').val();
        $('#Size').val(Size);
        if ($.trim($('#ContainerNo').val())= '') {
            $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                return false;
            }
        
    });

    function ResetSealChange() {
        $('input[type="text"],textarea').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('#ExamRequired').val('NO');
        $('[data-valmsg-for]').html('');
    }
    function CreateSealChangeEntry() {
        $('#DivBody').load('/ExpSealCheking/ExpSealCheking/CreateSealChangeEntry');
    }

    function SealChangeList() {
        debugger;

        $('#DivSealChangeList').load('/ExpSealCheking/ExpSealCheking/SealChangeEntryList');
    }

</script>
