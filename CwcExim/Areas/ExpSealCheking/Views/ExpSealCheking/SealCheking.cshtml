@model CwcExim.Areas.ExpSealCheking.Models.CHN_EntryThroughGate
@{
    AjaxOptions options = new AjaxOptions();
    options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "GateEntryOnSuccess";
    options.OnFailure = "GateEntryOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<script type="text/javascript">
    var TimeInSeconds;
    $(document).ready(function () {
        GetEntryThroughGateList();
        TimeInSeconds = 3000;
        var time = new Date();
        time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
        document.getElementById("SysTime").value = time;
        var t = setTimeout(StartSysTime, 500);


    });

    function GetEntryThroughGateList() {
        debugger;

         $('#DivGateEntryList').load('/ExpSealCheking/ExpSealCheking/EntryThroughGateList');
    }
    function StartSysTime() {
        var time = new Date();
        time = time.toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
        document.getElementById("SysTime").value = time;
        var t = setTimeout(StartSysTime, 500);

    }
</script>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4 postn_rel">

                @using (Ajax.BeginForm("AddEditGateEntry", "ExpSealCheking", options))

                {
                    @Html.AntiForgeryToken()
                    @*@Html.HiddenFor(m=>m.JsonContainer)*@
                    @*<input type="hidden" id="JsonContainer" value="@ViewBag.JSONResult" name="JsonContainer" />*@
                    @Html.HiddenFor(m => m.EntryId)
                    @Html.HiddenFor(m => m.CHAId)
                    @Html.HiddenFor(m => m.ExporterId)


                    <div class="time_sec" onload="startTime()"><span id="Time"></span></div>

                    <div class="row">
                        <div class="col-md-12">
                            <h4>Seal Checking Container Gate Entry</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Gate In No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.GateInNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col-md-offset-1 col_cus_offset_1 padding_rt">
                                <label>System Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SystemDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SystemDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                            </div>
                            <div class="col-md-1 col_cus_2 padding_rt">
                                <label>Time:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <div id="DivSysTime">
                                    <input type="text" id="SysTime" name="SysTime" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                </div>
                            </div>
                        </div>
                    </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 col-md-offset-5 col_cus_offset_5 padding-right:0">
                                    <label>Entry Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBoxFor(m => m.EntryDateTime, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.EntryDateTime, "", new { @class = "Error_Msg", Value = DateTime.Today.ToString("dd/MM/yyyy") })
                                </div>
                                <div class="col-md-1 col_cus_2 padding_rt">
                                    <label>Time:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5">
                                    <div class="input-group clockpicker" data-placement="left" data-align="top">
                                        <input type="text" id="time" name="time" class="form-control" value="00:00" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                        <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                        <span class="input-group-addon" style="padding:2px 10px;">
                                            <span class="glyphicon glyphicon-time"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Truck Slip No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.TruckSlipNo, new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.TruckSlipNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col_cus_2 col-md-offset-1 col_cus_offset_1 padding_rt">
                                    <label>Truck Slip Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBoxFor(m => m.TruckSlipDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.TruckSlipDate, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Container/CBT No:</label>
                                </div>
                                <div class="col-md-2-5" id="ContainerNoDiv">
                                    @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-1 col_cus_offset_1" style="padding-right:0px;">
                                    @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-2 col_cus_2_5">
                                    @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                               {
                                new SelectListItem { Text="20",Value="20"},
                                new SelectListItem { Text="40",Value="40"}
                                //new SelectListItem { Text="ODC",Value="ODC"},
                                }, "----Select----", new { @class = "form-control input-sm", @onblur = "ClearValidationMsg(this)" })
                                    @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Custom Seal No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control intpu-sm" })
                                    @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Cargo Type:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="HAZ",Value="1"},
                                     new SelectListItem { Text="NON-HAZ",Value="2"}
                                }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                    @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Vehicle No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-cotrol input-sm" })
                                    @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col_cus_2 col-md-offset-1 col_cus_offset_1 padding_rt">
                                    <label>Driving License No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.DrivingLicenseNo, new { @class = "form-cotrol input-sm" })
                                    @Html.ValidationMessageFor(m => m.DrivingLicenseNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>No of Packages:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.NoOfPackages, new { @class = "form-control intpu-sm" })
                                    @Html.ValidationMessageFor(m => m.NoOfPackages, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-1 col-md-1-5 col_cus_2 col_cus_offset_1">
                                    @Html.LabelFor(m => m.GrossWeight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.GrossWeight, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.GrossWeight, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>CHA:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.Hidden("CHAId", "0")
                                    @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search" id="CHADtlSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHADtlModal"></i></span>
                                    @*<span class="search" id="CHASearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>*@
                                    <span id="ErrCHAName"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Exporter:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.Hidden("ExporterId", new { @value = "0" })
                                    @Html.TextBoxFor(m => m.Exporter, new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search" id="ExporterSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ExporterModal"></i></span>                                <span class="field-validation-error" id="ErrImporterName"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;" })
                                    @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Cargo Description:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-cotrol input-sm", @style = "width:100%;height:100px;" })
                                    @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12 SignUp_space_bottom">
                                <div class="col-md-offset-4 col-md-2">
                                    <input type="submit" onclick="ValidedField();" value="Save" class="btn log_Btn_sm" id="BtnGateEntry" />
                                </div>
                                <div class="col-md-2">
                                    <input type="button" value="Reset" id="btnReset" class="btn log_Btn_sm" onclick="ResetGateEntry()" />
                                </div>
                            </div>
                            <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                                <div id="DivEntryThroughGateMsg"></div>
                            </div>
                        </div>

                        <div class="modal fade" id="CHADtlModal" role="dialog">
                            <div class="modal-dialog">
                                <!-- Modal content-->
                                <div class="modal-content popup_modal">
                                    <div class="modal-header popup_header">
                                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                        <h4 class="modal-title">List of CHA</h4>
                                    </div>
                                    <div class="modal-body popup_body">
                                        <input placeholder="Search Me" id="SearchCHADtl" type="text" />
                                        <ul class="navList" id="ListOfCHADtl"></ul>
                                    </div>
                                    <div class="modal-footer">
                                        <div class="row">
                                            <div class="col-md-offset-6 col-md-6">
                                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="modal fade" id="ExporterModal" role="dialog">
                            <div class="modal-dialog">
                                <!-- Modal content-->
                                <div class="modal-content popup_modal">
                                    <div class="modal-header popup_header">
                                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                        <h4 class="modal-title">List of Exporter</h4>
                                    </div>
                                    <div class="modal-body popup_body">
                                        <input placeholder="Search Me" id="Expbox" type="text" />
                                        <ul class="navList" id="ListOfExporter"></ul>
                                    </div>
                                    <div class="modal-footer">
                                        <div class="row">
                                            <div class="col-md-offset-6 col-md-6">
                                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                }
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivGateEntryList"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $('#SearchCHADtl').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#CHADtlModal .navList > li').show();
        } else {
            $('#CHADtlModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('#Expbox').keyup(function () {
        debugger;
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#ListOfExporter > li').show();
        else {
            $('#ListOfExporter > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });


    $('#CHADtlSearch').on("click", function () {
        $.ajax({
            url: "/ExpSealCheking/ExpSealCheking/GetCHAList",
            type: "GET",
            dataType: "JSON",
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    var Html = '';
                    $.each(data.Data, function (i, item) {
                        debugger;
                        Html += '<li id=' + item.CHAId + ' onclick="FillCHATxtBox(' + item.CHAId + ',&quot;' + item.CHAName + ',&quot;)">' + item.CHAName + '</li>';
                    });
                    $('#ListOfCHADtl').html(Html);
                }
            }

        });
    });

    $('#ExporterSearch').on("click", function () {
        debugger;
        $.ajax({
            url: "/ExpSealCheking/ExpSealCheking/GetExportList",
            type: "GET",
            dataType: "JSON",
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    var Html = '';
                    $.each(data.Data, function (i, item) {
                        debugger;
                        Html += '<li id=' + item.ExporterId + ' onclick="FillExporterTxtBox(' + item.ExporterId + ',&quot;' + item.ExporterName + '&quot;)">' + item.ExporterName + '</li>';
                    });
                    $('#ListOfExporter').html(Html);
                }
            }

        });
    });

    function ValidedField() {

    }
    function ClearValidationMsg(TxtBoxId) {
        debugger;
        var TxtBoxId = TxtBoxId.id;
        $('[data-valmsg-for=' + TxtBoxId + ']').html("<span></span>");
    }

    function FillCHATxtBox(CHAId, CHAName) {
        debugger;
        $('#CHAName').val(CHAName);
        $('#CHAId').val(CHAId);
        $("#CHADtlModal").modal("hide");
    }
   

    function FillExporterTxtBox(ExporterId, ExporterName) {
        debugger;
        $('#Exporter').val(ExporterName);
        $('#ExporterId').val(ExporterId);
        $("#ExporterModal").modal("hide");
    }

 
   

    function LoadGateEntryView() {
        $('#DivBody').load('/ExpSealCheking/ExpSealCheking/CreateGateEntry');
    }

    function populateJsondata(data)
    {
        debugger;
        $("#EntryDateTime").val(data.EntryDateTime);
        $("#TruckSlipDate").val(data.TruckSlipDate);

        $("#time").val(data.EntryTime);
        $("#TruckSlipNo").val(data.TruckSlipNo);

        $("#ShippingLine").val(data.ShippingLine);
        //
        $("#ShippingLineId").val(data.ShippingLineId);
        //
        $("#CHAName").val(data.CHAName);
        $("#ContainerNo").val(data.ContainerNo);
        $("#Size").val(data.Size);
        $("#CargoType").val(data.CargoType);
        $("#CargoDescription").val(data.CargoDescription);
        $("#CustomSealNo").val(data.CustomSealNo);
        $("#GrossWeight").val(data.GrossWeight);
        $("#NoOfPackages").val(data.NoOfPackages);
        $("#LCLFCL").val(data.LCLFCL);
        $("#CustomSealNo").val(data.CustomSealNo);
        $("#Remarks").val(data.Remarks);
        $("#VehicleNo").val(data.VehicleNo);
        $("#DrivingLicenseNo").val(data.DrivingLicenseNo);
        $("#Exporter").val(data.Exporter);

        if (data.Reefer == true) {
            $("#Reefer").prop('checked', true);
        } else {
            $("#Reefer").prop('checked', false);
        }
        if (data.CBT == true) {
            $('#CBT').prop('checked', true);
        }
        else {
            $('#CBT').prop('checked', false);
        }

    }

    function GetRadioVal()
    {
        debugger;
        var Radio = $('input[name=ContainerType]:checked').val();
        // alert(Radio);
        $("#ContainerNo").val('');
        $("#ContainerNo").prop('readonly', true);
        if (Radio == "Loaded") {

            $('#EmptyDiv').hide();
            $('#LoadedDiv').show();
            //$("#LoadedDiv").show();
            //$("#EmptyDiv").hide();
            var Status = true;
            // alert(($("#txtContainerNo").val()));
            if ($('#EntryDateTime').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            if ($('#TruckSlipDate').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            //if ($('#ShippingLine').val() == "") {
            //    $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            //    Status = false;
            //}
            if ($('#CHAName').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }
            if ($('#ContainerNo').val() == "") {
                $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
                Status = false;
            }

        }
        else {
            //$("#EmptyDiv").show();
            // $("#LoadedDiv").hide();ContainerNo
            //$("#ContainerNoDiv").show();
            $('#EmptyDiv').show();
            $('#LoadedDiv').hide();

            $("#ContainerNo").val('');
            $("#ContainerNo").removeAttr("readonly");
        }

    }


    function GateEntryOnSuccess(data) {

        debugger;
        if (data.Status == 1 || data.Status == 2) {

            ResetGateEntry();
            if ($('#DivEntryThroughGateMsg').hasClass('logErrMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
            setTimeout(LoadGateEntryView, TimeInSeconds);
            GetEntryThroughGateList();
        }

        else {
            if ($('#DivEntryThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivEntryThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntryThroughGateMsg').html(data.Message);
        }
    }
    function GateEntryOnFailure() {
        alert("Error");
    }

    function ResetGateEntry() {
        var SystemDateTime = $('#SystemDateTime').val();
        var EntryDateTime = $('#EntryDateTime').val(); 
        var time = $('#time').val();
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
        $('#SystemDateTime').val(SystemDateTime);
        $('#EntryDateTime').val(EntryDateTime);
        $('#time').val(time);
        $('#DivEntryThroughGateMsg').html('');
    }

    $("#EntryDateTime").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        maxDate: new Date(),
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $("#TruckSlipDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $('#ListOfExporter > li').on("click", function () {
        $('#Exporter').val($(this).text());
        $('#ExporterId').val($(this).attr('id'));
        $("#ExporterModal").modal("hide");
    });
    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });
    $(document).ready(function () {

        var editTime = $("#EditTime").val();
        //alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
    });



    //function GoToExport() {
    //    debugger;
    //   // $("#DivGateEntryRbtnBond").hide();
    //  //  $("#DivGateEntryRbtnImport").hide();

    //    $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateExport');
    //}
    //function GoToImport() {
    //    debugger;
    //    $("#DivGateEntryRbtnBond").hide();
    //    $("#DivGateEntryRbtnExport").hide();
    //    $("#DivGateEntryRbtnLoadedCont").hide();
    //    $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGate');
    //}
    //function GoToBond() {
    //    debugger;
    //   // $("#DivGateEntryRbtnImport").hide();
    //  //  $("#DivGateEntryRbtnExport").hide();
    //   // $("#DivGateEntryRbtnLoadedCont").hide();
    //    $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateBond');
    //}

    //function GoToLoaadedContainer() {
    //    debugger;
    //  //  $("DivGateEntryRbtnBond").hide();
    //  //  $("DivGateEntryRbtnImport").hide();
    //    $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGateLoadContainer');
    //}
    function CheckContSize() {
        if ($.trim($('#ContainerNo').val()) != '') {
            if ($('#Size').val() == '') {
                $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                return false;
            }
        }
    }
    $("#BtnGateEntry").on("click", function () {
        debugger;
        if ($.trim($('#ContainerNo').val()) != '') {
            if ($('#Size').val() == '') {
                $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                return false;
            }
        }
        var FormOneDate = $('#TruckSlipDate').val();
        var GateEntryDate = $('#EntryDateTime').val();
        var FormOneDt = FormOneDate.split('/');
        var GateEntryDt = GateEntryDate.split('/');
        var FrmDt = new Date(FormOneDt[2], (Number(FormOneDt[1])-1), FormOneDt[0]);
        var EntryDt = new Date(GateEntryDt[2], (Number(GateEntryDt[1]) - 1), GateEntryDt[0]);
        if (EntryDt < FrmDt)
        {
            $('[data-valmsg-for="EntryDateTime"]').html('<span>Entry Date Time Cannot Be Less Than Truck Slip Date</span>');
            return false;
        }
    });
</script>




