@model CwcExim.Areas.CashManagement.Models.ppg_FumigationInvoice
@if (ViewBag.PaymentParty != null)
{
    <input type="hidden" id="hdnPartyPayee" value="@ViewBag.PaymentParty" />
}
else
{
    <input type="hidden" id="hdnPartyPayee" value="" />
}
@if (ViewBag.ChemicalLst != null)
{
    <input type="hidden" id="hdnChemical" value="@ViewBag.ChemicalLst" />
}
else
{
    <input type="hidden" id="hdnChemical" value="" />
}

<script src="~/Areas/CashManagement/Scripts/App/Services/LoniFumigationSvc.js"></script>
<script src="~/Areas/CashManagement/Scripts/App/Controllers/LoniFumigationCtrl.js"></script>
<script>
    angular.bootstrap(document.getElementById('DivCreateStuffingReq'), ['CWCApp']);
</script>

@using (Ajax.BeginForm("AddEditFumigationInvoice", "Loni_CashManagement", 
new AjaxOptions { HttpMethod = "POST", 
 OnSuccess = "PaymentOnSuccess", OnFailure = "PaymentOnFailure" }
@*, new { @Id = "FumiInvoice" }*@))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.ChemicalXML)
    @Html.Hidden("FumigationInvModelJson")
   @Html.Hidden("SupplyType")
    <div id="DivCreateStuffingReq" class="container-fluid" ng-controller="PpgFumigationCtrl">
                   <div class="row">
                <div class="col-md-offset-0-5 col-md-11">
                    <div class="Head_h4">
                        <div class="row">
                            <div class="col-md-12">
                                <h4>Fumigation Invoice</h4>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-2 col-md-offset-1-5 col_cus_offset_2 col_cus_2_5">
                                    <div class="boolean-container">
                                        @*@Html.RadioButtonFor(m => m.InvoiceType, "Tax", new { id = "Tax", @checked = true, @onclick = "IVType('Tax')" })*@
                                        @Html.RadioButtonFor(m => m.InvoiceType, "Tax", new { id = "Tax", @checked = true, @onclick = "IVType('Tax')" })
                                        <label for="Tax"><i class="circle"></i><span>Tax Invoice</span></label>
                                    </div>
                                </div>
                                <div class="col-md-2 col_cus_3">
                                    <div class="boolean-container">
                                        @*@Html.RadioButtonFor(m => m.InvoiceType, "Bill", new { id = "Bill", @onclick = "IVType('Bill')" })*@
                                        @Html.RadioButtonFor(m => m.InvoiceType, "Bill", new { id = "Bill", @onclick = "IVType('Bill')" })
                                        <label for="Bill"><i class="circle"></i><span>Bill Of Supply</span></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Invoice No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @*@Html.TextBoxFor(m => m.InvoiceNo, new { @readonly = true })*@
                                    @Html.TextBoxFor(m => m.InvoiceNo, new { @readonly = true })
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                    <label>Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @*@Html.TextBox("DeliveryDate","", new { @class = "form -control input-sm", @readonly = true })*@
                                    @*@Html.TextBoxFor(m => m.InvoiceDate, new { @readonly = true, Value = DateTime.Today.ToString("dd/MM/yyyy") })*@
                                    @Html.TextBoxFor(m => m.DeliveryDate, new { @readonly = true, Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm") })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Party Name:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @*@Html.HiddenFor(m => m.PartyId)*@
                                    @Html.HiddenFor(m => m.PartyId)
                                    @Html.Hidden("SEZ1")
                                    @*@Html.TextBoxFor(m => m.PartyName, new { @readonly = true })*@
                                    @Html.TextBoxFor(m => m.PartyName, new { @class = "form-control input-sm", @readonly = true})

                                    <span class="search" id="PartySearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PartyModal"></i></span>
                                    @Html.ValidationMessageFor(m => m.PartyName, "", new { @class = "Error_Msg" })
                                    @*<span style="color:red" id="ErrPartyName"></span>*@
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Payee Name:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @*@Html.HiddenFor(m => m.PayeeId)*@
                                    @Html.HiddenFor(m => m.PayeeId)
                                    @*@Html.TextBoxFor(m => m.PayeeName, new { @readonly = true })*@
                                    @Html.TextBoxFor(m => m.PayeeName, new { @class = "form-control input-sm", @readonly = true, @onblur = "hideMsg(this)" })

                                    <span class="search" id="PayeeSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PayeeModal"></i></span>
                                  
                                    @Html.ValidationMessageFor(m => m.PayeeName, "", new { @class = "Error_Msg" })
                                    @*<span style="color:red" id="ErrPayeeName"></span>*@
                                 </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label> GST No:</label>
                                </div>
                                <div class="col-md-2">
                                    @*@Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })*@
                                    @Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })
                                </div>
                                <div class="col-md-offset-5 col-md-1-5" style="padding-right:0px">
                                    <label>Fumigation Charge Type:</label>
                                </div>
                                <div class="col-md-2">
                               
                                    @Html.DropDownListFor(m => m.FumigationChargeType, new List<SelectListItem> {
                       new SelectListItem { Text="Cargo Wise",Value="Cargo"},
                       new SelectListItem { Text="Container Wise",Value="Container"}
                   }, "----Select----", new { @class = "form-contol input-sm dropdown" })
                                    @Html.ValidationMessageFor(m => m.FumigationChargeType, "", new { @class = "Error_Msg" })
                                </div>

                            </div>
                        </div>


                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label> Place Of Supply:</label>
                                </div>
                                <div class="col-md-2">
                                    @*@Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })*@
                                    @Html.TextBox("PlaceOfSupply","", new { @readonly = true })
                                </div>
                                <div class="col-md-1-5">
                                    <label>SEZ</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.DropDownList("SEZ", new List<SelectListItem>
                                        {
                                        new SelectListItem { Text="SEZWP",Value="SEZWP"},
                                        new SelectListItem {Text="SEZWOP",Value="SEZWOP" }

                                        }, "---Select---", new { @class = "form-control input-sm dropdown" })
                                    @Html.ValidationMessage("SEZ", new { @class = "Error_Msg" })
                                </div>
                               
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label> Container/CBT:</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.HiddenFor(m=>m.CFSCode)
                                    @Html.TextBoxFor(m => m.Container, new { @readonly = true, @class = "form-control input-sm" })
                                    <span class="search" id="ContainerSearch"  ng-click="getContainerList()"><i class="fa fa-search" aria-hidden="true" ></i></span>
                                    
                                      @Html.ValidationMessageFor(m => m.Container,"", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrContainer"></span>

                                </div>

                                <div class="col-md-4">
                                    
                                </div>

                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label> Size:</label>
                                </div>
                                <div class="col-md-2">

                                    @Html.DropDownListFor(m => m.Size, new List<SelectListItem> {
                       new SelectListItem { Text="20",Value="20"},
                       new SelectListItem { Text="40",Value="40"}
                   }, "----Select----", new { @class = "form-contol input-sm dropdown" })
                                    @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                                </div>



                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Naration:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @*@Html.TextAreaFor(m => m.Remarks, new { @style = "height:75px;" })*@
                                    @Html.TextAreaFor(m => m.Naration, new { @style = "height:75px;", @maxlength = "500" })
                                </div>
                            </div>
                        </div>
                        <div class="Head_h4" style="margin:5px -8px;">

                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-1-5">
                                        <input type="hidden" id="ReceiptNo" />
                                        <label>Chemical Name</label>
                                    </div>
                                    <div class="col-md-4">
                                        @Html.Hidden("ChemicalId")
                                        @Html.TextBox("ChemicalName", "", new { @class = "form-control input-sm", @readonly = true, @onfocus = "hideMsg(this)" })
                                        <span class="search" id="PayeeSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ChemicalModal"></i></span>
                                        <span style="color:red" id="ErrChemicalName"></span>

                                        @Html.ValidationMessage("m => m.ChemicalName", "", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="col-md-offset-3 col-md-1-5">
                                        <label>Area</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBox("Quantity", "", new { @class = "form-control input-sm", onkeypress = "return AllowOnlyDecimal(event)", @onfocus = "hideMsg(this)" })
                                        <span style="color:red" id="ErrQuantity"></span>
                                        @Html.ValidationMessage("Quantity", "", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="row">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                            </div>

                            <div class="row">
                                <div class="col-md-offset-4 col-md-2  SignUp_space_bottom">
                                    <input type="button" id="btnAddFormOneDet" class="btn log_Btn_sm" value="Add" onclick="AddChemical()" />
                                </div>
                                <div class="col-md-2">
                                    <input type="button" id="btnResetFormOneDet" class="btn log_Btn_sm" value="Reset" onclick="ResetChemical()" />
                                </div>
                            </div>
                            <div class="logErrMsg" id="DivTblStuffingErrMsg" style="background-color:transparent"></div>

                            <div class="row Form_Space_top">
                                <div class="col-md-12">
                                    <table class="table table-striped table-bordered dataTable" id="tblCheDet" style="width:100%;"></table>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Amount:</label>
                                </div>
                                <div class="col-md-4">
                                    @*@Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })*@
                                    @Html.TextBoxFor(m => m.Amount, new { @class = "form-control input-sm", onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11",@readonly=true, @onfocus = "hideMsg(this)" })
                                    @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "Error_Msg" })
                                      <span style="color:red" id="Erramount"></span>
                                </div>
                                <div class="col-md-3">
                                    <input type="button" value="Get Charge" class="btn log_Btn_sm" id="btnGet" />
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label> CGST:</label>
                                </div>
                                <div class="col-md-2">
                                    @Html.HiddenFor(m => m.CGSTPer)
                                    @Html.TextBoxFor(m => m.CGST, "", new { @onblur = "return caltax();", onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" , @readonly = true })
                                </div>
                                <div class="col-md-1 col_cus_2">
                                    <label> SGST:</label>
                                </div>
                                <div class="col-md-2">
                                    @Html.HiddenFor(m => m.SGSTPer)
                                    @Html.TextBoxFor(m => m.SGST, "", new { @onblur = "return caltax();", onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" , @readonly = true })
                                </div>

                                <div class="col-md-1 col_cus_2">
                                    <label> IGST:</label>
                                </div>
                                <div class="col-md-2">
                                    @Html.HiddenFor(m => m.IGSTPer)
                                    @Html.TextBoxFor(m => m.IGST, "", new { @onblur = "return caltax();", onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" , @readonly = true })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label> Round Up:</label>
                                </div>
                                <div class="col-md-4">
                                    @*@Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })*@
                                    @Html.TextBoxFor(m => m.Round_up, "", new { @readonly = true })
                                </div>

                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label> Total:</label>
                                </div>
                                <div class="col-md-4">
                                    @*@Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })*@
                                    @Html.TextBoxFor(m => m.Total, "", new { @readonly = true  })
                                </div>

                            </div>
                        </div>

                        <div class="row SignUp_space_bottom SignUp_space_top">
                            <div class="stoke"></div>
                        </div>
                        <div class="logSuccMsg Form_Space_bottom" id="DivMiscInvMsg" style="background-color:transparent"></div>
                        <div class="row SignUp_space_bottom2">
                            <div class="col-md-offset-3 col-md-2">
                                <input type="button" value="Save" class="btn log_Btn_sm" id="btnSave" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Reset" class="btn log_Btn_sm" onclick="ResetField()" />
                            </div>

                            <div class="col-md-3">
                                <input type="button" id="BtnGenerateIRN" class="btn log_Btn_sm" value="Generate IRN" onclick="GenerateIRN()" disabled="disabled" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Print" class="btn log_Btn_sm" onclick="Print()" id="btnPrint" disabled />
                            </div>


                           
                        </div>
                    </div>
                </div>
            </div>




        <div id="ChemicalModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content popup_modal">
                    <div class="modal-header popup_header">
                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                        <h4 class="modal-title">List of Chemical</h4>
                    </div>
                    <div class="modal-body popup_body">
                        <input placeholder="Search Me" id="Chemicalbox" type="text" />
                        <ul class="navList" id="lstChemical">
                            @*@{
                            foreach (var item in Model.lstGodownList)
                            {
                            <li id="@item.GodownId">@item.GodownName</li>
                            }
                            }*@
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-md-offset-6 col-md-6">
                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="PartyModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content popup_modal">
                    <div class="modal-header popup_header">
                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                        <h4 class="modal-title">List of Party</h4>
                    </div>
                    <div class="modal-body popup_body">
                        <input placeholder="Search Me" id="Partybox" type="text" />
                        <ul class="navList" id="lstParty">
                            @*@{
                            foreach (var item in Model.lstGodownList)
                            {
                            <li id="@item.GodownId">@item.GodownName</li>
                            }
                            }*@
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-md-offset-6 col-md-6">
                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="PayeeModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content popup_modal">
                    <div class="modal-header popup_header">
                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                        <h4 class="modal-title">List of Payee</h4>
                    </div>
                    <div class="modal-body popup_body">
                        <input placeholder="Search Me" id="Payeebox" type="text" />
                        <ul class="navList" id="lstPayee">
                            @*@{
                            foreach (var item in Model.lstGodownList)
                            {
                            <li id="@item.GodownId">@item.GodownName</li>
                            }
                            }*@
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-md-offset-6 col-md-6">
                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="ContainerModal" class="modal fade" role="dialog">
            <div class="modal-dialog">
                <!-- Modal content-->
                <div class="modal-content popup_modal">
                    <div class="modal-header popup_header">
                        <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                        <h4 class="modal-title">List of Container</h4>
                    </div>
                    <div class="modal-body popup_body">
                        <input placeholder="Search Me" id="Containerbox" type="text" ng-model="Containerbox" />
                        <ul class="navList" id="lstContainer">
                            <li ng-repeat="c in Containers|filter:Containerbox" ng-click="selectContainer(c)">{{c.ContainerNo}}&nbsp;&nbsp;{{c.CFSCode}}&nbsp;&nbsp;{{c.Size}}</li>
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-md-offset-6 col-md-6">
                                <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
     </div>

@Scripts.Render("~/bundles/jqueryval")

}
<script>

    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 5000;
        $('#DeliveryDate').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
            }
        });
        PartyBinding();
        PayeeBinding();
        ChemicalBinding();
    });
    function PartyBinding() {
        debugger;
        var PartyJson = JSON.parse($('#hdnPartyPayee').val());
        var html = '';
        $.each(PartyJson, function (i, item) {
            html += '<li id="' + item.PartyId + '" onclick="selectParty(' + item.PartyId + ');">' + item.PartyName + '</li>';
        });
        $('#lstParty').html(html);
    }
    $('#btnSave').on("click", function () {
        debugger;
        if ($('#tblCheDet').html() == '' && $('#FumigationChargeType').val() == 'Cargo') {
            $('#DivTblStuffingErrMsg').html('Please Add Atleast One Record In Order To Save Chemical Detail');
            return false;
        }


        else {
            if (confirm("Are You Sure You Want To Save?")) {
                $('#btnSave').attr('disabled', true);
                $('#ChemicalXML').val(JSON.stringify(ArrayOfChemicalDetails));
                $('#btnSave').submit();
            }
            }
    });
    function ChemicalBinding() {
        var ChemicalJson = [];
        if ($('#hdnChemical').val() != '' || $('#hdnChemical').val() == null)
        {
            var ChemicalJson = JSON.parse($('#hdnChemical').val());
        }
        else {

        }
        
        var html = '';
        $.each(ChemicalJson, function (i, item) {
            html += '<li id="' + item.ChemicalId + '" onclick="selectChemical(' + item.ChemicalId + ');">' + item.ChemicalName + '</li>';
        });
        $('#lstChemical').html(html);
    }
    $('#Partybox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstParty > li').show();
        else {
            $('#lstParty > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#Chemicalbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstChemical > li').show();
        else {
            $('#lstChemical > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });


    function selectChemical(id) {
        var ChemicalJson = JSON.parse($('#hdnChemical').val());
        var Chemical = $.grep(ChemicalJson, function (item) { return item.ChemicalId == id; })[0];
        $('#ChemicalId').val(Chemical.ChemicalId);
        $('#ChemicalName').val(Chemical.ChemicalName);
        $("#ChemicalModal").modal("hide");
    }
    function selectParty(id) {
        var PartyJson = JSON.parse($('#hdnPartyPayee').val());
        var Party = $.grep(PartyJson, function (item) { return item.PartyId == id; })[0];
        $('#PartyId').val(Party.PartyId);
        $('#PartyName').val(Party.PartyName);
        $('#GSTNo').val(Party.GSTNo);
        $('#hdnAddress').val(Party.Address);
        $('#hdnState').val(Party.State);
        $('#PlaceOfSupply').val(Party.State);
        $('#hdnStateCode').val(Party.StateCode);
        if ($('#MiscInvModelJson').val() != null && $('#MiscInvModelJson').val() != '' && $('#MiscInvModelJson').val() != 'undefined') {
            var rawJson = JSON.parse($('#MiscInvModelJson').val());

            rawJson.PartyId = $('#PartyId').val();
            rawJson.PartyName = $('#PartyName').val();
            rawJson.GSTNo = $('#GSTNo').val();

            $('#MiscInvModelJson').val(JSON.stringify(rawJson));
        }
        $("#PartyModal").modal("hide");
        $('[data-valmsg-for="PartyName"]').html('<span></span>');

        var val = $('#FumigationChargeType').val();

        if(val=="Cargo" || val=="Container")
        {
            FumigationChargeType = $('#FumigationChargeType').val();
            InvoiceType = $("input[name='InvoiceType']:checked").val();;
            PartyId = $('#PartyId').val();
            Fumigation(FumigationChargeType, InvoiceType, PartyId);
        }

    }
    $('#FumigationChargeType').change(function () {
        debugger;
        var val = $('#FumigationChargeType').val();
        if (val == 'Container') {
            $('#tblCheDet').html('');
            $('#Container').prop('disabled', false);
            $('#Size').removeAttr('disabled');
            $("#btnAddFormOneDet").prop("disabled", true);
            ResetChemicalDet();
        }
        else {
            $('#Size').attr("disabled","disabled");
            $('#tblCheDet').html('');
            ArrayOfChemicalDetails = [];
            $("#btnAddFormOneDet").prop("disabled", false);
            $('#Container').prop('disabled', true);
            ResetChemical();
            ResetChemicalDet();
        }
            
    })
    $('#btnGet').on("click", function () {
        debugger;
     
      
        FumigationChargeType = $('#FumigationChargeType').val();
        InvoiceType = $("input[name='InvoiceType']:checked").val();;
        PartyId = $('#PartyId').val();
        size = $('#Size').val();
        lstChemicalarr = ArrayOfChemicalDetails;
        $('.search').css('display', 'none');
     
        $.ajax({
            url: '/CashManagement/Loni_CashManagement/GetFumigation',
            type: 'POST',
            async: false,
            datatype: JSON,
            data: { FumigationChargeType: FumigationChargeType, InvoiceType: InvoiceType, PartyId: PartyId, size: size, ChemicalDetails: lstChemicalarr,SEZ:$('#SEZ').val() },
            success: function (data) {
                // debugger;
                if (data != undefined || data != null) {
                    // debugger;
                    //alert(data);
                    $('.search').css('display', 'none');
                    $('#SEZ1').val($('#SEZ').val());
                    $('#SEZ').prop('disabled',true);
                    populateJsondata(data);


                }
                else {
                    alert("fail");
                    //  $('#DivBody').load('/GateOperation/HDB_CWCGateOperation/CreateEntryThroughGate');
                }

            }
        });

    })
  
    function populateJsondata(data) {
        debugger;
        $("#Amount").val(data.Amount);
        $("#CGST").val(data.CGST);
        $("#SGST").val(data.SGST);
        $("#IGST").val(data.IGST);
        $("#CGSTPer").val(data.CGSTPer);
        $("#SGSTPer").val(data.SGSTPer);
        $("#IGSTPer").val(data.IGSTPer);
        $("#Round_up").val(data.Round_up);
        $("#Total").val(data.Total);


    }
    function PayeeBinding() {
        debugger;
        var PartyJson = JSON.parse($('#hdnPartyPayee').val());

        var html = '';
        $.each(PartyJson, function (i, item) {
            html += '<li id="' + item.PartyId + '" onclick="selectPayee(' + item.PartyId + ');">' + item.PartyName + '</li>';
        });
        $('#lstPayee').html(html);
    }
    $('#Payeebox').keyup(function () {
        debugger;
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstPayee > li').show();
        else {
            $('#lstPayee > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    function selectPayee(id) {
        var PartyJson = JSON.parse($('#hdnPartyPayee').val());
        var Party = $.grep(PartyJson, function (item) { return item.PartyId == id; })[0];
        $('#PayeeId').val(Party.PartyId);
        $('#PayeeName').val(Party.PartyName);
        $("#PayeeModal").modal("hide");
        $('[data-valmsg-for="PayeeName"]').html('<span></span>');
    }

    var TaxType = '@ViewData["InvType"].ToString()';
    function IVType(Type) {

        TaxType = Type;
        $('#DivBody').load('/CashManagement/Loni_CashManagement/CreateFumigationInvoice?type=' + Type);
    }
    if (TaxType == 'Tax')
        $('#Tax').prop('checked', true);
    else {
        $('#Bill').prop('checked', true);
        $('#CGST').val(0);
        $('#CGST').prop('readonly', true);
        $('#SGST').val(0);
        $('#SGST').prop('readonly', true);
        $('#IGST').val(0);
        $('#IGST').prop('readonly', true);
    }
    //calculate total amount
    function caltotal() {
        var amt = $('#Amount').val();
        var round = Math.ceil(amt) - amt;
        var rounduptot = Math.ceil(amt);

        $('#Round_up').val(round.toFixed(2));
        $('#Total').val(rounduptot);
        $('#CGST').val('0.00');
        $('#SGST').val('0.00');
        $('#IGST').val('0.00');
    }

    //calculate tax

    function caltax() {
        var cgst = $('#CGST').val();
        var sgst = $('#SGST').val();
        var igst = $('#IGST').val();
        var amt = $('#Amount').val();
        if (amt != '') {
            var totamt = 0;
            if (cgst == '')
                cgst = 0;


            if (sgst == '')
                sgst = 0;

            if (igst == '')
                igst = 0;


            totamt = parseFloat(amt) + parseFloat(cgst) + parseFloat(sgst) + parseFloat(igst);

            var round = Math.ceil(totamt) - totamt;
            var rounduptot = Math.ceil(totamt);

            $('#Round_up').val(round.toFixed(2));
            $('#Total').val(rounduptot);

            if (cgst > 0 || sgst > 0) {
                $('#IGST').prop('readonly', true);
            }

            if (igst > 0) {
                cgst = 0;
                sgst = 0;
                $('#CGST').prop('readonly', true);
                $('#SGST').prop('readonly', true);
            }

        }
    }
    var ArrayOfChemicalDetails = [];
    function AddChemical() {


        

        if (ValidateChemicalDet()) {
            $('#ErrChemicalName,#ErrQuantity').html('');

            var ChemicalDetails = {
                "ChemicalId": $('#ChemicalId').val(),
                "ChemicalName": $('#ChemicalName').val(),
                "Quantity": $('#Quantity').val()

            };
            /*if (EditIndex > -1)
                ArrayOfContainerDetails.splice(EditIndex, 1, ContainerDetails);
            else*/

            var flag = 0;
            $.each(ArrayOfChemicalDetails, function (i, item) {
                if (item.ChemicalId == ChemicalDetails.ChemicalId ) {
                    flag = 1;

                }

            });


            if(flag==0)
                ArrayOfChemicalDetails.push(ChemicalDetails);
            else alert('Chemical already exists')

            $('#tblCheDet').html('');

            $('#ChemicalName, #Quantity').val('');
            GenerateTable();
            //ResetFormOneDet();
            // ResetFormOneDetPartial();
        }
    }

    //function GenerateTable() {
    //    var tablehtml = '<table id="tblCheDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
    //        + '<thead><tr><th style="width:8%;text-align:center;">SL No</th><th>Chemical Name</th><th>Quantity</th><th style="width:10%;text-align:center;">Edit</th><th style="width:10%;text-align:center;">View</th></tr>'
    //        + '</thead><tbody>';
    //    $.each(ArrayOfChemicalDetails, function (i, data) {
    //        tablehtml += '<tr><td style="text-align:center;">' + (i + 1) + '</td><td>' + data.ChemicalName + '</td><td>' + data.Quantity + '</td>'
    //            + '<td style="text-align:center;"><a href="#" onclick="EditChemicalDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td>'
    //            + '<td style="text-align:center;"><a href="#" onclick="ViewChemicalDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
    //    });
    //    tablehtml += '</tbody></table>';
    //    $('#tblCheDet').html(tablehtml);

    //    if (ArrayOfChemicalDetails.length > 0) {
    //        $('#ChemicalDetails').val(JSON.stringify(ArrayOfChemicalDetails));
    //    }
    //    else {
    //        $('#ChemicalDetails').val('');
    //    }
    //}

    function GenerateTable() {
        var tablehtml = '<table id="tblCheDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
            + '<thead><tr><th style="width:8%;text-align:center;">SL No</th><th>Chemical Name</th><th>Area</th><th style="width:10%;text-align:center;">Edit</th></tr>'
            + '</thead><tbody>';
        $.each(ArrayOfChemicalDetails, function (i, data) {
            tablehtml += '<tr><td style="text-align:center;">' + (i + 1) + '</td><td>' + data.ChemicalName + '</td><td>' + data.Quantity + '</td>'
                + '<td style="text-align:center;"><a href="#" onclick="EditChemicalDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblCheDet').html(tablehtml);

        if (ArrayOfChemicalDetails.length > 0) {
            $('#ChemicalDetails').val(JSON.stringify(ArrayOfChemicalDetails));
        }
        else {
            $('#ChemicalDetails').val('');
        }
    }

    function ResetChemical() {

        $('#ChemicalName, #Quantity').val('');
        var ftype = $('#FumigationChargeType').val();

        if (ftype == "Container") {
            $('#btnAddFormOneDet').prop("disabled", true);
        }
        else {
            $('#btnAddFormOneDet').prop("disabled", false);
        }
    }
    

    function ResetChemicalDet() {

        $('#Container').val('');
        $('#CFSCode').val('');
        $('#Size').val('');

    }

    function EditChemicalDet(i) {
        debugger;
        if ($('#ChemicalName').val() == '') {
            $('#btnAddFormOneDet').prop("disabled", false);
            $('#ChemicalName').val(ArrayOfChemicalDetails[i].ChemicalName);
            $('#ChemicalId').val(ArrayOfChemicalDetails[i].ChemicalId);
            $('#Quantity').val(ArrayOfChemicalDetails[i].Quantity);

            ArrayOfChemicalDetails.splice(i, 1);
            GenerateTable();
        }
        else
            alert('Cannot see the second edit as already first edit opened');
       
    }
    function ViewChemicalDet(i) {
        if ($('#ChemicalName').val() == '') {
        $('#ChemicalId').val(ArrayOfChemicalDetails[i].ChemicalId);
        $('#ChemicalName').val(ArrayOfChemicalDetails[i].ChemicalName);
        $('#Quantity').val(ArrayOfChemicalDetails[i].Quantity);
        $('#btnAddFormOneDet').prop("disabled", true);
        }
        else
            alert('Cannot see the second view as already first view opened');
    }
    function hideMsg(elem) {
        $(elem).parent().find(".field-validation-error").html(" ");
    }
    function ValidateChemicalDet() {
        debugger;
        var Status = true;
        if ($('#ChemicalName').val() == "") {
            $('#ErrChemicalName').html('Fill Out This Field');
            Status = false;
        }

        if ($('#Quantity').val() == "") {
            $('#ErrQuantity').html('Fill Out This Field');
            Status = false;
        }

        if ($('#Quantity').val() == "0") {
            $('#ErrQuantity').html('Zero Area Is Not Allowed');
            Status = false;
        }
        return Status;
    }
    function PaymentOnSuccess(data) {

        if (data.Status == 1 || data.Status == 2 || data.Status == 3 || data.Status == 4) {
            if ($('#DivMiscInvMsg').hasClass('logErrMsg'))
                $('#DivMiscInvMsg').removeClass('logErrMsg').addClass('logSuccMsg');

            var InvSupplyData = data.Data.InvoiceNo.split(',');
            $('#InvoiceNo').val(InvSupplyData[0]);
            $('#SupplyType').val(InvSupplyData[1]);
            $('#BtnGenerateIRN').removeAttr('disabled');
          //  $('#InvoiceNo').val(data.Data.InvoiceNo);
            $('#FumigationInvModelJson').val(JSON.stringify(data.Data));
            $('#DivMiscInvMsg').html(data.Message);
            if (data.Status == 3 || data.Status == 4) {
                $('#btnPrint').attr('disabled', true);
                $('#BtnGenerateIRN').attr('disabled', true);
            }
            else {
                $('#BtnGenerateIRN').removeAttr('disabled');
                $('#btnPrint').attr("disabled", false);

                $('#btnSave').attr('disabled', true);
            }
            //setTimeout(ResetField, TimeInSeconds);
        }
        else {
            if ($('#DivMiscInvMsg').hasClass('logSuccMsg'))
                $('#DivMiscInvMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMiscInvMsg').html(data.Message);
        }
    }
    function PaymentOnFailure() {
        alert("Error");
    }
    function ResetField() {

        $('#DivBody').load('/CashManagement/Loni_CashManagement/CreateFumigationInvoice');
    }

    function BindJson() {
        debugger;
        if ($('#PartyName').val() == '' ) {
            // $('[data-valmsg-for="PartyName"]').html('<span>Fill Out This Field</span>');
            $('[data-valmsg-for="PartyName"]').html('Fill Out This Field');
            return false;
        }
        else if ($('#PayeeName').val() == '') {
            //   $('[data-valmsg-for="PayeeName"]').html('<span>Fill Out This Field</span>');
            $('[data-valmsg-for="PayeeName"]').html('Fill Out This Field');
            return false;
        }
        else if ($('#Container').val() == '') {
            $('[data-valmsg-for="Container"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        
        else {



            var conf = confirm("Do you want to save ?");

            if (conf) {
                try {
                    $('#btnSave').attr('disabled', true);


                    var data = {
                        InvoiceId: 0,
                        DeliveryDate: $('#DeliveryDate').val(),
                        InvoiceType: TaxType,
                        PartyId: $('#PartyId').val(),
                        PartyName: $('#PartyName').val(),
                        PayeeId: $('#PayeeId').val(),
                        PayeeName: $('#PayeeName').val(),
                        GSTNo: $('#GSTNo').val(),
                        Container: $('#Container').val(),
                        Size: $('#Size').val(),
                        Naration: $('#Naration').val(),
                        Amount: $('#amount').val(),
                        CGST: $('#cgst').val(),
                        SGST: $('#sgst').val(),
                        IGST: $('#IGST').val(),
                        Round_up: $('#round_up').val(),
                        Total: $('#total').val()


                    };


                    $('#FumigationInvModelJson').val(JSON.stringify(data));
                    var rawJson = JSON.parse($('#FumigationInvModelJson').val());

                    rawJson.InvoiceId = 0;
                    rawJson.InvoiceType = TaxType;
                    rawJson.DeliveryDate = $('#DeliveryDate').val();
                    rawJson.PartyId = $('#PartyId').val();
                    rawJson.PartyName = $('#PartyName').val();
                    rawJson.PayeeId = $('#PayeeId').val();
                    rawJson.PayeeName = $('#PayeeName').val();
                    rawJson.GSTNo = $('#GSTNo').val();
                    rawJson.Container = $('#Container').val();
                    rawJson.Size = $('#Size').val();
                    rawJson.Amount = $('#amount').val();
                    rawJson.CGST = $('#cgst').val();
                    rawJson.SGST = $('#sgst').val();
                    rawJson.IGST = $('#IGST').val();
                    rawJson.Round_up = $('#round_up').val();
                    rawJson.Total = $('#total').val();
                    //  rawJson.RoundUp = Number(rawJson.Round_up.toFixed(2));
                    //  rawJson.Total = Number(rawJson.Total);
                    rawJson.Naration = $('#Naration').val();
                    //var ChemicalData =
                    //    {
                    //        ChemicalId: $('#ChemicalId').val(),
                    //        ChemicalName: $('#ChemicalName').val(),
                    //        Quantity: $('#Quantity').val(),
                    //    }


                    //$('#ChemicalDetails').val(JSON.stringify(ArrayOfChemicalDetails));


                    $('#ChemicalXML').val(JSON.stringify(ArrayOfChemicalDetails));
                    $('#FumigationInvModelJson').val(JSON.stringify(rawJson));

                    $('form#FumiInvoice').submit();

                }
                catch (e) {
                    $('#btnSave').removeAttr('disabled');
                }
            }
        }
    }

   


    //Printing Misc. Invoice

    function Print() {
        /*
         var actualJson = JSON.parse($('#MiscInvModelJson').val());
         var amountinwords = CurrentcyToWord(actualJson.Total);
         var html1 = "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th colspan='3' style='text-align:center;vertical-align:bottom;font-size:8pt;'>CENTRAL WAREHOUSING CORPORATION<br/>(A GOVT. OF INDIA UNDERTAKING)<br/><span style='border-bottom:1px solid #000;font-weight:600;'>" + (actualJson.InvoiceType == "Tax" ? "TAX INVOICE" : "BILL OF SUPPLY") + "</span></th></tr></thead><tbody><tr><td style='vertical-align: top;border:1px solid #000;padding: 5px;'><span style='font-weight: 600;'>Regional Office(Ahmedabad)</span>,<br/>Regional Manager,<br/>Central Warehousing Corporation,<br/>Mahalaxmi Char Rasta,<br/>Opp.Unnati Vidyalaya, Paladi,<br/>Ahmedabad-380 007</td><td style='vertical-align: top;border:1px solid #000;padding: 5px;'><span style='font-weight: 600;'>KOLKATA CWC</span>, <br/>18, COLD DOCK ROAD<br/>KOLKATA - 700043<br/>manager_cfs@yahoo.in<br/><br/>GSTIN- <span>19AAACC1206D2ZC</span><br/>PAN No.- <span>AAACC1206D</span><br/>State Code- <span>19</span></td><td style='vertical-align: top;border:1px solid #000;padding: 3px 5px;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;'><thead><tr><td colspan='2'><span style='font-weight: 600;text-decoration: underline;'>Details of Receiver ( Billed to)</span></td></tr></thead><tbody><tr><td style='width:20%;font-weight: 600;'>Name:</td><td><span>" + actualJson.PartyName + "</span></td></tr><tr><td style='width:20%;font-weight: 600;'>Address:</td><td><span></span></td></tr><tr><td style='width:20%;font-weight: 600;'>State:</td><td><span></span></td></tr><tr><td style='width:20%;font-weight: 600;'>State Code:</td><td><span></span></td></tr><tr><td style='width:20%;font-weight: 600;'>GSTIN/ Unique ID:</td><td><span>" + actualJson.PartyGST + "</span></td></tr></tbody></table></td></tr></tbody></table><table style='width:99.7%;margin-left:0.15%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th colspan='6' style='vertical-align:top;text-align:left;padding:5px;'>Invoice No. <span>" + actualJson.InvoiceNo + "</span></th><th colspan='6' style='text-align:right;padding:5px;'>Date: <span>" + (new Date()).getDate() + "/" + ((new Date()).getMonth() + 1) + "/" + (new Date()).getFullYear() + "</span></th></tr><tr><th style='border:1px solid #000;text-align:center;width:20%;padding: 5px;'>Particulars</th><th style='border:1px solid #000;padding: 5px;'>SAC</th><th style='border:1px solid #000;padding: 5px;'>Value</th><th style='border:1px solid #000;padding: 5px;'>TDS</th><th style='border:1px solid #000;text-align:center;padding: 5px;'>Discount</th><th colspan='6' style='border:1px solid #000;text-align:center;padding: 5px;'>Taxes</th><th style='border:1px solid #000;padding: 5px;'>Total Amount</th></tr><tr><th style='border:1px solid #000;border-bottom:none;padding: 5px;'></th><th rowspan='2' style='border:1px solid #000;padding: 5px;'></th><th rowspan='2' style='border:1px solid #000;padding: 5px;'>" + actualJson.Amount + "</th><th rowspan='2' style='border:1px solid #000;padding: 5px;'></th><th rowspan='2' style='border:1px solid #000;padding: 5px;'></th><th style='border:1px solid #000;padding: 5px;'>Rate</th><th style='border:1px solid #000;padding: 5px;'>CGST</th><th style='border:1px solid #000;padding: 5px;'>Rate</th><th style='border:1px solid #000;padding: 5px;'>SGST</th><th style='border:1px solid #000;padding: 5px;'>Rate</th><th style='border:1px solid #000;padding: 5px;'>IGST</th><th style='border:1px solid #000;padding: 5px;'></th></tr></thead><tbody><tr><td style='border:1px solid #000;padding-left: 5px;'>" + actualJson.Purpose + "</td><td style='border:1px solid #000;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span>" + actualJson.CGST + "</span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span>" + actualJson.SGST + "</span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span>" + actualJson.IGST + "</span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span>" + actualJson.Total + "</span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'><span></span></td></tr><tr><td colspan='12'>&nbsp;</td></tr><tr><td style='border:1px solid #000;padding-left: 5px;'><b>Grand Total</b></td><td style='border:1px solid #000;padding: 3px 5px;'></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'>" + actualJson.Amount + "</span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'></span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'>0.00</td><td style='border:1px solid #000;padding: 3px 5px;'></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'>" + actualJson.CGST + "</span></td><td style='border:1px solid #000;padding: 3px 5px;'></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'>" + actualJson.SGST + "</span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'></span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'>" + actualJson.IGST + "</span></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'>" + actualJson.Total + "</span></td></tr><tr><td colspan='11' style='border:1px solid #000;padding-left: 5px;'><b>Round Up</b></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'>" + actualJson.Round_up + "</span></td></tr><tr><td colspan='11' style='border:1px solid #000;padding-left: 5px;'><b>Grand Total(Rounded)</b></td><td style='border:1px solid #000;text-align:right;padding: 3px 5px;'> <span style='font-weight:600;'>" + actualJson.Total + "</span></td></tr><tr><td colspan='12' style='border:1px solid #000;padding-left: 5px;font-weight:600;'>TDS Deduction :  <br/>TDS Collection :  <br/> <br/>FIGURE IN WORDS: <span>"+amountinwords+" </span></td></tr><tr><td colspan='12' style='padding:5pt 5pt 50pt 5pt;'> <b>REMARKS: <span>" + actualJson.Naration + "</span> </b></td></tr></tbody><tfoot><tr><td colspan='4' style='padding-left: 5px;'>WAI/TA/JTA/JS/SUPTD</td><td colspan='4'>AM (A/cs)</td><td colspan='4' style='text-align:center;'>Manager (CFS)</td></tr></tfoot></table><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='padding: 5px;'><b>Invoice No.<span>" + actualJson.InvoiceNo + "</span></b></td><td style='vertical-align:top;text-align: right;padding: 5px;'><b>Date: <span></span></b></td></tr><tr><td colspan='2'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse: collapse;'><thead><tr><th style='border:1px solid #000;text-align: left;padding: 5px;'>Container No.</th><th style='border:1px solid #000;padding: 5px;'>CFS Code</th><th style='border:1px solid #000;padding: 5px;'>Size</th><th style='border:1px solid #000;padding: 5px;'>Arrival</th><th style='border:1px solid #000;padding: 5px;'>Non-Haz</th><th style='border:1px solid #000;padding: 5px;'>Destuffing</th><th style='border:1px solid #000;padding: 5px;'>Bill of Entry</th><th style='border:1px solid #000;padding: 5px;'>Delivery</th><th style='border:1px solid #000;padding: 5px;'>Customs Examination</th></tr></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td><td style='border:1px solid #000;text-align:center;padding: 3px 5px;'><span></span></td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:6.5pt;font-family:Verdana,Arial,San-serif;border-collapse: collapse;'><tbody><tr><td style='width:25%;font-weight: 600;padding: 3px 5px;'>Shipping Line:</td><td><span> </span></td><td style='width:25%;font-weight: 600;padding: 3px 5px;'>Name of Importer:</td><td><span></span></td></tr><tr><td style='width:25%;font-weight: 600;padding: 3px 5px;'>Name of CHA.:</td><td><span></span></td><td style='width:25%;font-weight: 600;padding: 3px 5px;'>No. of Packages:</td><td><span></span></td></tr><tr><td style='width:25%;font-weight: 600;padding: 3px 5px;'>Total Gross Weight:</td><td><span></span></td><td style='width:25%;font-weight: 600;padding: 3px 5px;'>Gross Weight per Package:</td><td><span></span></td></tr><tr><td style='width:25%;font-weight: 600;padding: 3px 5px;'>Storage space occupied():</td><td><span></span></td></tr></tbody></table></td></tr><tr><td colspan='2' style='font-weight: 600;padding: 8px 5px;'>Value of Cargo (CIF Value + Duty + Penalty) Rs. <span></span></td></tr></tbody></table>";


         var PostData = new FormData();
         PostData.append("type", "Misc.Inv");
         PostData.append("id", $('#InvoiceNo').val());
         PostData.append("page", html1);
        // PostData.append("npage", html2);*/
        debugger;
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetBulkInvoiceReport", "Loni_ReportCWC", new { area = "Report" })',
            headers: { "__RequestVerificationToken": Token },
            data: {
                InvoiceNumber: $('#InvoiceNo').val(),
                InvoiceModule: 'Fumigation',
                PeriodFrom: '@DateTime.Now.ToString("dd/MM/yyyy")',
                PeriodTo: '@DateTime.Now.ToString("dd/MM/yyyy")',
                InvoiceModuleName: 'Fumigation',
            },
            dataType:'JSON',
            success: function (data) {
                window.open(data.Data + '?t=' + (new Date().getTime()), "_blank", "fullscreen=yes");
            }
        });
    }

    function CurrentcyToWord(s) {
        var th = ['', 'thousand', 'million', 'billion', 'trillion'];
        var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
        var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
        var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        s = s.toString();
        s = s.replace(/[\, ]/g, '');
        if (s != parseFloat(s)) return 'not a number';
        var x = s.indexOf('.');
        if (x == -1) x = s.length;
        if (x > 15) return 'too big';
        var n = s.split('');
        var str = '';
        var sk = 0;
        for (var i = 0; i < x; i++) {
            if ((x - i) % 3 == 2) {
                if (n[i] == '1') {
                    str += tn[Number(n[i + 1])] + ' ';
                    i++;
                    sk = 1;
                } else if (n[i] != 0) {
                    str += tw[n[i] - 2] + ' ';
                    sk = 1;
                }
            } else if (n[i] != 0) {
                str += dg[n[i]] + ' ';
                if ((x - i) % 3 == 0) str += 'hundred ';
                sk = 1;
            }
            if ((x - i) % 3 == 1) {
                if (sk) str += th[(x - i - 1) / 3] + ' ';
                sk = 0;
            }
        }
        if (x != s.length) {
            var y = s.length;
            str += 'point ';
            for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';
        }
        return str.replace(/\s+/g, ' ');
    }

    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    $("#BtnSave").on("click", function () {
        debugger;
        if ($('#FumigationChargeType').val==Cargo) {
            $('#Size').val() == '';
        }
        else {
 
                if ($('#Size').val() == '') {
                    $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                    //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                    return false;
                }
            }
        

        /*if ($.trim($('#ContainerNo1').val()) != '') {
            if ($('#Size').val() == '') {
                $('[data-valmsg-for="Size"]').html('<span>Fill Out This Field</span>');
                //   $('data-valmsg-for="Size"').html('span>Fill Out This Field</span>');
                return false;
            }
        }
    }*/
    });




    function GenerateIRN() {
        $.ajax({
            url: '/Import/Loni_CWCImport/GetIRNForYardInvoice',
            type: 'POST',
            data: { InvoiceNo: $('#InvoiceNo').val(), SupplyType: $('#SupplyType').val() },
            // headers:{"__RequestVerificationToken":Token},
            dataType: 'JSON',
            success: function (data) {

                if (data.Status == 1) {

                    alert("IRN has been generated successfully")
                    $('#btnPrint').attr("disabled", false);

                    $('#BtnGenerateIRN').attr("disabled", true);
                }
                else {
                    alert(data.Message);
                    $('#btnPrint').attr("disabled", false);
                    $('#BtnGenerateIRN').attr("disabled", true);
                }
            }
        });
    }

</script>
