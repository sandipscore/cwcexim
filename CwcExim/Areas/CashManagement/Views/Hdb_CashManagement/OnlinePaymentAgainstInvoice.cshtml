@model CwcExim.Areas.CashManagement.Models.HDB_OnlinePaymentAgainstInvoice

@using (Ajax.BeginForm("OnlinePaymentAgainstInvoice", "Hdb_CashManagement", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnlinePayOnSuccess", LoadingElementDuration = 1000, LoadingElementId = "divProgress", OnBegin = "validateForm", OnComplete = "SaveDisabled", Confirm = "Are you sure you want to Save?" }))
{
    @Html.AntiForgeryToken()
   @Html.HiddenFor(x=>x.lstInvoiceDetails)

    <div class="row">
        <div class="col-md-12">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Online Payment Against Invoice</h4>
                    </div>
                </div>
                <div class="content_wrp">
                    <div class="row Form_Space_top">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label class="Radiocontainer">
                                    INVOICE
                                    @Html.RadioButtonFor(m => m.Type, "INVOICE", new { @id = "INVOICE", @onchange = "ChangeType()", @checked = "checked" })
                                    <span class="checkmark"></span>
                                </label>
                                <label class="Radiocontainer">
                                    DEBITNOTE
                                    @Html.RadioButtonFor(m => m.Type, "DEBITNOTE", new { @id = "DEBITNOTE", @onchange = "ChangeType()" })
                                    <span class="checkmark"></span>
                                </label>
                                @*@Html.RadioButtonFor(m => m.Type, "INVOICE", new { @id = "INVOICE", @onchange = "ChangeType()", @checked = "checked" })
                            <label for="INVOICE"><i class="circle"></i><span>INVOICE</span></label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.RadioButtonFor(m => m.Type, "DEBITNOTE", new { @id = "DEBITNOTE", @onchange = "ChangeType()" })
                            <label for="DEBITNOTE"><i class="circle"></i><span>DEBIT NOTE</span></label>
                        </div>*@
                            </div>
                        </div>


                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <table id="CWCCCIN" class="table table-striped table-bordered dataTable Table_center">
                                    <thead>
                                        <tr>
                                            <th style="width:12%;">Sl No.</th>
                                            <th>Invoice No.</th>
                                            <th>Date</th>
                                            <th>Amount</th>

                                            <th class="text-center">
                                                <div class="boolean-container">
                                                    <input type="checkbox" id="AllChkbox" onclick="CheckCheckBox()" />
                                                    <label style="text-align:center;" for="AllChkbox"> Select <i class="square"></i></label>
                                                </div>
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3 col-md-offset-9">
                                <div class="form-group">
                                    <label>Total:</label>
                                </div>
                                    @Html.TextBox("Total", "", new { @readonly = true })
                                    <span style="color:red" id="ErrAppDate"></span>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-3 col-md-offset-9">
                                <div class="form-group">
                                    <label>Online Facililation Charges :</label>
                                </div>
                                @Html.TextBox("OnlineFacilitaionCharge", "", new { @Value = 0, @onblur = "onBlourFacilitaionCharge()", @onkeypress = "return AllowOnlyDecimal(event)" })
                                <span style="color:red" id="ErrAppDate"></span>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3 col-md-offset-9">
                                <div class="form-group">
                                    <label>Total Pay Amount :</label>
                                </div>
                                @Html.TextBox("TotalPayAmount", "", new { @readonly = true })
                                <span style="color:red" id="ErrAppDate"></span>
                            </div>
                        </div>





                        <div class="row SignUp_space_bottom SignUp_space_top">
                            <div class="stoke"></div>
                        </div>
                        <div id="DivDeliveryOrdTblErrMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                        <div class="logSuccMsg Form_Space_bottom" id="DivPaySheetCargoMsg" style="background-color:transparent"></div>
                        <div class="SignUp_space_bottom2">
                            <div class="d-flex justify-content-left">
                                <input type="submit" id="btnSave" class="btn btn-primary mr-1 btn-100px" value="Pay" />
                                <input type="button" value="Reset" class="btn btn-primary-border btn-100px" onclick="ResetField()" />
                            </div>

                        </div>

                        <div class="row SignUp_space_bottom SignUp_space_top">
                            <div class="stoke"></div>
                        </div>

                        <div><br /></div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-2">
                                    <input type="button" value="Show List" class="btn btn-primary mr-1 btn-100px" id="BtnPrint" onclick="ShowList()" />
                                </div>
                                <div class="col-md-offset-5 col-md-3">
                                    <input type="text" placeholder="Search by Invoice No" id="SearchValue" />
                                </div>

                                <div class="col-md-2">
                                    <input type="button" value="Search" onclick="SearchReceipt()" class="btn btn-primary mr-1 btn-100px" />
                                </div>

                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-12">
                                    <div id="divOnlineReceiptList"></div>
                                </div>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

}
@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script src="~/Scripts/Extended.Jquery.Plugins.js"></script>
<script>
    var TimeInSeconds;
    $(document).ready(function () {
        $('#InvoiceDate').focus();
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
        $('#slim_scroll_2 ').slimScroll({
            allowPageScroll: true
        });

        $('#OnlineFacilitaionCharge').ForceNumeric();

        TimeInSeconds = 5000;
        PopulatedAllPendingInvoiceForOnlinePayment();
    });
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    var BillToPartyFlag = 0;
    function PopulatedAllPendingInvoiceForOnlinePayment() {
        var Type = ($('#INVOICE').is(':checked') ? "INVOICE" : "DEBITNOTE");
        $.ajax({
            url: '/CashManagement/Hdb_CashManagement/ListOfPendingInvoice',
            type: 'Get',
            data: { Type: Type },
            dataType: 'JSON',
            success: function (data) {
                debugger;
              

                    var html = "";
                    debugger;
                    CCINArr = data;
                    $.each(data, function (i, item) {
                        //debugger;
                        html += '<tr><td  class="text-center">' + (i + 1) + '</td><td  class="text-center">' + item.InvoiceNo + '</td><td  class="text-center">' + item.InvoiceDate + '</td><td  class="text-center">' + item.Amount + '</td><td><div class="boolean-container"> <input type="checkbox"  id="chk_' + item.InvoiceId + '" onclick="CheckExportName(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;,&quot;' + item.InvoiceDate + '&quot;,' + item.Amount + ',&quot;' + item.PartyName + '&quot;,&quot;' + item.InvoiceDebitNo + '&quot;)"  /><label for="chk_' + item.InvoiceId + '" style="text-align:center;"><i class="square"></i></label></div></td></tr>';
                                                                                                                                                                                                                                                                                                                                                                                                                                                 
                    });
                    $('#CWCCCIN tbody').html(html);
               

            }
        });

   
    }

    function ChangeType()
    {
        $('#CWCCCIN tbody').html('');
        var Type = ($('#INVOICE').is(':checked') ? "INVOICE" : "DEBITNOTE");
        $.ajax({
            url: '/CashManagement/Hdb_CashManagement/ListOfPendingInvoice',
            type: 'Get',
            data: { Type: Type },
            dataType: 'JSON',
            success: function (data) {
                debugger;


                var html = "";
                debugger;
                CCINArr = data;
                $.each(data, function (i, item) {
                    //debugger;
                    html += '<tr><td  class="text-center">' + (i + 1) + '</td><td  class="text-center">' + item.InvoiceNo + '</td><td  class="text-center">' + item.InvoiceDate + '</td><td  class="text-center">' + item.Amount + '</td><td><div class="boolean-container"> <input type="checkbox"  id="chk_' + item.InvoiceId + '" onclick="CheckExportName(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;,&quot;' + item.InvoiceDate + '&quot;,' + item.Amount + ',&quot;' + item.PartyName + '&quot;,&quot;' + item.InvoiceDebitNo + '&quot;)"  /><label for="chk_' + item.InvoiceId + '" style="text-align:center;"><i class="square"></i></label></div></td></tr>';

                });
                $('#CWCCCIN tbody').html(html);


            }
        });
    }

    var CCINArr = [];
   


    function validateForm() {

    }
    function ShowList() {
        //debugger;
        var SearchValue = "";
        $('#divOnlineReceiptList').load('/CashManagement/Hdb_CashManagement/OnlinePaymentAgainstInvoiceList?SearchValue=' + SearchValue);
    }

    function SearchReceipt() {
        var SearchValue = $('#SearchValue').val().trim();
        if (SearchValue != "") {
            $('#divOnlineReceiptList').load('/CashManagement/Hdb_CashManagement/OnlinePaymentAgainstInvoiceList?SearchValue=' + SearchValue);
        }
    }
</script>

<script>
    function OnlinePayOnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            if ($('#DivPaySheetCargoMsg').hasClass('logErrMsg'))
                $('#DivPaySheetCargoMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            ReloadDirectOnlinePay();
            $('#DivPaySheetCargoMsg').html(data.Message);
            $('#btnSave').attr('disabled', 'disabled');
          
            //  setTimeout(ResetField, TimeInSeconds);


        }
        else {
            if ($('#DivPaySheetCargoMsg').hasClass('logSuccMsg'))
                $('#DivPaySheetCargoMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivPaySheetCargoMsg').html(data.Message);
        }
    }
    function PaymentOnFailure() {
        //alert("Error");
    }
    function ResetField() {
        $('#DivBody').load('/CashManagement/Hdb_CashManagement/OnlinePaymentAgainstInvoice');
    }
    function ReloadDirectOnlinePay() {
        window.location.href = '/PaymentGateway/index';
        //$('#DivBody').load('~/Views/PaymentGateway/Index.cshtml');
    }
  
    


    function CheckCheckBox() {

        ExportLst = [];

        debugger;

        if ($('#AllChkbox')[0].checked) {


            for (var i = 0; i < CCINArr.length; i++) {
                $('#chk_' + CCINArr[i].InvoiceId).prop("checked", true);
                ExportLst.push({ 'InvoiceId': CCINArr[i].InvoiceId, 'InvoiceNo': CCINArr[i].InvoiceNo, 'InvoiceDate': CCINArr[i].InvoiceDate, 'Amount': CCINArr[i].Amount, 'PartyName': CCINArr[i].PartyName, 'InvoiceDebitNo': CCINArr[i].InvoiceDebitNo });
            }

        
            debugger;
           

        }

        else {

            for (var i = 0; i < CCINArr.length; i++) {
                $('#chk_' + CCINArr[i].InvoiceId).prop("checked", false);
            }
           
            ExportLst = [];
        }

        var Amount = 0;
       
        if (ExportLst.length > 0) {
            for (var i = 0; i < ExportLst.length; i++) {

                Amount = Amount + ExportLst[i].Amount;
              

            }

            $('#Total').val(Amount.toFixed(2));
            $('#TotalPayAmount').val(Amount.toFixed(2));
            
          
        }
        else {
            $('#Total').val(0);
            $('#TotalPayAmount').val(0);
        }

    }

    var ExportLst = [];
    function CheckExportName(InvoiceId, InvoiceNo, InvoiceDate, Amount, PartyName,InvoiceType) {
        debugger;
        var ExportLst1 = [];
        var ChaId = 0;
        var ChaName = '';
        ChaId = $('#ChaId').val();
        ChaName = $('#ChaName').val();
        if ($('#chk_' + InvoiceId + '').is(':checked')) {
            ExportLst.push({ 'InvoiceId': InvoiceId, 'InvoiceNo': InvoiceNo, 'InvoiceDate': InvoiceDate, 'Amount': Amount, 'PartyName': PartyName, 'InvoiceDebitNo': InvoiceType });
        }
        else {
            if (ExportLst.length > 0) {
                for (var i = 0; i < ExportLst.length; i++) {
                    var checId = ExportLst[i].InvoiceId;
                    var ExportLst1 = ExportLst.filter(function (finaldata) {
                        return finaldata.InvoiceId != InvoiceId;
                    });

                }
                ExportLst = ExportLst1;
            }
        }
        debugger;
       

        if ($('#AllChkbox')[0].checked) {
            ExportLst = [];
            for (var i = 0; i < CCINArr.length; i++) {
                $('#chk_' + CCINArr[i].InvoiceId).prop("checked", false);
            }
            $('#AllChkbox').prop("checked", false);
        }

        var Amount = 0;
      
        if (ExportLst.length > 0) {
            for (var i = 0; i < ExportLst.length; i++) {
                Amount = Amount + ExportLst[i].Amount;
              
            }
            $('#Total').val(Amount.toFixed(2));
            $('#TotalPayAmount').val(Amount.toFixed(2));
        }
        else {
            $('#Total').val(0);
            $('#TotalPayAmount').val(0);

           
        }
        //-----------------------

    }
  

    function onBlourFacilitaionCharge()
    {
        var faciliationAmount = $('#OnlineFacilitaionCharge').val() == '' ? 0 : parseFloat($('#OnlineFacilitaionCharge').val());
        var total= $('#Total').val() == '' ? 0 : parseFloat($('#Total').val());
        $('#TotalPayAmount').val(faciliationAmount + total);
    }
   


    function PopupActivate(Id) {
        //debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {

            $('#' + Id).modal('show');

            if (Id == "CHAModal") {
                //debugger;
                CHABinding();
                $('#CHANameBox').focus();
            }
            if (Id == "PartyModal") {
                //debugger;
                //PartyBinding();
                LoadPartyName();
                $('#Partybox').focus();
            }
            if (Id == "PayeeModal") {
                //debugger;
               // PayeeBinding();
                $('#PayeeNameBox').focus();
            }
        }

    }

    $('#CHAModal').on('shown.bs.modal', function () {
        $('#CHANameBox').focus();

    })

    $('#PartyModal').on('shown.bs.modal', function () {
        $('#Partybox').focus();

    });
    $('#PayeeModal').on('shown.bs.modal', function () {
        $('#PayeeNameBox').focus();

    });


    $('.mTabindex').keydown(function (e) {
        ////debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });
  


    function debounce(func, wait, immediate) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var later = function () {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    };
    $('#btnSave').on("click", function () {
        debugger;

        $('#DivCustomAppraisementTblMsg').html('');

        if (ExportLst.length != 0) {
            $('#lstInvoiceDetails').val(JSON.stringify(ExportLst));
            return true;
            }

          
            else {
                $('#DivDeliveryOrdTblErrMsg').html('Please Select Invoice No.');

                return false;
            }
      


    });

</script>
