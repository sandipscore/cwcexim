  
@model CwcExim.Areas.CashManagement.Models.LNSM_AdjustmentCashReceiptModel
<script src="~/Scripts/Extended.Jquery.Plugins.js"></script>
<script src="~/Scripts/clac.js"></script>

@using (Ajax.BeginForm("AddAdjustmentCashReceipt", "LNSM_CashManagement", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccessCashRecipt", LoadingElementDuration = 1000, LoadingElementId = "divProgress" }, new { @Id = "CashReceiptAdjForm" }))
{
    @Html.AntiForgeryToken()
    //@Html.HiddenFor(m => m.InvoiceId)
    @Html.HiddenFor(m => m.PartyId)
    @Html.HiddenFor(m => m.PayByPdaId)
    @Html.HiddenFor(m => m.GSTNo)
    @Html.HiddenFor(m => m.CIFValue)
    @Html.HiddenFor(m => m.CFSCode)
    @Html.HiddenFor(m => m.CartingDate)
    @Html.HiddenFor(m => m.StuffingDate)
    @Html.HiddenFor(m => m.PayByTraderId)
    @Html.HiddenFor(m => m.InvoiceHtml)
    @Html.HiddenFor(m => m.CashReceiptInvDtlsHtml)
    @Html.HiddenFor(m => m.AdjustReceiptInvDtlsHtml)
    @Html.Hidden("CashReceiptId")

    if (ViewBag.CashPrint != null)
    {
        <input type="hidden" id="PaymentSheetModelJson" value="@ViewBag.CashPrint.ToString()" />
    }
    else
    {
        <input type="hidden" id="PaymentSheetModelJson" value="" />
    }

    <input type="hidden" id="CashReceiptInvoiveMappingListJson" value="@ViewBag.AdjCashReceiptInvoiveMappingList" />
    <input type="hidden" id="AdjustInvoiveMappingListJson" value="@ViewBag.AdjustInvoiveMappingList" />

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-11 col-md-offset-0-5">
                <div class="Head_h4">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Adjustment of Advance Payment/ Credit Note/ TDS</h4>
                        </div>
                    </div>
                    
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Receipt No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ReceiptNo, new { @readonly = true })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_2 col-md-offset-3">
                                <label>Receipt Date:</label>
                            </div>
                            <div class="col-md-2 Date_Img">
                                @Html.TextBoxFor(m => m.ReceiptDate, new { @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Payee Name:</label>
                            </div>
                            <div class="col-md-3">
                   
                                @Html.TextBoxFor(m => m.PartyName, new { @readonly = true })                              
                                <span class="search" id="PayeeSearch"><i class="fa fa-search" aria-hidden="true" onclick="LoadPayee()" data-toggle="modal" data-target="#PayeeModal"></i></span>
                                @Html.ValidationMessageFor(m => m.PartyName)
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_1_5 col-md-offset-2-5" style="display:none;">
                                <label>Pay By:</label>
                            </div>
                            <div class="col-md-3" style="display:none;">
                                @Html.TextBoxFor(m => m.PayBy, new { @readonly = true })
                                <span class="search" id="SrchPayBY"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PayByModal"></i></span>
                                @Html.ValidationMessageFor(m => m.PayBy)
                            </div>
                        </div>
                    </div>
                   
                    <div class="Head_h5">
                        <div class="row">
                            <div class="col-md-12">
                                <h5>Open Document</h5>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <table id="CWCCharges" class="table table-striped table-bordered dataTable Table_center">
                                    <thead>
                                        <tr>
                                            <th style="width:12%;">Document No.</th>
                                            <th>Document Date</th>
                                            <th>Document Type</th>                                            
                                            <th>Amount</th>
                                            <th>Balance Amount</th>
                                            <th>Adjust Amount</th>
                                            <th>Select</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null && Model.AdjCashReceiptInvoiveMappingList.Count > 0)
                                        {
                                            foreach (var item in Model.AdjCashReceiptInvoiveMappingList)
                                            {
                                                <tr>
                                                    <td class="text-left">@item.ReceiptNo</td>
                                                    <td class="text-center">@item.ReceiptDate</td>
                                                    <td class="text-center">@item.DocType</td>
                                                    
                                                    <td>@Html.TextBoxFor(m => @item.Amount, new { @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td>@Html.TextBoxFor(m => @item.BalanceAmount, new { @disabled = "true", @style = "text-align:right;" })</td>                                                    
                                                    <td class="text-right">@Html.TextBoxFor(m => @item.AdjustAmount, new { @id = "AdjustmentAmt_" + @item.CashReceiptId, @onblur = "CalcAdjustDoc("+@item.CashReceiptId+")",  @style = "text-align:right;" })</td>
                                                    <td>
                                                        <div class="boolean-container">
                                                            <input type="checkbox" id="chk_@item.CashReceiptId" onclick="CashReceiptDocChecked(@item.CashReceiptId)" />
                                                            <label for="chk_@item.CashReceiptId" style="text-align:center;"><i class="square"></i></label>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }

                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-7 col-md-2">
                                <label>Total:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TotalValue, new { @readonly = true, @style = "text-align:right;" })
                            </div>
                        </div>
                    </div>                    
                    
                    <div class="Head_h5">
                        <div class="row">
                            <div class="col-md-12">
                                <h5>Adjustment</h5>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <table id="invoiceCharges" class="table table-striped table-bordered dataTable Table_center">
                                    <thead>
                                        <tr>
                                            <th style="width:12%;">Doc Type Invoice/ Debit Note</th>
                                            <th>Invoice/ Debit Note</th> 
                                            <th>Invoice/ Debit Note Date</th>                                              
                                            <th>Amount</th>
                                            <th>Due Amount</th>
                                            <th>Adjust Amount</th>
                                            <th>Select</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null && Model.AdjustmentMappingList.Count > 0)
                                        {
                                            foreach (var item in Model.AdjustmentMappingList)
                                            {
                                                <tr>
                                                    <td class="text-left">@item.DocType</td>
                                                    <td class="text-center">@item.DocNo</td>
                                                    <td class="text-center">@item.DocDate</td>

                                                    <td>@Html.TextBoxFor(m => @item.Amount, new { @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td>@Html.TextBoxFor(m => @item.DueAmount, new { @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td class="text-right">@Html.TextBoxFor(m => @item.AdjustAmount, new { @id = "AdjustmentDoc_" + @item.Id, @onblur = "CalcAdjust(" + @item.Id + ")", @style = "text-align:right;" })</td>
                                                    <td>
                                                        <div class="boolean-container">
                                                            <input type="checkbox" id="chk_@item.Id" onclick="CashReceiptAdjustChecked(@item.Id)" />
                                                            <label for="chk_@item.Id" style="text-align:center;"><i class="square"></i></label>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }

                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">

                            </div>
                            <div class="col-md-3-5">

                            </div>
                            <div class="col-md-2 col-md-offset-2 col_cus_offset_1 col_cus_2_5 padding_rt">
                                <label>Total:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TotalPaymentReceipt, new { @class = "Numeric", @readonly = true, @style = "text-align:right" })                               
                            </div>
                        </div>
                    </div>
                    <!-- -->
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Remarks :</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10 Error_Msg">
                                @Html.TextAreaFor(m => m.Remarks, new { @style = "height:75px;", @maxlength = "500" })
                                <span id="spanCharRemaining" style="float:none;display:inline;">500 </span> <span style="float:none;display:inline;"> character(s) remaining</span>
                            </div>
                        </div>
                    </div>
                    <div class="row SignUp_space_bottom SignUp_space_top">
                        <div class="stoke"></div>
                    </div>
                    <div class="row SignUp_space_bottom2">
                        <div class="col-md-offset-3 col-md-2">
                            <button class="btn log_Btn_sm" type="button" id="BtnSave" onclick="return ValidateCash()">Save</button>
                        </div>
                        <div class="col-md-2">
                            <input type="button" value="Print" class="btn log_Btn_sm" id="BtnPrint" onclick="CashReceiptPrint()" disabled />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllField()" />
                        </div>
                    </div>

                    

                </div>

                <div class="row Form_Space_top Form_Space_bottom">
                    <div class="form-group Form_Input">
                        <div class="col-md-2">
                            <input type="button" id="btnReceiptShowList" value="Show List" class="btn log_Btn_sm" onclick="ShowList()" />
                        </div>
                        <div class="col-md-offset-3 col-md-4" style="text-align:right;">
                            <label>Receipt No:</label>
                        </div>
                        <div class="col-md-3">
                            @Html.TextBox("SearchReceiptNo", "", new { placeholder = "Search Here" })
                            <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="SearchByReceiptNo()"></i></span>
                        </div>
                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-12">
                            <div id="divCashReceiptList"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="PayeeModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" onclick="ClosePayee()"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of Payee Name</h4>
                </div>
                <div class="modal-body popup_body" style="position:relative;">
                    <input placeholder="Search By Payee Name Or Party Code" id="Payeebox" type="text" />
                    <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchPayeeByPartyCode()"></i></span>
                    <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                        <thead>
                            <tr>
                                <th colspan="8" width="80%">Payee Name</th>
                                <th colspan="4" width="20%">Party Code</th>
                            </tr>
                        </thead>
                    </table>
                    <div id="slim_scroll_1">
                        <table class="table dataTable table-bordered table-striped slim_tble" id="tblePayee">
                            @{
                                if (ViewBag.lstPayee != null)
                                {
                                    foreach (var item in ViewBag.lstPayee)
                                    {
                                        <tr onclick="SelectPayee(@item.PayeeId,'@item.PayeeName')">
                                            <td colspan="8" width="80%" class="txt_wrp">@item.PayeeName</td>
                                            <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                        </tr>
                                    }
                                }
                            }
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-6">
                            @if (ViewBag.PayeeState != null && Convert.ToBoolean(ViewBag.PayeeState) == true)
                            {
                                <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePayee()" class="btn log_Btn_sm" id="btnLoadPayee">Load More Data</button>
                            }
                            else
                            {
                                <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePayee()" class="btn log_Btn_sm" id="btnLoadPayee" disabled>Load More Data</button>
                            }
                        </div>
                        <div class="col-md-6">
                            <button type="button" class="btn log_Btn_sm" onclick="ClosePayee()">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="InvoiceNoModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title"> Choose Party</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="CHAbox" type="text" />
                    @if (ViewBag.Party != null)
                {
                        <ul class="navList" id="lstParty">
                            @foreach (var item in ViewBag.Party)
                            {
                                <li id="@item.PartyId">@item.PartyName</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <ul class="navList" id="lstParty">
                            <li></li>
                        </ul>
                    }
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="PayByModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title"> Choose Pay By</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="CHAbox" type="text" />
                    <ul class="navList" id="lstPayBy"></ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@Scripts.Render("~/bundles/jqueryval")

<script>

    var curdate = new Date('@ViewBag.ServerDate');
    var startDate = new Date('2023-04-01');
    var enddate = new Date('2023-04-06 23:59');
    if (curdate >= startDate && curdate <= enddate) {
        $('#ReceiptDate').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            minDate: new Date('2023-03-31'),
            maxDate: new Date('2023-03-31'),
            onClose: function () {
            }
        });
    }


    $(document).ready(function () {

    })

    for (var i = 0; i < 7; i++) {
        var date = new Date();
        var currentMonth = date.getMonth();
        var currentDate = date.getDate();
        var currentYear = date.getFullYear();
        $('#CashReceiptDetail_' + i + '__Date').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            // maxDate: new Date(currentYear, currentMonth, currentDate),
            // minDate: 0,
            showAnima: "fadein",
            onClose: function () {
            }
        });
    }

    var SelectedCashReceiptList = [];
    var SelectedAdjustCashReceiptList = [];


    function CashReceiptDocChecked(CashReceiptId) {
        debugger; 

        var rawJsonCashReceiptList = JSON.parse($('#CashReceiptInvoiveMappingListJson').val());
        var item = {};
        if ($('#chk_' + CashReceiptId).is(":checked")) {

            for (var i = 0; i < rawJsonCashReceiptList.length; i++) {
                if (rawJsonCashReceiptList[i].CashReceiptId == CashReceiptId) {
                    item = rawJsonCashReceiptList[i];
                    break;
                }
            }
            item.AdjustAmount = $('#AdjustmentAmt_' + CashReceiptId).val();
            //$('#AdjustmentAmt_' + CashReceiptId).val(parseFloat(item.DueAmt).toFixed(2));
            SelectedCashReceiptList.push(item);
            $('#AdjustmentAmt_' + CashReceiptId).prop('disabled', false);
        } else {
            for (var i = 0; i < SelectedCashReceiptList.length; i++) {
                if (SelectedCashReceiptList[i].CashReceiptId == CashReceiptId) {
                    SelectedCashReceiptList.splice(i, 1);
                    break;
                }
            }
            $('#AdjustmentAmt_' + CashReceiptId).val('0.00');
            $('#AdjustmentAmt_' + CashReceiptId).prop('disabled', true);
        }

        var TotalValue = 0;       
        for (var i = 0; i < SelectedCashReceiptList.length; i++) {
            TotalValue = TotalValue + parseFloat(SelectedCashReceiptList[i].AdjustAmount);            
        }

        $('#TotalValue').val(Math.ceil(TotalValue));
           
    }

    function CashReceiptAdjustChecked(Id) {
        debugger;

        var rawJsonAdjustCashReceiptList = JSON.parse($('#AdjustInvoiveMappingListJson').val());
        var item = {};
        if ($('#chk_' + Id).is(":checked")) {

            for (var i = 0; i < rawJsonAdjustCashReceiptList.length; i++) {
                if (rawJsonAdjustCashReceiptList[i].Id == Id) {
                    item = rawJsonAdjustCashReceiptList[i];
                    break;
                }
            }
            item.AdjustAmount = $('#AdjustmentDoc_' + Id).val();
            //$('#AdjustmentAmt_' + InvoiceId).val(parseFloat(item.DueAmt).toFixed(2));
            SelectedAdjustCashReceiptList.push(item);
            $('#AdjustmentDoc_' + Id).prop('disabled', false);
        } else {
            for (var i = 0; i < SelectedAdjustCashReceiptList.length; i++) {
                if (SelectedAdjustCashReceiptList[i].Id == Id) {
                    SelectedAdjustCashReceiptList.splice(i, 1);
                    break;
                }
            }
            $('#AdjustmentDoc_' + Id).val('0.00');
            $('#AdjustmentDoc_' + Id).prop('disabled', true);
        }

        var TotalValue = 0;        
        for (var i = 0; i < SelectedAdjustCashReceiptList.length; i++) {
            TotalValue = TotalValue + parseFloat(SelectedAdjustCashReceiptList[i].AdjustAmount);            
        }  
        $('#TotalPaymentReceipt').val(Math.ceil(TotalValue));         
    }

    function CalcAdjust(Id)
    {
        debugger;


        if ($('#chk_' + Id).is(":checked")) {

            for (var i = 0; i < SelectedAdjustCashReceiptList.length; i++) {
                if (SelectedAdjustCashReceiptList[i].Id == Id) {
                    SelectedAdjustCashReceiptList[i].AdjustAmount = parseFloat( $('#AdjustmentDoc_' + Id).val()).toFixed(2);                    
                    break;
                }
            }

        }
        var TotalValue = 0;
        var RoundUp = 0;
        for (var i = 0; i < SelectedAdjustCashReceiptList.length; i++) {
            TotalValue = TotalValue + parseFloat(SelectedAdjustCashReceiptList[i].AdjustAmount);            
        }
       
        $('#TotalPaymentReceipt').val(Math.ceil(TotalValue));         
         
    }

    function CalcAdjustDoc(CashReceiptId)
    {
        debugger;


        if ($('#chk_' + CashReceiptId).is(":checked")) {
            debugger;
            for (var i = 0; i < SelectedCashReceiptList.length; i++) {
                if (SelectedCashReceiptList[i].CashReceiptId == CashReceiptId) {
                    SelectedCashReceiptList[i].AdjustAmount = parseFloat( $('#AdjustmentAmt_' + CashReceiptId).val()).toFixed(2);

                    break;
                }
            }

        }
        var TotalValue = 0;
        for (var i = 0; i < SelectedCashReceiptList.length; i++) {
            TotalValue = TotalValue + parseFloat(SelectedCashReceiptList[i].AdjustAmount);
        }


        $('#TotalValue').val(Math.ceil(TotalValue));

    }

    function AmountChanged() {
        var TotColmAmnt = 0;
        $('#TblPaymentMode tbody tr').each(function (i) {
            var tblAmnt = $(this).find('td').eq(4).children('input[type="text"]').val();
            if (tblAmnt != undefined || tblAmnt != "") {
                var Amount = Number(tblAmnt);
                TotColmAmnt += Amount;
            }

        });

        $('#TotalPaymentReceipt').val(TotColmAmnt);
    }

    function CheckClosingBalance() {

        if ($('#Closing').val() < 0) {
            $("#spanClosingValidate").css("display", "block");
        }
        else {
            $("#spanClosingValidate").css("display", "none");
        }
    }

    $('#Remarks').on('keydown keyup', function (e) {
        $('#spanCharRemaining').html((500 - $(this).val().length));
    });

    var htmlPrint = [];

    function OnSuccessCashRecipt(data) {
        if (data.Status == 1) {
            alert("Cash Receipt Saved Successfully and Cash Receipt Number is:" + data.Data.ReceiptNo);
            $('#ReceiptNo').val(data.Data.ReceiptNo);
            $('#CashReceiptId').val(data.Data.CashReceiptId);
            $('#BtnSave').prop('disabled', true);
            $('input[type="text"]').prop('readonly', true);
            $('input[type="checkbox"]').prop('disabled', true);
            $('#Remarks').prop('readonly', true);
            $('#CashReceiptDetail').prop("disabled", true);
            $('#SrchInvoiceNo').hide();
            $('#SrchPayBY').hide();
            $('#BtnSave').prop('disabled', true);
            $('#BtnPrint').removeAttr("disabled");

        } else if (data.Status == 2) {

            alert("You have insufficient TDS Balance to pay. Your TDS Balance is Rs : " + Number(data.Data).toFixed(2) + " only.");
            $('#BtnSave').removeAttr('disabled');
            return false;
        }
        else if (data.Status == -1) {

            $('#BtnSave').removeAttr('disabled');
            alert(data.Message);
            return false;
        }
        else {
            $('#BtnSave').removeAttr('disabled');
            alert(data.Message);
        }
    }

    $('#lstParty > li').on("click", function () {
        $('#PartyName').val($(this).text());
        $('#PartyId').val($(this).attr('id'));
        var partyId = $('#PartyId').val();
        var partyName = $('#PartyName').val();

        $("#InvoiceNoModal").modal("hide");


        if (partyId > 0) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("AdjustmentCashReceipt", "LNSM_CashManagement", new { area = "CashManagement" })',
                data: { PartyId: partyId, PartyName: partyName },
                success: function (data) {
                    if (data != undefined || data != null) {
                        setTimeout(function () {
                            $('#DivBody').html(data);
                            $('#PayByTraderId').val(partyId);
                            // GetPayByDetailsPda();
                        }, 600);
                    }
                },
                error: function () {
                }
            });
        }
    });

    $('#Payeebox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstPayee > li').show();
        else {
            $('#lstPayee > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    var Adrs = '';
    var State = '';
    var city = '';
    var country = '';
    function GeneratePayBy() {
        if ($('#Pay').val() != '') {
            var parties = JSON.parse($('#Pay').val());
            var html = '';
            $.each(parties, function (i, item) {
                html += '<li id="' + item.PayByEximTraderId + '" " onclick="GetPayByDetails(this)">' + item.PayByName + '</li>';
            });
            $('#lstPayBy').html(html);
        }
    }

    function GetPayByDetails(elem) {

        $("#spanClosingValidate").css("display", "none");
        //debugger;
        if ($('#PdaAdjust').is(':checked')) {
            $('#PdaAdjust').prop("checked", false);
        }
        $('#PayBy').val($(elem).text());
        $("#PayByModal").modal("hide");
        if ($('#Pda').val() != '') {
            var parties = JSON.parse($('#Pda').val());
            var payby = $.grep(parties, function (item) { return item.EximTraderId == $(elem).attr('id'); })[0];
            var party = $.grep(JSON.parse($('#Pay').val()), function (item) { return item.PayByEximTraderId == $(elem).attr('id'); })[0];;
            Adrs = party.Address;
            State = party.StateName;
            city = party.CityName;
            country = party.CountryName;
        }
        else {
            Adrs = '';
            State = '';
            city = '';
            country = '';
        }
    }

    // At the time of loading the page this function check the payee have PDA account or not
    function GetPayByDetailsPda() {
        //debugger;

        if ($('#PdaAdjust').is(':checked')) {
            $('#PdaAdjust').prop("checked", false);
        }
        if ($('#Pda').val() != '') {
            var parties = JSON.parse($('#Pda').val());
            var payby = $.grep(parties, function (item) { return item.EximTraderId == $('#PayByTraderId').val(); })[0];
            if ($('#PaymentSheetModelJson').val() != '') {
                var actualJson = JSON.parse($('#PaymentSheetModelJson').val());
                Adrs = actualJson.PartyAddress;
            }
            if (payby != undefined) {
                $('#PdaAdjust').removeAttr("disabled");
                $('#FolioNo').val(payby.FolioNo).hide();
                $('#PayByPdaId').val(payby.PayByPdaId);
                $('#Opening').val(payby.Opening).hide();
                $('#PayBy').prop("readonly", true);
                $('#Closing').val(0).hide();
                $('#Adjusted').val(0).hide();
            }
            else {
                alert("No PDA Account For This Party.");
                $('#PdaAdjust').prop("disabled", true);
                $('#PayByPdaId').val(0);
                $('#FolioNo').hide();
                $('#Opening').hide();
                $('#Closing').hide(0);
                $('#Adjusted').hide(0);
            }
        }
    }


    $('#PdaAdjust').click(function () {
        $("#spanClosingValidate").css("display", "none");
        if ($(this).is(':checked')) {
            $('#FolioNo').show();
            $('#Opening').show();
            $('#Closing').show();
            $('#Adjusted').show();
        }
        else {
            $('#Opening').hide();
            $('#FolioNo').hide();
            $('#Closing').hide();
            $('#Closing').val(0);
            $('#Adjusted').hide();
            $('#Adjusted').val(0);

        }
    });

    // Calculation Of Fields
    $(function numeric() {
        $('.Numeric').ForceNumeric();
    });

    //$(function TotReceiptValue() {
    //    if ($('#TotalValue').val() > 0) {
    //        // $('#TotalPaymentReceipt').val(parseFloat($('#TotalValue').val()).toFixed(2));
    //    }
    //})


    //function CreateHtmlForPrint(actualJson) {

    //    //debugger;

    //    var html1 = "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th style='width:20%;'><img style='width:50%;' src='IMGLeft'/></th><th style='width:60%;'></th><th style='width:20%;'><img style='width:70%;' src='IMGRight' /></th></tr><tr><th colspan='3' style='text-align:center;vertical-align:bottom;'>CENTRAL WAREHOUSING CORPORATION<br />(A GOVT. OF INDIA UNDERTAKING)</th></tr></thead><tbody><tr><td colspan='2' style='font-weight:600;'>" + actualJson.ROAddress + "</td><td style='font-weight:600;'>" + actualJson.CompanyAddress + "</td></tr><tr><td colspan='3' style='text-align:center;padding-bottom:20pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>CASH RECEIPT</span></td></tr><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><tbody><tr><td style='width:30%;'>GSTIN-<span>" + actualJson.CompGST + "</span><br />PAN NO.- <span>" + actualJson.CompPAN + "</span><br />STATE CODE : <span>" + actualJson.CompStateCode + "</span></td><td style='width:50%;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th colspan='2' style='text-align:left;'>Details of Receiver ( Billed to)</th></tr></thead><tbody><tr><td style='width:45%;'>Name</td>";
    //    html1 += "<td><span>" + actualJson.PartyName + "</span></td></tr><tr><td>Address</td><td><span>" + Adrs + "<br/>" + city + "<br/>" + State + "<br/>" + country + "</span></td></tr><tr><td>State</td><td><span>" + actualJson.PartyState + "</span></td></tr><tr><td>State Code</td><td><span>" + actualJson.PartyStateCode + "</span></td></tr><tr><td>GSTIN/ Unique ID</td><td><span>" + actualJson.PartyGST + "</span></td></tr></tbody></table>";
    //    html1 += "</td><td></td></tr><tr><td colspan='2'><b>Invoice No. <span>" + actualJson.InvoiceNo + "</span><br/><b>Cash Receipt No.<span>" + $('#ReceiptNo').val() + "</span></b></b></td><td style='vertical-align:top;text-align: center;'><b>Date: <span>" + actualJson.InvoiceDate + "</span></b></td>";
    //    html1 += "</tr><tr><td colspan='2'><table><tr><td style='vertical-align:top;width:50%;'><table style='width:100%;float: left;font-size:8pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;margin-top:20pt;'><thead><tr><th style='border:1px solid #000;'>CONTAINER NO.</th><th style='border:1px solid #000;'>SIZE</th><th style='border:1px solid #000;'>ARRIVAL DT.</th><th style='border:1px solid #000;'>CARGO TYPE</th></tr></thead><tbody>";
    //    $.each(actualJson.lstPostPaymentCont, function (i, item) {
    //        html1 += "<tr><td style='border:1px solid #000;text-align:center;'><span>" + item.ContainerNo + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + item.Size + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + item.ArrivalDate + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + (item.CargoType == 1 ? "Haz" : "Non-Haz") + "</span></td></tr>";
    //    });
    //    html1 += "</tbody></table></td><td style='vertical-align:top;width:50%;'><table style='width:100%;float:right;font-size:8pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;margin-top:20pt;border-left-style: none;'><tbody><tr><td>";
    //    html1 += "Shipping Line. <span>" + actualJson.ShippingLineName + "</span><br/>CFS Code No. <span>" + actualJson.CFSCode + "</span><br/>Date & Time of Arrival (FN/AN): <span>" + actualJson.ArrivalDate + "</span><br/>" + actualJson.StuffingDestuffDateType + " <span>" + actualJson.StuffingDestuffingDate + "</span><br/>" + actualJson.ImporterExporterType + ". <span>" + actualJson.ImporterExporter + "</span><br/>" + actualJson.BillType + ". <span>" + actualJson.BOENo + "</span><br/>Name of CHA. <span>" + actualJson.CHAName + "</span><br/>No of Packages. <span>" + actualJson.TotalNoOfPackages + "</span><br/>Total Gross Weight. <span>" + actualJson.TotalGrossWt + "</span><br/>Gross Weight per Package. <span>" + actualJson.TotalWtPerUnit + "</span><br/>Storage space occupied(" + actualJson.TotalSpaceOccupiedUnit + ") <span>" + actualJson.TotalSpaceOccupied + "</span><br/>Chargeable period for Storage space.";
    //    html1 += "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;margin-top:10pt;'><tr><td>(a) " + actualJson.StuffingDestuffDateType + "</td></tr><tr><td>(b) Date of Delivery" + actualJson.DeliveryDate + "</td></tr><tr><td>(c) Customs Examination Date" + actualJson.ApproveOn + "</td></tr></table></td></tr></tbody></table></td></tr></table></td></tr></tbody></table></td></tr>";
    //    html1 += "<tr><td colspan='3'>Value of Cargo (CIF Value + Duty + Penalty) Rs.<span>" + actualJson.TotalValueOfCargo + "</span></td></tr></tbody></table>";

    //    var html2 = "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th colspan='6' style='vertical-align:top;text-align:left;'>Invoice No. <span>" + actualJson.InvoiceNo + "</span></th><th colspan='6' style='text-align:right;padding-right:20pt;padding-bottom:50pt;'>Date: <span>" + actualJson.InvoiceDate + "</span></th></tr><tr><th style='border:1px solid #000;text-align:center;'>Particulars</th><th style='border:1px solid #000;text-align:center;'>SAC</th><th style='border:1px solid #000;text-align:center;'>Value</th><th style='border:1px solid #000;text-align:center;'>TDS</th><th style='border:1px solid #000;text-align:center;'>Discount</th><th colspan='6' style='border:1px solid #000;text-align:center;'>Taxes</th><th style='border:1px solid #000;text-align:center;'>Total Amount</th></tr><tr><th style='border:1px solid #000;border-bottom:none;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>CGST</th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>SGST</th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>IGST</th><th style='border:1px solid #000;'></th></tr><tr><th style='border:1px solid #000;border-top:none;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th></tr></thead><tbody>";
    //    $.each(actualJson.lstPostPaymentChrg, function (i, item) {
    //        html2 += "<tr><td style='border:1px solid #000;'>" + item.Clause + ". " + item.ChargeName + "</td><td style='border:1px solid #000;'><span>" + item.SACCode + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.Amount.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:center;'><span>" + item.Discount.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.CGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.CGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.SGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.SGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.IGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.IGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.Total.toFixed(2) + "</span></td></tr>";

    //    });
    //    html2 += "<tr><td style='border:1px solid #000;padding-left:25px;'>TDS</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:center;'>" + actualJson.CWCTDS + "</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td></tr>";

    //    html2 += "<tr><td colspan='12'>&nbsp;</td></tr><tr><td>Grand Total</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + /*actualJson.TDS.toFixed(2) +*/ "</span></td><td style='border:1px solid #000;text-align:right;'>" + actualJson.TotalDiscount.toFixed(2) + "</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalCGST.toFixed(2) + "</span></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalSGST.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalIGST.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.AllTotal.toFixed(2) + "</span></td></tr>";

    //    html2 += "<tr><td>Round Up</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.RoundUp.toFixed(2) + "</span></td></tr>";

    //    html2 += "<tr><td>Grand Total(Rounded)</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.InvoiceAmt.toFixed(2) + "</span></td></tr>";

    //    html2 += "<tr><td colspan='12'>TDS Deduction : " + actualJson.TDS.toFixed(2) + "<br/>TDS Collection : " + actualJson.TDSCol.toFixed(2) + "<br/><br/>FIGURE IN WORDS: <span>" + CurrentcyToWord(actualJson.InvoiceAmt.toFixed(2)).toUpperCase() + "</span></td></tr><tr><td colspan='12' style='padding:50pt 0pt;'><b>REMARKS:<span>" + actualJson.Remarks + "</span></b><br/></td></tr>";

    //    var html4 = "<table style='width:100%;font-size:8pt;font-family:verdana,sans-serif;'><tr><td><table style='width:100%;font-size:8pt;font-family:verdana,sans-serif;margin-top:30px;border:1px solid #000;border-collapse: collapse;'> <thead><tr><th style='border:1px solid #000;padding:10px;text-align:center;'>Mode</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Drawee Bank</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Instrument No</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Date</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Amount</th></tr></thead><tbody>";
    //    var t1 = '';
    //    $.each(actualJson.CashReceiptDetails, function (i, item) {
    //        t1 += "<tr><td style='border:1px solid #000;padding:5px;'>" + item.PaymentMode + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;'>" + item.DraweeBank + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;'>" + item.InstrumentNo + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;text-align:center;'>" + item.Date + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;text-align:right;'>" + parseFloat(item.Amount).toFixed(2) + "</td></tr>";
    //    });
    //    html4 += t1 + "</tbody></table></td></tr></table><br/><b>CASHIER REMARKS: <span></span></b>";
    //    html2 += "<tr><td colspan='12'>" + html4 + "</td></tr>"

    //    html2 += "</tbody><tfoot><tr><td colspan='4'><br/><br/><br/><br/><br/><br/>CASHIER</td><td colspan='4'><br/><br/><br/><br/><br/><br/>AM (A/cs)</td><td colspan='4' style='text-align:center;'><br/><br/><br/><br/><br/><br/>Manager (CFS)</td></tr></tfoot></table>";

    //    var html = [];
    //    html.push(html1);
    //    html.push(html2);
    //    return html;
    //}


    function CashReceiptPrint() {

        var ReceiptNumber = $('#ReceiptNo').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: '@Url.Action("GetBulkAdjustReceiptReport", "LNSM_CashManagement", new { Area = "CashManagement" }) ',
            headers: { "__RequestVerificationToken": Token },
            dataType: 'JSON',
            type: 'POST',
            data: {
                PeriodFrom: '@DateTime.Now.ToString("dd/MM/yyyy")',
                PeriodTo: '@DateTime.Now.ToString("dd/MM/yyyy")',
                ReceiptNumber: ReceiptNumber
            },
            success: function (data) {
                if (data.Status == 1)
                    window.open(data.Message + "?_t=" + (new Date().getTime()), "_blank");
                else
                    alert(data.Data);
            }
        });


    }

    function CurrentcyToWord(s) {
        var th = ['', 'thousand', 'million', 'billion', 'trillion'];
        var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
        var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
        var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        s = s.toString();
        s = s.replace(/[\, ]/g, '');
        if (s != parseFloat(s)) return 'not a number';
        var x = s.indexOf('.');
        if (x == -1) x = s.length;
        if (x > 15) return 'too big';
        var n = s.split('');
        var str = '';
        var sk = 0;
        for (var i = 0; i < x; i++) {
            if ((x - i) % 3 == 2) {
                if (n[i] == '1') {
                    str += tn[Number(n[i + 1])] + ' ';
                    i++;
                    sk = 1;
                } else if (n[i] != 0) {
                    str += tw[n[i] - 2] + ' ';
                    sk = 1;
                }
            } else if (n[i] != 0) {
                str += dg[n[i]] + ' ';
                if ((x - i) % 3 == 0) str += 'hundred ';
                sk = 1;
            }
            if ((x - i) % 3 == 1) {
                if (sk) str += th[(x - i - 1) / 3] + ' ';
                sk = 0;
            }
        }
        if (x != s.length) {
            var y = s.length;
            str += 'point ';
            for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';
        }
        return str.replace(/\s+/g, ' ');
    }

    function ValidateCash() {
        $('#btnSave').attr('disabled', true);
        //debugger;
        if (SelectedCashReceiptList.length == 0) {
            alert("Please select atleast one Open Document.");
            $('#btnSave').removeAttr('disabled', false);
            return false;
        }

        if (SelectedAdjustCashReceiptList.length == 0) {
            alert("Please select atleast one Adjustment.");
            $('#btnSave').removeAttr('disabled', false);
            return false;
        }
        
        if ($('#Remarks').val().length >= 500) {
            alert("Remarks cannot be more than 500 character.");
            $('#btnSave').removeAttr('disabled', false);
            return false;
        }

        var TotalPayableAmt = parseFloat($('#TotalValue').val());
        var TotalPaymentReceipt = parseFloat($('#TotalPaymentReceipt').val());
        if (TotalPayableAmt != TotalPaymentReceipt) {
            alert("Total Adjusted Amount is not same as Total Open Doc Amount.");
            $('#btnSave').removeAttr('disabled', false);
            return false;
        }

        try {

            $('#CashReceiptInvDtlsHtml').val(JSON.stringify(SelectedCashReceiptList));
            $('#AdjustReceiptInvDtlsHtml').val(JSON.stringify(SelectedAdjustCashReceiptList));

            $('form#CashReceiptAdjForm').submit();
        }
        catch (e) {
        }
    }

    function LoadMorePayee() {
        //debugger;
        $.ajax({
            url: '/CashManagement/LNSM_CashManagement/LoadPayeeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    $.each(data.Data.lstPayee, function (item, elem) {
                        //debugger;
                        html += '<tr onclick="SelectPayee(' + elem.PayeeId + ',&quot;' + elem.PayeeName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PayeeName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tblePayee tbody').html(html);
                    else
                        $('#tblePayee tbody').append(html);
                    Page++;

                    //debugger;
                    if (data.Data.State == true)
                        $('#btnLoadPayee').prop('disabled', false);
                    else $('#btnLoadPayee').prop('disabled', true);
                }
            }
        });
    }

    function LoadPayee() {
        //debugger;
        Page = 0;
        $.ajax({
            url: '/CashManagement/LNSM_CashManagement/LoadPayeeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    $.each(data.Data.lstPayee, function (item, elem) {
                        //debugger;
                        html += '<tr onclick="SelectPayee(' + elem.PayeeId + ',&quot;' + elem.PayeeName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PayeeName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });

                    $('#tblePayee tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadPayee').prop('disabled', false);
                    else $('#btnLoadPayee').prop('disabled', true);
                }
            }
        });
    }

    function SelectPayee(PayeeId, PayeeName) {
        //debugger;
        LoadPayee();
        $('#PartyId').val(PayeeId);
        $('#PartyName').val(PayeeName);

        var partyId = $('#PartyId').val();
        var partyName = $('#PartyName').val();

        $("#PayeeModal").modal("hide");
        $('#Payeebox').val('');
        LoadPayee();

        if (partyId > 0) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("AdjustmentCashReceipt", "LNSM_CashManagement", new { area = "CashManagement" })',
                data: { PartyId: partyId, PartyName: partyName},
                success: function (data) {
                    if (data != undefined || data != null) {
                        setTimeout(function () {
                            $('#DivBody').html(data);
                            $('#PayByTraderId').val(partyId);
                            // GetPayByDetailsPda();
                        }, 600);
                    }
                },
                error: function () {
                }
            });
        }

    };



    function SearchPayeeByPartyCode() {
        //debugger;
        if ($('#Payeebox').val() != '') {
            $.ajax({
                url: '/CashManagement/LNSM_CashManagement/PayeeSearchByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#Payeebox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        $.each(data.Data.lstPayee, function (item, elem) {
                            html += '<tr onclick="SelectPayee(' + elem.PayeeId + ',&quot;' + elem.PayeeName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PayeeName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tblePayee tbody').html('');
                        $('#tblePayee tbody').html(html);
                        $('#btnLoadPayee').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tblePayee tbody').html('');
                        Page = -1;
                        $('#btnLoadPayee').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadPayee();
    }

    function ClosePayee() {
        $('#Payeebox').val('');
        $("#PayeeModal").modal("hide");
        LoadPayee();
    }

    function ShowList() {
        $('#SearchReceiptNo').val('');
        $('#divCashReceiptList').load('/CashManagement/LNSM_CashManagement/AdjustCashReceiptList');
    }

    function SearchByReceiptNo() {
        var ReceiptNo = $('#SearchReceiptNo').val();
        $('#divCashReceiptList').load('/CashManagement/LNSM_CashManagement/AdjustCashReceiptList?ReceiptNo=' + ReceiptNo);
    }

    function ResetAllField() {
        $('#DivBody').load('/CashManagement/LNSM_CashManagement/AdjustmentCashReceipt');
    }
</script>
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script type="text/javascript">

    $(function(){
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });
    $(function(){
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });
    </script>
