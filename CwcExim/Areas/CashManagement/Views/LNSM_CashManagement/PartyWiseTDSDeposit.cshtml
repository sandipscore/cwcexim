@model CwcExim.Areas.CashManagement.Models.LNSM_PartyWiseTDSDeposit
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Party Wise TDS Deposit</h4>
                    </div>
                </div>
                @using (Ajax.BeginForm("AddEditPartyWiseTDSDeposit", "LNSM_CashManagement", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", LoadingElementDuration = 1000, LoadingElementId = "divProgress" }, new { @Id = "TdsDepositForm" }))
                {

                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.TDSBalance)
                    @Html.HiddenFor(m => m.PeriodFrom)
                    @Html.HiddenFor(m => m.PeriodTo)
                    @Html.HiddenFor(m => m.CashReceiptInvDtlsHtml)

                    <input type="hidden" id="CashReceiptTDSMappingListJson" value="@ViewBag.CashReceiptTDSMappingList" />


                <div class="Form_Space_bottom">
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>TDS Deposit No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ReceiptNo, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4-5 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>TDS Deposit Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ReceiptDate, new { @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Party Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.ReceiptNo)
                                @Html.Hidden("CashReceiptId")
                                @Html.HiddenFor(m => m.PartyId)
                                @Html.TextBoxFor(m => m.PartyName, new { @class = "form-control input_sm", @readonly = true })
                                <span class="search" id="PartySearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PayeeModal"></i></span>
                                @Html.ValidationMessageFor(m => m.PartyName)
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Certificate No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CertificateNo, new { @class = "form-control input_sm" })
                                @Html.ValidationMessageFor(m => m.CertificateNo)
                            </div>
                            <div class="col-md-1-5 col-md-offset-4-5 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Certificate Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.CertificateDate, new { @class = "form-control input_sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.CertificateDate)
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Financial Year:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.FinancialYear, new List<SelectListItem> {

                                new SelectListItem { Value="2014",Text="2014"},
                                new SelectListItem { Value="2015",Text="2015"},
                                new SelectListItem { Value="2016",Text="2016"},
                                new SelectListItem { Value="2017",Text="2017"},
                                new SelectListItem { Value="2018",Text="2018"},
                                new SelectListItem { Value="2019",Text="2019"},
                                new SelectListItem { Value="2020",Text="2020"},
                                new SelectListItem { Value="2021",Text="2021"},
                                new SelectListItem { Value="2022",Text="2022"},
                                new SelectListItem { Value="2023",Text="2023"},
                                new SelectListItem { Value="2024",Text="2024"},
                                new SelectListItem { Value="2025",Text="2025"},
                                new SelectListItem { Value="2026",Text="2026"},
                                new SelectListItem { Value="2027",Text="2027"},
                                new SelectListItem { Value="2028",Text="2028"},
                                new SelectListItem { Value="2029",Text="2029"},
                                new SelectListItem { Value="2030",Text="2030"},
                                new SelectListItem { Value="2031",Text="2031"},
                                new SelectListItem { Value="2032",Text="2032"},
                                new SelectListItem { Value="2033",Text="2033"}}, "----Select----", new { @class = "form-control input-sm dropdown", @onchange = "GetOperationCode()" })
                                @Html.ValidationMessageFor(m => m.FinancialYear)
                            </div>
                            <div class="col-md-1-5">
                                @Html.TextBoxFor(m => m.FinancialYearNext, new { @class = "form-control input_sm", @readonly = true })
                            </div>

                            <div class="col-md-1-5 col-md-offset-3 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>TdsQuarter:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.DropDownListFor(m => m.TdsQuarter, new List<SelectListItem> {
                                new SelectListItem { Value="First",Text="First"},
                                new SelectListItem {Value="Second",Text="Second" },
                                new SelectListItem { Value="Third",Text="Third"},
                                new SelectListItem {Value="Fourth",Text="Fourth" }}, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.TdsQuarter)
                            </div>
                        </div>
                    </div>


                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Certificate Amount:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control input_sm" })
                                @Html.ValidationMessageFor(m => m.Amount)
                            </div>

                        </div>
                    </div>

                    <div class="Head_h5">
                        <div class="row">
                            <div class="col-md-12">
                                <h5>Receipt Wise Certificate Deposit</h5>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <table id="CWCCharges" class="table table-striped table-bordered dataTable Table_center">
                                    <thead>
                                        <tr>
                                            <th style="width:12%;">Receipt No.</th>
                                            <th>Receipt Date</th>
                                            <th>Receipt Anount</th>
                                            <th>TDS Amount</th>
                                            <th>Balance Amount</th>
                                            <th>Deposit Amount</th>
                                            <th>Select</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null && Model.CertificateMappingList.Count > 0)
                                        {
                                        foreach (var item in Model.CertificateMappingList)
                                        {
                                        <tr>
                                            <td class="text-left">@item.ReceiptNo</td>
                                            <td class="text-center">@item.ReceiptDate</td>
                                            <td>@Html.TextBoxFor(m => @item.ReceiptAmount, new { @disabled = "true", @style = "text-align:right;" })</td>
                                            <td>@Html.TextBoxFor(m => @item.TDSAmount, new { @disabled = "true", @style = "text-align:right;" })</td>
                                            <td>@Html.TextBoxFor(m => @item.BalanceAmount, new { @disabled = "true", @style = "text-align:right;" })</td>
                                            <td class="text-right">@Html.TextBoxFor(m => @item.DepositAmount, new { @id = "DepositAmt_" + @item.CashReceiptId, @onblur = "CalcAdjustDoc(" + @item.CashReceiptId + ")", @style = "text-align:right;" })</td>
                                            <td>
                                                <div class="boolean-container">
                                                    <input type="checkbox" id="chk_@item.CashReceiptId" onclick="CashReceiptDocChecked(@item.CashReceiptId)" />
                                                    <label for="chk_@item.CashReceiptId" style="text-align:center;"><i class="square"></i></label>
                                                </div>
                                            </td>
                                        </tr>
                                        }

                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-7 col-md-2">
                                <label>Total TDS Deducted:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TotalTDSDeducted, new { @readonly = true, @style = "text-align:right;" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-7 col-md-2">
                                <label>Amount As Per TDS Certificate:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TDSCertAmount, new { @readonly = true, @class = "Numeric", @style = "text-align:right;" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-7 col-md-2">
                                <label>Unadjusted Amount:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.UnadjustedAmount, new { @readonly = true, @class = "Numeric", @style = "text-align:right;" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10 Error_Msg">
                                @Html.TextAreaFor(m => m.Remarks, new { @style = "height:75px;", @maxlength = "500" })
                                <span id="spanCharRemaining" style="float:none;display:inline;">500 </span> <span style="float:none;display:inline;"> character(s) remaining</span>
                            </div>
                        </div>
                    </div>


                </div>

                        <div class="row">
                            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                        </div>
                        <div class="row SignUp_space_top2">
                            <div class="col-md-offset-3 col-md-2">
                                <button class="btn log_Btn_sm" type="button" id="BtnSave" onclick="return ValidateCash()">Save</button>
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Print" class="btn log_Btn_sm" id="btnPrint" onclick="TDSDepositPrint()" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllField()" />
                            </div>
                        </div>
                        <div class="logSuccMsg Form_Space_top" id="DivSucMsg" style="background-color:transparent"></div>
                        <div class="logErrMsg Form_Space_bottom" id="DivErrMsg" style="background-color:transparent"></div>
                        }
                        
                    </div>

            <div class="row Form_Space_top Form_Space_bottom">
                <div class="form-group Form_Input">
                    <div class="col-md-2">
                        <input type="button" id="btnTDSDepositShowList" value="Show List" class="btn log_Btn_sm" onclick="ShowTDSDepositList()" />
                    </div>
                    <div class="col-md-offset-3 col-md-4" style="text-align:right;">
                        <label>Receipt No:</label>
                    </div>
                    <div class="col-md-3">
                        @Html.TextBox("SearchReceiptNo", "", new { placeholder = "Search Here" })
                        <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="SearchByReceiptNo()"></i></span>
                    </div>
                </div>
            </div>

            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-12">
                        <div id="divTDSDepositList"></div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="PayeeModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="ClosePayee()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Party Name</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Payee Name Or Party Code" id="Payeebox" type="text" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchPayeeByPartyCode()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Party Name</th>
                            <th colspan="4" width="20%">Party Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll_1">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tblePayee">
                        @{
                            if (ViewBag.lstPayee != null)
                            {
                                foreach (var item in ViewBag.lstPayee)
                                {
                                    <tr onclick="SelectPayee(@item.PayeeId,'@item.PayeeName')">
                                        <td colspan="8" width="80%" class="txt_wrp">@item.PayeeName</td>
                                        <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                    </tr>
                                }
                            }
                        }
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.PayeeState != null && Convert.ToBoolean(ViewBag.PayeeState) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePayee()" class="btn log_Btn_sm" id="btnLoadPayee">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePayee()" class="btn log_Btn_sm" id="btnLoadPayee" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="ClosePayee()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*<div id="PartyModal" class="modal fade" role="dialog">
    <div class="modal-dialog">       
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Party</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Partybox" type="text" />
                <ul class="navList" id="lstParty">
                    @{
                        if (ViewBag.lstParty != null)
                        {
                            foreach (var item in ViewBag.lstParty)
                            {
                                <li id="@item.PartyId">@item.PartyName</li>
                            }
                        }
                        else
                        {
                            <li></li>
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@

@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('#btnPrint').attr('disabled', true);
    });
    $(function () {

        //LoadPartyWiseTDSDepositList();
        if ($('#Id').val() > 0) {
            $('#btnReset').attr('disabled', true);
            $('.search').css('display', 'none');
        }
    });

    // Decimal Number
    $("#Amount").keydown(function (e) {
        if (e.keyCode == 190 || e.keyCode == 110) {
            if ($(this).val().indexOf('.') >= 0) {
                e.preventDefault();
            }
        }
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number or character
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
            e.preventDefault();
        }
    });

    // Text Box with space
    $("#CertificateNo").keydown(function (e) {
        // Allow: backspace, delete, tab, escape, enter and .
        if (e.keyCode == 32) {
            return true;
        }
        else if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A, Command+A
            (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
            // let it happen, don't do anything
            return;
        }
        // Ensure that it is a number or character
        if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) && (e.keyCode < 65 || e.keyCode > 90)) {
            e.preventDefault();
        }
    });

    $('#CertificateDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $('[data-valmsg-for="CertificateDate"]').html('');
        }
    });

    $('#Partybox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstParty > li').show();
        } else {
            $('#lstParty > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstParty li').on("click", function () {
        //debugger;
        $('#PartyName').val($(this).text());
        $('#PartyId').val($(this).attr('id'));
        $("#PartyModal").modal("hide");
     //   $(".field-validation-error").empty();
        var spans = document.getElementsByTagName('span');
        for(var i=0; i<spans.length; i++)
        {
            if(spans[i].innerText=="Fill Out This Field")
            {
                spans[i].innerText = "";
                break;
            }
        }

     //   ProcessInvoice();
    });

    function LoadMorePayee() {
        //debugger;
        $.ajax({
            url: '/CashManagement/LNSM_CashManagement/LoadPayeeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    $.each(data.Data.lstPayee, function (item, elem) {
                        //debugger;
                        html += '<tr onclick="SelectPayee(' + elem.PayeeId + ',&quot;' + elem.PayeeName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PayeeName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tblePayee tbody').html(html);
                    else
                        $('#tblePayee tbody').append(html);
                    Page++;

                    //debugger;
                    if (data.Data.State == true)
                        $('#btnLoadPayee').prop('disabled', false);
                    else $('#btnLoadPayee').prop('disabled', true);
                }
            }
        });
    }

    function LoadPayee() {
        //debugger;
        Page = 0;
        $.ajax({
            url: '/CashManagement/LNSM_CashManagement/LoadPayeeList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    $.each(data.Data.lstPayee, function (item, elem) {
                        //debugger;
                        html += '<tr onclick="SelectPayee(' + elem.PayeeId + ',&quot;' + elem.PayeeName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PayeeName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });

                    $('#tblePayee tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadPayee').prop('disabled', false);
                    else $('#btnLoadPayee').prop('disabled', true);
                }
            }
        });
    }

    function SelectPayee(PayeeId, PayeeName) {
        //debugger;
        LoadPayee();
        $('#PartyId').val(PayeeId);
        $('#PartyName').val(PayeeName);

        var partyId = $('#PartyId').val();
        var partyName = $('#PartyName').val();

        $("#PayeeModal").modal("hide");
        $('#Payeebox').val('');
        LoadPayee();

        if (partyId > 0) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("PartyWiseTDSDeposit", "LNSM_CashManagement", new { area = "CashManagement" })',
                data: { PartyId: partyId, PartyName: partyName },
                success: function (data) {
                    if (data != undefined || data != null) {
                        setTimeout(function () {
                            $('#DivBody').html(data);                            
                        }, 600);
                    }
                },
                error: function () {
                }
            });
        }

    };



    function SearchPayeeByPartyCode() {
        //debugger;
        if ($('#Payeebox').val() != '') {
            $.ajax({
                url: '/CashManagement/LNSM_CashManagement/PayeeSearchByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#Payeebox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        $.each(data.Data.lstPayee, function (item, elem) {
                            html += '<tr onclick="SelectPayee(' + elem.PayeeId + ',&quot;' + elem.PayeeName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PayeeName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tblePayee tbody').html('');
                        $('#tblePayee tbody').html(html);
                        $('#btnLoadPayee').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tblePayee tbody').html('');
                        Page = -1;
                        $('#btnLoadPayee').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadPayee();
    }

    function ClosePayee() {
        $('#Payeebox').val('');
        $("#PayeeModal").modal("hide");
        LoadPayee();
    }
    var SelectedCashReceiptList = [];

    function CashReceiptDocChecked(CashReceiptId) {
        debugger; 

        var rawJsonCashReceiptList = JSON.parse($('#CashReceiptTDSMappingListJson').val());
        var item = {};
        if ($('#chk_' + CashReceiptId).is(":checked")) {

            for (var i = 0; i < rawJsonCashReceiptList.length; i++) {
                if (rawJsonCashReceiptList[i].CashReceiptId == CashReceiptId) {
                    item = rawJsonCashReceiptList[i];
                    break;
                }
            }

            item.DepositAmount = $('#DepositAmt_' + CashReceiptId).val();
            //$('#AdjustmentAmt_' + CashReceiptId).val(parseFloat(item.DueAmt).toFixed(2));
            SelectedCashReceiptList.push(item);
            $('#DepositAmt_' + CashReceiptId).prop('disabled', false);
        } else {
            for (var i = 0; i < SelectedCashReceiptList.length; i++) {
                if (SelectedCashReceiptList[i].CashReceiptId == CashReceiptId) {
                    SelectedCashReceiptList.splice(i, 1);
                    break;
                }
            }
            $('#DepositAmt_' + CashReceiptId).val('0.00');
            $('#DepositAmt_' + CashReceiptId).prop('disabled', true);
        }
        var CertAmt = 0;
        CertAmt = $('#Amount').val();

        var TotalValue = 0;       
        for (var i = 0; i < SelectedCashReceiptList.length; i++) {
            TotalValue = TotalValue + parseFloat(SelectedCashReceiptList[i].DepositAmount);
        }

        if(CertAmt < TotalValue)
        {            
            $('#TDSCertAmount').val(Math.ceil(CertAmt));
            alert("Total Deposit Amount cannot be more than the Certificate Amount.");
            return false;
        }
        else
        {
            $('#TotalTDSDeducted').val(Math.ceil(TotalValue));
            $('#TDSCertAmount').val(Math.ceil(CertAmt));
            $('#UnadjustedAmount').val(Math.ceil(CertAmt - TotalValue));
        }
           
    }

    function CalcAdjustDoc(CashReceiptId)
    {
        debugger;


        if ($('#chk_' + CashReceiptId).is(":checked")) {
            debugger;
            for (var i = 0; i < SelectedCashReceiptList.length; i++) {
                if (SelectedCashReceiptList[i].CashReceiptId == CashReceiptId) {
                    SelectedCashReceiptList[i].DepositAmount = parseFloat( $('#DepositAmt_' + CashReceiptId).val()).toFixed(2);
                    break;
                }
            }

        }
        var TotalValue = 0;
        for (var i = 0; i < SelectedCashReceiptList.length; i++) {
            TotalValue = TotalValue + parseFloat(SelectedCashReceiptList[i].DepositAmount);
        }
        
        var CertAmt = 0;
        CertAmt = $('#Amount').val();

        if (CertAmt < TotalValue) {
            $('#TDSCertAmount').val(Math.ceil(CertAmt));
            alert("Total Deposit Amount cannot be more than the Certificate Amount.");
            return false;
        }
        else {
            $('#TotalTDSDeducted').val(Math.ceil(TotalValue));
            $('#TDSCertAmount').val(Math.ceil(CertAmt));
            $('#UnadjustedAmount').val(Math.ceil(CertAmt - TotalValue));
        }

    }

    function ValidateCash() {
        $('#btnSave').attr('disabled', true);
        debugger;
        if (SelectedCashReceiptList.length == 0) {
            alert("Please select atleast one TDS Receipt.");
            $('#btnSave').removeAttr('disabled', false);
            return false;
        }
        
        if ($('#Remarks').val().length >= 500) {
            alert("Remarks cannot be more than 500 character.");
            $('#btnSave').removeAttr('disabled', false);
            return false;
        }

        var TotalTDSDeducted = parseFloat($('#TotalTDSDeducted').val());
        var TDSCertAmount = parseFloat($('#TDSCertAmount').val());
        if (TotalTDSDeducted > TDSCertAmount) {
            alert("Total Deposit Amount cannot be more than the Certificate Amount.");
            $('#btnSave').removeAttr('disabled', false);
            return false;
        }

        try {
            $('#CashReceiptInvDtlsHtml').val(JSON.stringify(SelectedCashReceiptList));         
            $('form#TdsDepositForm').submit();
        }
        catch (e) {
        }
    }

    //function LoadPartyWiseTDSDepositList() {
    //    $('#PartyWiseTDSList').load('/CashManagement/LNSM_CashManagement/ListOfPartyWiseTDSDeposit');
    //}

    function ShowTDSDepositList() {
        $('#SearchReceiptNo').val('');
        $('#divTDSDepositList').load('/CashManagement/LNSM_CashManagement/ListOfPartyWiseTDSDeposit');
    }

    function SearchByReceiptNo() {
        var ReceiptNo = $('#SearchReceiptNo').val().trim();
        $('#divTDSDepositList').load('/CashManagement/LNSM_CashManagement/ListOfPartyWiseTDSDeposit?ReceiptNo=' + ReceiptNo);
    }

    function OnSuccess(data) {
        debugger;
        TimeInSeconds = 5000;
        if (data.Status == 1 || data.Status == 2) {
            $('#DivSucMsg').html(data.Message);
            $('#ReceiptNo').val(data.Data.ReceiptNo);
            $('#CashReceiptId').val(data.Data.CashReceiptId);
            $('#DivErrMsg').html('');
          
            $('#btnSave').attr('disabled', true);
            //setTimeout(ResetAllField, TimeInSeconds);
            ShowTDSDepositList();

            $('#btnPrint').attr('disabled', false);

           $('#btnReset').attr('disabled',false);
        
        }
        else {
            $('#DivErrMsg').html(data.Message);
        }
       
    }
    function TDSDepositPrint() {
        //debugger;
       
        var ReceiptNumber = $('#ReceiptNo').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: '@Url.Action("GetTDSDepositReport", "LNSM_CashManagement", new { Area = "CashManagement" }) ',
            headers: { "__RequestVerificationToken": Token },
            dataType: 'JSON',
            type: 'POST',
            data: {
                PeriodFrom: '@DateTime.Now.ToString("dd/MM/yyyy")',
                PeriodTo: '@DateTime.Now.ToString("dd/MM/yyyy")',
                ReceiptNumber: ReceiptNumber
            },
            success: function (data) {
                if (data.Status == 1)
                    window.open(data.Message + "?_t=" + (new Date().getTime()), "_blank");
                else
                    alert(data.Data);
            }
        });


    }



  function GetOperationCode(){
      //debugger;
      var yar =$('#FinancialYear').val();

      $('#FinancialYearNext').val(++yar);

    };

    function CurrentcyToWord(s) {
        var th = ['', 'thousand', 'million', 'billion', 'trillion'];
        var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
        var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
        var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        s = s.toString();
        s = s.replace(/[\, ]/g, '');
        if (s != parseFloat(s)) return 'not a number';
        var x = s.indexOf('.');
        if (x == -1) x = s.length;
        if (x > 15) return 'too big';
        var n = s.split('');
        var str = '';
        var sk = 0;
        for (var i = 0; i < x; i++) {
            if ((x - i) % 3 == 2) {
                if (n[i] == '1') {
                    str += tn[Number(n[i + 1])] + ' ';
                    i++;
                    sk = 1;
                } else if (n[i] != 0) {
                    str += tw[n[i] - 2] + ' ';
                    sk = 1;
                }
            } else if (n[i] != 0) {
                str += dg[n[i]] + ' ';
                if ((x - i) % 3 == 0) str += 'hundred ';
                sk = 1;
            }
            if ((x - i) % 3 == 1) {
                if (sk) str += th[(x - i - 1) / 3] + ' ';
                sk = 0;
            }
        }
        if (x != s.length) {
            var y = s.length;
            str += 'point ';
            for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';
        }
        return str.replace(/\s+/g, ' ');
    }


    function OnFailure() { }

    function ResetAllField() {
        $('#DivBody').load('/CashManagement/LNSM_CashManagement/PartyWiseTDSDeposit');
    }


</script>