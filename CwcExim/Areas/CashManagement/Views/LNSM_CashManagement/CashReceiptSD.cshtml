@model CwcExim.Areas.CashManagement.Models.LNSM_CashReceiptModel

<script src="~/Scripts/Extended.Jquery.Plugins.js"></script>
<script src="~/Scripts/clac.js"></script>

@using (Ajax.BeginForm("AddCashReceiptSD", "LNSM_CashManagement", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccessCashRecipt", LoadingElementDuration = 1000, LoadingElementId = "divProgress" }, new { @Id = "CashReceiptForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.InvoiceId)
    @Html.HiddenFor(m => m.PartyId)
    @Html.HiddenFor(m => m.PayByPdaId)
    @Html.HiddenFor(m => m.GSTNo)
    @Html.HiddenFor(m => m.CIFValue)
    @Html.HiddenFor(m => m.CFSCode)
    @Html.HiddenFor(m => m.CartingDate)
    @Html.HiddenFor(m => m.StuffingDate)
    @Html.HiddenFor(m => m.PayByTraderId)
    @Html.HiddenFor(m => m.InvoiceHtml)
    @Html.HiddenFor(m => m.CashReceiptInvDtlsHtml)
    @Html.Hidden("CashReceiptId")


    if (ViewBag.Pay != null)
    {
        <input type="hidden" id="Pay" value="@ViewBag.Pay.ToString()" />
    }
    else
    {
        <input type="hidden" id="Pay" value="" />
    }
    if (ViewBag.PdaAdjust != null)
    {
        <input type="hidden" id="Pda" value="@ViewBag.PdaAdjust.ToString()" />
    }
    else
    {
        <input type="hidden" id="Pda" value="" />
    }
    if (ViewBag.Container != null)
    {
        <input type="hidden" id="Container" value="@ViewBag.Container.ToString()" />
    }
    else
    {
        <input type="hidden" id="Container" value="" />
    }
    if (ViewBag.CashPrint != null)
    {
        <input type="hidden" id="PaymentSheetModelJson" value="@ViewBag.CashPrint.ToString()" />
    }
    else
    {
        <input type="hidden" id="PaymentSheetModelJson" value="" />
    }

    <input type="hidden" id="CashReceiptInvoiveMappingListJson" value="@ViewBag.CashReceiptInvoiveMappingList" />

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-11 col-md-offset-0-5">
                <div class="Head_h4">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Payment Adjust Through SD</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-4 col-md-1-5 col_cus_2">
                                @Html.RadioButtonFor(m => m.Type, "INVOICE", new { @id = "INVOICE", @onchange = "ChangeType()" })
                                <label for="INVOICE"><i class="circle"></i><span>INVOICE</span></label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.RadioButtonFor(m => m.Type, "DEBITNOTE", new { @id = "DEBITNOTE", @onchange = "ChangeType()" })
                                <label for="DEBITNOTE"><i class="circle"></i><span>DEBIT NOTE</span></label>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Receipt No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ReceiptNo, new { @readonly = true })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_2 col-md-offset-3">
                                <label>Receipt Date:</label>
                            </div>
                            <div class="col-md-2 Date_Img">
                                @Html.TextBoxFor(m => m.ReceiptDate, new { @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Payee Name:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.PartyName, new { @readonly = true })
                                <span class="search" id="SrchInvoiceNo"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#InvoiceNoModal"></i></span>
                                @Html.ValidationMessageFor(m => m.PartyName)
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_1_5 col-md-offset-2-5" style="display:none;">
                                <label>Pay By:</label>
                            </div>
                            <div class="col-md-3" style="display:none;">
                                @Html.TextBoxFor(m => m.PayBy, new { @readonly = true })
                                <span class="search" id="SrchPayBY"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PayByModal"></i></span>
                                @Html.ValidationMessageFor(m => m.PayBy)
                            </div>
                        </div>
                    </div>
                    
                    <div class="Head_h5">
                        <div class="row">
                            <div class="col-md-12">
                                <h5>Invoice Details</h5>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <table id="CWCCharges" class="table table-striped table-bordered dataTable Table_center">
                                    <thead>
                                        <tr>
                                            <th style="width:12%;">Invoice No.</th>
                                            <th>Invoice Date</th>
                                            <th>All Total Amount</th>
                                            <th>Round Up</th>
                                            <th>Invoice Amount</th>
                                            <th>Due Amount</th>
                                            <th>Adjust Amount</th>
                                            <th>Select Invoice</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null && Model.CashReceiptInvoiveMappingList.Count > 0)
                                        {
                                            foreach (var item in Model.CashReceiptInvoiveMappingList)
                                            {
                                                <tr>
                                                    <td class="text-left">@item.InvoiceNo</td>
                                                    <td class="text-center">@item.InvoiceDate</td>
                                                    <td>@Html.TextBoxFor(m => @item.AllTotalAmt, new { @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td>@Html.TextBoxFor(m => @item.RoundUp, new { @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td>@Html.TextBoxFor(m => @item.InvoiceAmt, new { @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td class="text-right">@Html.TextBoxFor(m => @item.DueAmt, new { @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td class="text-right">@Html.TextBoxFor(m => @item.AdjustmentAmt, new { @id = "AdjustmentAmt_" + @item.InvoiceId, @disabled = "true", @style = "text-align:right;" })</td>
                                                    <td>
                                                        <div class="boolean-container">
                                                            <input type="checkbox" id="chk_@item.InvoiceId" onchange="CashReceiptChecked(@item.InvoiceId)" />
                                                            <label for="chk_@item.InvoiceId" style="text-align:center;"><i class="square"></i></label>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }

                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-offset-7 col-md-2">
                                <label>Total Value:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TotalValue, new { @readonly = true, @style = "text-align:right;" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SD Balance:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TdsBalanceAmount, new { @readonly = true, @class = "Numeric", @style = "text-align:right;" })
                            </div>
                            <div class="col-md-offset-2-5 col_cus_offset_2 col-md-2">
                                <label>Total Round Up:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.RoundUp, new { @readonly = true, @style = "text-align:right;" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Remaining SD Balance:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TdsAmount, new { @class = "Numeric", @style = "text-align:right;",@readonly = true })
                                @Html.ValidationMessageFor(m => m.TdsAmount)
                            </div>
                            <div class="col-md-offset-2-5 col_cus_offset_2 col-md-2">
                                <label>Total Payable Amount:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TotalPayableAmt, new { @class = "Numeric", @readonly = true, @style = "text-align:right;" })
                            </div>
                        </div>
                    </div>
                    <div class="row SignUp_space_top SignUp_space_bottom" style="display:none;">
                        <div class="col-md-12">
                            <table id="TblPaymentMode" class="table-striped table-bordered nowrap dataTable no-footer" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th>Mode</th>
                                        <th>Drawee Bank</th>
                                        <th>Instrument No</th>
                                        <th>Date</th>
                                        <th>Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < 7; i++)
                                    {
                                        <tr>
                                            <td>@Html.DropDownListFor(m => m.CashReceiptDetail[i].PaymentMode, (SelectList)ViewBag.PaymentMode)</td>
                                            <td>@Html.TextBoxFor(m => Model.CashReceiptDetail[i].DraweeBank)<span>@Html.ValidationMessageFor(m => Model.CashReceiptDetail[i].DraweeBank, "", new { @class = "Error_Msg", @style = "text-align:left;" })</span></td>
                                            <td>@Html.TextBoxFor(m => Model.CashReceiptDetail[i].InstrumentNo)<span>@Html.ValidationMessageFor(m => Model.CashReceiptDetail[i].InstrumentNo, "", new { @class = "Error_Msg", @style = "text-align:left;" })</span></td>
                                            <td class="Datetab Datetab_Img">@Html.TextBoxFor(m => Model.CashReceiptDetail[i].Date, new { @placeholder = "dd/mm/yyyy" })</td>
                                            <td class="Table_right">@Html.TextBoxFor(m => Model.CashReceiptDetail[i].Amount, new { @Value = "", @class = "Numeric", @style = "width:100%;text-align:right;", @onblur = "AmountChanged()" })<span>@Html.ValidationMessageFor(m => Model.CashReceiptDetail[i].Amount, "", new { @class = "Error_Msg" })</span></td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">

                            </div>
                            <div class="col-md-3-5">

                            </div>
                            <div class="col-md-2 col-md-offset-2 col_cus_offset_1 col_cus_2_5 padding_rt">
                                <label>Total Payment Receipt:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.TotalPaymentReceipt, new { @class = "Numeric", @readonly = true, @style = "text-align:right" })
                              
                            </div>
                        </div>
                    </div>
                    <!-- -->
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Remarks :</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10 Error_Msg">
                                @Html.TextAreaFor(m => m.Remarks, new { @style = "height:75px;", @maxlength = "500" })
                                <span id="spanCharRemaining" style="float:none;display:inline;">500 </span> <span style="float:none;display:inline;"> character(s) remaining</span>
                            </div>
                        </div>
                    </div>
                    <div class="row SignUp_space_bottom SignUp_space_top">
                        <div class="stoke"></div>
                    </div>
                    <div class="row SignUp_space_bottom2">
                        <div class="col-md-offset-3 col-md-2">
                            <button class="btn log_Btn_sm" type="button" id="BtnSave" onclick="return ValidateCash()">Save</button>
                        </div>
                        <div class="col-md-2">
                            <input type="button" value="Print" class="btn log_Btn_sm" id="BtnPrint" onclick="CashReceiptSDPrint()" disabled />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllField()" />
                        </div>
                    </div>
                </div>

                <div class="row Form_Space_top Form_Space_bottom">
                    <div class="form-group Form_Input">
                        <div class="col-md-2">
                            <input type="button" id="btnReceiptShowList" value="Show List" class="btn log_Btn_sm" onclick="ShowCashRecSDList()" />
                        </div>
                        <div class="col-md-offset-3 col-md-4" style="text-align:right;">
                            <label>Receipt No:</label>
                        </div>
                        <div class="col-md-3">
                            @Html.TextBox("SearchReceiptNo", "", new { placeholder = "Search Here" })
                            <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="SearchByReceiptNo()"></i></span>
                        </div>
                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-12">
                            <div id="divCashReceiptSDList"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

 
    <div class="modal fade" id="InvoiceNoModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title"> Choose Party</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="CHAbox" type="text" />
                    @if (ViewBag.Party != null)
                {
                        <ul class="navList" id="lstParty">
                            @foreach (var item in ViewBag.Party)
                            {
                                <li id="@item.PartyId">@item.PartyName</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <ul class="navList" id="lstParty">
                            <li></li>
                        </ul>
                    }
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>



    <div class="modal fade" id="PayByModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title"> Choose Pay By</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="CHAbox" type="text" />
                    <ul class="navList" id="lstPayBy"></ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}


@Scripts.Render("~/bundles/jqueryval")


<script>

    for (var i = 0; i < 7; i++) {
        var date = new Date();
        var currentMonth = date.getMonth();
        var currentDate = date.getDate();
        var currentYear = date.getFullYear();
        $('#CashReceiptDetail_' + i + '__Date').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            // maxDate: new Date(currentYear, currentMonth, currentDate),
            // minDate: 0,
            showAnima: "fadein",
            onClose: function () {
            }
        });
    }

    var SelectedCashReceiptList = [];


    function CashReceiptChecked(InvoiceId) {
        //debugger;
        var rawJsonCashReceiptList = JSON.parse($('#CashReceiptInvoiveMappingListJson').val());
        var item = {};
        if ($('#chk_' + InvoiceId).is(":checked")) {

            for (var i = 0; i < rawJsonCashReceiptList.length; i++) {
                if (rawJsonCashReceiptList[i].InvoiceId == InvoiceId) {
                    item = rawJsonCashReceiptList[i];
                    break;
                }
            }
            item.AdjustmentAmt = item.DueAmt;
            $('#AdjustmentAmt_' + InvoiceId).val(parseFloat(item.DueAmt).toFixed(2));
            SelectedCashReceiptList.push(item);
        } else {
            for (var i = 0; i < SelectedCashReceiptList.length; i++) {
                if (SelectedCashReceiptList[i].InvoiceId == InvoiceId) {
                    SelectedCashReceiptList.splice(i, 1);
                    break;
                }
            }
            $('#AdjustmentAmt_' + InvoiceId).val('0.00');
        }

        var TotalValue = 0;
        var RoundUp = 0;
        for (var i = 0; i < SelectedCashReceiptList.length; i++) {
            TotalValue = TotalValue + parseFloat(SelectedCashReceiptList[i].AdjustmentAmt);
            RoundUp = RoundUp + parseFloat(SelectedCashReceiptList[i].RoundUp);
        }

        RoundUp += (Math.ceil(TotalValue) - TotalValue);

        $('#TotalValue').val(Math.ceil(TotalValue));
       
        $('#RoundUp').val(parseFloat(RoundUp).toFixed(2));
       
        $('#TotalPayableAmt').val(Math.ceil(TotalValue));

        $('#TotalPaymentReceipt').val(Math.ceil(TotalValue));

        var SdBlance = 0;
        var RemBalance = 0;
        SdBlance = parseFloat($('#TdsBalanceAmount').val());
        RemBalance = SdBlance - TotalValue;
        $('#TdsAmount').val(RemBalance.toFixed(2));
        $('#TotalPayableAmt').attr("disabled");
        
    }

    function TDSAmountChanged() {
        var TotalPayableAmt = parseFloat($('#TotalValue').val() - Number($('#TdsAmount').val())).toFixed(2);
        $('#TotalPayableAmt').val(TotalPayableAmt);
    }

    function AmountChanged() {
        var TotColmAmnt = 0;
        $('#TblPaymentMode tbody tr').each(function (i) {
            var tblAmnt = $(this).find('td').eq(4).children('input[type="text"]').val();
            if (tblAmnt != undefined || tblAmnt != "") {
                var Amount = Number(tblAmnt);
                TotColmAmnt += Amount;
            }

        });

        $('#TotalPaymentReceipt').val(TotColmAmnt);
    }

    function CheckClosingBalance() {

        if ($('#Closing').val() < 0) {
            $("#spanClosingValidate").css("display", "block");
        }
        else {
            $("#spanClosingValidate").css("display", "none");
        }
    }

    $('#Remarks').on('keydown keyup', function (e) {
        $('#spanCharRemaining').html((500 - $(this).val().length));
    });

    var htmlPrint = [];

    function OnSuccessCashRecipt(data) {
        if (data.Status == 1) {
            alert("Cash Receipt Saved Successfully and Cash Receipt Number is:" + data.Data.ReceiptNo);
            $('#ReceiptNo').val(data.Data.ReceiptNo);
            $('#CashReceiptId').val(data.Data.CashReceiptId);
            $('#BtnSave').prop('disabled', true);
            $('input[type="text"]').prop('readonly', true);
            $('input[type="checkbox"]').prop('disabled', true);
            $('#Remarks').prop('readonly', true);            
            $('#CashReceiptDetail').prop("disabled", true);
            $('#SrchInvoiceNo').hide();
            $('#SrchPayBY').hide();
            $('#BtnSave').prop('disabled', true);
            $('#BtnPrint').removeAttr("disabled");
           

        } else if (data.Status == 2) {

            alert("You have insufficient TDS Balance to pay. Your TDS Balance is Rs : " + Number(data.Data).toFixed(2) + " only.");
            return false;
        }
        else {
            $('#BtnSave').removeAttr('disabled');
            alert(data.Message);
        }
    }

    $('#lstParty > li').on("click", function () {
        $('#PartyName').val($(this).text());
        $('#PartyId').val($(this).attr('id'));
        var partyId = $('#PartyId').val();
        var partyName = $('#PartyName').val();
        var Type = ($('#INVOICE').is(':checked') ? "INVOICE" : "DEBITNOTE");
        $("#InvoiceNoModal").modal("hide");


        if (partyId > 0)
        {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("CashReceiptSD", "LNSM_CashManagement", new { area = "CashManagement" })',
                data: { PartyId: partyId, PartyName: partyName ,"Type":Type},
                success: function (data) {
                    if (data != undefined || data != null) {
                        setTimeout(function () {
                            $('#DivBody').html(data);
                            $('#PayByTraderId').val(partyId);
                            GeneratePayBy();
                            GetPayByDetailsPda();
                        }, 600);
                    }
                },
                error: function () {
                }
            });
        }
    });
    function ChangeType()
    {
        var partyId = $('#PartyId').val();
        var partyName = $('#PartyName').val();
        var Type = ($('#INVOICE').is(':checked') ? "INVOICE" : "DEBITNOTE");


        if (partyId > 0) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("CashReceiptSD", "LNSM_CashManagement", new { area = "CashManagement" })',
                data: { PartyId: partyId, PartyName: partyName, "Type": Type },
                success: function (data) {
                    if (data != undefined || data != null) {
                        setTimeout(function () {
                            $('#DivBody').html(data);
                            $('#PayByTraderId').val(partyId);
                            GeneratePayBy();
                             GetPayByDetailsPda();
                        }, 600);
                    }
                },
                error: function () {
                }
            });
        }
    }
    $('#CHAbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstParty > li').show();
        else {
            $('#lstParty > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    var Adrs = '';
    var State = '';
    var city = '';
    var country = '';
    function GeneratePayBy() {
        if ($('#Pay').val() != '') {
            var parties = JSON.parse($('#Pay').val());
            var html = '';
            $.each(parties, function (i, item) {
                html += '<li id="' + item.PayByEximTraderId + '" " onclick="GetPayByDetails(this)">' + item.PayByName + '</li>';
            });
            $('#lstPayBy').html(html);
        }
    }

    function GetPayByDetails(elem) {
        //debugger;
        $("#spanClosingValidate").css("display", "none");
        //debugger;
        //if ($('#PdaAdjust').is(':checked')) {
        //    $('#PdaAdjust').prop("checked", false);
        //}
        $('#PayBy').val($(elem).text());
        $("#PayByModal").modal("hide");
        if ($('#Pda').val() != '') {
            var parties = JSON.parse($('#Pda').val());
            var payby = $.grep(parties, function (item) { return item.EximTraderId == $(elem).attr('id'); })[0];
            var party = $.grep(JSON.parse($('#Pay').val()), function (item) { return item.PayByEximTraderId == $(elem).attr('id'); })[0];;
            Adrs = party.Address;
            State = party.StateName;
            city = party.CityName;
            country = party.CountryName;
            GetPayByDetailsPda();
        }
        else {
            Adrs = '';
            State = '';
            city = '';
            country = '';
        }
    }

  //   At the time of loading the page this function check the payee have PDA account or not
    function GetPayByDetailsPda() {
        debugger;       

        //if ($('#PdaAdjust').is(':checked')) {
        //    $('#PdaAdjust').prop("checked", false);
        //}
        if ($('#Pda').val() != '') {
            var parties = JSON.parse($('#Pda').val());
            
            var payby = $.grep(parties, function (item) { return item.EximTraderId == $('#PayByTraderId').val(); })[0];
            if ($('#PaymentSheetModelJson').val() != '') {
                var actualJson = JSON.parse($('#PaymentSheetModelJson').val());
                Adrs = actualJson.PartyAddress;
            }
            if (payby != undefined) {
                //$('#PdaAdjust').removeAttr("disabled");
                $('#FolioNo').val(payby.FolioNo).hide();
                $('#PayByPdaId').val(payby.PayByPdaId);
                $('#Opening').val(payby.Opening).hide();
                $('#PayBy').prop("readonly", true);
                $('#Closing').val(0).hide();
                $('#Adjusted').val(0).hide();
            }
            else {
                alert("No PDA Account For This Party.");
                //$('#PdaAdjust').prop("disabled", true);
                $('#PayByPdaId').val(0);
                $('#FolioNo').hide();
                $('#Opening').hide();
                $('#Closing').hide(0);
                $('#Adjusted').hide(0);
            }
        }
    }


    //$('#PdaAdjust').click(function () {
    //    $("#spanClosingValidate").css("display", "none");
    //    if ($(this).is(':checked')) {
    //        $('#FolioNo').show();
    //        $('#Opening').show();
    //        $('#Closing').show();
    //        $('#Adjusted').show();
    //    }
    //    else {
    //        $('#Opening').hide();
    //        $('#FolioNo').hide();
    //        $('#Closing').hide();
    //        $('#Closing').val(0);
    //        $('#Adjusted').hide();
    //        $('#Adjusted').val(0);

           
    //    }
    //});

    // Calculation Of Fields
    $(function numeric() {
        $('.Numeric').ForceNumeric();
        
    });

    $(function TotReceiptValue() {
        if ($('#TotalValue').val() > 0) {
           
        }
    })


    //function CreateHtmlForPrint(actualJson) {

    //    debugger;

    //    var html1 = "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th style='width:20%;'><img style='width:50%;' src='IMGLeft'/></th><th style='width:60%;'></th><th style='width:20%;'><img style='width:70%;' src='IMGRight' /></th></tr><tr><th colspan='3' style='text-align:center;vertical-align:bottom;'>CENTRAL WAREHOUSING CORPORATION<br />(A GOVT. OF INDIA UNDERTAKING)</th></tr></thead><tbody><tr><td colspan='2' style='font-weight:600;'>" + actualJson.ROAddress + "</td><td style='font-weight:600;'>" + actualJson.CompanyAddress + "</td></tr><tr><td colspan='3' style='text-align:center;padding-bottom:20pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>CASH RECEIPT</span></td></tr><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><tbody><tr><td style='width:30%;'>GSTIN-<span>" + actualJson.CompGST + "</span><br />PAN NO.- <span>" + actualJson.CompPAN + "</span><br />STATE CODE : <span>" + actualJson.CompStateCode + "</span></td><td style='width:50%;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th colspan='2' style='text-align:left;'>Details of Receiver ( Billed to)</th></tr></thead><tbody><tr><td style='width:45%;'>Name</td>";
    //    html1 += "<td><span>" + actualJson.PartyName + "</span></td></tr><tr><td>Address</td><td><span>" + Adrs + "<br/>" + city + "<br/>" + State + "<br/>" + country + "</span></td></tr><tr><td>State</td><td><span>" + actualJson.PartyState + "</span></td></tr><tr><td>State Code</td><td><span>" + actualJson.PartyStateCode + "</span></td></tr><tr><td>GSTIN/ Unique ID</td><td><span>" + actualJson.PartyGST + "</span></td></tr></tbody></table>";
    //    html1 += "</td><td></td></tr><tr><td colspan='2'><b>Invoice No. <span>" + actualJson.InvoiceNo + "</span><br/><b>Cash Receipt No.<span>" + $('#ReceiptNo').val() + "</span></b></b></td><td style='vertical-align:top;text-align: center;'><b>Date: <span>" + actualJson.InvoiceDate + "</span></b></td>";
    //    html1 += "</tr><tr><td colspan='2'><table><tr><td style='vertical-align:top;width:50%;'><table style='width:100%;float: left;font-size:8pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;margin-top:20pt;'><thead><tr><th style='border:1px solid #000;'>CONTAINER NO.</th><th style='border:1px solid #000;'>SIZE</th><th style='border:1px solid #000;'>ARRIVAL DT.</th><th style='border:1px solid #000;'>CARGO TYPE</th></tr></thead><tbody>";
    //    $.each(actualJson.lstPostPaymentCont, function (i, item) {
    //        html1 += "<tr><td style='border:1px solid #000;text-align:center;'><span>" + item.ContainerNo + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + item.Size + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + item.ArrivalDate + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + (item.CargoType == 1 ? "Haz" : "Non-Haz") + "</span></td></tr>";
    //    });
    //    html1 += "</tbody></table></td><td style='vertical-align:top;width:50%;'><table style='width:100%;float:right;font-size:8pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;margin-top:20pt;border-left-style: none;'><tbody><tr><td>";
    //    html1 += "Shipping Line. <span>" + actualJson.ShippingLineName + "</span><br/>CFS Code No. <span>" + actualJson.CFSCode + "</span><br/>Date & Time of Arrival (FN/AN): <span>" + actualJson.ArrivalDate + "</span><br/>" + actualJson.StuffingDestuffDateType + " <span>" + actualJson.StuffingDestuffingDate + "</span><br/>" + actualJson.ImporterExporterType + ". <span>" + actualJson.ImporterExporter + "</span><br/>" + actualJson.BillType + ". <span>" + actualJson.BOENo + "</span><br/>Name of CHA. <span>" + actualJson.CHAName + "</span><br/>No of Packages. <span>" + actualJson.TotalNoOfPackages + "</span><br/>Total Gross Weight. <span>" + actualJson.TotalGrossWt + "</span><br/>Gross Weight per Package. <span>" + actualJson.TotalWtPerUnit + "</span><br/>Storage space occupied(" + actualJson.TotalSpaceOccupiedUnit + ") <span>" + actualJson.TotalSpaceOccupied + "</span><br/>Chargeable period for Storage space.";
    //    html1 += "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;margin-top:10pt;'><tr><td>(a) " + actualJson.StuffingDestuffDateType + "</td></tr><tr><td>(b) Date of Delivery" + actualJson.DeliveryDate + "</td></tr><tr><td>(c) Customs Examination Date" + actualJson.ApproveOn + "</td></tr></table></td></tr></tbody></table></td></tr></table></td></tr></tbody></table></td></tr>";
    //    html1 += "<tr><td colspan='3'>Value of Cargo (CIF Value + Duty + Penalty) Rs.<span>" + actualJson.TotalValueOfCargo + "</span></td></tr></tbody></table>";

    //    var html2 = "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th colspan='6' style='vertical-align:top;text-align:left;'>Invoice No. <span>" + actualJson.InvoiceNo + "</span></th><th colspan='6' style='text-align:right;padding-right:20pt;padding-bottom:50pt;'>Date: <span>" + actualJson.InvoiceDate + "</span></th></tr><tr><th style='border:1px solid #000;text-align:center;'>Particulars</th><th style='border:1px solid #000;text-align:center;'>SAC</th><th style='border:1px solid #000;text-align:center;'>Value</th><th style='border:1px solid #000;text-align:center;'>TDS</th><th style='border:1px solid #000;text-align:center;'>Discount</th><th colspan='6' style='border:1px solid #000;text-align:center;'>Taxes</th><th style='border:1px solid #000;text-align:center;'>Total Amount</th></tr><tr><th style='border:1px solid #000;border-bottom:none;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>CGST</th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>SGST</th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>IGST</th><th style='border:1px solid #000;'></th></tr><tr><th style='border:1px solid #000;border-top:none;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th></tr></thead><tbody>";
    //    $.each(actualJson.lstPostPaymentChrg, function (i, item) {
    //        html2 += "<tr><td style='border:1px solid #000;'>" + item.Clause + ". " + item.ChargeName + "</td><td style='border:1px solid #000;'><span>" + item.SACCode + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.Amount.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:center;'><span>" + item.Discount.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.CGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.CGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.SGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.SGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.IGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.IGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.Total.toFixed(2) + "</span></td></tr>";
            
    //    });
    //    html2 += "<tr><td style='border:1px solid #000;padding-left:25px;'>TDS</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:center;'>" + actualJson.CWCTDS + "</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td></tr>";
       
    //    html2 += "<tr><td colspan='12'>&nbsp;</td></tr><tr><td>Grand Total</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + /*actualJson.TDS.toFixed(2) +*/ "</span></td><td style='border:1px solid #000;text-align:right;'>" + actualJson.TotalDiscount.toFixed(2) + "</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalCGST.toFixed(2) + "</span></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalSGST.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.TotalIGST.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.AllTotal.toFixed(2) + "</span></td></tr>";
       
    //    html2 += "<tr><td>Round Up</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.RoundUp.toFixed(2) + "</span></td></tr>";
        
    //    html2 += "<tr><td>Grand Total(Rounded)</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style='border:1px solid #000;text-align:right;'><span>" + actualJson.InvoiceAmt.toFixed(2) + "</span></td></tr>";
     
    //    html2 += "<tr><td colspan='12'>TDS Deduction : " + actualJson.TDS.toFixed(2) + "<br/>TDS Collection : " + actualJson.TDSCol.toFixed(2) + "<br/><br/>FIGURE IN WORDS: <span>" + CurrentcyToWord(actualJson.InvoiceAmt.toFixed(2)).toUpperCase() + "</span></td></tr><tr><td colspan='12' style='padding:50pt 0pt;'><b>REMARKS:<span>" + actualJson.Remarks + "</span></b><br/></td></tr>";

    //    var html4 = "<table style='width:100%;font-size:8pt;font-family:verdana,sans-serif;'><tr><td><table style='width:100%;font-size:8pt;font-family:verdana,sans-serif;margin-top:30px;border:1px solid #000;border-collapse: collapse;'> <thead><tr><th style='border:1px solid #000;padding:10px;text-align:center;'>Mode</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Drawee Bank</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Instrument No</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Date</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Amount</th></tr></thead><tbody>";
    //    var t1 = '';
    //    $.each(actualJson.CashReceiptDetails, function (i, item) {
    //        t1 += "<tr><td style='border:1px solid #000;padding:5px;'>" + item.PaymentMode + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;'>" + item.DraweeBank + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;'>" + item.InstrumentNo + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;text-align:center;'>" + item.Date + "</td>";
    //        t1 += "<td style='border:1px solid #000;padding:5px;text-align:right;'>" + parseFloat(item.Amount).toFixed(2) + "</td></tr>";
    //    });
    //    html4 += t1 + "</tbody></table></td></tr></table><br/><b>CASHIER REMARKS: <span></span></b>";
    //    html2 += "<tr><td colspan='12'>" + html4 + "</td></tr>"

    //    html2 += "</tbody><tfoot><tr><td colspan='4'><br/><br/><br/><br/><br/><br/>CASHIER</td><td colspan='4'><br/><br/><br/><br/><br/><br/>AM (A/cs)</td><td colspan='4' style='text-align:center;'><br/><br/><br/><br/><br/><br/>Manager (CFS)</td></tr></tfoot></table>";

    //    var html = [];
    //    html.push(html1);
    //    html.push(html2);
    //    return html;
    //}

    function ResetAllField() {
        $('#DivBody').load('/CashManagement/LNSM_CashManagement/CashReceiptSD');
    }

    function CashReceiptSDPrint() {

        var ReceiptNumber = $('#ReceiptNo').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: '@Url.Action("GetBulkSDReceiptReport", "LNSM_CashManagement", new { Area = "CashManagement" }) ',
            headers: { "__RequestVerificationToken": Token },
            dataType: 'JSON',
            type: 'POST',
            data: {
                PeriodFrom: '@DateTime.Now.ToString("dd/MM/yyyy")',
                PeriodTo: '@DateTime.Now.ToString("dd/MM/yyyy")',
                ReceiptNumber: ReceiptNumber
            },
            success: function (data) {
                if (data.Status == 1)
                    window.open(data.Message + "?_t=" + (new Date().getTime()), "_blank");
                else
                    alert(data.Data);
            }
        });


    }

    function CurrentcyToWord(s) {
        var th = ['', 'thousand', 'million', 'billion', 'trillion'];
        var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
        var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
        var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        s = s.toString();
        s = s.replace(/[\, ]/g, '');
        if (s != parseFloat(s)) return 'not a number';
        var x = s.indexOf('.');
        if (x == -1) x = s.length;
        if (x > 15) return 'too big';
        var n = s.split('');
        var str = '';
        var sk = 0;
        for (var i = 0; i < x; i++) {
            if ((x - i) % 3 == 2) {
                if (n[i] == '1') {
                    str += tn[Number(n[i + 1])] + ' ';
                    i++;
                    sk = 1;
                } else if (n[i] != 0) {
                    str += tw[n[i] - 2] + ' ';
                    sk = 1;
                }
            } else if (n[i] != 0) {
                str += dg[n[i]] + ' ';
                if ((x - i) % 3 == 0) str += 'hundred ';
                sk = 1;
            }
            if ((x - i) % 3 == 1) {
                if (sk) str += th[(x - i - 1) / 3] + ' ';
                sk = 0;
            }
        }
        if (x != s.length) {
            var y = s.length;
            str += 'point ';
            for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';
        }
        return str.replace(/\s+/g, ' ');
    }

    function ValidateCash() {

        if (SelectedCashReceiptList.length == 0) {
            alert("Please select atleast one Invoice.");
            return false;
        }
     

        var isErrorFound = false;
        $('#TblPaymentMode tbody tr').each(function (i) {
            if (!isErrorFound) {
                var tblAmnt = parseInt($(this).find('td').eq(4).children('input[type="text"]').val());
                if (tblAmnt > 0) {
                    var mode = $(this).find('td').eq(0).children('select').val();
                    if (mode == "") {
                        isErrorFound = true;
                        alert("Please select the mode of Payment Details");
                        return false;
                    }
                }
            }
        });

        if (isErrorFound) {
            return false;
        }

        if ($('#Closing').val() < 0) {
            alert("Closing value Can't be negative");
            return false;
        }

        if ($('#Remarks').val().length >= 500) {
            alert("Remarks cannot be more than 500 character.");
            return false;
        }


        var TotalPayableAmt = parseFloat($('#TotalPayableAmt').val());
        var TotalPaymentReceipt = parseFloat($('#TotalPaymentReceipt').val());
        if (TotalPayableAmt != TotalPaymentReceipt) {
            alert("Total Payable Amount is not same as Total Payment Receipt.");
            return false;
        }
        

            try {               

                $('#CashReceiptInvDtlsHtml').val(JSON.stringify(SelectedCashReceiptList));
                $('form#CashReceiptForm').submit();
            }
            catch (e) {
            }
    }

    function ShowCashRecSDList() {
        $('#SearchReceiptNo').val('');
        $('#divCashReceiptSDList').load('/CashManagement/LNSM_CashManagement/CashReceiptSDList');
    }

    function SearchByReceiptNo() {
        var ReceiptNo = $('#SearchReceiptNo').val();
        $('#divCashReceiptSDList').load('/CashManagement/LNSM_CashManagement/CashReceiptSDList?ReceiptNo=' + ReceiptNo);
    }
</script>
