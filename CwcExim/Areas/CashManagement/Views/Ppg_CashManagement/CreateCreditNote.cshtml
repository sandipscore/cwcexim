@model CwcExim.Areas.CashManagement.Models.CreditNote

    <div class="row">
        <div class="col-md-12">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Credit Note</h4>
                    </div>
                </div>
                @using (Ajax.BeginForm("AddCreditNote", "Ppg_CashManagement", new AjaxOptions
                {
                    //Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "CROnSuccess",
                    OnFailure = "CROnFailure"
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.CRNoteId)
                    @Html.HiddenFor(m => m.ChargesJson)
                    @Html.HiddenFor(m => m.PartyId)
                    @Html.HiddenFor(m => m.SupplyType)
                    @Html.HiddenFor(m => m.PartyState)
                    @Html.HiddenFor(m => m.PartyStateCode)
                    @Html.HiddenFor(m => m.PartyAddress)
                    @Html.HiddenFor(m => m.PartyGSTNo)
                   // @Html.HiddenFor(m => m.CRNoteId)
                    @Html.HiddenFor(m => m.InvoiceId)
                    @Html.HiddenFor(m => m.Module)
                    @Html.HiddenFor(m => m.InvoiceType)
                    @Html.HiddenFor(m => m.InvoiceDate)
                    @Html.HiddenFor(m => m.CreditNoteType)
                    
                    @Html.Hidden("GST")
                    
                        <div id="DivJOHdr" class="Form_Space_bottom">
                            <div class="row Form_Space_top" style="display:none;">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>Invoice Type:</label>
                                    </div>
                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("InvoiceType", "Invoice", new { @class = "", @id = "Invoice", @checked = true, @onclick = "GoToInvoice();" })
                                            <label for="Invoice"><i class="circle"></i><span>Invoice</span></label>
                                        </div>
                                    </div>
                                    <div class="col-md-1-5">
                                        <div class="boolean-container">
                                            @Html.RadioButton("InvoiceType", "DebitNote", new { @class = "", @id = "DebitNote", @onclick = "GoToDebitNote();" })
                                            <label for="DebitNote"><i class="circle"></i><span>DebitNote</span></label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="content_wrp">
                                <div class="row Form_Space_top">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Credit Note No:</label>
                                            @Html.TextBoxFor(m => m.CRNoteNo, new { @readonly = true })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Date:</label>
                                            <div class="position-relative Date_Img">
                                                <input type="hidden" id="CRNoteDateCheck" />
                                                @Html.TextBoxFor(m => m.CRNoteDate, new { @readonly = true })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Invoice No:</label>
                                            <div class="position-relative">
                                                @Html.TextBoxFor(m => m.InvoiceNo, new { @placeholder = "Invoice No", @readonly = true })
                                                <span class="input_icon" id="SrchInvoiceNo"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="SearchInvoice();" data-target="#InvoiceNoModal"></i></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Party:</label>
                                            @Html.TextBoxFor(m => m.PartyName, new { @readonly = true })
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="col-md-12">
                                        <table id="tblChargesDet" class="table table-striped table-bordered dataTable">
                                            <thead>
                                                <tr>
                                                    <th rowspan="2" class="text-center" style="width:8%;">Sl No</th>
                                                    <th rowspan="2" class="text-center">Particulars</th>
                                                    <th rowspan="2" class="text-center">SAC</th>
                                                    <th rowspan="2" class="text-center">Value</th>
                                                    <th rowspan="2" class="text-center">Return Value</th>
                                                    <th colspan="2" class="text-center">CGST</th>
                                                    <th colspan="2" class="text-center">SGST</th>
                                                    <th colspan="2" class="text-center">IGST</th>
                                                    <th rowspan="2" class="text-center" style="width:15%;">Total</th>
                                                </tr>
                                                <tr>
                                                    <th class="text-center">%</th>
                                                    <th class="text-center">Amount</th>
                                                    <th class="text-center">%</th>
                                                    <th class="text-center">Amount</th>
                                                    <th class="text-center">%</th>
                                                    <th class="text-center">Amount</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                            <tfoot>
                                                <tr>
                                                    <td colspan="11" class="text-right">Total</td>
                                                    <td class="text-right">@Html.TextBoxFor(m => m.TotalAmt, new { @readonly = true, @id = "Total" })</td>
                                                </tr>
                                                <tr>
                                                    <td colspan="11" class="text-right">Roundup</td>
                                                    <td class="text-right">@Html.TextBoxFor(m => m.RoundUp, new { @readonly = true, @id = "Roundup" })</td>
                                                </tr>
                                                <tr>
                                                    <td colspan="11" class="text-right">Grand Total</td>
                                                    <td class="text-right">@Html.TextBoxFor(m => m.GrandTotal, new { @readonly = true })</td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <label>Remarks:</label>
                                        </div>
                                            @Html.TextAreaFor(m => m.Remarks, new { @placeholder = "Enter Remarks", maxlength = 500, @style = "width:100%;height:100px;" })
                                    </div>
                                </div>
                                <div class="d-flex justify-content-left">
                                        <input type="button" id="btnSave" class="btn btn-primary mr-1 btn-100px" value="Save" />
                                    @*<div class="col-md-2">
                    <input type="button" id="btnBack" class="btn log_Btn_sm" value="Back" />
                </div>*@
                                        <input type="button" id="btnIRN" class="btn btn-primary mr-1 btn-100px" value="Generate IRN" onclick="GenerateIRN();" disabled />
                                </div>
                                <div class="row">
                                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                                </div>

                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-12">
                                            <div class="col-md-2">
                                                <input type="button" id="ShowList" class="btn btn-primary mr-1 btn-100px" value="ShowList" onclick="LoadList()" />
                                            </div>
                                            <div class="col-md-offset-5 col-md-3">
                                                <input type="text" placeholder="Search by Credit Note No." id="SearchCreditNo" />
                                            </div>
                                            <div class="col-md-2">
                                                <input type="button" value="Search" onclick="SearchCreditNoteNo()" class="btn btn-primary mr-1 btn-100px" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-12">
                                            <div id="DivListofCR"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>                        
                    </div>
                        <div class="logSuccMsg Form_Space_top" id="DivSucMsg" style="background-color:transparent"></div>
                        <div class="logErrMsg Form_Space_bottom" id="DivErrMsg" style="background-color:transparent"></div>
                        }
                        
                    </div>
                        </div>
                    </div>
    @*<div class="modal fade" id="InvoiceNoModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title"> Choose Invoice No</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="Invoicebox" type="text" />
                    @if (ViewBag.InvoiceNo != null)
                    {
                        <ul class="navList" id="lstInvoice">
                            @foreach (var item in ViewBag.InvoiceNo)
                            {
                                <li id="@item.InvoiceId">@item.InvoiceNo</li>
                            }
                        </ul>
                    }
                    else
                    {
                        <ul class="navList" id="lstInvoice">
                            <li></li>
                        </ul>
                    }
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@
<div class="modal fade mTabindex" id="InvoiceNoModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseInvoice()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">Choose Invoice No</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Invoice No search" id="Invoicebox" type="text" tabindex="401" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchInvoice()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="10" width="100%">InvoiceNo</th>

                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tbleParty">
                        <tbody>
                            @{
                                if (ViewBag.lstInvcNo != null)
                                {
                                    var tabvalue = 401;
                                    var tab = 0;
                                    var u = "_";
                                    foreach (var item in ViewBag.lstInvcNo)
                                    {
                                        <tr tabindex="@tabvalue@u@tab" onkeypress="FillDetails('@item.InvoiceId','@item.InvoiceNo')" onclick="FillDetails('@item.InvoiceId', '@item.InvoiceNo')">
                                            <td colspan="10" width="100%" class="txt_wrp">@item.InvoiceNo</td>

                                        </tr>
                                        tab++;
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.StateCr != null && Convert.ToBoolean(ViewBag.StateCr) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreInvoice()" class="btn btn-primary mr-1 btn-100px" id="btnLoadMore">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreInvoice()" class="btn btn-primary mr-1 btn-100px" id="btnLoadMore" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn btn-primary-border mr-1 btn-100px" onclick="CloseInvoice()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script type="text/javascript">
      //  var old_html = "";
        $(function () {
            $('#slim_scroll').slimScroll({
                allowPageScroll: true
            });

        });

</script>
    <script>
        $("#CRNoteDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });
        $(function () {
            $('#Total,#CRNoteId,#Roundup,#GrandTotal').val('0');
            $('#CRNoteDate').val('@ViewBag.CurrentDate');
           // GoToInvoice();
            //$('#DivListofCR').load('/CashManagement/Ppg_CashManagement/ListOfCRNote');
        });
        function LoadList()
        {
            $('#SearchCreditNo').val('');
            $('#DivListofCR').load('/CashManagement/Ppg_CashManagement/ListOfCRNote');
        }
        $('#Invoicebox').keyup(function () {
            var val = $(this).val().toLowerCase();
            if (val == "")
                $('#lstInvoice > li').show();
            else {
                $('#lstInvoice > li').each(function () {
                    var text = $(this).text().toLowerCase();
                    (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
                });
            }
        });
        $('#lstInvoice > li').on("click", function () {
            $('#InvoiceNo').val($(this).text());
            $('#InvoiceId').val($(this).attr('id'));
            $("#InvoiceNoModal").modal("hide");
            FillDetails();
        });
        function FillDetails(InvoiceId, InvoiceNo) {
            debugger;
            $('#InvoiceNo').val(InvoiceNo);
            $('#InvoiceId').val(InvoiceId);
            // var InvoiceId = $('#InvoiceId').val();
            $("#InvoiceNoModal").modal("hide");
            $.ajax({
                url: '/CashManagement/Ppg_CashManagement/GetInvoiceDetailsForCreaditNote',
                type: 'GET',
                data: { InvoiceId: InvoiceId },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        $('#Total,#Roundup,#GrandTotal').val('0');
                        $('#PartyId').val(data.Data.PartyId);
                        $('#PartyState').val(data.Data.PartyState);
                        $('#PartyStateCode').val(data.Data.PartyStateCode);
                        $('#PartyAddress').val(data.Data.PartyAddress);
                        $('#PartyGSTNo').val(data.Data.PartyGSTNo);
                        $('#Module').val(data.Data.Module);
                        $('#InvoiceType').val(data.Data.InvoiceType);
                        $('#InvoiceDate').val(data.Data.InvoiceDate);
                        $('#PartyName').val(data.Data.PartyName);
                        $('#CreditNoteType').val('Invoice');
                        $('#SupplyType').val(data.Data.SupplyType);
                        var html = '';
                        $.each(data.Data.lstInvoiceCarges, function (i, item) {

                            debugger;
                           
                                if (Number(item.Taxable) > 0) {
                                    if (Number(item.IGSTAmt) > 0) $('#GST').val('IGST');
                                    else $('#GST').val('CGST/SGST');
                                }
                           
                            item.IGSTAmt = 0;
                            item.CGSTAmt = 0;
                            item.SGSTAmt = 0;
                            html += '<tr><td>' + (i + 1) + '</td>';
                            html += '<td>' + item.ChargeName + '</td>';
                            html += '<td>' + item.SACCode + '</td>';
                            html += '<td><input type="text" readonly id="txtTaxable' + item.ChargesTypeId + '" value="' + item.Taxable + '" /></td>';
                            html += '<td><input type="number" step="any" style="width: 100%;padding: 3px;" id="txtRetValue' + item.ChargesTypeId + '" value="0" onblur="Calculate(' + item.ChargesTypeId + ')" /></td>';
                            html += '<td><input type="text" readonly id="txtCGSTPer' + item.ChargesTypeId + '" value="' + item.CGSTPer + '" /></td>';
                            html += '<td><input type="text" readonly id="txtCGSTAmt' + item.ChargesTypeId + '" value="0" /></td>';
                            html += '<td><input type="text" readonly  id="txtSGSTPer' + item.ChargesTypeId + '" value="' + item.SGSTPer + '" /></td>';
                            html += '<td><input type="text" readonly id="txtSGSTAmt' + item.ChargesTypeId + '" value="0" /></td>';
                            html += '<td><input type="text" readonly id="txtIGSTPer' + item.ChargesTypeId + '" value="' + item.IGSTPer + '" /></td>';
                            html += '<td><input type="text" readonly id="txtIGSTAmt' + item.ChargesTypeId + '" value="0" /></td>';
                            html += '<td><input type="text" readonly id="txtTotal' + item.ChargesTypeId + '" value="0" /></td></tr>';
                        });
                        $('#tblChargesDet tbody').html(html);
                        $('#ChargesJson').val(JSON.stringify(data.Data.lstInvoiceCarges));
                    }
                    else {

                    }
                }
            });

        }


        function FillDetailsDebit() {
            debugger;
            var InvoiceId = $('#InvoiceId').val();
            $.ajax({
                url: '/CashManagement/Ppg_CashManagement/GetDebitNoteDetailsForCreaditNote',
                type: 'GET',
                data: { InvoiceId: InvoiceId },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        $('#Total,#Roundup,#GrandTotal').val('0');
                        $('#PartyId').val(data.Data.PartyId);
                        $('#PartyState').val(data.Data.PartyState);
                        $('#PartyStateCode').val(data.Data.PartyStateCode);
                        $('#PartyAddress').val(data.Data.PartyAddress);
                        $('#PartyGSTNo').val(data.Data.PartyGSTNo);
                        $('#Module').val(data.Data.Module);
                        $('#InvoiceType').val(data.Data.InvoiceType);
                        $('#InvoiceDate').val(data.Data.InvoiceDate);
                        $('#PartyName').val(data.Data.PartyName);
                        $('#CreditNoteType').val('DebitNote');
                        var html = '';
                        $.each(data.Data.lstInvoiceCarges, function (i, item) {
                            if ($('#GST').val() == '') {
                                if (Number(item.Taxable) > 0) {
                                    if (Number(item.IGSTAmt) > 0) $('#GST').val('IGST');
                                    else $('#GST').val('CGST/SGST');
                                }
                            }
                            item.IGSTAmt = 0;
                            item.CGSTAmt = 0;
                            item.SGSTAmt = 0;
                            html += '<tr><td>' + (i + 1) + '</td>';
                            html += '<td>' + item.ChargeName + '</td>';
                            html += '<td>' + item.SACCode + '</td>';
                            html += '<td><input type="text" readonly id="txtTaxable' + item.ChargesTypeId + '" value="' + item.Taxable + '" /></td>';
                            html += '<td><input type="number" step="any" style="width: 100%;padding: 3px;" id="txtRetValue' + item.ChargesTypeId + '" value="0" onblur="Calculate(' + item.ChargesTypeId + ')" /></td>';
                            html += '<td><input type="text" readonly id="txtCGSTPer' + item.ChargesTypeId + '" value="' + item.CGSTPer + '" /></td>';
                            html += '<td><input type="text" readonly id="txtCGSTAmt' + item.ChargesTypeId + '" value="0" /></td>';
                            html += '<td><input type="text" readonly  id="txtSGSTPer' + item.ChargesTypeId + '" value="' + item.SGSTPer + '" /></td>';
                            html += '<td><input type="text" readonly id="txtSGSTAmt' + item.ChargesTypeId + '" value="0" /></td>';
                            html += '<td><input type="text" readonly id="txtIGSTPer' + item.ChargesTypeId + '" value="' + item.IGSTPer + '" /></td>';
                            html += '<td><input type="text" readonly id="txtIGSTAmt' + item.ChargesTypeId + '" value="0" /></td>';
                            html += '<td><input type="text" readonly id="txtTotal' + item.ChargesTypeId + '" value="0" /></td></tr>';
                        });
                        $('#tblChargesDet tbody').html(html);
                        $('#ChargesJson').val(JSON.stringify(data.Data.lstInvoiceCarges));
                    }
                    else {

                    }
                }
            });

        }
        function Calculate(ChargesTypeId) {
            debugger;
            var ChargesJson = JSON.parse($('#ChargesJson').val());
            var item = $.grep(ChargesJson, function (elem) { return elem.ChargesTypeId == ChargesTypeId; })[0];
            var GST = $('#GST').val();
            var RetValue = Number($('#txtRetValue' + ChargesTypeId).val()).toFixed(2);
            var Value = Number($('#txtTaxable' + ChargesTypeId).val()).toFixed(2);
            if (Number(Value) >= Number(RetValue)) {
                var Total;
                if (GST == 'IGST') {
                    var IP = $('#txtIGSTPer' + ChargesTypeId).val();
                    var Amt =Math.ceil(Number((Number(RetValue) / 100) * Number(IP))).toFixed(2);
                    $('#txtIGSTAmt' + ChargesTypeId).val(Amt);
                    Total = Number(Number(Amt) + Number(RetValue)).toFixed(2);

                    item.IGSTAmt = Amt;
                }
                else if (GST == 'CGST/SGST') {
                    //var CP = $('#txtCGSTPer' + ChargesTypeId).val();
                    //var AmtC =Number((RetValue / 100) * CP).toFixed(2);
                    //$('#txtCGSTAmt' + ChargesTypeId).val(AmtC);

                    //var SP = $('#txtSGSTPer' + ChargesTypeId).val(); 
                    //var AmtS =Number((RetValue / 100) * SP).toFixed(2);
                    //$('#txtSGSTAmt' + ChargesTypeId).val(AmtS);

                    //Total = Number(Number(AmtC) + Number(AmtS) + Number(RetValue)).toFixed(2);

                    //item.CGSTAmt = AmtC;
                    //item.SGSTAmt = AmtS;


                    var CGP = $('#txtCGSTPer' + ChargesTypeId).val();
                    var TotalCGP = CGP * 2;
                    var TotalAmount = Math.ceil(Number((RetValue / 100) * TotalCGP).toFixed(2));
                    var AmountPer = (TotalAmount / 2).toFixed(2);
                    $('#txtCGSTAmt' + ChargesTypeId).val(AmountPer);
                    $('#txtSGSTAmt' + ChargesTypeId).val(AmountPer);
                    Total = Number(Number(AmountPer) + Number(AmountPer) + Number(RetValue)).toFixed(2);;
                    item.CGSTAmt = AmountPer;
                    item.SGSTAmt = AmountPer;

                }
                $('#txtTotal' + ChargesTypeId).val(Total);
                var TTotal = 0;
                $('#tblChargesDet tbody tr').each(function (i, item) {
                    TTotal = Number(TTotal) + Number($(item).find('td').eq(11).children('input[type="text"]').val());
                });
                $('#Total').val(Number(TTotal).toFixed(2));
                var GrandTotal = Math.ceil(TTotal);
                $('#GrandTotal').val(GrandTotal)
                var Roundup = Number(GrandTotal) - Number(TTotal);
                $('#Roundup').val(Number(Roundup).toFixed(2));

                item.RetValue = RetValue;
                item.Total = Total;
                $('#ChargesJson').val(JSON.stringify(ChargesJson));
            }
            else {
                $('#txtIGSTPer' + ChargesTypeId).val('0');
                $('#txtCGSTAmt' + ChargesTypeId).val('0');
                $('#txtSGSTAmt' + ChargesTypeId).val('0');
                $('#txtTotal' + ChargesTypeId).val('0');

                item.IGSTAmt = 0;
                item.CGSTAmt = 0;
                item.SGSTAmt = 0;
                item.Total = 0;
                item.RetValue = 0;

                var TTotal = 0;
                $('#tblChargesDet tbody tr').each(function (i, item) {
                    TTotal = Number(TTotal) + Number($(item).find('td').eq(11).children('input[type="text"]').val());
                });
                $('#Total').val(Number(TTotal).toFixed(2));
                var GrandTotal = Math.ceil(TTotal);
                $('#GrandTotal').val(GrandTotal)
                var Roundup = Number(GrandTotal) - Number(TTotal);
                $('#Roundup').val(Number(Roundup).toFixed(2));
                $('#ChargesJson').val(JSON.stringify(ChargesJson));
                alert('Return Value Cannot be greater then Value');
            }
        }
        function LoadPage()
        {
            $('#DivBody').load('/CashManagement/Ppg_CashManagement/CreateCreditNote');
        }
        function CROnFailure() { }
        function CROnSuccess(data) {
            if (data.Status == 1) {
                $('#DivSucMsg').html(data.Message);
                $('#CRNoteNo').val(data.Data);
                $('#btnIRN').removeAttr("disabled");
                //setTimeout(function () { LoadPage(); },3000);
            }
            else {
                $('#DivErrMsg').html(data.Message);
            }
            //setTimeout(function () { $('#DivSucMsg,#DivErrMsg').html(''); }, 5000);
        }
        function SearchCreditNoteNo() {
            var InvoiceNo = $('#SearchCreditNo').val().trim();
            if (InvoiceNo == "")
                alert("Enter Credit Note No. to Search");
            else
                $('#DivListofCR').load('/CashManagement/Ppg_CashManagement/SearchCreditNote?Search=' + InvoiceNo);

        }


        function GoToInvoice() {
            $('#InvoiceNo').val('');
            $('#PartyName').val('');
            $('#tblChargesDet>tbody').html('');
            debugger;
            $.ajax({
                url: '/CashManagement/Ppg_CashManagement/GetInvoiceNoCreaditNote',
                type: 'GET',
                data: { InvoiceType: 'Invoice' },
                dataType: 'JSON',
                success: function (data) {
                    debugger;

                    var html = '';
                    $.each(data.Data, function (i, item) {
                        html += '<li id="' + item.InvoiceId + '" onclick="populateCreditNoteforInvoice(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;);">' + item.InvoiceNo + '</li>';
                    });
                    $('#lstInvoice').html(html);

                }
            });
        }

        function GoToDebitNote() {

            $('#InvoiceNo').val('');
            $('#PartyName').val('');
            $('#tblChargesDet>tbody').html('');
            debugger;
            $.ajax({
                url: '/CashManagement/Ppg_CashManagement/GetInvoiceNoCreaditNote',
                type: 'GET',
                data: { InvoiceType: 'DebitNote' },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    var html = '';
                    $.each(data.Data, function (i, item) {
                        html += '<li id="' + item.InvoiceId + '" onclick="populateCreditNoteforDebit(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;);">' + item.InvoiceNo + '</li>';
                    });
                    $('#lstInvoice').html(html);
                }
            });
        }




        function populateCreditNoteforDebit(id, No)
        {
            debugger;
            $('#InvoiceNo').val(No);
            $('#InvoiceId').val(id);
            $("#InvoiceNoModal").modal("hide");
            FillDetailsDebit();
        }

        function populateCreditNoteforInvoice(id, No) {
            debugger;
            $('#InvoiceNo').val(No);
            $('#InvoiceId').val(id);
            $("#InvoiceNoModal").modal("hide");
            FillDetails();
        }
         


        $('#btnSave').on("click", function () {

            if ($('#InvoiceNo').val() == '')
            {
                alert("Please select Invoice No.");
                return false;
            }

            if ($('#GrandTotal').val() == '0' || $('#GrandTotal').val() == '')
            {
                alert("Credit Note should not be saved zero or blank amount");
                return false;
            }
            debugger;
           
            if (confirm("Are You Sure You Want To Save?")) {
                $('#btnSave').attr('disabled', true);
                $('#btnSave').submit();
            }

        });

        function GenerateIRN() {

            $('.modalloader').show();
            debugger;
            $.ajax({
                url: '/CashManagement/Ppg_CashManagement/GetGenerateIRNCreditNote',
                type: 'POST',
                dataType: 'JSON',
                data: { CrNoteNo: $('#CRNoteNo').val(), SupplyType: $('#SupplyType').val(), Type: "CRN", CRDR: "C" },
                success: function (data) {
                    debugger;
                    if (data != '') {
                        debugger;
                        $('.modalloader').hide();
                        if (data.Status == 1) {

                            alert("IRN has been generated successfully")

                            $('#btnIRN').attr('disabled', true);
                        }
                        else {
                            alert(data.Message);
                            $('#btnIRN').attr('disabled', true);
                        }

                    }
                    else {
                        alert(data.Message);
                        $('#btnIRN').attr('disabled', true);
                    }
                }
            });
        }
        var Page = 0;

        function LoadInvoice() {
            debugger;
            Page = 0;
            $.ajax({
                url: '/CashManagement/Ppg_CashManagement/LoadcreditInvoiceLists',
                type: 'GET',
                data: { invoiceno: "", Page: Page },
                success: function (data) {
                    if (data.Status == 1) {
                        debugger;
                        var html = '';
                        var tab = 401;
                        $.each(data.Data.lstInvcNo, function (item, elem) {
                            debugger;
                            html += '<tr tabindex=' + tab + '_' + item + ' onkeypress="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;)" onclick="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;)"><td colspan="10" width="100%" class="txt_wrp">' + elem.InvoiceNo + '</td></tr>';
                            //  html += '<li tabindex=' + TabValue + ' id="' + elem.InvoiceId + '" onkeypress="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;);" onclick="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;);">' + elem.InvoiceNo + '</li>';
                            //  html += '<li tabindex=' + TabValue + ' id="' + item.InvoiceId + '" onkeypress="FillDetails(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;);" onclick="FillDetails(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;);">' + item.InvoiceNo + '</li>';
                        });

                        $('#tbleParty tbody').html(html);

                        if (data.Data.StateCr == true)
                            $('#btnLoadMore').prop('disabled', false);
                        else $('#btnLoadMore').prop('disabled', true);
                    }
                }
            });
        }
        // var Page = 0;
        function LoadMoreInvoice() {
            debugger;
            $.ajax({
                url: '/CashManagement/Ppg_CashManagement/LoadcreditInvoiceLists',
                type: 'GET',
                data: { invoiceno: "", Page: Page + 1 },
                success: function (data) {
                    if (data.Status == 1) {
                        debugger;
                        var html = '';
                        var tab = 401;
                        $.each(data.Data.lstInvcNo, function (item, elem) {
                            debugger;
                            html += '<tr tabindex=' + tab + '_' + item + ' onkeypress="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;)" onclick="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;)"><td colspan="10" width="100%" class="txt_wrp">' + elem.InvoiceNo + '</td></tr>';
                            // html += '<li tabindex=' + TabValue + ' id="' + elem.InvoiceId + '" onkeypress="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;);" onclick="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;);">' + elem.InvoiceNo + '</li>';
                            // html += '<li tabindex=' + TabValue + ' id="' + item.InvoiceId + '" onkeypress="FillDetails(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;);" onclick="FillDetails(' + item.InvoiceId + ',&quot;' + item.InvoiceNo + '&quot;);">' + item.InvoiceNo + '</li>';
                            // html += '<tr tabindex=' + tab + '_' + item + ' onkeypress="SelectContainer(&quot;' + elem.ContainerNo + '&quot;,&quot;' + elem.CFSCode + '&quot;)" onclick="SelectContainer(&quot;' + elem.ContainerNo + '&quot;,&quot;' + elem.CFSCode + '&quot;)"><td colspan="6" width="50%" class="txt_wrp">' + elem.ContainerNo + '</td><td colspan="6" width="50%" class="txt_wrp">' + elem.CFSCode + '</td></tr>';
                        });
                        if (Page == -1)
                            $('#tbleParty tbody').html(html);
                        else
                            $('#tbleParty tbody').append(html);
                        Page++;

                        debugger;
                        if (data.Data.StateCr == true)
                            $('#btnLoadMore').prop('disabled', false);
                        else $('#btnLoadMore').prop('disabled', true);
                    }
                }
            });
        }
        /*$('#Partybox').on('keyup', function (e) {
        function Partyboxkeyup(e)
        {
            if ((e.keyCode >= 97 && e.keyCode <= 122) || (e.keyCode >= 65 && e.keyCode <= 90) || e.keyCode == 13 || e.keyCode == 46 || e.keyCode == 47)
            {
                SearchPartyByPartyCode();
            }
        }
        });*/
        function SearchInvoice() {
            debugger;
            if ($('#Containerbox').val() != '') {
                $.ajax({
                    url: '/CashManagement/Ppg_CashManagement/SearchInvoice',
                    type: 'GET',
                    data: { invoiceno: $('#Invoicebox').val() },
                    success: function (data) {
                        if (data.Status == 1) {
                            var html = '';
                            var tab = 401;
                            $.each(data.Data.lstInvcNo, function (item, elem) {
                                //  html += '<tr tabindex=' + TabValue +'_'+ ' id="' + elem.InvoiceId + '" onkeypress="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;);" onclick="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;);">' + elem.InvoiceNo + '</li>';
                                html += '<tr tabindex=' + tab + '_' + item + ' onkeypress="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;)" onclick="FillDetails(' + elem.InvoiceId + ',&quot;' + elem.InvoiceNo + '&quot;)"><td colspan="10" width="100%" class="txt_wrp">' + elem.InvoiceNo + '</td></tr>';
                            });
                            $('#tbleParty tbody').html('');
                            $('#tbleParty tbody').html(html);
                            $('#btnLoadMore').prop('disabled', true);
                            Page = -1;
                        }
                        else {
                            $('#tbleParty tbody').html('');
                            Page = -1;
                            $('#btnLoadMore').prop('disabled', false);
                        }

                    }
                });
            }
            else
                LoadInvoice();
        }

        function CloseInvoice() {
            $('#Invoicebox').val('');
            $("#InvoiceNoModal").modal("hide");
            LoadInvoice();
            // $('#PartyName').focus();
        }
        function debounce(func, wait, immediate) {
            var timeout;
            return function () {
                var context = this, args = arguments;
                var later = function () {
                    timeout = null;
                    if (!immediate) func.apply(context, args);
                };
                var callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) func.apply(context, args);
            };
        };

        document.getElementById('Invoicebox').addEventListener('keyup', debounce(function () {
            SearchInvoice()
        }, 800));
    </script>
