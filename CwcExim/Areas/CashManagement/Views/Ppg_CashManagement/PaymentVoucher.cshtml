@model CwcExim.Areas.CashManagement.Models.Ppg_PaymentVoucher

<script>
    $("#PaymentDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $(function () {
        GetPVList();
    });

    function GetPVList() {
        $('#DivPaymentVoucherList').load('@Url.Action("GetPaymentVoucherList", "Ppg_CashManagement", new { area = "CashManagement" })');
    }

    function AddNewRow() {
        var countRow = $('#ExpTable tbody tr').length > 0 ? $('#ExpTable tbody tr').length + 1:1;
        var exps = JSON.parse($('#Expenses').val());
        var expSelect = '<select id="exp' + countRow + '" onchange="GenerateHSN(' + countRow + ')" ><option value="">--- Select ---</option>';
        $.each(exps, function (i, item) {
            expSelect += '<option value="' + item.HeadId + '">' + item.HeadName + '</option>';
        });
        expSelect += '</select>';
        var newrow = '<tr data-row-id=' + countRow + '><td>' + expSelect + '</td><td><select id="hsn' + countRow + '" onchange="GenerateGST(' + countRow + ')"><option value="">--- Select ---</option></select></td><td><input type="text" id="amt' + countRow + '" value="0" class="text-right" onkeypress="return ValidateAndCalculate(' + countRow + ',event)" onblur="BindJSON(' + countRow + ')" /></td><td><input type="text" id="igst' + countRow + '" class="text-right" onblur="BindIgstJSON(' + countRow + ')" /></td><td><input type="text" id="igstamt' + countRow + '" class="text-right" onblur="BindTotalJSON(' + countRow + ')" /></td><td><input type="text" id="cgst' + countRow + '" class="text-right" onblur="BindCgstJSON(' + countRow + ')" /></td><td><input type="text" id="cgstamt' + countRow + '" class="text-right" onblur="BindTotalJSON(' + countRow + ')" /></td><td><input type="text" id="sgst' + countRow + '" class="text-right" onblur="BindSgstJSON(' + countRow + ')"/></td><td><input type="text" id="sgstamt' + countRow + '" class="text-right" onblur="BindTotalJSON(' + countRow + ')" /></td><td><input type="text" id="amount' + countRow + '" class="text-right" disabled /></td><td style="text-align:center;"><i class="fa fa-window-close-o Delete" onclick="RemoveExpenses(this,' + countRow + ')"></i></td></tr>';
        $('#ExpTable tbody').append(newrow);

        var orgJson = $('#ExpensesJson').val() == '' ? [] : JSON.parse($('#ExpensesJson').val());
        var jObj = {
            'ExpId': 0,
            'HsnId': 0,
            'Amount': 0,
            'IGST': 0,
            'CGST': 0,
            'SGST': 0,
            'IGSTAmt': 0,
            'CGSTAmt': 0,
            'SGSTAmt': 0,
        };
        orgJson.push(jObj);

        $('#ExpensesJson').val(JSON.stringify(orgJson));
    }

    function RemoveExpenses(elem, index) {
        $('#tigst').val(Number($('#tigst').val()) - Number($('#igstamt' + index).val()));
        $('#tcgst').val(Number($('#tcgst').val()) - Number($('#cgstamt' + index).val()));
        $('#tsgst').val(Number($('#tsgst').val()) - Number($('#sgstamt' + index).val()));
        $(elem).closest('tr').remove();
        var orgJson = [];
        var gtotal = 0;
        $('#ExpTable tbody tr').each(function () {
            var id = $(this).attr('data-row-id');
            var jObj = {
                'ExpId': Number($('#exp' + id).val()),
                'HsnId': Number($('#hsn' + id).val()),
                'Amount': Number($('#amt' + id).val()),
                'IGST': Number($('#igst' + id).val()),
                'CGST': Number($('#cgst' + id).val()),
                'SGST': Number($('#sgst' + id).val()),
                'IGSTAmt':Number($('#sgstamt' + id).val()),
                'CGSTAmt': Number($('#cgstamt' + id).val()),
                 'SGSTAmt':Number($('#sgstamt' + id).val())
            };
            orgJson.push(jObj);
            gtotal += Number($('#amount' + id).val());
        });
        if (orgJson.length > 0) {
            $('#TotalAmount').val(gtotal.toFixed(2));
            $('#ExpensesJson').val(JSON.stringify(orgJson));
        }
        else {
            $('#ExpensesJson').val('');
        }
    }

    function GenerateHSN(index) {
        debugger;
        try {
            var id = $('#exp' + index).val();
            var exps = JSON.parse($('#Expenses').val());
            var exp = $.grep(exps, function (item) { return item.HeadId == id; })[0];

            var exphsn = JSON.parse($('#ExpHSN').val());
            var filterexphsn = $.grep(exphsn, function (item) { return item.ExpCode == exp.HeadCode; });

            var hsns = JSON.parse($('#HSN').val());
            var filterhsn = [];
            $.each(filterexphsn, function (i, item) {
                filterhsn.push($.grep(hsns, function (t) { return t.HSNCode == item.HSNCode; })[0]);
            });

            var hsnSelect = '<option value="">--- Select ---</option>';
            $.each(filterhsn, function (i, item) {
                hsnSelect += '<option value="' + item.HSNId + '">' + item.HSNCode + '</option>';
            });
            $('#hsn' + index).html(hsnSelect);
        }
        catch (e) {
            console.log(e.message);
            $('#hsn' + index).html('<option value="">--- Select ---</option>');
        }
    }

    function GenerateGST(index) {

        try {
            var igst = 0;
            var gst = 0;
            var cgst = 0;
            var sgst = 0;
            var id = $('#hsn' + index).val();
            var hsns = JSON.parse($('#HSN').val());
            var gst = $.grep(hsns, function (item) { return item.HSNId == id; })[0].GST;
            var partygstno = $('#GSTNo').val().substr(0, 2);
            var owngstno = $('#ComGST').val().substr(0, 2);
            if (partygstno == owngstno) {
                cgst = gst / 2;
                sgst = gst / 2;
            }
            else {
                var igst = gst;
            }
            $('#igst' + index).val(igst);
            $('#cgst' + index).val(cgst);
            $('#sgst' + index).val(sgst);
        }
        catch (e) { }
    }

    function ValidateAndCalculate(index, evt) {
        evt = (evt) ? evt : window.event;
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            alert("Allow only numbers");
            return false;
        }
        else {
            return true;
        }
    }

    function BindJSON(index) {


        debugger;
        var val = Number($('#amt' + index).val());
        var igst = Number($('#igst' + index).val());
        var cgst = Number($('#cgst' + index).val());
        var sgst = Number($('#sgst' + index).val());
        var igstamt= Number($('#igstamt' + index).val(val * igst / 100));
        var cgstamt=Number($('#cgstamt' + index).val(val * cgst / 100));
        var sgstamt = Number($('#sgstamt' + index).val(val * sgst / 100));
        var total = val + Number($('#igstamt' + index).val()) + Number($('#cgstamt' + index).val()) + Number($('#sgstamt' + index).val());
        $('#amount' + index).val(total.toFixed(2));

        var orgJson = $('#ExpensesJson').val() == '' ? [] : JSON.parse($('#ExpensesJson').val());
        /*
        var jObj = {
            'ExpId': Number($('#exp' + index).val()),
            'HsnId': Number($('#hsn' + index).val()),
            'Amount': Number($('#amt' + index).val()),
            'IGST': Number($('#igst' + index).val()),
            'CGST': Number($('#cgst' + index).val()),
            'SGST': Number($('#sgst' + index).val()),
            'IGSTAmt':Number($('#igstamt' + index).val()),
            'CGSTAmt': Number($('#cgstamt' + index).val()),
            'SGSTAmt': Number($('#sgstamt' + index).val()),
        };
        orgJson.push(jObj);
        */
        if (orgJson.length > 0) {
            orgJson[index-1].ExpId= Number($('#exp' + index).val());
            orgJson[index-1].HsnId= Number($('#hsn' + index).val());
            orgJson[index-1].Amount= Number($('#amt' + index).val());
            orgJson[index-1].IGST= Number($('#igst' + index).val());
            orgJson[index-1].CGST= Number($('#cgst' + index).val());
            orgJson[index-1].SGST= Number($('#sgst' + index).val());
            orgJson[index-1].IGSTAmt=Number($('#igstamt' + index).val());
            orgJson[index-1].CGSTAmt= Number($('#cgstamt' + index).val());
            orgJson[index-1].SGSTAmt = Number($('#sgstamt' + index).val());
        }


        $('#ExpensesJson').val(JSON.stringify(orgJson));

        var tigst = 0;
        var tcgst = 0;
        var tsgst = 0;
        var igstamt = 0;
        var cgstamt = 0;
        var sgstamt = 0;
        var gtotal = 0;
        for (var i = 1; i <= index; i++) {
            tigst += Number($('#igst' + i).val());
            tcgst += Number($('#cgst' + i).val());
            tsgst += Number($('#sgst' + i).val());
            igstamt += Number($('#igstamt' + i).val());
            cgstamt += Number($('#cgstamt' + i).val());
            sgstamt += Number($('#sgstamt' + i).val());
            gtotal += Number($('#amount' + i).val());
        }
        $('#tigst').val(tigst.toFixed(2));
        $('#tcgst').val(tcgst.toFixed(2));
        $('#tsgst').val(tsgst.toFixed(2));
        $('#igstamt').val(igstamt.toFixed(2));
        $('#cgstamt').val(cgstamt.toFixed(2));
        $('#sgstamt').val(sgstamt.toFixed(2));
        $('#TotalAmount').val(gtotal.toFixed(2));
    }

    function BindIgstJSON(index) {


        debugger;
        var val = Number($('#amt' + index).val());
        var igst = Number($('#igst' + index).val());
        var cgst = Number($('#cgst' + index).val());
        var sgst = Number($('#sgst' + index).val());
        var igstamt = Number($('#igstamt' + index).val(val * igst / 100));
       // var cgstamt = Number($('#cgstamt' + index).val(val * cgst / 100));
       // var sgstamt = Number($('#sgstamt' + index).val(val * sgst / 100));
        var total = val + Number($('#igstamt' + index).val()) + Number($('#cgstamt' + index).val()) + Number($('#sgstamt' + index).val());
        $('#amount' + index).val(total.toFixed(2));

        var orgJson = $('#ExpensesJson').val() == '' ? [] : JSON.parse($('#ExpensesJson').val());
        /*
        var jObj = {
            'ExpId': Number($('#exp' + index).val()),
            'HsnId': Number($('#hsn' + index).val()),
            'Amount': Number($('#amt' + index).val()),
            'IGST': Number($('#igst' + index).val()),
            'CGST': Number($('#cgst' + index).val()),
            'SGST': Number($('#sgst' + index).val()),
            'IGSTAmt':Number($('#igstamt' + index).val()),
            'CGSTAmt': Number($('#cgstamt' + index).val()),
            'SGSTAmt': Number($('#sgstamt' + index).val()),
        };
        orgJson.push(jObj);
        */
        if (orgJson.length > 0) {
            orgJson[index - 1].ExpId = Number($('#exp' + index).val());
            orgJson[index - 1].HsnId = Number($('#hsn' + index).val());
            orgJson[index - 1].Amount = Number($('#amt' + index).val());
            orgJson[index - 1].IGST = Number($('#igst' + index).val());
            orgJson[index - 1].CGST = Number($('#cgst' + index).val());
            orgJson[index - 1].SGST = Number($('#sgst' + index).val());
            orgJson[index - 1].IGSTAmt = Number($('#igstamt' + index).val());
            orgJson[index - 1].CGSTAmt = Number($('#cgstamt' + index).val());
            orgJson[index - 1].SGSTAmt = Number($('#sgstamt' + index).val());
        }


        $('#ExpensesJson').val(JSON.stringify(orgJson));

        var tigst = 0;
        var tcgst = 0;
        var tsgst = 0;
        var igstamt = 0;
        var cgstamt = 0;
        var sgstamt = 0;
        var gtotal = 0;
        for (var i = 1; i <= index; i++) {
            tigst += Number($('#igst' + i).val());
            tcgst += Number($('#cgst' + i).val());
            tsgst += Number($('#sgst' + i).val());
            igstamt += Number($('#igstamt' + i).val());
            cgstamt += Number($('#cgstamt' + i).val());
            sgstamt += Number($('#sgstamt' + i).val());
            gtotal += Number($('#amount' + i).val());
        }
        $('#tigst').val(tigst.toFixed(2));
        $('#tcgst').val(tcgst.toFixed(2));
        $('#tsgst').val(tsgst.toFixed(2));
        $('#igstamt').val(igstamt.toFixed(2));
        $('#cgstamt').val(cgstamt.toFixed(2));
        $('#sgstamt').val(sgstamt.toFixed(2));
        $('#TotalAmount').val(gtotal.toFixed(2));
    }


    function BindCgstJSON(index) {


        debugger;
        var val = Number($('#amt' + index).val());
        var igst = Number($('#igst' + index).val());
        var cgst = Number($('#cgst' + index).val());
        var sgst = Number($('#sgst' + index).val());
       // var igstamt = Number($('#igstamt' + index).val(val * igst / 100));
         var cgstamt = Number($('#cgstamt' + index).val(val * cgst / 100));
        // var sgstamt = Number($('#sgstamt' + index).val(val * sgst / 100));
        var total = val + Number($('#igstamt' + index).val()) + Number($('#cgstamt' + index).val()) + Number($('#sgstamt' + index).val());
        $('#amount' + index).val(total.toFixed(2));

        var orgJson = $('#ExpensesJson').val() == '' ? [] : JSON.parse($('#ExpensesJson').val());
        /*
        var jObj = {
            'ExpId': Number($('#exp' + index).val()),
            'HsnId': Number($('#hsn' + index).val()),
            'Amount': Number($('#amt' + index).val()),
            'IGST': Number($('#igst' + index).val()),
            'CGST': Number($('#cgst' + index).val()),
            'SGST': Number($('#sgst' + index).val()),
            'IGSTAmt':Number($('#igstamt' + index).val()),
            'CGSTAmt': Number($('#cgstamt' + index).val()),
            'SGSTAmt': Number($('#sgstamt' + index).val()),
        };
        orgJson.push(jObj);
        */
        if (orgJson.length > 0) {
            orgJson[index - 1].ExpId = Number($('#exp' + index).val());
            orgJson[index - 1].HsnId = Number($('#hsn' + index).val());
            orgJson[index - 1].Amount = Number($('#amt' + index).val());
            orgJson[index - 1].IGST = Number($('#igst' + index).val());
            orgJson[index - 1].CGST = Number($('#cgst' + index).val());
            orgJson[index - 1].SGST = Number($('#sgst' + index).val());
            orgJson[index - 1].IGSTAmt = Number($('#igstamt' + index).val());
            orgJson[index - 1].CGSTAmt = Number($('#cgstamt' + index).val());
            orgJson[index - 1].SGSTAmt = Number($('#sgstamt' + index).val());
        }


        $('#ExpensesJson').val(JSON.stringify(orgJson));

        var tigst = 0;
        var tcgst = 0;
        var tsgst = 0;
        var igstamt = 0;
        var cgstamt = 0;
        var sgstamt = 0;
        var gtotal = 0;
        for (var i = 1; i <= index; i++) {
            tigst += Number($('#igst' + i).val());
            tcgst += Number($('#cgst' + i).val());
            tsgst += Number($('#sgst' + i).val());
            igstamt += Number($('#igstamt' + i).val());
            cgstamt += Number($('#cgstamt' + i).val());
            sgstamt += Number($('#sgstamt' + i).val());
            gtotal += Number($('#amount' + i).val());
        }
        $('#tigst').val(tigst.toFixed(2));
        $('#tcgst').val(tcgst.toFixed(2));
        $('#tsgst').val(tsgst.toFixed(2));
        $('#igstamt').val(igstamt.toFixed(2));
        $('#cgstamt').val(cgstamt.toFixed(2));
        $('#sgstamt').val(sgstamt.toFixed(2));
        $('#TotalAmount').val(gtotal.toFixed(2));
    }

    function BindSgstJSON(index) {


        debugger;
        var val = Number($('#amt' + index).val());
        var igst = Number($('#igst' + index).val());
        var cgst = Number($('#cgst' + index).val());
        var sgst = Number($('#sgst' + index).val());
        //var igstamt = Number($('#igstamt' + index).val(val * igst / 100));
        // var cgstamt = Number($('#cgstamt' + index).val(val * cgst / 100));
         var sgstamt = Number($('#sgstamt' + index).val(val * sgst / 100));
        var total = val + Number($('#igstamt' + index).val()) + Number($('#cgstamt' + index).val()) + Number($('#sgstamt' + index).val());
        $('#amount' + index).val(total.toFixed(2));

        var orgJson = $('#ExpensesJson').val() == '' ? [] : JSON.parse($('#ExpensesJson').val());
        /*
        var jObj = {
            'ExpId': Number($('#exp' + index).val()),
            'HsnId': Number($('#hsn' + index).val()),
            'Amount': Number($('#amt' + index).val()),
            'IGST': Number($('#igst' + index).val()),
            'CGST': Number($('#cgst' + index).val()),
            'SGST': Number($('#sgst' + index).val()),
            'IGSTAmt':Number($('#igstamt' + index).val()),
            'CGSTAmt': Number($('#cgstamt' + index).val()),
            'SGSTAmt': Number($('#sgstamt' + index).val()),
        };
        orgJson.push(jObj);
        */
        if (orgJson.length > 0) {
            orgJson[index - 1].ExpId = Number($('#exp' + index).val());
            orgJson[index - 1].HsnId = Number($('#hsn' + index).val());
            orgJson[index - 1].Amount = Number($('#amt' + index).val());
            orgJson[index - 1].IGST = Number($('#igst' + index).val());
            orgJson[index - 1].CGST = Number($('#cgst' + index).val());
            orgJson[index - 1].SGST = Number($('#sgst' + index).val());
            orgJson[index - 1].IGSTAmt = Number($('#igstamt' + index).val());
            orgJson[index - 1].CGSTAmt = Number($('#cgstamt' + index).val());
            orgJson[index - 1].SGSTAmt = Number($('#sgstamt' + index).val());
        }


        $('#ExpensesJson').val(JSON.stringify(orgJson));

        var tigst = 0;
        var tcgst = 0;
        var tsgst = 0;
        var igstamt = 0;
        var cgstamt = 0;
        var sgstamt = 0;
        var gtotal = 0;
        for (var i = 1; i <= index; i++) {
            tigst += Number($('#igst' + i).val());
            tcgst += Number($('#cgst' + i).val());
            tsgst += Number($('#sgst' + i).val());
            igstamt += Number($('#igstamt' + i).val());
            cgstamt += Number($('#cgstamt' + i).val());
            sgstamt += Number($('#sgstamt' + i).val());
            gtotal += Number($('#amount' + i).val());
        }
        $('#tigst').val(tigst.toFixed(2));
        $('#tcgst').val(tcgst.toFixed(2));
        $('#tsgst').val(tsgst.toFixed(2));
        $('#igstamt').val(igstamt.toFixed(2));
        $('#cgstamt').val(cgstamt.toFixed(2));
        $('#sgstamt').val(sgstamt.toFixed(2));
        $('#TotalAmount').val(gtotal.toFixed(2));
    }


    function BindTotalJSON(index) {


        debugger;
        var val = Number($('#amt' + index).val());
        var igst = Number($('#igst' + index).val());
        var cgst = Number($('#cgst' + index).val());
        var sgst = Number($('#sgst' + index).val());
        //var igstamt = Number($('#igstamt' + index).val(val * igst / 100));
        // var cgstamt = Number($('#cgstamt' + index).val(val * cgst / 100));
       // var sgstamt = Number($('#sgstamt' + index).val(val * sgst / 100));
        var total = val + Number($('#igstamt' + index).val()) + Number($('#cgstamt' + index).val()) + Number($('#sgstamt' + index).val());
        $('#amount' + index).val(total.toFixed(2));

        var orgJson = $('#ExpensesJson').val() == '' ? [] : JSON.parse($('#ExpensesJson').val());
        /*
        var jObj = {
            'ExpId': Number($('#exp' + index).val()),
            'HsnId': Number($('#hsn' + index).val()),
            'Amount': Number($('#amt' + index).val()),
            'IGST': Number($('#igst' + index).val()),
            'CGST': Number($('#cgst' + index).val()),
            'SGST': Number($('#sgst' + index).val()),
            'IGSTAmt':Number($('#igstamt' + index).val()),
            'CGSTAmt': Number($('#cgstamt' + index).val()),
            'SGSTAmt': Number($('#sgstamt' + index).val()),
        };
        orgJson.push(jObj);
        */
        if (orgJson.length > 0) {
            orgJson[index - 1].ExpId = Number($('#exp' + index).val());
            orgJson[index - 1].HsnId = Number($('#hsn' + index).val());
            orgJson[index - 1].Amount = Number($('#amt' + index).val());
            orgJson[index - 1].IGST = Number($('#igst' + index).val());
            orgJson[index - 1].CGST = Number($('#cgst' + index).val());
            orgJson[index - 1].SGST = Number($('#sgst' + index).val());
            orgJson[index - 1].IGSTAmt = Number($('#igstamt' + index).val());
            orgJson[index - 1].CGSTAmt = Number($('#cgstamt' + index).val());
            orgJson[index - 1].SGSTAmt = Number($('#sgstamt' + index).val());
        }


        $('#ExpensesJson').val(JSON.stringify(orgJson));

        var tigst = 0;
        var tcgst = 0;
        var tsgst = 0;
        var igstamt = 0;
        var cgstamt = 0;
        var sgstamt = 0;
        var gtotal = 0;
        for (var i = 1; i <= index; i++) {
            tigst += Number($('#igst' + i).val());
            tcgst += Number($('#cgst' + i).val());
            tsgst += Number($('#sgst' + i).val());
            igstamt += Number($('#igstamt' + i).val());
            cgstamt += Number($('#cgstamt' + i).val());
            sgstamt += Number($('#sgstamt' + i).val());
            gtotal += Number($('#amount' + i).val());
        }
        $('#tigst').val(tigst.toFixed(2));
        $('#tcgst').val(tcgst.toFixed(2));
        $('#tsgst').val(tsgst.toFixed(2));
        $('#igstamt').val(igstamt.toFixed(2));
        $('#cgstamt').val(cgstamt.toFixed(2));
        $('#sgstamt').val(sgstamt.toFixed(2));
        $('#TotalAmount').val(gtotal.toFixed(2));
    }

    $('#lstCHA > li').on("click", function () {
        $('#Party').val($(this).text());
        $('#PartyId').val($(this).attr('id'));
        $("#PartyModal").modal("hide");
    });

    $('#CHAbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCHA > li').show();
        else {
            $('#lstCHA > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    function OnSuccess(data) {
        debugger;
        alert(data.Message);
        if (data.Status) {
            $('#PVHeadId').val(data.Id);
            $('#VoucherNo').val(data.Data.VoucherNo);
          //  $('#BtnPrint').prop('disabled', false);
            //  PrintVoucher();

            $('#Party').val('');
            $('#Address').val('');
            $('#City').val('');
            $('#State').val('');
            $('#StateCode').val('');
            $('#Pin').val('');
            $('#GSTNo').val('');
            $('#Narration').val('');
            $('#ExpTable tbody tr').remove();
            // $('#isunregister').unchecked();
            $('#btnnew').attr('disabled', true);
            $('#TotalAmount').val('');
            $('#cgstamt').val(0);
            $('#igstamt').val(0);
            $('#sgstamt').val(0);
            $('#IsUnregister').attr('checked', false);
            $('#submit').attr('disabled', true);

            GetPVList();
        }
    }

    function ResetForm() {
        $('#DivBody').load('@Url.Action("PaymentVoucher", "Kol_CashManagement",new { area = "CashManagement" })');
    }

    function PrintVoucher() {
        var printTable = "<table style='width:100%; border-style:none;text-align:center;'><tr><td><span style='font-size:10pt;'>CENTRAL WAREHOUSING CORPORATION                      (FORMAT-X)</span><br/><span style='font-size:8pt;'>Principal Place of Business:___________________</span><br/><span style='font-size:10pt;'>Payment Voucher</span></td></tr><tr><td style='text-align:right;font-size:9pt;'><u>ORIGINAL FOR RECIPIENT</u></td></tr></table>";
        printTable += "<table style='border-collapse:collapse;width:100%;' border='1'><tr><td style='width:50%;'>Details of Service Provider</td><td style='width:50%;'>Details of Service Receiver</td></tr>";
        printTable += "<tr><td stye='text-align:center;'>Name : Central Warehouse</td><td stye='text-align:center;'>Name : " + $('#Party').val() + "</td></tr>";
        printTable += "<tr><td>Warehouse Address : </td><td>Address : " + $('#Address').val() + "</td></tr>";
        printTable += "<tr><td>City : </td><td>City : " + $('#City').val() + "</td></tr>";
        printTable += "<tr><td>State : </td><td>State : " + $('#State').val() + "</td></tr>";
        printTable += "<tr><td>State Code : </td><td>State Code : " + $('#StateCode').val() + "</td></tr>";
        printTable += "<tr><td>GSTIN : " + $('#ComGST').val() + "</td><td>GSTIN (if registered) : " + $('#GSTNo').val() + "</td></tr>";
        printTable += "<tr><td>PAN : " + $('#ComGST').val() + "</td><td></td></tr>";
        printTable += "</table>";
        printTable += "<u>Serial No: " + $('#VoucherNo').val() + "</u><br/>";
        printTable += "<u>Date: " + $('#PaymentDate').val() + "</u><br/>";
        printTable += "<strong>For Payment under Reverse Charge</strong>";
        printTable += "<table style='border-collapse:collapse;width:100%;font-size:9pt;' border='1'><tr><th style='text-align:center'>Sl.No.</th><th style='text-align:center'>Description of Services</th><th style='text-align:center'>Service Accounting Code</th><th style='text-align:center'>Amount Paid</th></tr>";

        var countRow = $('#ExpTable tbody tr').length;
        var tAmt = 0;
        var taxObj = [];
        for (var i = 1; i <= countRow; i++) {
            printTable += "<tr><td>" + i + "</td><td style='padding:2px;'>" + $('#exp' + i + ' option:selected').text() + "</td><td style='padding:2px;'>" + $('#hsn' + i + ' option:selected').text() + "</td><td style='text-align:right;padding:2px;'>" + $('#amount' + i).val() + "</td></tr>";
            tAmt += Number($('#amt' + i).val());
            if (taxObj.length === 0) {
                if ($('#igst' + i).val() == '0') {
                    taxObj.push({ 'Cast': 'CGST' + $('#cgst' + i).val(), 'Type': 'CGST', 'Rate': Number($('#cgst' + i).val()), 'Amount': Number($('#cgstamt' + i).val()) });
                    taxObj.push({ 'Cast': 'SGST' + $('#cgst' + i).val(), 'Type': 'SGST', 'Rate': Number($('#sgst' + i).val()), 'Amount': Number($('#sgstamt' + i).val()) });
                }
                else {
                    taxObj.push({ 'Cast': 'IGST' + $('#cgst' + i).val(), 'Type': 'IGST', 'Rate': Number($('#igst' + i).val()), 'Amount': Number($('#igstamt' + i).val()) });
                }
            }
            else {
                if ($('#igst' + i).val() == '0') {
                    var extCGST = $.grep(taxObj, function (e) { return e.Cast == ('CGST' + $('#cgst' + i).val()); });
                    if (extCGST.length == 0) {
                        taxObj.push({ 'Cast': 'CGST' + $('#cgst' + i).val(), 'Type': 'CGST', 'Rate': Number($('#cgst' + i).val()), 'Amount': Number($('#cgstamt' + i).val()) });
                    }
                    else if (extCGST.length == 1) {
                        var index = taxObj.indexOf(extCGST[0]);
                        taxObj[index].Amount += Number($('#cgstamt' + i).val());
                    }
                    var extSGST = $.grep(taxObj, function (e) { return e.Cast == ('SGST' + $('#sgst' + i).val()); });
                    if (extSGST.length == 0) {
                        taxObj.push({ 'Cast': 'SGST' + $('#sgst' + i).val(), 'Type': 'SGST', 'Rate': Number($('#sgst' + i).val()), 'Amount': Number($('#sgstamt' + i).val()) });
                    }
                    else if (extSGST.length == 1) {
                        var index = taxObj.indexOf(extSGST[0]);
                        taxObj[index].Amount += Number($('#sgstamt' + i).val());
                    }
                }
                else {
                    var extIGST = $.grep(taxObj, function (e) { return e.Cast == ('IGST' + $('#igst' + i).val()); });
                    if (extIGST.length == 0) {
                        taxObj.push({ 'Cast': 'IGST' + $('#igst' + i).val(), 'Type': 'IGST', 'Rate': Number($('#igst' + i).val()), 'Amount': Number($('#igstamt' + i).val()) });
                    }
                    else if (extIGST.length == 1) {
                        var index = taxObj.indexOf(extIGST[0]);
                        taxObj[index].Amount += Number($('#igstamt' + i).val());
                    }
                }
            }
        }
        printTable += "</table>";

        printTable += "<table style='border-collapse:collapse;width:100%;font-size:9pt;' border='1'><tr><td style='width:50%;'><u>Total Invoice Value (in figure) " + $('#TotalAmount').val() + "<br/>Total Invoice Value (in words) " + CurrentcyToWord(Number($('#TotalAmount').val())) + "</u></td><td style='width:50%;' cellpadding='0' cellspacing='0'>";
        var dynamicTax = "<table style='border-collapse:collapse;width:100%;font-size:9pt;' border='1'><tr><th colspan='2'>Total Taxable Value</th><th style='text-align:right;'>" + tAmt.toFixed(2) + "</th></tr>";
        $.each(taxObj, function (i, item) {
            dynamicTax += "<tr><td>" + item.Type + "</td><td>" + item.Rate + " %</td><td style='text-align:right;'>" + item.Amount + "</td></tr>";
        });
        dynamicTax += "<tr><td style='font-weight:bold;' colspan='2'>Total Invoice Amount</td><td style='font-weight:bold;text-align:right;'>" + $('#TotalAmount').val() + "</td></tr></table>";
        printTable += dynamicTax + "</td></tr></table>";
        printTable += "<br/><br/><table style='border-collapse:collapse;width:100%;font-size:10pt;' border='0'><tr><td style='width:50%;'></td><td style='width:50%;'><u>Signature:  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;<br/>Name of the Signatory:  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;</u><br/>Designation/Status:</td></tr><tr><td style='width:50%;'>To,<br/><u>  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;<br/>  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;<br/>  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;</u></td><td style='width:50%;'></td></tr></table>";

        var PostData = new FormData();
        PostData.append("PVHeadId", $('#PVHeadId').val());
        PostData.append("page", printTable);
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GeneratePDF", "Kol_CashManagement", new { area = "CashManagement" })',
            data: PostData,
            processData: false,
            contentType: false,
            success: function (data) {
                window.open(data.Message + '?t=' + (new Date().getTime()), "_blank", "fullscreen=yes");//"/Docs/PaymentVoucher/" +
            }
        });
    }

    function CurrentcyToWord(s) {
        var th = ['', 'thousand', 'million', 'billion', 'trillion'];
        var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
        var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
        var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        s = s.toString();
        s = s.replace(/[\, ]/g, '');
        if (s != parseFloat(s)) return 'not a number';
        var x = s.indexOf('.');
        if (x == -1) x = s.length;
        if (x > 15) return 'too big';
        var n = s.split('');
        var str = '';
        var sk = 0;
        for (var i = 0; i < x; i++) {
            if ((x - i) % 3 == 2) {
                if (n[i] == '1') {
                    str += tn[Number(n[i + 1])] + ' ';
                    i++;
                    sk = 1;
                } else if (n[i] != 0) {
                    str += tw[n[i] - 2] + ' ';
                    sk = 1;
                }
            } else if (n[i] != 0) {
                str += dg[n[i]] + ' ';
                if ((x - i) % 3 == 0) str += 'hundred ';
                sk = 1;
            }
            if ((x - i) % 3 == 1) {
                if (sk) str += th[(x - i - 1) / 3] + ' ';
                sk = 0;
            }
        }
        if (x != s.length) {
            var y = s.length;
            str += 'point ';
            for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';
        }
        return str.replace(/\s+/g, ' ');
    }
</script>
<input type="hidden" id="ComGST" value="@ViewData["COMGST"].ToString()" />
<input type="hidden" id="Expenses" value="@ViewBag.Expenses.ToString()" />
<input type="hidden" id="ExpHSN" value="@ViewBag.ExpHSN.ToString()" />
<input type="hidden" id="HSN" value="@ViewBag.HSN.ToString()" />

@using (Ajax.BeginForm("PaymentVoucher", "Ppg_CashManagement", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", LoadingElementDuration = 1000, LoadingElementId = "divProgress" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.PartyId, new { Value = "0000000000" })
    @Html.TextBoxFor(m => m.ExpensesJson, new { @style = "position:fixed;top:-999px;" })@*,new { @style="position:fixed;top:-999px;"}*@
    @Html.HiddenFor(m => m.PVHeadId, new { @Value = 0 })
    
        <div class="row">
            <div class="col-md-12">
                <div class="Head_h4">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Payment Voucher</h4>
                        </div>
                    </div>
                    <div class="content_wrp">
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.VoucherNo)
                                    @Html.TextBoxFor(m => m.VoucherNo, new { @readonly = true })
                                    @Html.ValidationMessageFor(m => m.VoucherNo, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrVoucherNo"></span>
                                </div>
                            </div>
                            <div class="col-md-3 col-md-offset-6">
                                @Html.LabelFor(m => m.PaymentDate)
                                <div class="position-relative Date_Img">
                                    @Html.TextBoxFor(m => m.PaymentDate, new { @readonly = true, Value = DateTime.Today.ToString("dd/MM/yyyy") })
                                    @Html.ValidationMessageFor(m => m.PaymentDate, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrPaymentDate"></span>
                                </div>
                            </div>                         
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Party)
                                    <div class="position-relative">                                        
                                        @Html.TextBoxFor(m => m.Party, new { @placeholder = "Select Party" })
                                        <span class="input_icon" id="CHASerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PartyModal"></i></span>
                                        @Html.ValidationMessageFor(m => m.Party, "", new { @class = "Error_Msg" })
                                        <span style="color:red" id="ErrParty"></span>
                                     </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address)
                                    @Html.TextAreaFor(m => m.Address, new { @placeholder = "Enter Address", @style = "height:75px;"})
                                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrAddress"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.City)
                                    @Html.TextBoxFor(m => m.City, new { @placeholder = "City" })
                                    @Html.ValidationMessageFor(m => m.City, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrCity"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.State)
                                    @Html.TextBoxFor(m => m.State, new { @placeholder = "State" })
                                    @Html.ValidationMessageFor(m => m.State, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrState"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.StateCode)
                                    @Html.TextBoxFor(m => m.StateCode, new { @placeholder = "State Code" })
                                    @Html.ValidationMessageFor(m => m.StateCode, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrStateCode"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Pin)
                                    @Html.TextBoxFor(m => m.Pin, new { @placeholder = "Pin" })
                                    @Html.ValidationMessageFor(m => m.Pin, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrPin"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.GSTNo)
                                    @Html.TextBoxFor(m => m.GSTNo, new { @placeholder = "GST No" })
                                    @Html.ValidationMessageFor(m => m.GSTNo, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrGSTNo"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Purpose)
                                </div>
                                    <select id="Purpose" name="Purpose">
                                        <option value="Imprest">Imprest</option>
                                        <option value="Temporary Advance">Temporary Advance</option>
                                    </select>
                                    @Html.ValidationMessageFor(m => m.Purpose, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrPurpose"></span>
                                
                                <div class="col-md-1-5 col-md-offset-4">

                                </div>
                                <div class="col-md-2 Date_Img Error_Msg">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_top SignUp_space_bottom2"></div>
                        </div>
                        <div class="row SignUp_space_bottom2">
                            <div class="d-flex justify-content-center">
                                <button type="button" id="btnnew" onclick="AddNewRow()" class="btn btn-primary mr-1 btn-100px">Add New Row</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12 text-center">
                                @Html.ValidationMessageFor(m => m.ExpensesJson)
                            </div>
                        </div>
                        <div class="Head_h5 hidden_border">
                            <div class="row">
                                <div class="col-md-12">
                                    <h5>Payment Voucher Details</h5>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div id="payment-grid" class="col-md-12">
                                    <table id="ExpTable" class="table table-striped table-bordered dataTable Table_center">
                                        <thead>
                                            <tr>
                                                <th rowspan="2" style="width:25%;">Expenses Head</th>
                                                <th rowspan="2" style="width:15%;">HSN Code</th>
                                                <th rowspan="2" style="width:10%;">Amount</th>
                                                <th colspan="2">IGST</th>
                                                <th colspan="2">CGST</th>
                                                <th colspan="2">SGST</th>
                                                <th rowspan="2" style="width:10%;">TOTAL</th>
                                                <th rowspan="2" style="width:2%;">X</th>
                                            </tr>
                                            <tr>
                                                <th style="width:5%;">%</th>
                                                <th>Amt</th>
                                                <th style="width:5%;">%</th>
                                                <th>Amt</th>
                                                <th style="width:5%;">%</th>
                                                <th style="border-right:1px solid #ddd;">Amt</th>
                                            </tr>
                                        </thead>
                                        <tbody></tbody>
                                        <tfoot>
                                            <tr>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td style="width:150px;"><input type="text" class="text-right" id="tigst" value="0" disabled /></td>
                                                <td></td>
                                                <td style="width:150px;"><input type="text" class="text-right" id="tcgst" value="0" disabled /></td>
                                                <td></td>
                                                <td style="width:150px;"><input type="text" class="text-right" id="tsgst" value="0" disabled /></td>
                                                <td>@Html.TextBoxFor(m => m.TotalAmount, new { @readonly = true, @class = "text-right" })</td>
                                                <td></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Narration)
                                    @Html.TextAreaFor(m => m.Narration, new { @placeholder = "Enter Narration",@style = "height:75px;"})
                                    @Html.ValidationMessageFor(m => m.Narration, "", new { @class = "Error_Msg" })
                                    <span style="color:red" id="ErrNarration"></span>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1">
                                    @Html.LabelFor(m => m.IsUnregister)
                                </div>
                                <div class="col-md-1">
                                    <div class="boolean-container">
                                        @Html.CheckBoxFor(m => m.IsUnregister)
                                        <label for="IsUnregister"><i class="square"></i></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_top2 SignUp_space_bottom2">
                            </div>
                        </div>
                        <div class="row SignUp_space_bottom">
                            <div class="d-flex justify-content-left">
                                <button type="submit" id="submit" class="btn btn-primary mr-1 btn-100px">Save</button>
                                <button type="reset" class="btn btn-primary-border btn-100px" onclick="ResetForm()">Reset</button>
                            </div>
                            @*<div class="col-md-2">
                    <button id="BtnPrint" type="button" class="btn log_Btn_sm" onclick="PrintVoucher()" disabled>Print</button>
                </div>*@
                        </div>
                        <div class="row Form_Space_top">
                            <div id="DivPaymentVoucherList" class="col-md-12 ClearFix SignUp_space_bottom">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
   
}
<div class="modal fade" id="PartyModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Party Names</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="CHAbox" type="text" />
                <ul class="navList" id="lstCHA">
                    @{
                        foreach (var item in ViewBag.Parties)
                        {
                            <li id="@item.PartyId">@item.PartyName</li>
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn btn-danger-border btn-100px" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")