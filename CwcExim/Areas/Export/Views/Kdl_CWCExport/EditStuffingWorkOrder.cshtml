@model CwcExim.Areas.Export.Models.StuffingWorkOrder
@using (Ajax.BeginForm("AddEditStuffingWorkOrder", "Kdl_CWCExport", new AjaxOptions { Confirm = "Are You Sure You Want To Save?", HttpMethod = "POST", OnBegin = "ValidateGrid", OnSuccess = "WorkOrderOnSuccess", OnFailure = "WorkOrderOnFailure" }))
{
    @Html.AntiForgeryToken();

    <div class="Head_h4">
        <div class="row">
            <div class="col-md-12">
                <h4>Stuffing Work Order</h4>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    <label>Type of Work:</label>
                </div>
                <div class="col-md-2 col_cus_3">
                    <label>Stuffing</label>
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    @Html.HiddenFor(m => m.WorkOrderId)
                    <label>Work Order No:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.TextBoxFor(m => m.WorkOrderNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                    <label>Work Order Date:</label>
                </div>
                <div class="col-md-2 col_cus_2_5 Date_Img">
                    @Html.TextBoxFor(m => m.WorkOrderDate, new { @class = "form-control input-sm", placeholder = "dd/mm/yyyy", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    @Html.HiddenFor(m => m.StuffingRequestId)
                    <label>Stuffing No:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.TextBoxFor(m => m.StuffingRequestNo, new { @class = "form-control input-sm", @readonly = true })
                    <span class="search" id="StuffingRequestSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#StuffingRequestModal"></i></span>
                </div>
                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                    <label>Stuffing Date:</label>
                </div>
                <div class="col-md-2 col_cus_2_5 Date_Img">
                    @Html.TextBoxFor(m => m.StuffingRequestDate, new { @class = "form-control input-sm", @readonly = true })
                    @Html.ValidationMessageFor(m => m.StuffingRequestDate)
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    @Html.HiddenFor(m => m.GodownId)
                    <label>Godown:</label>
                </div>
                <div class="col-md-10-5 col_cus_10">
                    @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                    <span class="search" id="GodownSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                    @Html.ValidationMessageFor(m => m.GodownName)
                </div>
            </div>
        </div>
        <div class="row Form_Space_top Form_Space_bottom">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    <label>Remarks:</label>
                </div>
                <div class="col-md-10-5 col_cus_10">
                    @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "height:100px;" })
                    @Html.ValidationMessageFor(m => m.Remarks)
                </div>
            </div>
        </div>
        <div class="Head_h5">
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2">
                        @Html.Hidden("WorkOrderDetailId", 0)
                        <label>Container No:</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBox("txtContainerNo", "", new { @class = "form-control input-sm", @readonly = true })
                        <span class="search" id="ContainerSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                        <span id="ErrContainerNo"></span>
                    </div>
                    <div class="col-md-1-5 col-md-offset-2-5 col_cus_offset_2 padding_rt">
                        @Html.Hidden("CommodityId", 0)
                        <label>Commodity Name:</label>
                    </div>
                    <div class="col-md-4">
                        @Html.TextBox("txtCommodityName", "", new { @class = "form-control input-sm", @readonly = true })
                        <span class="search" id="CommoditySearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CommodityModal"></i></span>
                        <span id="ErrCommodityName"></span>
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2">
                        <label>Cargo Description:</label>
                    </div>
                    <div class="col-md-10-5 col_cus_10">
                        @Html.TextArea("txtCargoDescription", "", new { @class = "form-control input-sm", @style = "height:100px;",@maxlength=3000 })
                        <span id="ErrCargoDescription"></span>
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2">
                        <label>No of Units:</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBox("txtNoOfUnits", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyInteger(event)" })
                        <span id="ErrNoOfUnits"></span>
                    </div>
                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                        <label>Weight:</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBox("txtWeight", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyDecimal(event)" })
                        <span id="ErrWeight"></span>
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2">
                        <label>Weight per Unit:</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBox("txtWeightPerUnit", "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyDecimal(event)" })
                        <span id="ErrWeightPerUnit"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
            </div>
            <div class="row">
                <div class="col-md-offset-4 col-md-2">
                    <input type="button" id="btnAddWorkOrderDet" class="btn log_Btn_sm" value="Add" onclick="AddWorkOrderDet()" />
                </div>
                <div class="col-md-2">
                    <input type="button" id="btnResetWorkOrderDet" class="btn log_Btn_sm" value="Reset" onclick="ResetWorkOrderDet()" />
                </div>
            </div>
            <div class="row Form_Space_top Form_Space_bottom">
                <div class="col-md-12">
                    <div id="WorkOrderDetail"></div>
                </div>
            </div>
        </div>
        <div>
            @Html.HiddenFor(m => m.StuffingWorkOrderDtlJS)
            @Html.ValidationMessageFor(m => m.StuffingWorkOrderDtlJS)
        </div>
        <div class="row">
            <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
        </div>
        <div class="row">
            <div class="col-md-offset-4 col-md-2 SignUp_space_bottom">
                <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" />
            </div>
            <div class="col-md-2">
                <input type="button" id="btnReset" class="btn log_Btn_sm" value="Back" onclick="ResetAllFields()" />
            </div>
        </div>
        <div class="logSuccMsg Form_Space_top Form_Space_bottom" id="DivWorkOrderMsg" style="background-color:transparent"></div>
    </div>

                <div id="StuffingRequestModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal content-->
                        <div class="modal-content popup_modal">
                            <div class="modal-header popup_header">
                                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                <h4 class="modal-title">List of Stuffing Request</h4>
                            </div>
                            <div class="modal-body popup_body">
                                <input placeholder="Search Me" id="StuffingRequestbox" type="text" />
                                <ul class="navList" id="lstStuffingRequest">
                                    @{
                                        foreach (var item in Model.lstStuffingNoList)
                                        {
                                            <li id="@item.StuffingRequestId">@item.StuffingRequestNo</li>
                                        }
                                    }
                                </ul>
                            </div>
                            @Html.HiddenFor(m => m.StuffingNoListJS)
                            <div class="modal-footer">
                                <div class="row">
                                    <div class="col-md-offset-6 col-md-6">
                                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
               /* <div id="GodownModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal content-->
                        <div class="modal-content popup_modal">
                            <div class="modal-header popup_header">
                                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                <h4 class="modal-title">List of Godown</h4>
                            </div>
                            <div class="modal-body popup_body">
                                <input placeholder="Search Me" id="Godownbox" type="text" />
                                <ul class="navList" id="lstGodown">
                                    @{
                                        foreach (var item in Model.lstGodownList)
                                        {
                                            <li id="@item.GodownId">@item.GodownName</li>
                                        }
                                    }
                                </ul>
                            </div>
                            <div class="modal-footer">
                                <div class="row">
                                    <div class="col-md-offset-6 col-md-6">
                                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="ContainerModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal content-->
                        <div class="modal-content popup_modal">
                            <div class="modal-header popup_header">
                                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                <h4 class="modal-title">List of Container</h4>
                            </div>
                            <div class="modal-body popup_body">
                                <input placeholder="Search Me" id="Containerbox" type="text" />
                                <ul class="navList" id="lstContainer">
                                    @{
                                        foreach (var item in Model.lstContainerList)
                                        {
                                            <li id="@item.StuffingRequestDetailId">@item.ContainerNo</li>
                                        }
                                    }
                                </ul>
                            </div>
                            <div class="modal-footer">
                                <div class="row">
                                    <div class="col-md-offset-6 col-md-6">
                                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="CommodityModal" class="modal fade" role="dialog">
                    <div class="modal-dialog">
                        <!-- Modal content-->
                        <div class="modal-content popup_modal">
                            <div class="modal-header popup_header">
                                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                <h4 class="modal-title">List of Commodity</h4>
                            </div>
                            <div class="modal-body popup_body">
                                <input placeholder="Search Me" id="Commoditybox" type="text" />
                                <ul class="navList" id="lstCommodity">
                                    @{
                                        foreach (var item in Model.lstCommodity)
                                        {
                                            <li id="@item.CommodityId">@item.CommodityName</li>
                                        }
                                    }
                                </ul>
                            </div>
                            <div class="modal-footer">
                                <div class="row">
                                    <div class="col-md-offset-6 col-md-6">
                                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*/
                                        }
@Scripts.Render("~/bundles/jqueryval")
<script>
    var TimeInSeconds;
    var ArrayStuffingReqNo = [];

    var EditIndex = -1;
    var ArrayOfContainerDetails = [];
    $(document).ready(function () {
        debugger;
        //ArrayStuffingReqNo = $.parseJSON($('#StuffingNoListJS').val());
        //GetWorkOrderList();

        ArrayOfContainerDetails = $.parseJSON($('#StuffingWorkOrderDtlJS').val());
        GenerateTable2();
        TimeInSeconds = 5000;
        $("#WorkOrderDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });
        //GetContainer();
    });
    function GenerateTable2() {
        debugger;
        var tablehtml = '<table id="tblWorkOrderDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
            + '<thead><tr><th style="width:8%;text-align:center;">SL No</th><th>Container No</th><th>Commodity Name</th><th>Cargo Description</th><th>No of Units</th>'
            + '<th>Weight</th><th>Weight / Unit</th><th>Edit</th></tr></thead><tbody>';
        $.each(ArrayOfContainerDetails, function (i, data) {
            tablehtml += '<tr><td style="text-align:center;">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.CommodityName + '</td>'
                + '<td>' + data.CargoDescription + '</td><td>' + data.NoOfUnits + '</td><td>' + data.Weight + '</td><td>' + data.WeightPerUnit + '</td>'
                + '<td style="text-align:center;"><a href="#" onclick="EditWorkOrderDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td>'
                + '</tr>';
        });
        tablehtml += '</tbody></table>';
        $('#WorkOrderDetail').html(tablehtml);

        if (ArrayOfContainerDetails.length > 0) {
            $('#StuffingWorkOrderDtlJS').val(JSON.stringify(ArrayOfContainerDetails));
        }
        else {
            $('#StuffingWorkOrderDtlJS').val('');
        }
    }
    $('#StuffingRequestbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstStuffingRequest > li').show();
        else {
            $('#lstStuffingRequest > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstStuffingRequest > li').on("click", function () {
        $('#StuffingRequestNo').val($(this).text());
        $('#StuffingRequestId').val($(this).attr('id'));
        $("#StuffingRequestModal").modal("hide");
        GetContainer();
    });

    $('#Godownbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstGodown > li').show();
        else {
            $('#lstGodown > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstGodown > li').on("click", function () {
        $('#GodownName').val($(this).text());
        $('#GodownId').val($(this).attr('id'));
        $("#GodownModal").modal("hide");
    });

    $('#Containerbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstContainer > li').show();
        else {
            $('#lstContainer > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstContainer > li').on("click", function () {
        debugger;
        $('#ContainerNo').val($(this).text());
        ContainerID = $(this).attr('id');
        ContainerChange();
        $("#ContainerModal").modal("hide");
    });

    $('#Commoditybox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCommodity > li').show();
        else {
            $('#lstCommodity > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstCommodity > li').on("click", function () {
        $('#txtCommodityName').val($(this).text());
        $('#CommodityId').val($(this).attr('id'));
        $("#CommodityModal").modal("hide");
    });
</script>
<script>
    function AddWorkOrderDet() {
        if (ValidateWorkOrderDet()) {
            debugger;
            var ContainerDetails = {
                "WorkOrderDetailId": $('#WorkOrderDetailId').val(),
                "ContainerNo": $('#txtContainerNo').val(),
                "CommodityId": $('#CommodityId').val(),
                "CommodityName": $('#txtCommodityName').val(),
                "CargoDescription": $('#txtCargoDescription').val(),
                "NoOfUnits": $('#txtNoOfUnits').val(),
                "Weight": $('#txtWeight').val(),
                "WeightPerUnit": $('#txtWeightPerUnit').val()
            };
            if (EditIndex > -1)
                ArrayOfContainerDetails.splice(EditIndex, 1, ContainerDetails);
            else
                ArrayOfContainerDetails.push(ContainerDetails);
            $('#WorkOrderDetail').html('');
            GenerateTable2();
            ResetWorkOrderDet();
        }
    }
    function ValidateWorkOrderDet() {
        debugger;
        var Status = true;
        if ($('#txtContainerNo').val() == "") {
            $('#ErrContainerNo').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtCommodityName').val() == "") {
            $('#ErrCommodityName').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtCargoDescription').val() == "") {
            $('#ErrCargoDescription').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtNoOfUnits').val() == "") {
            $('#ErrNoOfUnits').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtWeight').val() == "") {
            $('#ErrWeight').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtWeightPerUnit').val() == "") {
            $('#ErrWeightPerUnit').html('Fill Out This Field');
            Status = false;
        }

        setTimeout(function () { $('span[id*="Err"]').html(''); }, 2000);
        return Status;
    }

    function ResetWorkOrderDet() {
        $('#WorkOrderDetailId, #CommodityId').val('0');
        $('#txtContainerNo, #txtCommodityName, #txtCargoDescription, #txtNoOfUnits, #txtWeight, #txtWeightPerUnit').val('');
        $('#btnAddWorkOrderDet').prop("disabled", false);
        EditIndex = -1;
    }
    function EditWorkOrderDet(i) {
        debugger;
        $('#btnAddWorkOrderDet').prop("disabled", false);
        $('#WorkOrderDetailId').val(ArrayOfContainerDetails[i].WorkOrderDetailId);
        $('#txtContainerNo').val(ArrayOfContainerDetails[i].ContainerNo);
        $('#CommodityId').val(ArrayOfContainerDetails[i].CommodityId);
        $('#txtCommodityName').val(ArrayOfContainerDetails[i].CommodityName);
        $('#txtCargoDescription').val(ArrayOfContainerDetails[i].CargoDescription);
        $('#txtNoOfUnits').val(ArrayOfContainerDetails[i].NoOfUnits);
        $('#txtWeight').val(ArrayOfContainerDetails[i].Weight);
        $('#txtWeightPerUnit').val(ArrayOfContainerDetails[i].WeightPerUnit);
        EditIndex = i;
        GenerateTable2();
    }
    function ViewWorkOrderDet(i) {
        $('#WorkOrderDetailId').val(ArrayOfContainerDetails[i].WorkOrderDetailId);
        $('#txtContainerNo').val(ArrayOfContainerDetails[i].ContainerNo);
        $('#CommodityId').val(ArrayOfContainerDetails[i].CommodityId);
        $('#txtCommodityName').val(ArrayOfContainerDetails[i].CommodityName);
        $('#txtCargoDescription').val(ArrayOfContainerDetails[i].CargoDescription);
        $('#txtNoOfUnits').val(ArrayOfContainerDetails[i].NoOfUnits);
        $('#txtWeight').val(ArrayOfContainerDetails[i].Weight);
        $('#txtWeightPerUnit').val(ArrayOfContainerDetails[i].WeightPerUnit);

        $('#btnAddWorkOrderDet').prop("disabled", true);
    }
</script>
<script>
    function ResetAllFields() {
        GetStuffingWorkOrder();
    }
    function WorkOrderOnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            if ($('#DivWorkOrderMsg').hasClass('logErrMsg'))
                $('#DivWorkOrderMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivWorkOrderMsg').html(data.Message);
            setTimeout(GetStuffingWorkOrder, TimeInSeconds);
        }
        else {
            if ($('#DivWorkOrderMsg').hasClass('logSuccMsg'))
                $('#DivWorkOrderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivWorkOrderMsg').html(data.Message);
        }
    }
    function WorkOrderFailure() {
        alert("Error");
    }
    function ValidateGrid() {
        if ($('#StuffingWorkOrderDtlJS').val() == '') {
            alert('Work Order Details Must Have Data.');
            return false;
        }
        else {
            return true;
        }
    }
</script>
<script>
    function ValidateData(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if (CharCode == 32) {
            return true;
        }
        if ((CharCode > 31 & CharCode < 48) || (CharCode > 57 & CharCode < 65) || (CharCode > 90 & CharCode < 97) || (CharCode > 122)) {
            evt.preventDefault();
            return false;
        }
        return true;
    }
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function ClearErrMsg(elem) {
        $('[data-valmsg-for="' + elem.id + '"]').html('');
    }
</script>
<script>
    var ArrayContainerList = [];
    var ContainerID = 0;
    function GetContainer() {
        var StuffingReqID = $('#StuffingRequestId').val();
        if (StuffingReqID > 0) {
            $.ajax({
                url: '/Export/Kdl_CWCExport/GetContainerListByStuffingReqId',
                type: 'GET',
                data: { StuffingReqID: StuffingReqID },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    ArrayContainerList = data;
                    $('#lstContainer').html('');
                    var item = '';
                    for (i = 0; i < ArrayContainerList.length; i++) {
                        item += '<li id="' + ArrayContainerList[i].StuffingRequestDetailId + '">' + ArrayContainerList[i].ContainerNo + '-' + ArrayContainerList[i].CommodityName + '-' + ArrayContainerList[i].NoOfUnits + '</li>';
                    }
                    $('#lstContainer').html(item);

                    $('#lstContainer > li').on("click", function () {
                        debugger;
                        $('#txtContainerNo').val($(this).text().split('-')[0]);
                        ContainerID = $(this).attr('id');
                        ContainerChange();
                        $("#ContainerModal").modal("hide");
                    });
                }
            });
            for (i = 0; i < ArrayStuffingReqNo.length; i++) {
                $('#StuffingRequestDate').val();
                if (ArrayStuffingReqNo[i].StuffingRequestId == StuffingReqID) {
                    $('#StuffingRequestDate').val(ArrayStuffingReqNo[i].StuffingRequestDate);
                    break;
                }
            }
        }
        else {
            ArrayContainerList = [];
            $('#txtContainerNo').val('');
            $('#txtCargoDescription').val('');
        }
    }
    function ContainerChange() {
        if (ContainerID > 0) {
            debugger;
            $('#txtCargoDescription').val();
            for (i = 0; i < ArrayContainerList.length; i++) {
                if (ArrayContainerList[i].StuffingRequestDetailId == ContainerID) {
                    $('#txtCargoDescription').val(ArrayContainerList[i].CargoDescription.substring(0, 3000));
                    break;
                }
            }
            ContainerID = 0;
        }
    }
</script>

