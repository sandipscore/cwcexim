@model CwcExim.Areas.Export.Models.ContainerStuffing

<script>
    var ArrayOfContainerStuff = [];
    var TimeInSeconds;

    $(function () {
        TimeInSeconds = 5000;
        GetContainerStuffList();
        $('#TblContainerStuffing').hide();
        $('#SearchContainerNo').css("display", "none");
    });

    $('#StuffingDate').datetimepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='StuffingDate']").html('');
        }
    });
    $('#ShippingDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='StuffingDate']").html('');
        }
    });

    function GetContainerStuffList() {
        $('#DivContainerStuffingList').load('/Export/Kdl_CWCExport/GetContainerStuffingList');
    }
    function LoadContainerStuffing() {
        $('#DivBody').load('/Export/Kdl_CWCExport/CreateContainerStuffing');
    }
    function ResetAllFields() {
        ArrayOfContainerStuff = [];
        $('#DivAddContainerStuffing').find('input:text,textarea,select').val('');
        $('#DivAddContainerStuffing #DivContainerStuffingMsg').html('');
        $('#DivAddContainerStuffing #DivContainerStuffingErrMsg').html('');
        $('[data-valmsg-for]').html('<span><span>');
        $('#DivAddContainerStuffing #TblContainerStuffing >tbody').html('');
        $('#TblContainerStuffing').hide();
        $('#DivContainerStuffingMsg').html('');
        $('#DivContainerStuffingErrMsg').html('');
        $('#DivContainerStuffingTblErrMsg').html('');
        $('#ContainerList li').html('');
    }

    //function ContainerStuffingOnSuccess(data) {
    //    if (data.Status == 1) {
    //        $('#DivContainerStuffingMsg').html(data.Message);
    //        //$('#CartingNoList #' + $('#CartingAppId').val()).remove();
    //        setTimeout(ResetAllFields, TimeInSeconds);
    //        GetContainerStuffList();
    //    }
    //    else {
    //        $('#DivContainerStuffingErrMsg').html(data.Message);
    //    }
    //}

    //function ContainerStuffingOnFailure() { }

    $('#SearchReqNo').keyup(function () {
        debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#DivModalStuffingReqNo .navList > li').show();
        }
        else {
            $('#DivModalStuffingReqNo .navList > li').each(function () {
                debugger;
                var Text = $(this).text().toLowerCase();
                (Text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#LstRequestNo li').on("click", function () {

        ArrayOfContainerStuff = [];
        $('#DivAddContainerStuffing').find('input:text,textarea,select').val('');
        $('#DivAddContainerStuffing #DivContainerStuffingMsg').html('');
        $('#DivAddContainerStuffing #DivContainerStuffingErrMsg').html('');
        $('[data-valmsg-for]').html('<span><span>');
        $('#DivAddContainerStuffing #TblContainerStuffing >tbody').html('');
        $('#TblContainerStuffing').hide();
        $('#DivContainerStuffingMsg').html('');
        $('#DivContainerStuffingErrMsg').html('');
        $('#DivContainerStuffingTblErrMsg').html('');
        $('#ContainerList li').html('');
        $('#StuffingDate').val('@Model.StuffingDate');
        var StuffingReqNo = $(this).text();
        var StuffingReqId = $(this).attr('id');
        $('#StuffingReqNo').val(StuffingReqNo);
        $('#StuffingReqId').val(StuffingReqId);
        $('#DivModalStuffingReqNo').modal("hide");
        $('#EquipmentSealType').val('BTSL');
        $('#EquipmentStatus').val('94');
        $('#EquipmentQUC').val('PKG');
        GetContainerNoList(StuffingReqId);
        // GetCartingDetails(CartingAppId);
    });

    $('#ShippingLineBox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#ShippingLineModal .navList > li').show();
        } else {
            $('#ShippingLineModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#ShippingLineList li').on("click", function () {
        $('#ShippingLine').val($(this).text());
        $('#ShippingLineId').val($(this).attr('id'));
        $("#ShippingLineModal").modal("hide");
    });

    $('#LstExporter li').on("click", function () {
        debugger;
        $('#Exporter').val($(this).text());
        $('#ExporterId').val($(this).attr('id'));
        $("#ExporterModal").modal("hide");
    });
    $('#SearchExporter').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#ExporterModal .navList > li').show();
        } else {
            $('#ExporterModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('#ListOfCHAHdr li').on("click", function () {
        debugger;
        $('#CHA').val($(this).text());
        $('#CHAId').val($(this).attr('id'));
        $("#CHAHdrModal").modal("hide");
    });
    $('#SearchCHAHdr').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#CHAHdrModal .navList > li').show();
        } else {
            $('#CHAHdrModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('#ContainerBox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#ContainerModal .navList > li').show();
        } else {
            $('#ContainerModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    // $('#ContainerList  li').on("click", function () {
    function FillContainerTxtBox(StuffingReqDtlId, CFSCode, ContainerNo) {
        debugger;

        // $('[data-valmsg-for="ContainerNo"]').html('<span></span>');
        $('#DivContainerStuffingTblErrMsg').html('');
        $('#BtnAddContainerStuff').prop("disabled", false);
        $('#ContainerNo').val(ContainerNo);
        $("#ContainerModal").modal("hide");
        GetContainerDet(StuffingReqDtlId, CFSCode);
    }

     //  });

    function GetContainerNoList(StuffingReqId) {
        $.ajax({
            url: '/Export/Kdl_CWCExport/GetContainerNoOfStuffingReq',
            type: 'GET',
            dataType: 'JSON',
            data: { StuffingReqId: StuffingReqId },
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    var Html = '';
                    $.each(data.Data, function (i, item) {
                        // Html += '<li onclick="FillContainerTxtBox(\'' + item.ContainerNo + '\')">' + item.ContainerNo + '</li>'
                        Html += '<li onclick="FillContainerTxtBox(' + item.StuffingReqDtlId + ',&quot;' + item.CFSCode + '&quot;,&quot;' + item.ContainerNo + '&quot;)">' + item.ContainerNo + '</li>';
                    });
                    $('#ContainerList').html(Html);
                }
            }
        });
    }

    function GetContainerDet(StuffingReqDtlId, CFSCode) {
        debugger;
        var StuffingReqId = $('#StuffingReqId').val();

        $.ajax({
            url: '/Export/Kdl_CWCExport/GetContainerDetOfStuffingReq',
            type: 'GET',
            dataType: 'JSON',
            data: { StuffingReqDtlId: StuffingReqDtlId, CFSCode: CFSCode },
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    $('#StuffingReqDtlId').val(data.Data.StuffingReqDtlId),
                    $('#ContainerNo').val(data.Data.ContainerNo),
                    $('#CFSCode').val(data.Data.CFSCode),
                    $('#Size').val(data.Data.Size),
                    $('#ShippingLineId').val(data.Data.ShippingLineId),
                    $('#ShippingLine').val(data.Data.ShippingLine),
                    $('#ShippingSeal').val(data.Data.ShippingSeal),
                    $('#CustomSeal').val(data.Data.CustomSeal),
                    $('#' + data.Data.StuffingType + '').prop("checked", true);
                    // $('#'+Data.StuffingType+').val(data.Data.StuffingType),
                    $('#ShippingBillNo').val(data.Data.ShippingBillNo),
                    $('#ShippingDate').val(data.Data.ShippingDate),
                    $('#CHAId').val(data.Data.CHAId),
                    $('#ExporterId').val(data.Data.ExporterId),
                    $('#CHA').val(data.Data.CHA),
                    $('#Exporter').val(data.Data.Exporter),
                    $('#CargoDescription').val(data.Data.CargoDescription),
                    //$('#Consignee').val(data.Data.Consignee),
                     $('#MarksNo').val(data.Data.MarksNo),
                     $('#Fob').val(data.Data.Fob),
                     $('#StuffQuantity').val(data.Data.StuffQuantity),
                     $('#StuffWeight').val(data.Data.StuffWeight),
                    $('#StuffingReqDtlId').val(data.Data.StuffingReqDtlId),
                    $('#RequestDate').val(data.Data.RequestDate),
                            $('#MCINPCIN').val(data.Data.MCINPCIN);
                    $('#MCINPCINText').val(data.Data.MCINPCIN);
                }
            }
        });
    }

    function SaveContainerStuffingDtl() {
        debugger;
        $('#DivContainerStuffingTblErrMsg').html('');
        if ($('#ContainerNo').val() != "") {
            var StuffingType = $('#FCL').prop("checked") == true ? "FCL" : "LCL"
            var ContainerStuffingDtl = {
                "ContainerNo": $('#ContainerNo').val(),
                "CFSCode": $('#CFSCode').val(),
                "Size": $('#Size').val(),
                "ShippingLineId": $('#ShippingLineId').val(),
                "ShippingLine": $('#ShippingLine').val(),
                "ShippingSeal": $('#ShippingSeal').val(),
                "CustomSeal": $('#CustomSeal').val(),
                "StuffingType": StuffingType,
                "ShippingBillNo": $('#ShippingBillNo').val(),
                "ShippingDate": $('#ShippingDate').val(),
                "CHAId": $('#CHAId').val(),
                "ExporterId": $('#ExporterId').val(),
                "CHA": $('#CHA').val(),
                "Exporter": $('#Exporter').val(),
                "CargoDescription": $('#CargoDescription').val(),
                "Consignee": $('#Consignee').val(),
                "MarksNo": $('#MarksNo').val() == "" ? 0 : $('#MarksNo').val(),
                "Fob": $('#Fob').val() == "" ? 0 : $('#Fob').val(),
                "StuffQuantity": $('#StuffQuantity').val() == "" ? 0 : $('#StuffQuantity').val(),
                "StuffWeight": $('#StuffWeight').val() == "" ? 0 : $('#StuffWeight').val(),
                "StuffingReqDtlId": $('#StuffingReqDtlId').val(),
                "Insured": $('#Insured').is(':checked') == true ? 1 : 0,
                "EquipmentSealType": $('#EquipmentSealType').val(),
                "EquipmentStatus": $('#EquipmentStatus').val(),
                "EquipmentQUC": $('#EquipmentQUC').val(),
                "MCINPCIN": $('#MCINPCIN').val(),
                "SEZ": $('#SEZ').val()
            }
            ArrayOfContainerStuff.push(ContainerStuffingDtl);
            //$('#ContainerList #' + $('#ContainerNo').val()).remove();
            ResetConatinerStuffDet();
            GenerateContainerStuffTable();
            $('#BtnAddContainerStuff').prop("disabled", true);
        }
        else {
            $('#DivContainerStuffingTblErrMsg').html('Please Select A Container No In Order To Add Details');
            // $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
        }
    }

    function ResetConatinerStuffDet() {
        debugger;
        $('#DivContainerStuffingDetails').find('input:text,textarea').val('');
        $('#DivAddContainerStuffing #Size').val('');
        $('#FCL').prop("checked", false);
        $('#LCL').prop("checked", false);
        $('#DivContainerStuffingDetails #Insured').prop("checked", false);
        $('#DivContainerNo').find('input:text').val('');
        $('#DivContainerSize').find('input:text').val('');
        $('#DivShippingLine').find('input:text').val('');
        $('#DivShippingSeal').find('input:text').val('');
        $('#SearchContainerNo').css("display", "none");
        $('#EquipmentSealType').val('BTSL');
        $('#EquipmentStatus').val('94');
        $('#EquipmentQUC').val('PKG');
    }

    function GenerateContainerStuffTable() {
        debugger;
        $('#TblContainerStuffing').hide();
        var Html = '';
        if (ArrayOfContainerStuff.length != 0) {
            $.each(ArrayOfContainerStuff, function (i, item) {
                debugger;
                Html += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + item.ShippingBillNo + '</td><td>' + item.ShippingDate + '</td><td>' + item.Exporter + '</td><td>' + item.StuffQuantity + '</td><td>' + item.StuffWeight + '</td><td>' + item.MCINPCIN + '</td><td class="text-center"><a href="#" onclick="EditContainerStuff(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td><td class="text-center"><a href="#" onclick="ViewContainerStuff(' + i + ')"><i class="fa fa-search-plus" aria-hidden="true"></i></a></td><td class="text-center"><a href="#" onclick="DeleteContainerStuff(' + i + ')"><i class="fa fa-window-close-o Delete" aria-hidden="true"></i></a></td></tr>';
            });
            $('#TblContainerStuffing>tbody').html(Html);
            $('#TblContainerStuffing').show();
        }
    }

    function EditContainerStuff(Index) {
        debugger;
        if ($('#BtnAddContainerStuff').prop("disabled") == true) {
            $('#SearchContainerNo').css("display", "block");
            $('#BtnAddContainerStuff').prop("disabled", false);
            $('#ContainerNo').val(ArrayOfContainerStuff[Index].ContainerNo);
            $('#CFSCode').val(ArrayOfContainerStuff[Index].CFSCode);
            $('#Size').val(ArrayOfContainerStuff[Index].Size);
            $('#ShippingLineId').val(ArrayOfContainerStuff[Index].ShippingLineId);
            $('#ShippingLine').val(ArrayOfContainerStuff[Index].ShippingLine);
            $('#ShippingSeal').val(ArrayOfContainerStuff[Index].ShippingSeal);
            $('#CustomSeal').val(ArrayOfContainerStuff[Index].CustomSeal);
            $('#' + ArrayOfContainerStuff[Index].StuffingType + '').prop("checked", true);
            $('#ShippingBillNo').val(ArrayOfContainerStuff[Index].ShippingBillNo);
            $('#ShippingDate').val(ArrayOfContainerStuff[Index].ShippingDate);
            $('#CHAId').val(ArrayOfContainerStuff[Index].CHAId);
            $('#ExporterId').val(ArrayOfContainerStuff[Index].ExporterId);
            $('#CHA').val(ArrayOfContainerStuff[Index].CHA);
            $('#Exporter').val(ArrayOfContainerStuff[Index].Exporter);
            $('#CargoDescription').val(ArrayOfContainerStuff[Index].CargoDescription);
            $('#Consignee').val(ArrayOfContainerStuff[Index].Consignee);
            $('#MarksNo').val(ArrayOfContainerStuff[Index].MarksNo);
            $('#Fob').val(ArrayOfContainerStuff[Index].Fob);
            $('#StuffQuantity').val(ArrayOfContainerStuff[Index].StuffQuantity);
            $('#StuffWeight').val(ArrayOfContainerStuff[Index].StuffWeight);
            $('#MCINPCIN').val(ArrayOfContainerStuff[Index].MCINPCIN);
            $('#MCINPCINText').val(ArrayOfContainerStuff[Index].MCINPCIN);
            $('#SEZ').val(ArrayOfContainerStuff[Index].SEZ);
            $('#StuffingReqDtlId').val(ArrayOfContainerStuff[Index].StuffingReqDtlId);

            if (ArrayOfContainerStuff[Index].EquipmentSealType != null) {
                $('#EquipmentSealType').val(ArrayOfContainerStuff[Index].EquipmentSealType);
            }
            if (ArrayOfContainerStuff[Index].EquipmentStatus != null) {
                $('#EquipmentStatus').val(ArrayOfContainerStuff[Index].EquipmentStatus);
            }
            if (ArrayOfContainerStuff[Index].EquipmentQUC != null) {
                $('#EquipmentQUC').val(ArrayOfContainerStuff[Index].EquipmentQUC);
            }
            ArrayOfContainerStuff[Index].Insured == 1 ? $('#Insured').prop("checked", true) : $('#Insured').prop("checked", false);
            ArrayOfContainerStuff.splice(Index, 1);
            GenerateContainerStuffTable();
        }
        else {
            $('#DivContainerStuffingTblErrMsg').html('Please Add The Above Records');
        }
    }

    function DeleteContainerStuff(Index) {
        debugger;
        ArrayOfContainerStuff.splice(Index, 1);
        GenerateContainerStuffTable();
    }

    function ViewContainerStuff(Index) {
        debugger;
        if ($('#BtnAddContainerStuff').prop("disabled") == true)
        {
            $('#BtnAddContainerStuff').prop("disabled", true);
            // if ($('#DivShippingDetails #Exporter').val() == '' || $('#DivShippingDetails #Exporter').prop("disabled") == true) {
            //$('#DivShippingDetails').find('input').prop("disabled", true);
            $('#SearchContainerNo').css("display", "none");
            $('#ContainerNo').val(ArrayOfContainerStuff[Index].ContainerNo);
            $('#CFSCode').val(ArrayOfContainerStuff[Index].CFSCode);
            $('#Size').val(ArrayOfContainerStuff[Index].Size);
            $('#ShippingLineId').val(ArrayOfContainerStuff[Index].ShippingLineId);
            $('#ShippingLine').val(ArrayOfContainerStuff[Index].ShippingLine);
            $('#ShippingSeal').val(ArrayOfContainerStuff[Index].ShippingSeal);
            $('#CustomSeal').val(ArrayOfContainerStuff[Index].CustomSeal);
            $('#' + ArrayOfContainerStuff[Index].StuffingType + '').prop("checked", true);
            // $('#StuffingType').val(ArrayOfCartingRegDtl[Index].StuffingType);
            $('#ShippingBillNo').val(ArrayOfContainerStuff[Index].ShippingBillNo);
            $('#ShippingDate').val(ArrayOfContainerStuff[Index].ShippingDate);
            $('#CHAId').val(ArrayOfContainerStuff[Index].CHAId);
            $('#ExporterId').val(ArrayOfContainerStuff[Index].ExporterId);
            $('#CHA').val(ArrayOfContainerStuff[Index].CHA);
            $('#Exporter').val(ArrayOfContainerStuff[Index].Exporter);
            $('#CargoDescription').val(ArrayOfContainerStuff[Index].CargoDescription);
            $('#Consignee').val(ArrayOfContainerStuff[Index].Consignee);
            $('#MarksNo').val(ArrayOfContainerStuff[Index].MarksNo);
            $('#Fob').val(ArrayOfContainerStuff[Index].Fob);
            $('#StuffQuantity').val(ArrayOfContainerStuff[Index].StuffQuantity);
            $('#StuffWeight').val(ArrayOfContainerStuff[Index].StuffWeight);
            $('#MCINPCIN').val(ArrayOfContainerStuff[Index].MCINPCIN);
            $('#MCINPCINText').val(ArrayOfContainerStuff[Index].MCINPCIN);
            $('#SEZ').val(ArrayOfContainerStuff[Index].SEZ);
            $('#StuffingReqDtlId').val(ArrayOfContainerStuff[Index].StuffingReqDtlId);
            if (ArrayOfContainerStuff[Index].EquipmentSealType != null) {
                $('#EquipmentSealType').val(ArrayOfContainerStuff[Index].EquipmentSealType);
            }
            if (ArrayOfContainerStuff[Index].EquipmentStatus != null) {
                $('#EquipmentStatus').val(ArrayOfContainerStuff[Index].EquipmentStatus);
            }
            if (ArrayOfContainerStuff[Index].EquipmentQUC != null) {
                $('#EquipmentQUC').val(ArrayOfContainerStuff[Index].EquipmentQUC);
            }
            // $('#Insured').val(ArrayOfContainerStuff[Index].Insured);
            ArrayOfContainerStuff[Index].Insured == 1 ? $('#Insured').prop("checked", true) : $('#Insured').prop("checked", false);
        }
        else
        {
            $('#DivContainerStuffingTblErrMsg').html('Please Add The Above Records');
        }

    }

    $('#BtnSaveContainerStuff').on("click", function () {
        debugger;

        $('#DivContainerStuffingTblErrMsg').html('');
        if ($('#ContainerNo').val() == "" && $('#TblContainerStuffing >tbody').html() != "") {
            if (ArrayOfContainerStuff.length != 0) {
                $('#StuffingXML').val(JSON.stringify(ArrayOfContainerStuff));
            }
        }
        else if ($('#ContainerNo').val() != "" && $('#BtnAddContainerStuff').prop("disabled") == true) {
            if (ArrayOfContainerStuff.length != 0) {
                $('#StuffingXML').val(JSON.stringify(ArrayOfContainerStuff));
            }
        }
     

        else {
            $('#DivContainerStuffingTblErrMsg').html('Please Add The Above Records');
            return false;
        }
        if ($('#FinalDestinationLocation').val() == "" || $('#FinalDestinationLocation').val() == null) {
            alert('Please Fill Up Final Destination location');
            return false;
        }

        ArryResList = [];
        if (ArrayOfContainerStuff.length > 0) {
            //debugger;
            ArryResList = ArrayOfContainerStuff;

            for (var j = 0; j < ArrayOfContainerStuff.length; j++) {
              /*  if (ArryResList[j].CustomSeal == null || ArryResList[j].CustomSeal == "") {
                    //$("#CustomSeal").rules("add", "required");
                    alert("Please enter Custom Seal");
                    return false;

                }
                if (ArryResList[j].ShippingSeal == null || ArryResList[j].ShippingSeal == "") {
                    // $("#ShippingSeal").rules("add", "required");
                    alert("Please enter Shipping Seal");
                    return false;

                }*/

                //if (ArryResList[j].MCINPCIN == null || ArryResList[j].MCINPCIN == "") {
                //    // $("#ShippingSeal").rules("add", "required");
                //    alert("MCIN / PCIN Is Required For Every ShipBill.");
                //    return false;

                //}

                if (ArryResList[j].SEZ == 0 && (ArryResList[j].MCINPCIN == null || ArryResList[j].MCINPCIN == "")) {
                    // $("#ShippingSeal").rules("add", "required");
                    alert("MCIN / PCIN Is Required For Every ShipBill.");
                    return false;

                }

            }


        }
    });

    function ContainerStuffingOnSuccess(data) {
        if (data.Status == 1) {
            $('#StuffingId').val(data.Data.ContainerStuffingId);
            $('#DivContainerStuffingMsg').html(data.Message);
            $('#BtnSaveContainerStuff').prop("disabled", true);
            $('#BtnCIMSF').removeAttr('disabled');
            //setTimeout(LoadContainerStuffing, TimeInSeconds);
            //GetContainerStuffList();
        }
        else {
            $('#DivContainerStuffingErrMsg').html(data.Message);
        }
    }

    function ContainerStuffingOnFailure() { }


    function ContainerStuffingOnFailure() { }

    function GetFinalDestination() {
        $.ajax({
            url: '/Export/Kdl_CWCExport/GetFinalDestination',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                debugger;
                if (data != '') {
                    $('#FinalDestinationList').html('');
                    var html = '';
                    var tab = 401;
                    var jsondata = JSON.parse(JSON.stringify(data));
                    $.each(jsondata, function (i, item) {
                        html += '<li tabindex=' + tab + '_' + i + ' onkeypress="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode + '&quot;)" onclick="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode + '&quot;)">' + item.CustodianCode + '</li>';
                    });

                    $('#FinalDestinationList').html(html);

                }
            }
        });
    }

    function debounce(func, wait, immediate) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var later = function () {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    };

    document.getElementById('DestinationBox').addEventListener('keyup', debounce(function () {
        debugger;
        SearchFinalDestination();
    }, 1200));




    function SearchFinalDestination() {
        var CustodianName = $('#DestinationBox').val();
        $.ajax({
            url: '/Export/Kdl_CWCExport/GetFinalDestination',
            type: 'GET',
            data: { CustodianCode: CustodianName },
            dataType: 'JSON',
            success: function (data) {
                debugger;
                if (data != '') {
                    $('#FinalDestinationList').html('');
                    var html = '';
                    var tab = 401;
                    var jsondata = JSON.parse(JSON.stringify(data));
                    $.each(jsondata, function (i, item) {
                        html += '<li tabindex=' + tab + '_' + i + ' onkeypress="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode + '&quot;)" onclick="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode + '&quot;)">' + item.CustodianCode + '</li>';
                    });
                    $('#FinalDestinationList').html(html);
                }
            }
        });
    }


    function SelectFinalDestination(CustodianId, CustodianCode) {
        $('#FinalDestinationLocationId').val(CustodianId);
        $('#FinalDestinationLocation').val(CustodianCode);
        $('#modelFinalDestinationlocation').modal("hide");
    }
    function DestinationModalClose() {
        $('#modelFinalDestinationlocation').modal("hide");
        $('#DestinationModal .navList > li').show();
        $('#DestinationBox').val('');
    }
    function SendSF() {
        debugger;
        var ContainerStuffingId = $('#StuffingId').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: "/Export/Kdl_CWCExport/SendSF",
            type: "POST",
            dataType: "JSON",
            data: { ContainerStuffingId: ContainerStuffingId },
            headers: { "__RequestVerificationToken": Token },
            async: false,
            success: function (data) {
                if (data.Status == 1) {
                    $('#BtnCIMSF').prop('disabled', true);
                    alert(data.Message);
                }
                else {
                    alert(data.Message);
                }
            }
        });
    }
</script>

@{
    AjaxOptions options = new AjaxOptions();
    options.Confirm = "Are You Sure You Want To Save?";
    options.OnSuccess = "ContainerStuffingOnSuccess";
    options.OnFailure = "ContainerStuffingOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                @using (Ajax.BeginForm("AddEditContainerStuffingDet", "Kdl_CWCExport", options))
                {
                    @Html.AntiForgeryToken()
                    <div id="DivAddContainerStuffing">
                        @Html.HiddenFor(m => m.StuffingXML)
                        @Html.HiddenFor(m => m.StuffingReqId)
                        @Html.Hidden("StuffingReqDtlId")
                        @Html.Hidden("StuffingId")
                        @Html.Hidden("MCINPCIN")
                        <div class="row">
                            <div class="col-md-12">
                                <h4>Container Stuffing</h4>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Request No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.StuffingReqNo, new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#DivModalStuffingReqNo"></i></span>
                                    @Html.ValidationMessageFor(m => m.StuffingReqNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                    <label>Request Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBoxFor(m => m.RequestDate, new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.RequestDate, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Stuffing No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.StuffingNo, new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.StuffingNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                    <label>Stuffing Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBoxFor(m => m.StuffingDate, new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.StuffingDate, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div id="DivContainerNo" class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Container No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ContainerNo", "", new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                                    @Html.ValidationMessage("ContainerNo", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                    <label>CFS Code:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("CFSCode", "", new
                               {
                                   @class = "form-control input-sm",
                                   @readonly = true@*, maxlength = "11", @onkeypress = "return AllowOnlyDecimal()"*@})
                                    @Html.ValidationMessage("CFSCode", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div id="DivContainerSize" class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Container Size:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.DropDownList("Size", new List<SelectListItem>
                                        {
                                            new SelectListItem { Text="20",Value="20"},
                                            new SelectListItem { Text="40",Value="40"},
                                            new SelectListItem { Text="ODC",Value="ODC"},
                                        }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                    @Html.ValidationMessage("Size", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1 padding_rt">
                                    <div class="boolean-container">
                                        @Html.RadioButton("StuffingType", "FCL", new { @class = "", @id = "FCL" })
                                        <label for="FCL"><i class="circle"></i><span>FCL</span></label>
                                    </div>
                                </div>
                                <div class="col-md-1 padding_rt">
                                    <div class="boolean-container">
                                        @Html.RadioButton("StuffingType", "LCL", new { @class = "", @id = "LCL" })
                                        <label for="LCL"><i class="circle"></i><span>LCL</span></label>
                                    </div>
                                </div>
                                <div class="col-md-offset-0-5 col-md-3">
                                    <div class="boolean-container">
                                        @Html.CheckBoxFor(m => m.DirectStuffing, new { @id = "chkDS" })
                                        <label for="chkDS"><i class="square"></i><span>Direct Stuffing</span></label>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div id="DivShippingLine" class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Shipping Line:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextBox("ShippingLine", "", new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingLineModal"></i></span>
                                    @Html.Hidden("ShippingLineId")
                                </div>
                            </div>
                        </div>
                        <div id="DivShippingSeal" class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Shipping Seal:</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBox("ShippingSeal", "", new
                               {
                                   @class = "form-control input-sm",
                                   @maxlength = "30"@*, @readonly = true*@})
                                </div>
                                <div class="col-md-1-5 col_cus_offset_0_5 col-md-offset-1 padding_rt">
                                    <label>Custom Seal:</label>
                                </div>
                                <div class="col-md-4">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBox("CustomSeal", "", new
                               {
                                   @class = "form-control input-sm",
                                   @maxlength = "30"@*, maxlength = "11", @onkeypress = "return AllowOnlyDecimal()"*@})
                                    @Html.ValidationMessage("CustomSeal", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top Form_Space_bottom">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Remarks:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    @Html.TextAreaFor(m => m.Remarks, new { @style = "width:100%;height:100px" })
                                    @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div id="DivShippingSeal" class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Final Destination location:</label>
                                </div>
                                <div class="col-md-4">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(x => x.FinalDestinationLocation, "", new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="GetFinalDestination()" data-toggle="modal" data-target="#modelFinalDestinationlocation"></i></span>
                                    @Html.HiddenFor(x => x.FinalDestinationLocationId)
                                </div>
                                <div class="col-md-1-5 col_cus_offset_0_5 col-md-offset-1 padding_rt">
                                    <label>Equipment Seal Type:</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.DropDownList("EquipmentSealType", new List<SelectListItem>
                                   {
                                   new SelectListItem { Text="Bottle-Seal",Value="BTSL"},
                                   new SelectListItem { Text="E-Seal",Value="ESEAL"},
                                   new SelectListItem { Text="Others",Value="OTH"},
                                   }, new { @class = "form-control input-sm dropdown" })
                                    @Html.ValidationMessage("EquipmentSealType", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>


                        <div id="DivShippingSeal" class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Equipment Status:</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.DropDownList("EquipmentStatus", new List<SelectListItem>
                                  {
                                  new SelectListItem { Text="Intact",Value="94"},
                                  new SelectListItem { Text="Damaged",Value="218"}
                                  }, new { @class = "form-control input-sm dropdown" })
                                    @Html.ValidationMessage("EquipmentStatus", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col_cus_offset_0_5 col-md-offset-1 padding_rt">
                                    <label>Equipment QUC:</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.DropDownList("EquipmentQUC", new List<SelectListItem>
                                    {
                                    new SelectListItem { Text="Package",Value="PKG"},
                                    new SelectListItem { Text="Kilogram",Value="KGS"},
                                    }, new { @class = "form-control input-sm dropdown" })
                                    @Html.ValidationMessage("EquipmentQUC", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div id="DivContainerStuffingDetails" class="Head_h5">
                            @*@Html.Hidden("CartingAppDtlId")
                                @Html.Hidden("LocationDetails")*@
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>Shipping Bill No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBox("ShippingBillNo", "", new
                                   {
                                       @class = "form-control input-sm",
                                       @maxlength = "30"@*, @readonly = true*@})
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>Shipping Bill Date:</label>
                                    </div>
                                    <div class="col-md-2 col_cus_2_5 Date_Img">
                                        @Html.TextBox("ShippingDate", "", new { @class = "form-control input-sm", @readonly = true })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>CHA:</label>
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.Hidden("CHAId")
                                        @Html.TextBox("CHA", "", new { @class = "form-control input-sm", @readonly = true })
                                        <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAHdrModal"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Exporter:</label>
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.Hidden("ExporterId")
                                        @Html.TextBox("Exporter", "", new { @class = "form-control input-sm", @readonly = true })
                                        <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ExporterModal"></i></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Consignee:</label>
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.TextBox("Consignee", "", new
                                   {
                                       @class = "form-control input-sm",
                                       @maxlength = "30"@*, @readonly = true*@})
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2" style="padding-right:0px;">
                                        <label>Cargo Description:</label>
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.TextArea("CargoDescription", "", new
                                   {
                                       @style = "width:100%;height:100px",
                                       @maxlength = "1000"@*, @readonly = true*@})
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Marks & No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBox("MarksNo", "", new
                                   {
                                       @class = "form-control input-sm"@*, @readonly = true*@})
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>FOB Value:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBox("Fob", "", new
                                   {
                                       @class = "form-control input-sm"@*, @readonly = true*@})
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Stuffed Qty:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBox("StuffQuantity", "", new
                                   {
                                       @class = "form-control input-sm"@*, @readonly = true*@})
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>Stuffed Wt:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBox("StuffWeight", "", new
                                   {
                                       @class = "form-control input-sm"@*, maxlength = "11", @onkeypress = "return AllowOnlyDecimal(event)"*@})
                                        @*@Html.ValidationMessage("CUM", new { @class = "Error_Msg" })*@
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Insured:</label>

                                    </div>
                                    <div class="col-md-1">
                                        <div class="boolean-container">
                                            <input type="checkbox" id="Insured" />
                                            <label for="Insured"><i class="square"></i></label>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>MCIN/PCIN:</label>

                                    </div>
                                    <div class="col-md-2-5">
                                        <div class="boolean-container">
                                            @Html.TextBox("MCINPCINText", "", new
                                                   {
                                                       @class = "form-control input-sm",
                                                       @readonly = true
                                                   })
                                            @*@Html.ValidationMessage("CUM", new { @class = "Error_Msg" })*@
                                        </div>
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">

                                    </div>
                                    <div class="col-md-2-5">

                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                            </div>
                            <div class="row">
                                <div class="col-md-offset-4 col-md-2">
                                    <input type="button" id="BtnAddContainerStuff" class="btn log_Btn_sm" value="Add" onclick="SaveContainerStuffingDtl()" />
                                </div>
                                <div class="col-md-2">
                                    <input type="button" class="btn log_Btn_sm" value="Reset" />
                                </div>
                            </div>
                            <div id="DivContainerStuffingTblErrMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                            <table class="table table-striped table-bordered dataTable" id="TblContainerStuffing" style="width:100%;">
                                <thead>
                                    <tr>
                                        <th class="text-center">@Html.DisplayName("SL No")</th>
                                        <th>@Html.DisplayName("Shipping Bill No")</th>
                                        <th>@Html.DisplayName("Shipping Bill Date")</th>
                                        <th>@Html.DisplayName("Exporter")</th>
                                        <th>@Html.DisplayName("Stuffed Qty")</th>
                                        <th>@Html.DisplayName("Stuffed Wt")</th>
                                        <th>@Html.DisplayName("MCIN / PCIN")</th>
                                        <th>@Html.DisplayName("Edit")</th>
                                        <th class="text-center">@Html.DisplayName("View")</th>
                                        <th class="text-center">@Html.DisplayName("Delete")</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2 SignUp_space_bottom">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSaveContainerStuff" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAllFields()" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="BtnCIMSF" class="btn log_Btn_sm" disabled value="CIM SF" onclick="SendSF()" />
                        </div>
                    </div>
                    <div class="logSuccMsg" style="background-color:transparent" id="DivContainerStuffingMsg"></div>
                    <div class="logErrMsg Form_Space_bottom" style="background-color:transparent" id="DivContainerStuffingErrMsg"></div>

                }
                @Scripts.Render("~/bundles/jqueryval")
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivContainerStuffingList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="DivModalStuffingReqNo" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List Of Request No.</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="SearchReqNo" type="text" />
                <ul class="navList" id="LstRequestNo">
                    @{
                        if (ViewBag.LstRequestNo != null)
                        {
                            foreach (var data in ViewBag.LstRequestNo)
                            {
                                <li id="@data.Value">@data.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="CHAHdrModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List Of CHA</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="SearchCHAHdr" type="text" />
                <ul class="navList" id="ListOfCHAHdr">
                    @{
                        if (ViewBag.CHAList != null)
                        {
                            foreach (var data in ViewBag.CHAList)
                            {
                                <li id="@data.Value">@data.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ExporterModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List Of Exporter</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="SearchExporter" type="text" />
                <ul class="navList" id="LstExporter">
                    @{
                        if (ViewBag.ListOfExporter != null)
                        {
                            foreach (var data in ViewBag.ListOfExporter)
                            {
                                <li id="@data.Value">@data.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ShippingLineModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Shipping Line</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="ShippingLineBox" type="text" />
                <ul class="navList" id="ShippingLineList">
                    @{
                        if (ViewBag.ShippingLineList != null)
                        {
                            foreach (var item in ViewBag.ShippingLineList)
                            {
                                <li id="@item.Value">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ContainerModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Container No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="ContainerBox" type="text" />
                <ul class="navList" id="ContainerList">
                    @*<li></li>*@
                    @*@{
                            if (ViewBag.ContainerList != null)
                            {
                                foreach (var item in ViewBag.ContainerList)
                                {
                                    <li id="@item.Value">@item.Text</li>
                                }
                            }
                        }*@
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade mTabindex" id="modelFinalDestinationlocation" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="DestinationModalClose()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Final Destination</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="DestinationBox" type="text" tabindex="401" />
                <ul class="navList" id="FinalDestinationList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="DestinationModalClose()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

















































