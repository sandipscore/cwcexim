
 @model CwcExim.Areas.Export.Models.WFLDIWBDetails

@{
    AjaxOptions options = new AjaxOptions();
    //options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "IWBOnSuccess";
    options.OnFailure = "IWBOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
<script type="text/javascript">
    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 3000;
        var dtl=@Html.Raw(Json.Encode(Model));
        if(dtl!=null){
            if(dtl.IsOperation=="View"){
                document.getElementById("divBack").style.display = "";
                document.getElementById("divSave").style.display = "none";
            }
            else{
                document.getElementById("divBack").style.display = "none";
                document.getElementById("divSave").style.display = "";
            }
        }   
    });
    
</script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">

                @using (Ajax.BeginForm("AddEditIWBDetails", "WFLD_CWCExport", options))
                {

                    @Html.HiddenFor(m => m.InvoiceId)
                    @Html.HiddenFor(m => m.IWBId)
                    @Html.HiddenFor(m => m.Module)

                    
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Inland Way Bill</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>IWB No:</label>
                            </div>
                            <div class="col-md-2-5">                                
                                @Html.TextBoxFor(m => m.IWBNo, new { @class = "form-control input-sm", @readonly = "true" })
                                @Html.ValidationMessageFor(m => m.IWBNo, "", new { @class = "Error_Msg" })
                            </div> 
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>IWB Date:</label>
                            </div>
                            <div class="col-md-2-5 Date_Img">
                                @Html.TextBoxFor(m => m.IWBDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @Html.ValidationMessageFor(m => m.IWBDate, "", new { @class = "Error_Msg" })
                            </div>                                                       
                        </div>
                    </div>
                    <div class="row Form_Space_top Form_Space_bottom">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Gate Pass No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.GatePassId)
                                @Html.TextBoxFor(m => m.GatePassNo, new { @class = "form-control input-sm", @readonly = "true" })
                                <span class="search" id="GatePassNoSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GatePassNoModal"></i></span>
                                @Html.ValidationMessageFor(m => m.GatePassNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Gate Pass Date:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GatePassDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                @*@Html.ValidationMessageFor(m => m.GatePassDate, "", new { @class = "Error_Msg" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Liner Name:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Liner, new { @class = "form-control input-sm", @readonly = true })
                                @*@Html.ValidationMessageFor(m => m.Liner, "", new { @class = "Error_Msg" })*@
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Forwarder Name:</label>
                            </div>
                            <div class="col-md-2-5">
                                @*<input type="text" id="Forwarder" name="Forwarder" readonly="readonly" class="form-control input-sm" />
                                <span class="search" id="ForwarderSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ForwarderModal"></i></span>*@
                                @Html.TextBoxFor(m=>m.Forwarder, new { @readonly = true })
                                @*@Html.ValidationMessageFor(m => m.Forwarder, "", new { @class = "Error_Msg" })*@

                            </div>
                        </div>
                    </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>Container No & Size:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m=>m.Container, new { @class = "form-control input-sm", @readonly = true })                                        
                                        @*@Html.ValidationMessageFor(m => m.Container, "", new { @class = "Error_Msg" })*@

                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>CFS Code:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m=>m.CFSCode, new { @class = "form-control input-sm", @readonly = true })
                                        @*@Html.ValidationMessageFor(m => m.CFSCode, "", new { @class = "Error_Msg" })*@

                                    </div>
                                    

                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>Shipping Bill No & Date:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.ShippBillNo, new { @class = "form-control input-sm", @readonly = true })
                                        @*@Html.ValidationMessageFor(m => m.ShippBillNo, "", new { @class = "Error_Msg" })*@
                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>Transport A/c:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @*<input type="text" id="Transporter" name="Transporter" readonly="readonly" class="form-control input-sm" />
                                        <span class="search" id="TransporterSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#TransporterModal"></i></span>*@
                                        @Html.TextBoxFor(m=>m.Transporter, new { @readonly = true })
                                        @*@Html.ValidationMessageFor(m => m.Transporter, "", new { @class = "Error_Msg" })*@
                                    </div>

                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>CHA Name:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @*<input type="text" id="CHAName" name="CHAName" readonly="readonly" class="form-control input-sm" />
                                        <span class="search" id="CHASearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>*@
                                        @Html.TextBoxFor(m=>m.CHAName, new { @readonly = true })
                                        @*@Html.ValidationMessageFor(m=>m.CHAName, "", new { @class = "Error_Msg" })*@                                        
                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>Exporter Name:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @*<input type="text" id="ExporterName" name="ExporterName" readonly="readonly" class="form-control input-sm" />
                                        <span class="search" id="ExporterSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ExporterModal"></i></span>*@
                                        @Html.TextBoxFor(m=>m.ExporterName, new { @readonly = true })                                        
                                    </div>
                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>OTL No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.OTLNo, "", new { @readonly = true })
                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>SLA Seal No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.SealNo, "", new { @readonly = true })
                                    </div>
                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>No of Packages:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m=>m.NoOfPkg, "", new { @readonly = true })
                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>Weight:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m=>m.Weight, "", new { @readonly = true })
                                    </div>
                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                       <label>CIF Value</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m=>m.CIFValue, new { @class = "form-control input_sm", @readonly = true })
                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>Trailer No</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.TrailerNo, new { @class = "form-control input_sm", @readonly = true })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Place Of Stuffing</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.PlaceOfStuffing, new { @class = "form-control input_sm", @readonly = true })                                        
                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>Port Of Loading</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.PortOfLoading, new { @class = "form-control input_sm", @readonly = true })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>Destination:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @*<input type="text" id="Destination" name="Destination" readonly="readonly" class="form-control input-sm" />
                                        <span class="search" id="DestinationSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#DestinationModal"></i></span>*@
                                        @Html.TextBoxFor(m=>m.Destination, new { @readonly = true })
                                    </div>
                                    <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                        <label>Country Name:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @*<input type="text" id="Country" name="Country" readonly="readonly" class="form-control input-sm" />
                                        <span class="search" id="CountrySearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CountryModal"></i></span>*@
                                        @Html.TextBoxFor(m=>m.Country, new { @readonly = true })
                                    </div>
                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Cargo Description:</label>
                                    </div>
                                    <div class="col-md-10-5 col_cus_10">
                                        @Html.TextAreaFor(m=>m.CargoDesc, new { @class = "form-control intpu-sm", @style = "width:100%;height:100px;",@readonly=true})
                                        @*@Html.ValidationMessageFor(m=>m.CargoDesc, "", new { @class = "Error_Msg" })*@
                                    </div>
                                </div>
                            </div>
                      
                        
                   
                    <div class="row">
                        <div class="stoke SignUp_space_top2 SignUp_space_bottom2"></div>
                    </div>
                    <div class="row" id="divSave">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllFields()" />
                        </div>
                    </div>
                        <div class="row" id="divBack" style="display:none">
                            <div class="col-md-2 col-md-offset-5">
                                <input type="button" value="Back" id="btnBack" class="btn log_Btn_sm" onclick="LoadIWBView()" />
                            </div>
                        </div>

                            <div class="logSuccMsg Form_Space_top" id="DivMsg" style="background-color:transparent"></div>
                            <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                                <div id="DivIWBDetailsMsg" style="background-color:transparent"></div>
                            </div>

                            

                            <div id="GatePassNoModal" class="modal fade" role="dialog">
                                <div class="modal-dialog">
                                    <!-- Modal content-->
                                    <div class="modal-content popup_modal">
                                        <div class="modal-header popup_header">
                                            <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                            <h4 class="modal-title"> Gate Pass No</h4>
                                        </div>
                                        <div class="modal-body popup_body">
                                            <input placeholder="Search Me" id="GatePassbox" type="text" />
                                            <ul class="navList" id="lstGatePassNo">
                                               
                                            </ul>
                                        </div>
                                        <div class="modal-footer">
                                            <div class="row">
                                                <div class="col-md-offset-6 col-md-6">
                                                    <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                }

                <div class="row">
                    <div class="col-md-2 SignUp_space_bottom">
                        <input type="button" id="btnIWBDetails" value="Show List" class="btn log_Btn_sm" onclick="GetIWBList()" />
                    </div>
                    <div class="col-md-offset-5 col-md-3">
                        <input type="text" placeholder="IWB No / Gate Pass No" id="SearchIWBNo" class="form-control intpu-sm" style="padding: 3px 20px 3px 10px; height: 27px;font-size: 12px;" />
                    </div>

                    <div class="col-md-2">
                        <input type="button" value="Search" onclick="SearchIWBNo()" class="btn log_Btn_sm" style="width:100%;margin: 0;" />
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="DivIWBList"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
   
    function GetIWBList() {
        //debugger;
        
        $('#DivIWBList').load('/Export/WFLD_CWCExport/GetAllIWBDetailsList');
    }
      
    function SearchIWBNo(){
        debugger;
        if($('#SearchIWBNo').val().trim()!="" && $('#SearchIWBNo').val().trim()!=null){
            $('#DivIWBList').load('/Export/WFLD_CWCExport/SearchIWBDetailsList?SearchValue=' + $('#SearchIWBNo').val().trim());
        }
    }

    $('#GatePassNoSearch').on("click", function () {
        //debugger;
        $.ajax({
            url: '@Url.Action("GetIWBGatePass", "WFLD_CWCExport", new { Area = "Export" })',
            dataType: 'JSON',
            type: 'GET',
            success: function (data) {
                //debugger;                
                var html = '';
                $.each(data, function (i, item) {
                    html += '<li id="' + item.GatePassId + '" " onclick="GetIWBGatePass(' + item.GatePassId + ',&quot;' + item.GatePassNo +'&quot;)">' + item.GatePassNo + '</li>';
                });
                $('#lstGatePassNo').html(html);
            }
        });

    });

    $('#GatePassbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstGatePassNo > li').show();
        else {
            $('#lstGatePassNo > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });


    $('#lstGatePassNo > li').on("click", function () {

        //debugger;
        $('#GatePassNo').val($(elem).text());
        $('#GatePassId').val($(elem).attr('id'));
        $("#GatePassNoModal").modal("hide");

        var GatePassId = $('#GatePassId').val();
        GetIWBDetails(GatePassId);
    });

    function GetIWBGatePass(GatePassId, GatePassNo,Module)
    {
        //debugger;
        $('#GatePassNo').val(GatePassNo);
        $('#GatePassId').val(GatePassId);
        $('#Module').val(Module);
        $("#GatePassNoModal").modal("hide");
        GetIWBDetails(GatePassId);
    }

    function GetIWBDetails(GatePassId) {
        //debugger;
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetIWBDetailsByGatePassId", "WFLD_CWCExport", new { area = "Export" })',
            headers: { '__RequestVerificationToken': Token },
            data: { GatePassId: GatePassId },
            dataType: 'JSON',
            success: function (data) {

                if (data != undefined || data != null) {

                    BindIWBDetails(data);
                }
                else {
                    alert("No Data Found");

                }
            }
        });
    }
    function BindIWBDetails(data)
    {
        //debugger;

        //$('#GatePassNo').val(data.GatePassNo);
        //$('#GatePassId').val(data.GatePassId);
        $('#InvoiceId').val(data.Data.InvoiceId);
        $('#GatePassDate').val(data.Data.GatePassDate);
        $('#IWBId').val(data.Data.IWBId);
        $('#IWBNo').val(data.Data.IWBNo);
        $('#IWBDate').val(data.Data.IWBDate);
        $('#Consignor').val(data.Data.Consignor);
        $('#Liner').val(data.Data.Liner);
        $('#Forwarder').val(data.Data.Forwarder);
        $('#Transporter').val(data.Data.Transporter);
        $('#CFSCode').val(data.Data.CFSCode);
        $('#Container').val(data.Data.Container);
        $('#TrailerNo').val(data.Data.TrailerNo);
        $('#OTLNo').val(data.Data.OTLNo);
        $('#SealNo').val(data.Data.SealNo);
        $('#NoOfPkg').val(data.Data.NoOfPkg);
        $('#Weight').val(data.Data.Weight);
        $('#CIFValue').val(data.Data.CIFValue);
        $('#PlaceOfStuffing').val(data.Data.PlaceOfStuffing);
        $('#PortOfLoading').val(data.Data.PortOfLoading);
        $('#CHAName').val(data.Data.CHAName);
        $('#ExporterName').val(data.Data.ExporterName);
        $('#ShippBillNo').val(data.Data.ShippBillNo);

        $('#Destination').val(data.Data.Destination);
        $('#Country').val(data.Data.Country);
        $('#CargoDesc').val(data.Data.CargoDesc);


    }

    function LoadIWBView() {
        //debugger;
        $('#DivBody').load('/Export/WFLD_CWCExport/CreateIWBDetails');
    }

    
    $(document).ready(function () {

        //$("#IWBDate").datepicker({
        //    dateFormat: "dd/mm/yy",
        //    showOn: "button",
        //    buttonImage:  "/Content/images/calendar.png",
        //    buttonImageOnly: true,
        //    buttonText: "Select date",
        //    changeMonth: true,
        //    changeYear: true,
        //    showAnima: "fadein",
        //    onClose: function () {
        //        $(".Date_Img .Error_Msg").text("");
        //        $('[data-valmsg-for="Data"]').html('<span></span>');
        //    }
        //});        

    

    $('#IWBDate').datetimepicker({
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        dateFormat: "dd/mm/yy",
        altField: "#slider_example_4andHalf_alt",
        altFieldTimeOnly: false,
        onSelect: function (dateText) {
            dateText = $('#IWBDate').datepicker({ dateFormat: 'MM/dd/yyyy' }).val();
            var dt = dateText.split("/");
            var dt1 = dt[1] + "/" + dt[0] + "/" + dt[2];
           
        },
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
  });

    function ResetGateEntry() {
        $('input[type="text"],textarea,select').val('');
        $('input[type="checkbox"').prop('checked', false);
        $('[data-valmsg-for]').html('');
    }

    //function LoadGateExitView() {
    //    $('#DivBody').load('/GateOperation/DSR_GateExit/CreateGateExitFactoryStuffing');
    //}

    function IWBOnSuccess(data) {

        //debugger;
        if (data.Status == 1 || data.Status == 2) {

            if ($('#DivIWBDetailsMsg').hasClass('logErrMsg'))
                $('#DivIWBDetailsMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivIWBDetailsMsg').html(data.Message);
            setTimeout(LoadIWBView, TimeInSeconds);
           
            // LoadGateExitView();
            //GetExitThroughGateList();
        }

        else {
            if ($('#DivIWBDetailsMsg').hasClass('logSuccMsg'))
                $('#DivIWBDetailsMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivIWBDetailsMsg').html(data.Message);
        }
    }
    function IWBOnFailure() {
        //alert("Error");       
    }



    function ClearErrMsg(elem) {
        $('[data-valmsg-for="' + elem.id + '"]').html('');
    }

    function ValidateData(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if (CharCode == 32) {
            return true;
        }
        if ((CharCode > 31 & CharCode < 48) || (CharCode > 57 & CharCode < 65) || (CharCode > 90 & CharCode < 97) || (CharCode > 122)) {
            evt.preventDefault();
            return false;
        }
        return true;
    }

   
    //function ResetGateExitDet() {

    //    $('#GatePassNo,#GatePassId,#GatePassDate,#IWBId,#IWBNo,#IWBDate,#Consignor,#Liner,#Forwarder,#Transporter,#CFSCode,#Container,#OTLNo,#SealNo,#NoOfPkg,#Weight,#CIFValue,#PlaceOfStuffing,#PortOfLoading,#CHAName,#ExporterName,#ShippBillNo,#Destination,#Country,#CargoDesc').val('');
    //    $('input:checkbox').removeAttr('checked');

    //}


    $('#btnSave').on("click", function () {

        debugger;
        var Status = true;

        return Status;
    });

    function ResetAllFields() {
        $('[data-valmsg-for]').html('');
        $('input[type="text"],Select,textarea').val('');
  
    }
    
</script>


