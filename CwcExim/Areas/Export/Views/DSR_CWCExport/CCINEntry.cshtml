
@model CwcExim.Areas.Export.Models.DSR_CCINEntry
<style>
    #tbleCommodity.dataTable tbody > tr > td {
        cursor: pointer;
    }

    .slimScrollDiv {
        height: 300px;
    }

    .table.tblhd {
        border-bottom: 0;
    }
</style>
<script>

   
    //function PaymentMode() {
    //    var PaymentMode = $('#hdnPaymentMode').val();
    //    alert(PaymentMode);
    //}
    function PopupActivate(Id) {
        //debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {


            if (Id == "CHAModal") {
                ChaNameSerach();
            }

            if (Id == "ShippingLineModal") {
                ShippingLineSerach();
            }

            if (Id == "PortModal1") {
                PortBinding();
                //PortOfDestSerach();
            }
            if (Id == "PackUQCModal") {
                //debugger;
                $('#PackUQCbox').focus();
            }

            if (Id == "CommodityModal") {
                CommoditySerach();
            }
            if (Id == "SBNoModal") {
                //debugger;
                ShippingBillSerach();
            }
            if (Id == "PortModal") {
                //Exporterbox
                PortOfLoadingSerach();
            }

            $('#' + Id).modal('show');
            if (Id == "ExporterModal") {
                //debugger;
                $('#Exporterbox').focus();
            }

            if (Id == "ShippingLineModal") {
                //debugger;
                $('#ShippingLinebox').focus();
            }

            if (Id == "CHAModal") {
                //debugger;
                $('#CHAbox').focus();
            }

            if (Id == "PortDestModal") {
                //debugger;
                $('#PortDestbox').focus();
            }


            if (Id == "PortModal") {
                //debugger;
                $('#Portbox').focus();
            }

            if (Id == "CommodityModal") {
                //debugger;
                $('#CommodityBox').focus();
            }
            if (Id == "SBNoModal") {
                //debugger;
                $('#SBNoBox').focus();
            }
        }




    }

    $('#ExporterModal').on('shown.bs.modal', function () {
        $('#Exporterbox').focus();

    });



    $('#ShippingLineModal').on('shown.bs.modal', function () {
        $('#ShippingLinebox').focus();

    });

    $('#CHAModal').on('shown.bs.modal', function () {
        $('#CHAbox').focus();

    });
    $('#PortDestModal').on('shown.bs.modal', function () {
        $('#PortDestbox').focus();

    });
    $('#PortModal').on('shown.bs.modal', function () {
        $('#Portbox').focus();

    });

    $('#CommodityModal').on('shown.bs.modal', function () {
        $('#CommodityBox').focus();

    });

    $('#SBNoModal').on('shown.bs.modal', function () {
        $('#SBNoBox').focus();

    });

    $(document).ready(function () {
        $('#SBNo').focus();
    });
    function SelectExporter(Exporterid, ExporterName) {

        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
            $('#ExporterId').val(Exporterid);
            $('#ExporterName').val(ExporterName);
            $('#ExporterModal').modal('hide');
            $('#CHAName').focus();
        
    }
    $("#SBDate").on('keypress', function () {

        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

       
            $("#SBDate").datepicker("show");
        
    });

    function SaveEnabled() {
        $('#btnSave').attr('enabled', 'enabled');
    };
    function SaveDisabled() {
        $('#btnSave').attr('disabled', 'disabled');

    }

    function checkdate() {
        debugger;
        if ($('#SBDate').val() != '') {

            var result = moment($('#SBDate').val(), "DD/MM/YYYY", true).isValid();
            if (!result) {
                $('#DivMsgs').html('Incorrect Date');
                setTimeout(function () { $('#DivMsgs').html(''); }, 5000);
                $('#SBDate').val('');
            }
        }
    }
    function check() {
        debugger;
        //alert(elm);
        $('#SBDate').val($('#SBDate').val().replace(/^(\d\d)(\d)$/g, '$1/$2').replace(/^(\d\d\/\d\d)(\d+)$/g, '$1/$2').replace(/[^\d\/]/g, ''));
        //$('#SMTP_Date').val($('#SMTP_Date').val().replace(/^(\d\d)(\d)$/g, '$1/$2').replace(/^(\d\d\/\d\d)(\d+)$/g, '$1/$2').replace(/[^\d\/]/g, ''));

        //  elm = elm.replace(/^(\d\d)(\d)$/g, '$1/$2').replace(/^(\d\d\/\d\d)(\d+)$/g, '$1/$2').replace(/[^\d\/]/g, '');
    }

     $('.mTabindex').keydown(function (e) {
        //debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });
</script>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>CCIN Entry</h4>
                    </div>
                    @*<input type="hidden" id="hdnPaymentMode" value="@ViewBag.PaymentMode" />*@
                </div>
                @using (Ajax.BeginForm("AddEditCCINEntry", "DSR_CWCExport", new AjaxOptions
                {

                    OnComplete = "SaveDisabled",
                    OnBegin = "SaveEnabled",
                    Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "OnSuccess",
                    OnFailure = "OnFailure"
                }, new { id = "frmCCINEntry" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.InvoiceId)
                    @Html.HiddenFor(m => m.PartySDBalance)
                    @Html.HiddenFor(m => m.IsInGateEntry)
                    @Html.HiddenFor(m => m.OTEHr)
                    if (ViewBag.check != null)
                    {
                        <input type="hidden" id="hdnShippingLineList" value="@ViewBag.check" />
                    }
                    else
                    {
                        <input type="hidden" id="hdnShippingLineList" value="" />
                    }
                    if (ViewBag.ListOfSBNo != null)
                    {
                        <input type="hidden" id="hdnShippingBillList" value="@ViewBag.ListOfSBNo" />
                    }
                    else
                    {
                        <input type="hidden" id="hdnShippingBillList" value="" />
                    }

                    if (ViewBag.ListOfPort != null)
                    {
                        <input type="hidden" id="hdnPortName" value="@ViewBag.PortName" />
                        <input type="hidden" id="hdnPortId" value="@ViewBag.PortId" />
                    }
                    else
                    {
                        <input type="hidden" id="hdnPortName" value="" />
                        <input type="hidden" id="hdnPortId" value="" />
                        <input type="hidden" id="hdnListOfPort" value="" />
                    }

                    <div class="panel with-nav-tabs panel-primary cwc_panel" style="margin-top: 15px;">

                        <div class="panel-heading cwc_panel_heading">
                            <ul class="nav nav-tabs" id="DivTabs">
                                <li class="active"><a href="#DivCCIN" data-toggle="tab" onclick="SetActiveTab('CCIN')">CCIN</a></li>
                                @*<li><a href="#DivInvoice" data-toggle="tab" onclick="SetActiveTab('Invoice')">Invoice</a></li>*@
                            </ul>
                        </div>

                        <div class="panel-body">
                            <div class="tab-content">
                                <div class="tab-pane fade in active" id="DivCCIN">
                                    <div id="DivJOHdr" class="Form_Space_bottom">

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>CCIN No:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.TextBoxFor(m => m.CCINNo, new { @class = "form-control input_sm", @readonly = true, tabindex = 1 })
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                    <label>CCIN Date:</label>
                                                </div>
                                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                                    @Html.TextBoxFor(m => m.CCINDate, new { @class = "form-control input_sm", @readonly = true, tabindex = 2 })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>SB No:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.HiddenFor(m => m.SBId)
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBoxFor(m => m.SBNo, new { @class = "form-control input_sm" , tabindex = 3, onkeydown = "PopupActivate('SBNoModal');" })
                                                    @Html.ValidationMessageFor(m => m.SBNo, "", new { @class = "Error_Msg" })
                                                    <span class="search" id="ShippingBillLineSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ShippingBillSerach();" data-target="#SBNoModal"></i></span>
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                    <label>SB Date:</label>
                                                </div>
                                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBoxFor(m => m.SBDate, new { @class = "form-control input_sm",  tabindex = 4 , @size = 10, @maxlength = 10, @onkeyup = "check()", @onblur = "checkdate()" })
                                                    <div class="field-validation-error" id="DivMsgs" style="background-color:transparent"></div>

                                                    @Html.ValidationMessageFor(m => m.SBDate, "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>SB Type:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.DropDownListFor(m => m.SBType, new List<SelectListItem>
                                                    {
                                                    new SelectListItem {Text="Baggage",Value="1" },
                                                    new SelectListItem {Text="Duty Free Goods",Value="2" },
                                                    new SelectListItem {Text="Cargo in Drawback",Value="3" }
                                                    }, new { @class = "form-control input_sm dropdown" , tabindex = 5 })
                                                    @Html.ValidationMessageFor(m => m.SBType, "", new { @class = "Error_Msg" })
                                                </div>
                                                <div class="col-md-1 col_cus_1_5">
                                                    <div class="boolean-container">
                                                        @Html.CheckBoxFor(x => x.IsSEZ)
                                                        <label for="IsSEZ"><i class="square"></i><span>SEZ</span></label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                                    <label>Exporter:</label>
                                                </div>
                                                <div class="col-md-10">
                                                    @Html.HiddenFor(m => m.ExporterId)
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBoxFor(m => m.ExporterName, new { @class = "form-control input_sm", @readonly = true, tabindex = 6, onkeydown = "PopupActivate('ExporterModal');" })
                                                    @Html.HiddenFor(m => m.PartyId)
                                                    @Html.HiddenFor(m => m.PartyName)
                                                   
                                                    @Html.ValidationMessageFor(m => m.ExporterName, "", new { @class = "Error_Msg" })
                                                    <span class="search" id="ExporterSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ExporterModal"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top" style="display:none">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                                    <label>Shipping Line:</label>
                                                </div>
                                                <div class="col-md-10">
                                                    @Html.HiddenFor(m => m.ShippingLineId)
                                                    @Html.TextBoxFor(m => m.ShippingLineName, new { @class = "form-control input_sm", @readonly = true })
                                                    <span class="search" id="ShippingLineSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ShippingLineSerach();" data-target="#ShippingLineModal"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                                    <label>CHA:</label>
                                                </div>
                                                <div class="col-md-10">
                                                    @Html.HiddenFor(m => m.CHAId)
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input_sm", @readonly = true , tabindex = 7, onkeydown = "PopupActivate('CHAModal');" })
                                                    @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                                                    <span class="search" id="CHALineSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ChaNameSerach();" data-target="#CHAModal"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                                    <label>Consignee:</label>
                                                </div>
                                                <div class="col-md-10">
                                                    @Html.TextBoxFor(m => m.ConsigneeName, new { @class = "form-control input_sm" ,tabindex=8})
                                                    @Html.ValidationMessageFor(m => m.ConsigneeName, "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                                    <label>Consignee Address:</label>
                                                </div>
                                                <div class="col-md-10">
                                                    @Html.TextAreaFor(m => m.ConsigneeAdd, new { @class = "form-control input_sm" ,tabindex=9})
                                                    @Html.ValidationMessageFor(m => m.ConsigneeAdd, "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5">
                                                    @Html.LabelFor(m => m.CountryId)
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @if (ViewBag.Country != null)
                                                    {
                                                        @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.Country, "CountryId", "CountryName"), "---Select---", new { @class = "form-control input-sm", tabindex = 10})
                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown" , tabindex = 10 })
                                                    }
                                                    @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5">
                                                    @Html.HiddenFor(m => m.SelectStateId)
                                                    @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })
                                                </div>                                               
                                                <div class="col-md-10">
                                                    @Html.HiddenFor(m => m.PortOfDestId)
                                                    @Html.TextBoxFor(m => m.PortOfDestName, new { @class = "form-control input_sm", tabindex = 11, @readonly = true , onkeydown = "PopupActivate('PortModal1')" })
                                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="PortBinding();" data-target="#PortModal1"></i></span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Commodity:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.HiddenFor(m => m.CommodityId)
                                                    @Html.TextBoxFor(m => m.CommodityName, new { @class = "form-control input_sm",tabindex=12, @readonly = true , onkeydown = "PopupActivate('CommodityModal')" })
                                                    <span class="search" id="CommoditySerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="CommoditySerach();" data-target="#CommodityModal"></i></span>
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                    <label>Pack UOM:</label>
                                                </div>
                                                <div class="col-md-2 col_cus_2_5">
                                                    @Html.HiddenFor(m => m.PackUQCId)
                                                    @Html.HiddenFor(m => m.PackUQCCode)
                                                    @Html.TextBoxFor(m => m.PackUQCDescription, new { @class = "form-control input_sm", @readonly = true, tabindex = 18, onkeydown = "PopupActivate('PackUQCModal');" })
                                                    @Html.ValidationMessageFor(m => m.PackUQCDescription, "", new { @class = "Error_Msg" })
                                                    <span class="search" id="PackUQCSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PackUQCModal"></i></span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Cargo Type:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                                    {
                                                        new SelectListItem {Text="HAZ",Value="1" },
                                                        new SelectListItem {Text="NON-HAZ",Value="2"}
                                                    }, "----Select----", new { @class = "form-control input_sm dropdown" ,tabindex = 13 })
                                                    @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })

                                                </div>
                                                <div style="display:none">
                                                    @Html.HiddenFor(m => m.SelectCityId)
                                                    @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                                </div>
                                                <div style="display:none">
                                                    @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown" })
                                                    @*@Html.ValidationMessageFor(m => m.CityId, "", new { @class = "Error_Msg" })*@
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">                                                    
                                                    <label>FOB:</label>
                                                    @Html.HiddenFor(m => m.GodownName, "")
                                                    @Html.HiddenFor(m => m.GodownId, "0")
                                                </div>
                                                <div class="col-md-2 col_cus_2_5">
                                                    @Html.HiddenFor(m => m.NoOfVehicles)
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBoxFor(m => m.FOB, new { @class = "form-control input_sm", tabindex=14 })
                                                    @Html.ValidationMessageFor(m => m.FOB, "", new { @class = "Error_Msg" })
                                                    
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Port of Loading:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.HiddenFor(m => m.PortOfLoadingId)
                                                    @Html.TextBoxFor(m => m.PortOfLoadingName, new { @class = "form-control input_sm", @readonly = true,tabindex=15, onkeydown = "PopupActivate('PortModal')" })
                                                    <span class="search" id="PortOfLoadingSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="PortOfLoadingSerach();" data-target="#PortModal"></i></span>
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt" style="display:none">
                                                    <label>Port of Discharge:</label>
                                                </div>
                                                <div class="col-md-2 col_cus_2_5" style="display:none">
                                                    

                                                    @Html.Hidden("PortOfDischargeId")
                                                    @Html.TextBoxFor(m => m.PortOfDischarge, new { @class = "form-control input_sm",tabindex=16 })
                                                    @*@Html.ValidationMessageFor(m => m.PortOfDischarge, "", new { @class = "Error_Msg" })*@
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>No of Package:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBoxFor(m => m.Package, new { @class = "form-control input_sm" ,tabindex=17})
                                                    @Html.ValidationMessageFor(m => m.Package, "", new { @class = "Error_Msg" })
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                    <label>Weight (Kg):</label>
                                                </div>
                                                <div class="col-md-2 col_cus_2_5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input_sm",tabindex=18, @onkeypress = "return validateFloatKeyPress(this,event);" })
                                                    @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Package Type:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.DropDownListFor(m => m.PackageType, new List<SelectListItem>
                                                    {
                                                        new SelectListItem { Text="Package",Value="P"},
                                                        new SelectListItem { Text="Liquid Bulk",Value="LB"},
                                                        new SelectListItem { Text="Dry Bulk",Value="DB"}
                                                    }, new { @class = "form-control input-sm dropdown" })
                                                    @Html.ValidationMessage("PackageType", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                      
                                    </div>
                                </div>
                                
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row SignUp_space_top2">
                        <div class="col-md-offset-3 col-md-2">
                            <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" tabindex = 19/>
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllField()" tabindex=20/>
                        </div>
                        
                    </div>
                    <div class="logSuccMsg Form_Space_top" id="DivSucMsg" style="background-color:transparent"></div>
                    <div class="logErrMsg Form_Space_bottom" id="DivErrMsg" style="background-color:transparent"></div>
                }
                <div class="row">
                    <div class="col-md-2 SignUp_space_bottom">
                        <input type="button" id="BtnCCINEntryLoad" value="Show List" class="btn log_Btn_sm" onclick="LoadCCINEntryList()" />
                    </div>
                    <div class="col-md-offset-6 col-md-2">
                        <input type="text" placeholder="Search by SB No" id="SearchSBNo" />
                    </div>

                    <div class="col-md-2">
                        <input type="button" value="Search" onclick="SearchSBNo()" class="btn log_Btn_sm" />
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="tblEntryDet"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="CCINEntryList"></div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div class="modal fade mTabindex" id="ShippingLineModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Shipping Line Names</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="ShippingLinebox" type="text" tabindex="200"/>
                <ul tabindex="199" class="navList" id="lstShippingLine"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade mTabindex" id="PackUQCModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="ClosePackUQC()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List Of Pack UOM</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Pack UQC Name Or Pack UQC Code " id="PackUQCbox" type="text" tabindex="200" autofocus />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchPackUQCByCode()"></i></span>

                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Pack UOM Description</th>
                            <th colspan="4" width="20%">Pack UOM Code</th>
                        </tr>
                    </thead>
                </table>

                <div id="slim_scroll_3">
                    <table tabindex="201" class="table dataTable table-bordered table-striped slim_tble" id="tblePackUQC">
                        @{
                            if (ViewBag.lstPackUQC != null)
                            {
                                var tabvalue = 202;
                                foreach (var item in ViewBag.lstPackUQC)
                                {
                                    <tr tabindex="@tabvalue" onclick="SelectPackUQC(@item.PackUQCId,'@item.PackUQCDescription','@item.PackUQCCode')" onkeypress="SelectPackUQC(@item.PackUQCId,'@item.PackUQCDescription','@item.PackUQCCode')">
                                        <td colspan="8" width="80%" class="txt_wrp">@item.PackUQCDescription</td>
                                        <td colspan="4" width="20%" class="txt_wrp">@item.PackUQCCode</td>
                                    </tr>
                                    tabvalue++;
                                }
                            }
                        }

                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.PackUQCState != null && Convert.ToBoolean(ViewBag.PackUQCState) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePackUQC()" class="btn log_Btn_sm" id="btnLoadPackUQC">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePackUQC()" class="btn log_Btn_sm" id="btnLoadPackUQC" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="ClosePackUQC()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ExporterModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Exporter Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Exporterbox" type="text" tabindex="70" autofocus/>
                <ul tabindex="69" class="navList" id="lstExporter">
                    @{
                        if (ViewBag.ListOfExporter != null)
                        {
                            var tabvalue = 72;
                            foreach (var item in ViewBag.ListOfExporter)
                            {
                               // <li id="@item.EXPEximTraderId">@item.ExporterName</li>

                                <li tabindex="@tabvalue" id="@item.EXPEximTraderId" onkeypress="SelectExporter(@item.EXPEximTraderId,'@item.ExporterName');">@item.ExporterName</li>
                                tabvalue++;
                            }
                        }
                        else
                        {
                            <li></li>
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="CHAModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of CHA Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="CHAbox" type="text" tabindex="100" />
                <ul tabindex="99" class="navList" id="lstCHA"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade mTabindex" id="PortModal1" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal" style="width:80%;">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="ClosePort()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Port Name" id="PortBox" type="text" tabindex="401" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchPortName()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>

                        <tr>
                            <th colspan="8" style="text-align:left;" width="80%">Port Name</th>
                            <th colspan="4" width="20%">Port Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scrollp">
                    <table class="table dataTable table-bordered table-striped" id="tblPort">
                        @*@{
                                if (ViewBag.LstCommodity != null)
                                {
                                    var tabvalue = 401;
                                    var tab = 0;
                                    var u = "_";
                                    foreach (var item in ViewBag.LstCommodity)
                                    {
                                        <tr tabindex="@tabvalue@u@tab" onclick="SelectCommodity(@item.CommodityId,'@item.CommodityName','@item.CommodityType')" onkeypress="SelectCommodity(@item.CommodityId,'@item.CommodityName','@item.CommodityType')">
                                            <td>@item.CommodityName</td>
                                        </tr>
                                        tab++;
                                    }
                                }
                            }*@
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-5">

                        <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePort()" class="btn log_Btn_sm" id="btnLoadMorePort" disabled>Load More Data</button>

                    </div>
                    <div class="col-md-offset-3 col-md-4">
                        <button id="btnPortClose" type="button" class="btn log_Btn_sm" onclick="ClosePort()">Close</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
<div id="PortDestModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="PortDestbox" type="text" tabindex="300" />
                <ul tabindex="299" class="navList" id="lstDestPort"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="PortModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Portbox" type="text" tabindex="400"  />
                <ul  tabindex="399" class="navList" id="lstPort"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade mTabindex" id="CommodityModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal" style="width:80%;">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseCommodity()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Commodity</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Commodity Name" id="CommodityBox" type="text" tabindex="502" autofocus/>
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchCommodityByPartyCode()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Commodity Name</th>

                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll_2">
                    <table class="table dataTable table-bordered table-striped" id="tbleCommodity">
                        <tbody ></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-4">
                        @if (ViewBag.CommodityState != null && Convert.ToBoolean(ViewBag.CommodityState) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCommodity()" class="btn log_Btn_sm" id="btnLoadMoreCommodity">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCommodity()" class="btn log_Btn_sm" id="btnLoadMoreCommodity" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-offset-5 col-md-3">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseCommodity()">Close</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

<div id="SBNoModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of SBNo</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="SBNobox" type="text" tabindex="50" autofocus />
                <ul tabindex="49" class="navList" id="lstSBNo"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script>
    $(function () {
        $('#slim_scroll_2').slimScroll({
            allowPageScroll: true
        });
        $('#slim_scroll_3').slimScroll({
            allowPageScroll: true
        });
    });

    $(function () {
        // document.getElementById('CargoType').value = "2";
        //debugger;
        
        GenerateEntryTable();
        $('#PortOfLoadingName').val($('#hdnPortName').val());  
        $('#PortOfLoadingId').val($('#hdnPortId').val());
        // Decimal Number
        $("#Weight,#FOB").keydown(function (e) {
            if (e.keyCode == 190 || e.keyCode == 110) {
                if ($(this).val().indexOf('.') >= 0) {
                    e.preventDefault();
                }
            }
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number or character
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        // Integer Number
        $("#Package").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number or character
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        // Text Box
        $("#SBNo").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number or character
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) && (e.keyCode < 65 || e.keyCode > 90)) {
                e.preventDefault();
            }
        });

        // Text Box with space
        $("#ConsigneeName,#PortOfDischarge").keydown(function (e) {
            //alert(e.keyCode);
            // Allow: backspace, delete, tab, escape, enter and .
            if (e.keyCode == 32) {
                return true;
            }
            else if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number or character
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) && (e.keyCode < 65 || e.keyCode > 90)) {
                e.preventDefault();
            }
        });

        // Text Box with space and (),./-&|
        $("#ConsigneeAdd").keydown(function (e) {
            //alert(e.keyCode);
            // Allow: backspace, delete, tab, escape, enter and .
            if (e.keyCode == 32 || e.keyCode == 48 || e.keyCode == 57 || e.keyCode == 188 || e.keyCode == 191 || e.keyCode == 189 || e.keyCode == 55 || e.keyCode == 220) {
                return true;
            }
            else if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                // Allow: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // Allow: home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number or character
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105) && (e.keyCode < 65 || e.keyCode > 90)) {
                e.preventDefault();
            }
        });

        // LoadCCINEntryList();

        if ($('#Id').val() > 0) {
            //debugger;
           // GetStateList();
            
            var OTEHr = Number($('#OTEHr').val());
            $('#OTHr').val(OTEHr);
            if (OTEChargeName == "Over Time Export") {
                //CalcTax(OTEChargeId);
                CalcTaxForEdit(OTEChargeId);
            }
        }
    });

    $('#CCINDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $('[data-valmsg-for="CCINDate"]').html('');
        }
    });

    $('#SBDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $('[data-valmsg-for="SBDate"]').html('');
        }
    });

    function LoadMorePackUQC() {
        debugger;
        $.ajax({
            url: '/Export/WFLD_CWCExport/LoadPackUQCList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tabvalue = 202;
                    $.each(data.Data.lstPackUQC, function (item, elem) {
                        html += '<tr tabindex=' + tabvalue + ' onclick="SelectPackUQC(' + elem.PackUQCId + ',&quot;' + elem.PackUQCDescription + '&quot,&quot;' + elem.PackUQCCode + '&quot;)" onkeypress="SelectPackUQC(' + elem.PackUQCId + ',&quot;' + elem.PackUQCDescription + '&quot,&quot;' + elem.PackUQCCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PackUQCDescription + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PackUQCCode + '</td></tr>';
                        tabvalue++;
                    });
                    if (Page == -1)
                        $('#tblePackUQC tbody').html(html);
                    else
                        $('#tblePackUQC tbody').append(html);
                    Page++;

                    debugger;
                    if (data.Data.PackUQCState == true)
                        $('#btnLoadPackUQC').prop('disabled', false);
                    else $('#btnLoadPackUQC').prop('disabled', true);
                }
            }
        });
    }

    function LoadPackUQC() {
        debugger;
        Page = 0;
        $.ajax({
            url: '/Export/WFLD_CWCExport/LoadPackUQCList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tabvalue = 202;
                    $.each(data.Data.lstPackUQC, function (item, elem) {
                        html += '<tr tabindex=' + tabvalue + ' onclick="SelectPackUQC(' + elem.PackUQCId + ',&quot;' + elem.PackUQCDescription + '&quot,&quot;' + elem.PackUQCCode + '&quot;)" onkeypress="SelectPackUQC(' + elem.PackUQCId + ',&quot;' + elem.PackUQCDescription + '&quot,&quot;' + elem.PackUQCCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PackUQCDescription + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PackUQCCode + '</td></tr>';
                        tabvalue++;
                    });

                    $('#tblePackUQC tbody').html(html);

                    if (data.Data.PackUQCState == true)
                        $('#btnLoadPackUQC').prop('disabled', false);
                    else $('#btnLoadPackUQC').prop('disabled', true);
                }
            }
        });
    }

    function SearchPackUQCByCode() {
        debugger;
        if ($('#PackUQCbox').val() != '') {
            $.ajax({
                url: '/Export/WFLD_CWCExport/SearchPackUQCByCode',
                type: 'GET',
                data: { PartyCode: $('#PackUQCbox').val() },
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        var html = '';
                        var tabvalue = 202;
                        $.each(data.Data.lstPackUQC, function (item, elem) {
                            html += '<tr tabindex=' + tabvalue + ' onclick="SelectPackUQC(' + elem.PackUQCId + ',&quot;' + elem.PackUQCDescription + '&quot,&quot;' + elem.PackUQCCode + '&quot;)" onkeypress="SelectPackUQC(' + elem.PackUQCId + ',&quot;' + elem.PackUQCDescription + '&quot,&quot;' + elem.PackUQCCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PackUQCDescription + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PackUQCCode + '</td></tr>';
                            tabvalue++;
                        });
                        $('#tblePackUQC tbody').html('');
                        $('#tblePackUQC tbody').html(html);
                        $('#btnLoadPackUQC').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tblePackUQC tbody').html('');
                        Page = -1;
                        $('#btnLoadPackUQC').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadPackUQC();
    }
    function SelectPackUQC(PackUQCId, PackUQCDescription, PackUQCCode) {
        debugger;
        $('#PackUQCDescription').val(PackUQCDescription);
        $('#PackUQCCode').val(PackUQCCode);
        $('#PackUQCId').val(PackUQCId);
        $("#PackUQCModal").modal("hide");
        $('#PackUQCbox').val('');
        $('[data-valmsg-for="PackUQCDescription"]').html('');
        LoadPackUQC();
        $('#Package').focus();
    }
    function ClosePackUQC() {
        debugger;
        $('#PackUQCbox').val('');
        $("#PackUQCModal").modal("hide");
        LoadPackUQC();
    }
    $('#PackUQCModal').on('shown.bs.modal', function () {
        $('#PackUQCbox').focus();

    });

    $('#ShippingLinebox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstShippingLine > li').show();
        else {
            $('#lstShippingLine > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#Exporterbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstExporter > li').show();
        } else {
            $('#lstExporter > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstExporter li').on("click", function () {
        $('#ExporterName').val($(this).text());
        $('#ExporterId').val($(this).attr('id'));
        $("#ExporterModal").modal("hide");
        $('[data-valmsg-for="ExporterName"]').html('<span></span>');
    });
    $('#CHAbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstCHA > li').show();
        } else {
            $('#lstCHA > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    
    $('#Portbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstPort > li').show();
        } else {
            $('#lstPort > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    
    $('#PortDestbox').keyup(function () {
        //debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstDestPort > li').show();
        } else {
            $('#lstDestPort > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    

    function SelectCommodity(CommodityId, CommodityName, CommodityType) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
     
        $('#CommodityName').val(CommodityName);
        $('#CommodityId').val(CommodityId);           
        $('#CommodityModal').modal('hide');
        $('#CommodityBox').val('');
        $('#CargoType').focus();
        LoadCommodity();
        
    }

    function LoadMoreCommodity() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/LoadCommodityList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    tabvalue = 503;
                    $.each(data.Data.LstCommodity, function (item, elem) {
                        //debugger;
                        html += '<tr tabindex=' + tabvalue + ' onclick="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;);" onkeypress="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;)"><td colspan="8" width="80%">' + elem.CommodityName + '</td></tr>';
                        tabvalue++;
                    });
                    if (Page == -1)
                        $('#tbleCommodity tbody').html(html);
                    else
                        $('#tbleCommodity tbody').append(html);
                    Page++;

                    if (data.Data.State == true)
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                    else $('#btnLoadMoreCommodity').prop('disabled', true);
                }
            }
        });
    }

    var Page = 0;
    function LoadCommodity() {
        Page = 0;
        $.ajax({
            url: '/Export/DSR_CWCExport/LoadCommodityList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    tabvalue = 502;
                    $.each(data.Data.LstCommodity, function (item, elem) {
                        //debugger;
                        html += '<tr tabindex=' + tabvalue + '="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;)"><td colspan="8" width="80%">' + elem.CommodityName + '</td></tr>';
                        tabvalue++;
                    });
                    $('#tbleCommodity tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                    else $('#btnLoadMoreCommodity').prop('disabled', true);
                }
            }
        });
    }

    function SearchCommodityByPartyCode() {
        if ($('#CommodityBox').val() != '') {
            $.ajax({
                url: '/Export/DSR_CWCExport/SearchCommodityByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#CommodityBox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        tabvalue = 502;
                        $.each(data.Data.LstCommodity, function (item, elem) {
                            html += '<tr tabindex=' + tabvalue + ' onclick="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;)"><td colspan="8" width="80%">' + elem.CommodityName + '</td></tr>';
                            tabvalue++;
                        });
                        $('#tbleCommodity tbody').html('');
                        $('#tbleCommodity tbody').html(html);
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleCommodity tbody').html('');
                        Page = -1;
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadCommodity();
    }

    function CloseCommodity() {
        $('#CommodityBox').val('');
        $("#CommodityModal").modal("hide");
        LoadCommodity();
    }


    $('#SBNobox').keyup(function () {
        //debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstSBNo > li').show();
        } else {
            $('#lstSBNo > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
       

    $('#Partybox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstParty > li').show();
        } else {
            $('#lstParty > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    
    var OTEChargeId = 0;
    var OTEChargeName = '';
 
    var ActiveTab = 'CCIN';

    function SetActiveTab(activeTab) {
        ActiveTab = activeTab;
    }

    
    function GetCityList() {
        ////debugger;
        var StateId = $('#StateId').val();
        if (StateId != "") {
            $.ajax({
                url: '/City/GetCitiesByState',
                type: 'Get',
                data: { StateId: StateId },
                async: false,
                success: function (data) {
                    ////debugger;
                    if (data.Status == 1) {
                        ClearCityDropdown();
                        $.each(data.Data, function (i, item) {
                            ////debugger;
                            var SelectCityId = parseInt($('#SelectCityId').val());
                            $('#CityId').append($('<option></option>').val(item.CityId).html(item.CityName));
                            if (SelectCityId > 0) {
                                $('#CityId').val(SelectCityId);
                            }
                        });
                    }
                    else {
                        ClearCityDropdown();
                    }
                }
            });
        }
        else {
            ClearCityDropdown();
        }
    }
    function ClearStateDropdown() {
        $('#StateId').html("");
        $('#StateId').append($('<option></option>').val("").html("---Select---"));
    }
    function ClearCityDropdown() {
        $('#CityId').html("");
        $('#CityId').append($('<option></option>').val("").html("---Select---"));
    }

    function LoadCCINEntryList() {
        $('#SearchSBNo').val('');
        $('#tblEntryDet').html('');
        $('#CCINEntryList').load('/Export/DSR_CWCExport/ListOfCCINEntry');
    }

    function OnSuccess(data) {
        if (data.Status == 1 || data.Status == 2) {
            $('#DivSucMsg').html(data.Message);
            $('#CCINNo').val(data.Data.split('#')[0]);
            $('#InvoiceNo').val(data.Data.split('#')[1]);
            $('#DivErrMsg').html('');
            $('#btnReset').attr('disabled', false);
            $('#btnSave').attr('disabled', true);
            $('#btnPrint').attr('disabled', false);
             setTimeout(ResetAllField, 3000);
             LoadCCINEntryList();
        }
        else {
            $('#DivErrMsg').html(data.Message);
        }
        // setTimeout(function () { $('#DivErrMsg,#DivSucMsg').html(''); }, 5000);
    }

    function FormattedCurrentDate() {
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1; //January is 0!
        var yyyy = today.getFullYear();
        if (dd < 10) {
            dd = '0' + dd;
        }
        if (mm < 10) {
            mm = '0' + mm;
        }
        var todayDate = dd + '/' + mm + '/' + yyyy;

        return todayDate;
    }
    function OnFailure() { }

    function ResetAllField() {
        $('#DivBody').load('/Export/DSR_CWCExport/CCINEntry');
    }

   
    function GenerateEntryTable() {
        tablehtml = '';
        var tablehtml = '<table id="tblEntryDet" class="table table-striped table-bordered dataTable" style="width:100%;"><thead><tr><th class="text-center">SL No</th><th>CCIN No</th><th>CCIN Date</th><th>SB No</th><th>SB Date</th><th class="text-center">Edit</th><th class="text-center">Delete</th></tr></thead><tbody>';
        tablehtml += '</tbody></table>';
        $('#tblEntryDet').html(tablehtml);
    }


    function ShippingBillSerach() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetShippingBill',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                //debugger;
                if (data != '') {
                    $('#hdnShippingBillList').val(data);
                    var EcJson = JSON.parse(data);
                    var html = '';
                    var TabValue = 51;
                    $.each(EcJson, function (i, item) {
                        html += '<li tabindex=' + TabValue + 'id="' + item.SBId + '" onkeypress="selectSBNo(' + item.SBId + ');" onclick="selectSBNo(' + item.SBId + ');">' + item.SBNo + '</li>';
                        TabValue++;
                    });
                    $('#lstSBNo').html(html);
                }
            }
        });
    }



    function selectSBNo(id) {

        //debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
  
            $('#SBId').val(id);
            if ($('#SBId').val() > 0) {

                $.ajax({
                    url: '/Export/DSR_CWCExport/GetSBDetailsBySBId',
                    type: 'Get',
                    data: { SBId: $('#SBId').val() },
                    async: false,
                    success: function (data) {
                        if (data != null) {
                            //debugger;
                            $('#SBNo').val(data.SBNo);
                            $('#SBDate').val(data.SBDate);
                            $('#ExporterName').val(data.ExporterName);
                            $('#ExporterId').val(data.ExporterId);
                            $('#FOB').val(data.FOB);
                            $('#Package').val(data.Package);
                            $('#PackUQCDescription').val(data.PackUQCDescription);
                            $('#PackUQCCode').val(data.PackUQCCode);
                        }
                    }
                });
            }

            $("#SBNoModal").modal("hide");
            $('#SBDate').focus();
        
        $('[data-valmsg-for="SBNo"]').html('<span></span>');
    }

    function ShippingLineSerach() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetShippingLine',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                //debugger;
                if (data != '') {
                    $('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    var html = '';
                    tabvalue = 202;
                    $.each(EcJson, function (i, item) {
                        html += '<li tabindex=' + tabvalue + ' id="' + item.ShippingLineId + '" onclick="selectShippingBill(' + item.ShippingLineId + ');">' + item.ShippingLineName + '</li>';
                        tabvalue++;
                    });
                    $('#lstShippingLine').html(html);
                }
            }
        });
    }

    function ChaNameSerach() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetCHAName',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                //debugger;
                if (data != '') {
                    //$('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    var html = '';
                    tabvalue = 102;
                    $.each(EcJson, function (i, item) {
                        html += '<li tabindex=' + tabvalue + 'id="' + item.CHAEximTraderId + '" onclick="selectChName(' + item.CHAEximTraderId + ',&quot;' + item.CHAName + '&quot;);" onkeypress="selectChName(' + item.CHAEximTraderId + ',&quot;' + item.CHAName + '&quot;);">' + item.CHAName + '</li>';
                        tabvalue++;
                    });
                    $('#lstCHA').html(html);
                }
            }
        });
    }


    function selectInvName(id, Name) {

        $('#PartyName').val(Name);
        $('#PartyId').val(id);
        $("#PartyModal").modal("hide");
        ProcessInvoice();
    }
    function PortOfDestSerach() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetPortOfDest',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                //debugger;
                if (data != '') {
                    //$('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    var html = '';
                    tabvalue = 302;
                    $.each(EcJson, function (i, item) {
                        html += '<li tabindex=' + tabvalue + ' id="' + item.PortId + '" onkeypress="selectPortDest(' + item.PortId + ',&quot;' + item.PortName + '&quot;);" onclick="selectPortDest(' + item.PortId + ',&quot;' + item.PortName + '&quot;);">' + item.PortName + '</li>';
                        tabvalue++;
                    });
                    $('#lstDestPort').html(html);
                   
                }
            }
        });
    }

    function PortOfLoadingSerach() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetPortOfLoading',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                //debugger;
                if (data != '') {
                    //$('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    
                    var html = '';
                    tabvalue = 402;
                    $.each(EcJson, function (i, item) {
                        html += '<li  tabindex=' + tabvalue + ' id="' + item.PortId + '" onkeypress="selectPortLoad(' + item.PortId + ',&quot;' + item.PortName + '&quot;);" onclick="selectPortLoad(' + item.PortId + ',&quot;' + item.PortName + '&quot;);">' + item.PortName + '</li>';
                        tabvalue++;
                    });

                    $('#lstPort').html(html);

                }
            }
        });
    }
    function CommoditySerach() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetCommodity',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                //debugger;
                if (data != '') {
                    //$('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    var html = '';
                    tabvalue = 502;
                    $.each(EcJson.LstCommodity, function (i, item) {
                        html += '<tr tabindex=' + tabvalue + ' id="' + item.CommodityId + '" onkeypress="SelectCommodity(' + item.CommodityId + ',&quot;' + item.CommodityName + '&quot;,&quot;' + item.CommodityType + '&quot;);" onclick="SelectCommodity(' + item.CommodityId + ',&quot;' + item.CommodityName + '&quot;,&quot;' + item.CommodityType + '&quot;);"><td colspan="8" width="80%">' + item.CommodityName + '</td></tr>';
                        tabvalue++;
                    });
                    $('#tbleCommodity tbody').html(html);

                }
            }
        });
    }



    function selectPortDest(id, Name) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        
            $('#PortOfDestName').val(Name);
            $('#PortOfDestId').val(id);
            $('#PortOfDischarge').val(Name);            
            $("#PortDestModal").modal("hide");
            $("#CommodityName").focus();
        
    }

    function selectPortLoad(id, Name) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        
            $('#PortOfLoadingName').val(Name);
            $('#PortOfLoadingId').val(id);
            $("#PortModal").modal("hide");
            $("#Package").focus();
        
    }
    function selectShippingBill(id) {
        //debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        
            $('#ShippingLineId').val(id);

            var parties = JSON.parse($('#hdnShippingLineList').val());
            var GodownId = $.grep(parties, function (item) { return item.ShippingLineId == $('#ShippingLineId').val(); })[0].GodownId;
            $('#GodownId').val(GodownId);

            var GodownName = $.grep(parties, function (item) { return item.ShippingLineId == $('#ShippingLineId').val(); })[0].GodownName;
            var ShipName = $.grep(parties, function (item) { return item.ShippingLineId == $('#ShippingLineId').val(); })[0].ShippingLineName;

            $('#GodownName').val(GodownName);
            $('#ShippingLineName').val(ShipName);
            $("#ShippingLineModal").modal("hide");
        
    }

    function selectChName(id, Name) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
       
            $('#CHAName').val(Name);
            $('#CHAId').val(id);
            $("#CHAModal").modal("hide");
            $("#ConsigneeName").focus();
            $('[data-valmsg-for="CHAName"]').html('<span></span>');
        
    }
    function debounce(func, wait, immediate) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var later = function () {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    };
    document.getElementById('CommodityBox').addEventListener('keyup', debounce(function () {
        SearchCommodityByPartyCode();
    }, 800));

    function validateFloatKeyPress(el, evt) {
        //debugger;
        var charCode = (evt.which) ? evt.which : event.keyCode;
        var number = el.value.split('.');
        if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
            return false;
        }
        //just one dot (thanks ddlab)
        if (number.length > 1 && charCode == 46) {
            return false;
        }
        //get the carat position
        var caratPos = getSelectionStart(el);
        var dotPos = el.value.indexOf(".");
        if (caratPos > dotPos && dotPos > -1 && (number[1].length > 1)) {
            return false;
        }
        return true;
    }

    function getSelectionStart(o) {
        if (o.createTextRange) {
            var r = document.selection.createRange().duplicate()
            r.moveEnd('character', o.value.length)
            if (r.text == '') return o.value.length
            return o.value.lastIndexOf(r.text)
        } else return o.selectionStart
    }
 
    function SearchSBNo()
    {
        //debugger;
        var SearchValue = $('#SearchSBNo').val().trim();
        $('#tblEntryDet').html('');
        $('#CCINEntryList').load('/Export/DSR_CWCExport/SearchListOfCCINEntry/?SearchValue=' + SearchValue);
    }

    $(function () {
        $('#slim_scrollp').slimScroll({
            allowPageScroll: true
        });
    });
    function ClosePort() {
        //partyPage = 1;
        $('#tblPort').html('');
        $("#PortModal1").modal("hide");
    }
    function SearchPortName() {
        PortSearch();
    }

    function PortSearch() {
        debugger;
        //pPage += 1;
        $('#tblPort').html('');
        $.ajax({
            url: '/Import/DSR_OBLEntry/GetPortList',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 0, 'SearchValue': $('#PortBox').val().trim() },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                    var EcJson = data.Data.LstPort;

                    var html = '';
                    var tabvalue = 401;
                    $.each(EcJson, function (i, item) {

                        html += '<tr tabindex=' + tabvalue + '_' + i + ' onkeypress="FillPortBox(' + item.PortId + ',&quot;' + item.PortName + '&quot;);" onclick="FillPortBox(' + item.PortId + ',&quot;' + item.PortName + '&quot;);"><td colspan="8" width="80%">' + item.PortName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PortAlias + '</td></tr>';
                    });
                    $('#tblPort').html(html);
                    if (data.Data.State == true) {
                        $('#btnLoadMorePort').prop("disabled", false);
                    }
                    else {
                        $('#btnLoadMorePort').prop("disabled", true);
                    }

                }
            }
        });

    }
    $('#PortBox').keyup(function () {
        PortSearch();
        //var val = $(this).val().toLowerCase();
        //if (val == "")
        //    $('#tblPort>tr>td').show();
        //else {
        //    $('#tblPort > tr > td').each(function () {
        //        var text = $(this).text().toLowerCase();
        //        (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
        //    });
        //}
    });
    var pPage = 0;
    function LoadMorePort() {
        pPage += 1;
        $.ajax({
            url: '/Import/DSR_OBLEntry/GetPortList',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': pPage, 'SearchValue': $('#PortBox').val() },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {

                    var EcJson = data.Data.LstPort;
                    var html = '';
                    var tabvalue = 401;
                    $.each(EcJson, function (i, item) {
                        //html += ''
                        html += '<tr tabindex=' + tabvalue + '_' + i + ' onkeypress="FillPortBox(' + item.PortId + ',&quot;' + item.PortName + '&quot;);" onclick="FillPortBox(' + item.PortId + ',&quot;' + item.PortName + '&quot;);"><td colspan="8" width="80%">' + item.PortName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PortAlias + '</td></tr>';
                    });
                    //if (Page == -1)
                    //    $('#tblParty tbody').html(html);
                    //else
                    //    $('#tblParty tbody').append(html);
                    //Page++;

                    $('#tblPort tbody').append(html);
                    if (data.Data.State == true) {
                        $('#txtLoadMorePort').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMorePort').prop("disabled", true);
                    }

                }
            }
        });

    }
    function PortBinding() {
        debugger;
        //pPage += 1;
        $('#tblPort').html('');
        $('#PortBox').val('');
        $.ajax({
            url: '/Import/DSR_OBLEntry/GetPortList',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 0, 'SearchValue': '' },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                    var EcJson = data.Data.LstPort;

                    var tabvalue = 401;
                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += '<tr tabindex=' + tabvalue + '_' + i + ' onkeypress="FillPortBox(' + item.PortId + ',&quot;' + item.PortName + '&quot;);" onclick="FillPortBox(' + item.PortId + ',&quot;' + item.PortName + '&quot;);"><td colspan="8" width="80%">' + item.PortName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PortAlias + '</td></tr>';
                    });
                    $('#tblPort').html(html);
                    $('#PortBox').focus();
                    if (data.Data.State == true) {
                        $('#btnLoadMorePort').prop("disabled", false);
                    }
                    else {
                        $('#btnLoadMorePort').prop("disabled", true);
                    }

                }
            }
        });

    }

    function FillPortBox(PortId, PortName) {
        //debugger;

        $('#PortOfDestName').val(PortName);
        $('#PortOfDestId').val(PortId);
        $('#PortOfDestName').val(PortName);
        $('#PortOfDischarge').val(PortName);
        $("#PortModal1").modal("hide");
        $('#PortBox').val('');
        
        $("#CommodityName").focus();
    }

</script>