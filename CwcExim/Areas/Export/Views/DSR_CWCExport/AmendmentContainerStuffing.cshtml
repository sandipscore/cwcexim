@model CwcExim.Areas.Export.Models.DSR_ContainerStuffing

<script>
    var ArrayOfContainerStuff = [];
    var TimeInSeconds;
    var ArrayOfContainer = [];

    $(function () {
        TimeInSeconds = 5000;
             
        $('#BtnPrint').prop("disabled", true);       
        $('#StuffingNo').focus();
      
    });

    $('#StuffingDate').datetimepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='StuffingDate']").html('');
        }
    });

    $('#ContStuffingDate').datetimepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ContStuffingDate']").html('');
        }
    });
    function ResetAllFields() {
        $('#DivBody').load('/Export/DSR_CWCExport/AmendmentContainerStuffing');
    }

   

   // var AddStatus = 0;
    function SaveContainerStuffingDtl() {
        debugger;
        $('#DivContainerStuffingTblErrMsg').html('');

        var c = 0;
        var csdate=null;
        $.each(ArrayOfContainerStuff, function (i, item) {
            debugger;
            //if (item.ContainerNo == $('#ContainerNo').val() && item.ShippingBillNo == $('#ShippingBillNo').val() && item.GodownId == $('#GodownId').val()) {
            //    c = 1;
            //}
            //if(item.ContStuffingDate!=null)
            //{
            //    if (item.ContainerNo == $('#ContainerNo').val() && item.ContStuffingDate != $('#ContStuffingDate').val()) {
            //        c = 2;
            //        csdate=item.ContStuffingDate;
            //    }
            //}

        });
        if (c == 1) {
            alert("Container /CBT No Already Added.");
            ResetConatinerStuffDet();
            return false;
        }
        //if (c == 2) {
        //    alert("Container Wise Stuffing Date should not be different");
        //    $('#ContStuffingDate').val(csdate);
        //    return false;
        //}

        if ($('#Refer').is(':checked') != true) {
            $("#ReeferHrs").val(0)
        }
        if ($('#ContainerNo').val() != "") {
            //debugger;
            var StuffingType = $('#FCL').prop("checked") == true ? "FCL" : "LCL"
            var ContainerStuffingDtl = {
                "ContainerNo": $('#ContainerNo').val(),
                "CFSCode": $('#CFSCode').val(),
                "Size": $('#Size').val(),
                "ShippingLineId": $('#ShippingLineId').val(),
                "ShippingLine": $('#ShippingLine').val(),
                "ShippingSeal": $('#ShippingSeal').val(),
                "CustomSeal": $('#CustomSeal').val(),
                "StuffingType": StuffingType,
                "ShippingBillNo": $('#ShippingBillNo').val(),
                "ShippingDate": $('#ShippingDate').val(),
                "CHAId": $('#CHAId').val(),
                "ExporterId": $('#ExporterId').val(),
                "CHA": $('#CHA').val(),
                "Exporter": $('#Exporter').val(),               
                "Consignee": $('#Consignee').val(),
                "MarksNo": $('#MarksNo').val(),
                "Fob": $('#Fob').val() == "" ? 0 : $('#Fob').val(),
                "StuffQuantity": $('#StuffQuantity').val() == "" ? 0 : $('#StuffQuantity').val(),
                "StuffWeight": $('#StuffWeight').val() == "" ? 0 : $('#StuffWeight').val(),
                "CBM": $('#CBM').val() == "" ? 0 : $('#CBM').val(),
                "StuffingReqDtlId": $('#StuffingReqDtlId').val(),
                "Refer": $('#Refer').is(':checked') == true ? 1 : 0,
                "Insured": $('#Insured').is(':checked') == true ? 1 : 0,
                "ReeferHrs": $('#ReeferHrs').val(),
                "ContainerStuffingDtlId": $('#ContainerStuffingDtlId').val(),


            "Palletaisation": $('#Palletaisation').is(':checked') == true ? 1 : 0,
            "WashingOfCargo": $('#WashingOfCargo').is(':checked') == true ? 1 : 0,
            "Weighment": $('#Weighment').is(':checked') == true ? 1 : 0,
            "Reworking": $('#Reworking').is(':checked') == true ? 1 : 0,
            "InternalShifting": $('#InternalShifting').is(':checked') == true ? 1 : 0,
            "LiftOnEmpty": $('#LiftOnEmpty').is(':checked') == true ? 1 : 0,
            "LiftOffEmpty": $('#LiftOffEmpty').is(':checked') == true ? 1 : 0,
            "RMSValue": $('#RMSValue').val(),
            "GodownId": $('#GodownId').val(),
            "ContStuffingDate": $('#ContStuffingDate').val(),
            "EquipmentSealType": $('#EquipmentSealType').val(),
            "EquipmentStatus": $('#EquipmentStatus').val(),
            "EquipmentQUC": $('#EquipmentQUC').val()

            }

            ArrayOfContainerStuff.push(ContainerStuffingDtl);

            var ContainerDtl = {
                "ContainerNo": $('#ContainerNo').val(),
                "CFSCode": $('#CFSCode').val(),
                "ShippingBillNo": $('#ShippingBillNo').val(),
                "ShippingBillDate": $('#ShippingDate').val(),
                "Size": $('#Size').val(),
                "Fob": $('#Fob').val(),
                "StuffingReqId": $('#StuffingReqId').val(),
                "StuffWeight": $('#StuffWeight').val(),
                "Refer": $('#Refer').is(':checked') == true ? 1 : 0,
                "Insured": $('#Insured').is(':checked') == true ? 1 : 0,
                "SQM": $('#SQM').val(),
                "CBM": $('#CBM').val(),
                "spacetype": $('#spacetype').val()
            }
            ArrayOfContainer.push(ContainerDtl);
            $.each(ArrayOfContainerStuff, function (i, item) {
                //debugger;
                if (item.ContainerNo == $('#ContainerNo').val()) {
                    item.ShippingSeal = $('#ShippingSeal').val();
                    item.CustomSeal = $('#CustomSeal').val();
                    item.EquipmentQUC = $('#EquipmentQUC').val();
                    item.EquipmentStatus = $('#EquipmentStatus').val();
                    item.EquipmentSealType = $('#EquipmentSealType').val();
                    item.ContStuffingDate = $('#ContStuffingDate').val() == "" ? $('#StuffingDate').val() : $('#ContStuffingDate').val();
                }
            });
            GenerateContainerStuffTable();
            ResetConatinerStuffDet();
            $('#BtnAddContainerStuff').prop("disabled", true);
            //AddStatus = 1;
        }

        else {
            $('#DivContainerStuffingTblErrMsg').html('Please Select A Container No In Order To Add Details');

        }

    }


    function ResetConatinerStuffDet() {
        //debugger;

        //var POD = $('#POD').val();
        var POD = $('#POD').val();
        var PODId = $('#PODId').val();
        $('#DivContainerStuffingDetails').find('input:text,textarea').val('');
        $('#DivAddContainerStuffing #Size').val('');
        $('#FCL').prop("checked", false);
        $('#LCL').prop("checked", false);
        $('#DivContainerStuffingDetails #Insured').prop("checked", false);
        $('#DivContainerStuffingDetails #Refer').prop("checked", false);
        $('#DivContainerNo').find('input:text').val('');
        $('#DivContainerSize').find('input:text').val('');
        $('#DivShippingLine').find('input:text').val('');
        $('#DivShippingSeal').find('input:text').val('');
        $('#SearchContainerNo').css("display", "none");
        $('#TblShippingIns>tbody').html('');
        $('#TblShippingGen>tbody').html('');
        $('#POD,#PODName').val(POD);
        $('#PODId').val(PODId);
        $('#ContStuffingDate').val('');
        $('#DivContainerStuffingDetails #Palletaisation').prop("checked", false);
        $('#DivContainerStuffingDetails #WashingOfCargo').prop("checked", false);
        $('#DivContainerStuffingDetails #Weighment').prop("checked", false);
        $('#DivContainerStuffingDetails #Reworking').prop("checked", false);
        $('#DivContainerStuffingDetails #InternalShifting').prop("checked", false);
        $('#DivContainerStuffingDetails #LiftOnEmpty').prop("checked", false);
        $('#DivContainerStuffingDetails #LiftOffEmpty').prop("checked", false);

        //$('#POD').val('');
        $('#CBM').val(0);
        $('#RMSValue').val(1);
        //$('#ContPOL').val(0);
       // $('#Remarks').val('');
    }


    function GenerateContainerStuffTable() {
        //debugger;
        $('#TblContainerStuffing').hide();
        var Html = '';
        ArrayOfContainer=[];
        if (ArrayOfContainerStuff.length != 0) {
            $.each(ArrayOfContainerStuff, function (i, item) {
                //debugger;
                Html += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + item.ContainerNo + '</td><td>' + item.ShippingBillNo + '</td><td>' + item.ShippingDate + '</td><td>' + item.Exporter + '</td><td>' + item.StuffQuantity + '</td><td>' + item.StuffWeight + '</td><td class="text-center"><a href="#" onclick="EditContainerStuff(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td><td class="text-center"><a href="#" onclick="ViewContainerStuff(' + i + ')"><i class="fa fa-search-plus Edit" aria-hidden="true"></i></a></td></tr>';
                //if(ArrayOfContainer.length !=0){
                    var ContainerDtl = {
                        "ContainerNo": item.ContainerNo,
                        "CFSCode": item.CFSCode,
                        "Size": item.Size,
                        "Fob": item.Fob,
                        "StuffingReqId": $('#StuffingReqId').val(),
                        "StuffWeight": item.StuffWeight,
                        "Insured": item.Insured,
                        "Refer": item.Refer
                    };
                    ArrayOfContainer.push(ContainerDtl);
               //}
            });


            $('#TblContainerStuffing>tbody').html(Html);
            $('#TblContainerStuffing').show();
        }
    }
    //var EditStatus = 0;
    function EditContainerStuff(Index) {
        debugger;
        //console.log(ArrayOfContainerStuff);
        if ($('#BtnAddContainerStuff').prop("disabled") == true) {

            $('#DivContainerStuffingTblErrMsg').html('');
            $('#SearchContainerNo').css("display", "block");
            $('#BtnAddContainerStuff').prop("disabled", false);
            $('#ContainerNo').val(ArrayOfContainerStuff[Index].ContainerNo);
            $('#CFSCode').val(ArrayOfContainerStuff[Index].CFSCode);
            $('#Size').val(ArrayOfContainerStuff[Index].Size);
            $('#ShippingLineId').val(ArrayOfContainerStuff[Index].ShippingLineId);
            $('#ShippingLine').val(ArrayOfContainerStuff[Index].ShippingLine);
            $('#ShippingSeal').val(ArrayOfContainerStuff[Index].ShippingSeal);
            $('#CustomSeal').val(ArrayOfContainerStuff[Index].CustomSeal);
            $('#' + ArrayOfContainerStuff[Index].StuffingType + '').prop("checked", true);
            $('#ShippingBillNo').val(ArrayOfContainerStuff[Index].ShippingBillNo);
            $('#ShippingDate').val(ArrayOfContainerStuff[Index].ShippingDate);
            $('#CHAId').val(ArrayOfContainerStuff[Index].CHAId);
            $('#ExporterId').val(ArrayOfContainerStuff[Index].ExporterId);
            $('#CHA').val(ArrayOfContainerStuff[Index].CHA);
            $('#Exporter').val(ArrayOfContainerStuff[Index].Exporter);
           
            $('#Consignee').val(ArrayOfContainerStuff[Index].Consignee);
            $('#MarksNo').val(ArrayOfContainerStuff[Index].MarksNo);
            $('#Fob').val(ArrayOfContainerStuff[Index].Fob);
            $('#StuffQuantity').val(ArrayOfContainerStuff[Index].StuffQuantity);
            $('#StuffWeight').val(ArrayOfContainerStuff[Index].StuffWeight);
            $('#StuffingReqDtlId').val(ArrayOfContainerStuff[Index].StuffingReqDtlId);
            $('#SQM').val(ArrayOfContainerStuff[Index].SQM);
            $('#CBM').val(ArrayOfContainerStuff[Index].CBM);
        
            $('#RMSValue').val(ArrayOfContainerStuff[Index].RMSValue);
            $('#GodownId').val(ArrayOfContainerStuff[Index].GodownId);
            $('#ContStuffingDate').val(ArrayOfContainerStuff[Index].ContStuffingDate);
            $('#EquipmentSealType').val(ArrayOfContainerStuff[Index].EquipmentSealType);
            $('#EquipmentStatus').val(ArrayOfContainerStuff[Index].EquipmentStatus);
            $('#EquipmentQUC').val(ArrayOfContainerStuff[Index].EquipmentQUC);
            ArrayOfContainerStuff[Index].Insured == 1 ? $('#Insured').prop("checked", true) : $('#Insured').prop("checked", false);
            ArrayOfContainerStuff[Index].Refer == 1 ? $('#Refer').prop("checked", true) : $('#Refer').prop("checked", false);
            if (ArrayOfContainerStuff[Index].Refer == 1) {
                $("#divRefer").show();
                $("#ReeferHrs").val(ArrayOfContainerStuff[Index].ReeferHrs)
            }

            ArrayOfContainerStuff[Index].Palletaisation == 1 ? $('#Palletaisation').prop("checked", true) : $('#Palletaisation').prop("checked", false);
            ArrayOfContainerStuff[Index].WashingOfCargo == 1 ? $('#WashingOfCargo').prop("checked", true) : $('#WashingOfCargo').prop("checked", false);
            ArrayOfContainerStuff[Index].Weighment == 1 ? $('#Weighment').prop("checked", true) : $('#Weighment').prop("checked", false);
            ArrayOfContainerStuff[Index].Reworking == 1 ? $('#Reworking').prop("checked", true) : $('#Reworking').prop("checked", false);
            ArrayOfContainerStuff[Index].InternalShifting == 1 ? $('#InternalShifting').prop("checked", true) : $('#InternalShifting').prop("checked", false);
            ArrayOfContainerStuff[Index].LiftOnEmpty == 1 ? $('#LiftOnEmpty').prop("checked", true) : $('#LiftOnEmpty').prop("checked", false);
            ArrayOfContainerStuff[Index].LiftOffEmpty == 1 ? $('#LiftOffEmpty').prop("checked", true) : $('#LiftOffEmpty').prop("checked", false);

            $('#ContainerStuffingDtlId').val(ArrayOfContainerStuff[Index].ContainerStuffingDtlId);
            ArrayOfContainerStuff.splice(Index, 1);
            ArrayOfContainer.splice(Index, 1);
            GenerateContainerStuffTable();
            $('#ShippingLine').focus();
            //EditStatus = 1;
        }
        else {
            $('#DivContainerStuffingTblErrMsg').html('Please Add The Above Records');
        }

    }



    function ViewContainerStuff(Index) {
        //debugger;
        if ($('#BtnAddContainerStuff').prop("disabled") == true)
        {

            $('#DivContainerStuffingTblErrMsg').html('');
            $('#BtnAddContainerStuff').prop("disabled", true);
            $('#SearchContainerNo').css("display", "none");
            $('#ContainerNo').val(ArrayOfContainerStuff[Index].ContainerNo);
            $('#CFSCode').val(ArrayOfContainerStuff[Index].CFSCode);
            $('#Size').val(ArrayOfContainerStuff[Index].Size);
            $('#ShippingLineId').val(ArrayOfContainerStuff[Index].ShippingLineId);
            $('#ShippingLine').val(ArrayOfContainerStuff[Index].ShippingLine);
            $('#ShippingSeal').val(ArrayOfContainerStuff[Index].ShippingSeal);
            $('#CustomSeal').val(ArrayOfContainerStuff[Index].CustomSeal);
            $('#' + ArrayOfContainerStuff[Index].StuffingType + '').prop("checked", true);
            $('#ShippingBillNo').val(ArrayOfContainerStuff[Index].ShippingBillNo);
            $('#ShippingDate').val(ArrayOfContainerStuff[Index].ShippingDate);
            $('#CHAId').val(ArrayOfContainerStuff[Index].CHAId);
            $('#ExporterId').val(ArrayOfContainerStuff[Index].ExporterId);
            $('#CHA').val(ArrayOfContainerStuff[Index].CHA);
            $('#Exporter').val(ArrayOfContainerStuff[Index].Exporter);
           
            $('#Consignee').val(ArrayOfContainerStuff[Index].Consignee);
            $('#MarksNo').val(ArrayOfContainerStuff[Index].MarksNo);
            $('#Fob').val(ArrayOfContainerStuff[Index].Fob);
            $('#StuffQuantity').val(ArrayOfContainerStuff[Index].StuffQuantity);
            $('#StuffWeight').val(ArrayOfContainerStuff[Index].StuffWeight);
            $('#StuffingReqDtlId').val(ArrayOfContainerStuff[Index].StuffingReqDtlId);
            $('#SQM').val(ArrayOfContainerStuff[Index].SQM);
            $('#CBM').val(ArrayOfContainerStuff[Index].CBM);
            $('#RMSValue').val(ArrayOfContainerStuff[Index].RMSValue);
            $('#ContStuffingDate').val(ArrayOfContainerStuff[Index].ContStuffingDate);
          
            $('#EquipmentSealType').val(ArrayOfContainerStuff[Index].EquipmentSealType);
            $('#EquipmentStatus').val(ArrayOfContainerStuff[Index].EquipmentStatus);
            $('#EquipmentQUC').val(ArrayOfContainerStuff[Index].EquipmentQUC);
            ArrayOfContainerStuff[Index].Insured == 1 ? $('#Insured').prop("checked", true) : $('#Insured').prop("checked", false);
            ArrayOfContainerStuff[Index].Refer == 1 ? $('#Refer').prop("checked", true) : $('#Refer').prop("checked", false);
            if (ArrayOfContainerStuff[Index].Refer == 1) {
                $("#divRefer").show();
                $("#ReeferHrs").val(ArrayOfContainerStuff[Index].ReeferHrs)

            }
            ArrayOfContainerStuff[Index].Palletaisation == 1 ? $('#Palletaisation').prop("checked", true) : $('#Palletaisation').prop("checked", false);
            ArrayOfContainerStuff[Index].WashingOfCargo == 1 ? $('#WashingOfCargo').prop("checked", true) : $('#WashingOfCargo').prop("checked", false);
            ArrayOfContainerStuff[Index].Weighment == 1 ? $('#Weighment').prop("checked", true) : $('#Weighment').prop("checked", false);
            ArrayOfContainerStuff[Index].Reworking == 1 ? $('#Reworking').prop("checked", true) : $('#Reworking').prop("checked", false);
            ArrayOfContainerStuff[Index].InternalShifting == 1 ? $('#InternalShifting').prop("checked", true) : $('#InternalShifting').prop("checked", false);
            ArrayOfContainerStuff[Index].LiftOnEmpty == 1 ? $('#LiftOnEmpty').prop("checked", true) : $('#LiftOnEmpty').prop("checked", false);
            ArrayOfContainerStuff[Index].LiftOffEmpty == 1 ? $('#LiftOffEmpty').prop("checked", true) : $('#LiftOffEmpty').prop("checked", false);

        }
        else{
            $('#DivContainerStuffingTblErrMsg').html('Please Add The Above Records');
        }

    }

    $('#BtnSaveContainerStuff').on("click", function () {
        //debugger;
        $("#GENSPPartyCode").removeAttr('required');
        
        $('#TransportMode').val(0);
        $('#DivContainerStuffingTblErrMsg').html('');
        if ($('#POD').val() == '') {
            $('[data-valmsg-for="POD"]').html('<span>Select POD</span>');
            return false;
        }
        else if ($('#StuffingDate').val() == '') {
            $('[data-valmsg-for="StuffingDate"]').html('<span>Fill Out This Field</span>');
            return false;
        }

        else if ($('#ContainerNo').val() == "" && $('#TblContainerStuffing >tbody').html() != "") {
            if (ArrayOfContainerStuff.length != 0) {
                $('#StuffingXML').val(JSON.stringify(ArrayOfContainerStuff));
            }
        }
        else if ($('#ContainerNo').val() != "" && $('#BtnAddContainerStuff').prop("disabled") == true) {
            if (ArrayOfContainerStuff.length != 0) {
                $('#StuffingXML').val(JSON.stringify(ArrayOfContainerStuff));
            }
        }
        else {
            $('#DivContainerStuffingTblErrMsg').html('Please Add The Above Records');
            return false;
        }

        //if ($('#CustodianCode').val() == "" || $('#CustodianCode').val() == null) {
        //    alert('Please Fill Up Final Destination location');
        //    return false;
        //}

        $('#ContVia').val($('#Via').val());

    });

    function ContainerStuffingOnSuccess(data) {
        if (data.Status == 1) {

            $('#DivContainerStuffingMsg').html(data.Message);
            $('#BtnSaveContainerStuff').prop("disabled", true);
            $('#BtnCIMSF').removeAttr('disabled');
            //setTimeout(ResetAllFields, TimeInSeconds);
            //LoadContainerStuffing();
        }
        else {
            $('#DivContainerStuffingErrMsg').html(data.Message);
        }
    }

    function ContainerStuffingOnFailure() { }
    //function LoadContainerStuffing() {
    //    $('#DivBody').load( '/Export/DSR_CWCExport/CreateContainerStuffing');
    //}


    $(document).ready(function () {
        $("#divRefer").hide();

        $('#Refer').on("click", function () {
            if ($('#Refer').is(':checked') == true) {
                $("#divRefer").show();
                $("#ReeferHrs").val(0)
            } else {
                $("#divRefer").hide();
                $("#ReeferHrs").val('')
            }
        });
    });


</script>

@{
    AjaxOptions options = new AjaxOptions();
    options.Confirm = "Are You Sure You Want To Save?";
    options.OnSuccess = "ContainerStuffingOnSuccess";
    options.OnFailure = "ContainerStuffingOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}

<div class="container-fluid">
    <div style="width:90%;margin-left:auto;margin-right:auto;">
        <div class="row clearfix">
            @using (Ajax.BeginForm("AddEditAmendmentContainerStuffing", "DSR_CWCExport", options))
            {
                @Html.AntiForgeryToken()

                <div class="panel with-nav-tabs panel-primary cwc_panel">
                    <div class="panel-heading cwc_panel_heading">
                        <ul class="nav nav-tabs" id="DivTabs">
                            <li><a href="#DivContainerStuffing" data-toggle="tab">Amendment Container /CBT Stuffing</a></li>

                        </ul>
                    </div>



                    <div class="panel-body">
                        <div class="tab-content">
                            <div class="tab-pane fade in active" id="DivContainerStuffing">
                                <div id="DivAddContainerStuffing">

                                    @Html.HiddenFor(m => m.StuffingXML)
                                    @Html.HiddenFor(m => m.StuffingReqId)
                                    @Html.Hidden("StuffingReqDtlId")                                   
                                    @Html.HiddenFor(m => m.TransportMode)                                   
                                    @Html.HiddenFor(m => m.ContVia)
                                    @Html.HiddenFor(m => m.SQM)
                                    @Html.Hidden("ContainerStuffingDtlId")
                                    @Html.HiddenFor(m => m.spacetype)
                                    @Html.Hidden("GodownId")

                                    <div class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Stuffing No:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                <span class="ReQSimbol">*</span>
                                                @Html.HiddenFor(m => m.ContainerStuffingId)
                                                @Html.TextBoxFor(m => m.StuffingNo, new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('DivModalStuffingNo');" })
                                                <span class="search" id="SearchStuffingNo"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#DivModalStuffingNo"></i></span>
                                                @Html.ValidationMessageFor(m => m.StuffingNo, "", new { @class = "Error_Msg" })
                                            </div>
                                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                <label>Stuffing Date:</label>
                                            </div>
                                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                                @Html.TextBoxFor(m => m.StuffingDate, new { @class = "form-control input-sm", @readonly = true })
                                                @Html.ValidationMessageFor(m => m.StuffingDate, "", new { @class = "Error_Msg" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Request No:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                <span class="ReQSimbol">*</span>
                                                @Html.TextBoxFor(m => m.StuffingReqNo, new { @class = "form-control input-sm", @readonly = true })                                               
                                                @Html.ValidationMessageFor(m => m.StuffingReqNo, "", new { @class = "Error_Msg" })
                                            </div>
                                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                <label>Request Date:</label>
                                            </div>
                                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                                @Html.TextBoxFor(m => m.RequestDate, new { @class = "form-control input-sm", @readonly = true })
                                                @Html.ValidationMessageFor(m => m.RequestDate, "", new { @class = "Error_Msg" })
                                            </div>
                                        </div>
                                    </div>
                                   
                                    <div id="DivContainerNo" class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Container /CBT No:</label>
                                            </div>
                                            <div class="col-md-2-5">

                                                @Html.TextBox("ContainerNo", "", new { @class = "form-control input-sm", @readonly = true })
                                              
                                                @Html.ValidationMessage("ContainerNo", "", new { @class = "Error_Msg" })
                                            </div>
                                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                <label>ICD Code:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                @Html.TextBox("CFSCode", "", new
                                           {
                                               @class = "form-control input-sm",
                                               @readonly = true@*, maxlength = "11", @onkeypress = "return AllowOnlyDecimal()"*@ })
                                                @Html.ValidationMessage("CFSCode", new { @class = "Error_Msg" })
                                            </div>
                                        </div>
                                    </div>
                                    <div id="DivContainerSize" class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Container /CBT Size:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                <span class="ReQSimbol">*</span>
                                                @Html.DropDownList("Size", new List<SelectListItem>
                                        {
                                            new SelectListItem { Text="20",Value="20"},
                                            new SelectListItem { Text="40",Value="40"},

                                        }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                                @Html.ValidationMessage("Size", new { @class = "Error_Msg" })
                                            </div>
                                            <div class="col-md-1 padding_rt">
                                                <div class="boolean-container">
                                                    @Html.RadioButton("StuffingType", "FCL", new { @class = "", @id = "FCL" })
                                                    <label for="FCL"><i class="circle"></i><span>FCL</span></label>
                                                </div>
                                            </div>
                                            <div class="col-md-1 padding_rt">
                                                <div class="boolean-container">
                                                    @Html.RadioButton("StuffingType", "LCL", new { @class = "", @id = "LCL" })
                                                    <label for="LCL"><i class="circle"></i><span>LCL</span></label>
                                                </div>
                                            </div>
                                            <div class="col-md-offset-0-5 col-md-3" style="display:none">
                                                <div class="boolean-container">
                                                    @Html.CheckBoxFor(m => m.DirectStuffing, new { @id = "chkDS" })
                                                    <label for="chkDS"><i class="square"></i><span>Direct Stuffing</span></label>
                                                </div>
                                            </div>
                                            <div class="col-md-offset-2 col-md-1-5 col_cus_5">
                                                <label>POD:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                <span class="ReQSimbol">*</span>
                                                @Html.HiddenFor(m => m.PODId)
                                                @Html.HiddenFor(m => m.POD)
                                                @Html.TextBox("PODName", "", new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ModalTrader','POD');" })
                                                <span class="search" id="ModalPODSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ModalTraderSearch('POD')" data-target="#ModalTrader"></i></span>
                                                @Html.ValidationMessageFor(m => m.POD, "", new { @class = "Error_Msg" })
                                            </div>
                                        </div>
                                    </div>

                                    <div id="DivContainerSize" class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                           

                                            <div class="col-md-1-5 col-md-offset col_cus_2">
                                                <label>POL:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                <span class="ReQSimbol">*</span>
                                                @Html.HiddenFor(m => m.PolId)
                                                @Html.TextBoxFor(m => m.ContPOL, new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ModalTrader','POL');" })
                                                <span class="search" id="ModalCPOLSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ModalTraderSearch('POL')" data-target="#ModalTrader"></i></span>
                                                @Html.ValidationMessageFor(m => m.ContPOL, "", new { @class = "Error_Msg" })
                                            </div>


                                            <div class="col-md-offset-1 col-md-1 col_cus_2" style="display:none">
                                                <label>Via:</label>
                                            </div>
                                            <div class="col-md-2-5" style="display:none">
                                                @Html.DropDownList("Via", new List<SelectListItem>
                                        {
                                            new SelectListItem { Text="LONI",Value="LONI"},
                                            new SelectListItem { Text="TKD",Value="TKD"},
                                              new SelectListItem { Text="ROAD",Value="ROAD"},

                                        }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                                @Html.ValidationMessage("Via", new { @class = "Error_Msg" })
                                            </div>

                                            <div class="col-md-offset-4 col-md-1-5 col_cus_5">
                                                <label>Container Wise Stuffing Date:</label>
                                            </div>
                                            <div class="col-md-2-5 Date_Img">
                                                @Html.TextBox("ContStuffingDate", "", new { @class = "form-control input-sm", @readonly = true })
                                            </div>

                                        </div>
                                    </div>

                                    <div id="DivShippingLine" class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Shipping Line:</label>
                                            </div>
                                            <div class="col-md-10-5 col_cus_10">
                                                <span class="ReQSimbol">*</span>
                                                @Html.TextBox("ShippingLine", "", new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ModalTrader','SHIP');" })
                                                <span class="search" id="ModalSHPSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ModalTraderSearch('SHIP')" data-target="#ModalTrader"></i></span>
                                                @Html.ValidationMessage("ShippingLine", "", new { @class = "Error_Msg" })
                                                @Html.Hidden("ShippingLineId")
                                            </div>
                                        </div>
                                    </div>
                                    <div id="DivShippingSeal" class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Shipping Seal:</label>
                                            </div>
                                            <div class="col-md-4">
                                                @Html.TextBox("ShippingSeal", "", new
                                           {
                                               @class = "form-control input-sm",
                                               @maxlength = "30" @*, @readonly = true*@ })
                                            </div>
                                            <div class="col-md-1-5 col_cus_offset_0_5 col-md-offset-1 padding_rt">
                                                <label>Custom Seal:</label>
                                            </div>
                                            <div class="col-md-4">
                                                @Html.TextBox("CustomSeal", "", new
                                           {
                                               @class = "form-control input-sm",
                                               @maxlength = "30" @*, maxlength = "11", @onkeypress = "return AllowOnlyDecimal()"*@ })
                                                @Html.ValidationMessage("CustomSeal", new { @class = "Error_Msg" })
                                            </div>
                                        </div>
                                    </div>
                                    <div id="divDestination" class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Final Destination location:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                @*<span class="ReQSimbol">*</span>*@
                                                @Html.HiddenFor(m => m.CustodianId)
                                                @Html.TextBoxFor(m => m.CustodianCode, new { @class = "form-control input_sm", @readonly = true, @onkeydown = "PopupActivate('DestinationModal','');" })
                                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#DestinationModal" onclick="GetFinalDestination()"></i></span>
                                                @Html.ValidationMessageFor(m => m.CustodianCode, "", new { @class = "Error_Msg" })
                                            </div>
                                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                <label>Equipment Seal Type:</label>
                                            </div>
                                            <div class="col-md-2-5 col_cus_2_5">
                                                @*<span class="ReQSimbol">*</span>*@
                                                @Html.DropDownList("EquipmentSealType", new List<SelectListItem>
                                                {
                                                   new SelectListItem { Text="Bottle-Seal",Value="BTSL"},
                                                   new SelectListItem { Text="E-Seal",Value="ESEAL"},
                                                   new SelectListItem { Text="Others",Value="OTH"},
                                                }, new { @class = "form-control input-sm dropdown" })
                                                @Html.ValidationMessage("EquipmentSealType", new { @class = "Error_Msg" })
                                            </div>
                                        </div>
                                    </div>

                                    <div id="divEquipment" class="row Form_Space_top">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Equipment Status:</label>
                                            </div>
                                            <div class="col-md-2-5">
                                                @*<span class="ReQSimbol">*</span>*@
                                                @Html.DropDownList("EquipmentStatus", new List<SelectListItem>
                                                {
                                                   new SelectListItem { Text="Intact",Value="94"},
                                                   new SelectListItem { Text="Damaged",Value="218"}
                                                }, new { @class = "form-control input-sm dropdown" })
                                                @Html.ValidationMessage("EquipmentStatus", new { @class = "Error_Msg" })
                                            </div>
                                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                <label>Equipment QUC:</label>
                                            </div>
                                            <div class="col-md-2-5 col_cus_2_5">
                                                @*<span class="ReQSimbol">*</span>*@
                                                @Html.DropDownList("EquipmentQUC", new List<SelectListItem>
                                                {
                                                    new SelectListItem { Text="Package",Value="PKG"},
                                                    new SelectListItem { Text="Kilogram",Value="KGS"},
                                                }, new { @class = "form-control input-sm dropdown" })
                                                @Html.ValidationMessage("EquipmentQUC", new { @class = "Error_Msg" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row Form_Space_top Form_Space_bottom">
                                        <div class="form-group Form_Input">
                                            <div class="col-md-1-5 col_cus_2">
                                                <label>Remarks:</label>
                                            </div>
                                            <div class="col-md-10-5 col_cus_10">
                                                @Html.TextAreaFor(m => m.Remarks, new { @style = "width:100%;height:100px" })
                                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg", @maxlength = "500" })
                                            </div>
                                        </div>
                                    </div>
                                    <div id="DivContainerStuffingDetails" class="Head_h5">

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                                    <label>Shipping Bill No:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @Html.TextBox("ShippingBillNo", "", new { @class = "form-control input-sm", @readonly = true })
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                    <label>Shipping Bill Date:</label>
                                                </div>
                                                <div class="col-md-2-5 col_cus_2_5">
                                                    @Html.TextBox("ShippingDate", "", new { @class = "form-control input-sm", @readonly = true })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>CHA:</label>
                                                </div>
                                                <div class="col-md-10-5 col_cus_10">
                                                    @Html.Hidden("CHAId")
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBox("CHA", "", new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ModalTrader','CHA');" })
                                                    <span class="search" id="ModalCHASearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ModalTraderSearch('CHA')" data-target="#ModalTrader"></i></span>
                                                    @Html.ValidationMessage("CHA", "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Exporter:</label>
                                                </div>
                                                <div class="col-md-10-5 col_cus_10">
                                                    @Html.Hidden("ExporterId")
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBox("Exporter", "", new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ModalTrader','EXP');" })
                                                    <span class="search" id="ModalEXPSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ModalTraderSearch('EXP')" data-target="#ModalTrader"></i></span>
                                                    @Html.ValidationMessage("Exporter", "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Consignee:</label>
                                                </div>
                                                <div class="col-md-10-5 col_cus_10">
                                                    @Html.TextBox("Consignee", "", new
                                               {
                                                   @class = "form-control input-sm",
                                                   @maxlength = "30"  @*, @readonly = true*@ })
                                                </div>
                                            </div>
                                        </div>
                                        
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Marks & No:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBox("MarksNo", "", new
                                               {
                                                   @class = "form-control input-sm"
                                               })
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                    <label>FOB Value:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBox("Fob", "", new
                                               {
                                                   @class = "form-control input-sm",
                                                   @onkeypress = "return AllowOnlyDecimal(event)"
                                               })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Stuffed Qty:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBox("StuffQuantity", "", new
                                               {
                                                   @class = "form-control input-sm",
                                                   @onkeypress = "return AllowOnlyInteger(event)"
                                               })
                                                </div>
                                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                                    <label>Stuffed Wt (Kg):</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.TextBox("StuffWeight", "", new
                                               {
                                                   @class = "form-control input-sm",
                                                   @onkeypress = "return AllowOnlyDecimal(event)"
                                               })

                                                </div>
                                            </div>
                                        </div>

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>CBM:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    @*<span class="ReQSimbol">*</span>*@
                                                    @Html.TextBoxFor(m => m.CBM, new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                                </div>

                                                <div class="col-md-1-5 col_cus_2 col-md-offset-4">
                                                    <label>Insured:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="Insured" />
                                                        <label for="Insured"><i class="square"></i></label>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5 col_cus_2">
                                                    <label>Examination Type:</label>
                                                </div>
                                                <div class="col-md-2-5">
                                                    <span class="ReQSimbol">*</span>
                                                    @Html.DropDownList("RMSValue", new List<SelectListItem>{
                                                 new SelectListItem {Text="Upto 25%",Value="1",Selected=true },
                                                 new SelectListItem {Text="Beyond 25% ",Value="2" },
                                                 new SelectListItem {Text="RMS Non Exim",Value="3" }
                                                }, new { @class = "form-control input-sm dropdown" })
                                                    @Html.ValidationMessage("RMSValue", "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="Refer" />
                                                        <label for="Refer" style="padding: 3px 0;">Reefer : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>
                                                <div id="divRefer">
                                                    <div class="col-md-2">
                                                        <label>Reefer Hrs : </label>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <span class="ReQSimbol">*</span>
                                                        @Html.TextBox("ReeferHrs", "", new { @class = "form-control" })
                                                    </div>
                                                </div>
                                                <div class="col-md-2">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="Palletaisation" />
                                                        <label for="Palletaisation" style="padding: 3px 0;">Palletaisation : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>

                                                <div class="col-md-2-5">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="WashingOfCargo" />
                                                        <label for="WashingOfCargo" style="padding: 3px 0;">Washing Of Container : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>

                                                <div class="col-md-1-5">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="Weighment" />
                                                        <label for="Weighment" style="padding: 3px 0;">Weighment : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row Form_Space_top">
                                            <div class="form-group Form_Input">
                                                <div class="col-md-1-5">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="Reworking" />
                                                        <label for="Reworking" style="padding: 3px 0;">Reworking : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>

                                                <div class="col-md-2-5">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="InternalShifting" />
                                                        <label for="InternalShifting" style="padding: 3px 0;">Internal Shifting of cargo : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>
                                                <div class="col-md-2">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="LiftOnEmpty" />
                                                        <label for="LiftOnEmpty" style="padding: 3px 0;">Lift On Empty : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>

                                                <div class="col-md-2">
                                                    <div class="boolean-container">
                                                        <input type="checkbox" id="LiftOffEmpty" />
                                                        <label for="LiftOffEmpty" style="padding: 3px 0;">Lift Off Empty : <i class="square" style="margin: 0 0 0 4px;"></i></label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="row">
                                            <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-offset-4 col-md-2">
                                                <input type="button" id="BtnAddContainerStuff" class="btn log_Btn_sm" value="Add" onclick="SaveContainerStuffingDtl()" disabled />
                                            </div>
                                            <div class="col-md-2">
                                                <input type="button" class="btn log_Btn_sm" value="Reset" />
                                            </div>

                                        </div>
                                        <div id="DivContainerStuffingTblErrMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                                        <table class="table table-striped table-bordered dataTable" id="TblContainerStuffing" style="width:100%;">
                                            <thead>
                                                <tr>
                                                    <th class="text-center">@Html.DisplayName("SL No")</th>
                                                    <th>@Html.DisplayName("Container /CBT No")</th>
                                                    <th>@Html.DisplayName("Shipping Bill No")</th>
                                                    <th>@Html.DisplayName("Shipping Bill Date")</th>
                                                    <th>@Html.DisplayName("Exporter")</th>
                                                    <th>@Html.DisplayName("Stuffed Qty")</th>
                                                    <th>@Html.DisplayName("Stuffed Wt")</th>
                                                    <th>@Html.DisplayName("Edit")</th>
                                                    <th class="text-center">@Html.DisplayName("View")</th>
                                                </tr>
                                            </thead>
                                            <tbody></tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-2 col-md-2 SignUp_space_bottom">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSaveContainerStuff" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAllFields()" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="BtnCIMSF" class="btn log_Btn_sm" disabled value="CIM SF" onclick="SendSF()" />
                        </div>
                    </div>
                    <div class="logSuccMsg" style="background-color:transparent" id="DivContainerStuffingMsg"></div>
                    <div class="logErrMsg Form_Space_bottom" style="background-color:transparent" id="DivContainerStuffingErrMsg"></div>

                    <div class="modal fade mTabindex" id="DivModalStuffingNo" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" onclick="ModalStuffingNoClose()"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List Of Stuffing No.</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="SearchStuffingNoBox" type="text" tabindex="=401" />
                                    <ul class="navList" id="LstStuffingNo"></ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" onclick="ModalStuffingNoClose()">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade mTabindex" id="ModalTrader" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" onclick="CloseTrader()"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title" id="hShippingLine" style="display:none">List of Shipping Line Name</h4>
                                    <h4 class="modal-title" id="hExporter" style="display:none">List of Exporter Name</h4>
                                    <h4 class="modal-title" id="hCHA" style="display:none">List of CHA Name</h4>
                                    <h4 class="modal-title" id="hPol" style="display:none">List of Port Name</h4>
                                    @*<h4 class="modal-title" id="hPayer" style="display:none">List of Payer Name</h4>*@
                                    <h4 class="modal-title" id="hPort" style="display:none">List of Port Name</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search By Name Or Code" id="Traderbox" type="text" tabindex="401" />
                                    <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchByTraderCode()"></i></span>

                                    <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                                        <thead>
                                            <tr>
                                                <th colspan="8" width="80%">Name</th>
                                                <th colspan="4" width="20%">Code</th>
                                            </tr>
                                        </thead>
                                    </table>
                                    <div id="slim_scrollHdr">
                                        <table class="table dataTable table-bordered table-striped slim_tble" id="tblTrader"></table>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <input type="hidden" id="hdnTraderCode" value="" />
                                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreTrader()" class="btn log_Btn_sm" id="btnLoadMoreTrader" disabled>Load More Data</button>

                                        </div>
                                        <div class="col-md-6">
                                            <button type="button" class="btn log_Btn_sm" onclick="CloseTrader()">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade mTabindex" id="DivModalStuffingReqNo" role="dialog">
                        <div class="modal-dialog">
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List Of Request No.</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="SearchReqNo" type="text" tabindex=200 autofocus />
                                    <ul class="navList" id="LstRequestNo">
                                        @{
                                            if (ViewBag.LstRequestNo != null)
                                            {
                                                var tabvalue = 200;
                                                var tab = 0;
                                                var u = "_";
                                                foreach (var data in ViewBag.LstRequestNo)
                                                {
                                                    <li tabindex="@tabvalue@u@tab" id="@data.StuffingReqId" onkeypress="StuffRequest        ('@data.StuffingReqNo','@data.StuffingReqId','@data.RequestDate')" onclick="StuffRequest('@data.StuffingReqNo','@data.StuffingReqId','@data.RequestDate')">@data.StuffingReqNo</li>
                                                    tab++;

                                                }
                                            }
                                        }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="modal fade mTabindex" id="DestinationModal" role="dialog">
                        <div class="modal-dialog">
                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" onclick="DestinationModalClose()"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List of Final Destination</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="FinalDestinationBox" type="text" tabindex="401" />
                                    <ul class="navList" id="FinalDestinationList"></ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn log_Btn_sm" onclick="DestinationModalClose()">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                                            }
            @Scripts.Render("~/bundles/jqueryval")
            <div class="row">
                <div class="col-md-2">
                    <input type="button" id="btnContainerStuffList" value="Show List" class="btn log_Btn_sm" onclick="GetContainerStuffList()" />
                </div>
                <div class="col-md-offset-6 col-md-2">
                    <input type="text" placeholder="Search by Container Stuffing No" id="SearchCSNo" />
                </div>

                <div class="col-md-2">
                    <input type="button" value="Search" onclick="SearchCSNo()" class="btn log_Btn_sm" />
                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="DivContainerStuffingList"></div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>
    function SelectTrader(TraderId, TraderName) {
        debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if ($('#hdnTraderCode').val() == 'SHIP') {
            $('#ShippingLine').val(TraderName);
            $('#ShippingLineId').val(TraderId);
            $('#ShippingSeal').focus();
        }

        else if ($('#hdnTraderCode').val() == 'EXP') {
            $('#Exporter').val(TraderName);
            $('#ExporterId').val(TraderId);
            $('#Consignee').focus();
        }
        else if ($('#hdnTraderCode').val() == 'CHA') {
            $('#CHA').val(TraderName);
            $('#CHAId').val(TraderId);
            $('#Exporter').focus();
        }

        else if ($('#hdnTraderCode').val() == 'POD') {
            $('#PODName').val(TraderName);
            $('#POD').val(TraderName);
            $('#PODId').val(TraderId);
            //$('#Origin').focus();
            $('#ContPOL').focus();

        }
        else if ($('#hdnTraderCode').val() == 'POL') {
            $('#ContPOL').val(TraderName);
            $('#PolId').val(TraderId);
            $('#ShippingLine').focus();

        }

        $("#ModalTrader").modal("hide");
        $('#Traderbox').val('');
        $('#hdnTraderCode').val('');
        $('#tblTrader').html('');

    }

    function CloseTrader() {
        debugger;
        if ($('#hdnTraderCode').val() == 'SHIP') {
            $('#ShippingSeal').focus();
        }
        else if ($('#hdnTraderCode').val() == 'EXP') {
            $('#Consignee').focus();
        }
        else if ($('#hdnTraderCode').val() == 'CHA') {
            $('#Exporter').focus();
        }

        else if ($('#hdnTraderCode').val() == 'POD') {
            $('#Origin').focus();
        }
        else if ($('#hdnTraderCode').val() == 'POL') {
            $('#ShippingLine').focus();
        }
        $('#Traderbox').val('');
        $("#ModalTrader").modal("hide");
        $('#hdnTraderCode').val('');
        $('#tblTrader').html('');

    }

    function ModalTraderSearch(TFlag) {
        debugger;
        if (TFlag == 'SHIP') {
            $('#hShippingLine').css("display", "");
            $('#hExporter').css("display", "none");
            $('#hCHA').css("display", "none");
            $('#hPort').css("display", "none");
            $('#hPol').css("display", "none");
        }
        else if (TFlag == 'EXP') {
            $('#hShippingLine').css("display", "none");
            $('#hExporter').css("display", "");
            $('#hCHA').css("display", "none");
            $('#hPort').css("display", "none");
            $('#hPol').css("display", "none");
        }
        else if (TFlag == 'CHA') {
            $('#hShippingLine').css("display", "none");
            $('#hExporter').css("display", "none");
            $('#hCHA').css("display", "");
            $('#hPort').css("display", "none");
            $('#hPol').css("display", "none");
        }

        else if (TFlag == 'POD') {
            $('#hShippingLine').css("display", "none");
            $('#hExporter').css("display", "none");
            $('#hCHA').css("display", "none");
            $('#hPort').css("display", "");
            $('#hPol').css("display", "none");
        }
        else if (TFlag == 'POL') {
            $('#hShippingLine').css("display", "none");
            $('#hExporter').css("display", "none");
            $('#hCHA').css("display", "none");
            $('#hPort').css("display", "none");
            $('#hPol').css("display", "");
        }

        LoadTrader(TFlag);
        $('#Traderbox').focus();
        $('#hdnTraderCode').val(TFlag);
    }


    var Page = 0;
    function LoadMoreTrader() {
        debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/LoadTraderList',
            type: 'GET',
            data: { PartyCode: "", TFlag: $('#hdnTraderCode').val(), Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab = 401;
                    $.each(data.Data.lstTrader, function (item, elem) {
                        //debugger;
                        html += '<tr tabindex=' + tab + ' onclick="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)" onkeypress="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.TraderName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.TraderCode + '</td></tr>';
                        tab++;
                    });
                    if (Page == -1)
                        $('#tblTrader').html(html);
                    else
                        $('#tblTrader').append(html);
                    Page++;

                    if (data.Data.State == true)
                        $('#btnLoadMoreTrader').prop('disabled', false);
                    else $('#btnLoadMoreTrader').prop('disabled', true);
                }
            }
        });
    }

    function LoadTrader(TFlag) {
        Page = 0;
        $.ajax({
            url: '/Export/DSR_CWCExport/LoadTraderList',
            type: 'GET',
            data: { PartyCode: "", TFlag: TFlag, Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab = 401;
                    $.each(data.Data.lstTrader, function (item, elem) {
                        //debugger;
                        html += '<tr tabindex=' + tab + ' onclick="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)" onkeypress="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.TraderName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.TraderCode + '</td></tr>';
                        tab++;
                    });
                    $('#tblTrader').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadMoreTrader').prop('disabled', false);
                    else $('#btnLoadMoreTrader').prop('disabled', true);
                }
            }
        });
    }
    function SearchByTraderCode() {
        debugger;
        Page = 0;
        if ($('#Traderbox').val() != '') {
            $.ajax({
                url: '/Export/DSR_CWCExport/SearchByTraderCode',
                type: 'GET',
                data: { PartyCode: $('#Traderbox').val(), TFlag: $('#hdnTraderCode').val(), Page: Page },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        var tab = 401;
                        $.each(data.Data.lstTrader, function (item, elem) {
                            html += '<tr tabindex=' + tab + ' onclick="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)" onkeypress="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.TraderName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.TraderCode + '</td></tr>';
                            tab++;
                        });
                        $('#tblTrader').html('');
                        $('#tblTrader').html(html);
                        $('#btnLoadMoreTrader').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tblTrader').html('');
                        Page = -1;
                        $('#btnLoadMoreTrader').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadTrader($('#hdnTraderCode').val());
    }

    $('#Traderbox').keyup(function () {
        SearchByTraderCode();
    });


    $('#ModalTrader').on('shown.bs.modal', function () {
        $('#Traderbox').focus();
    });

    $('#DestinationModal').on('shown.bs.modal', function () {
        $('#FinalDestinationBox').focus();
    });

    $('.mTabindex').keydown(function (e) {
        //debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });

    function GetFinalDestination() {
        $('#FinalDestinationBox').val('');
        $.ajax({
            url: '/Export/DSR_CWCExport/GetFinalDestination',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                debugger;
                if (data != '') {
                    $('#FinalDestinationList').html('');
                    var html = '';
                    var tab = 401;
                    var jsondata = JSON.parse(JSON.stringify(data));
                    $.each(jsondata, function (i, item) {
                        html += '<li tabindex=' + tab + '_' + i + ' onkeypress="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode + '&quot;)" onclick="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode  + '&quot;)">' + item.CustodianCode + '</li>';
                    });

                    $('#FinalDestinationList').html(html);

                }
            }
        });
    }

    function debounce(func, wait, immediate) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var later = function () {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    };

    document.getElementById('FinalDestinationBox').addEventListener('keyup', debounce(function () {
        debugger;
        SearchFinalDestination();
    }, 1200));




    function SearchFinalDestination() {
        var CustodianName = $('#FinalDestinationBox').val();
        $.ajax({
            url: '/Export/DSR_CWCExport/GetFinalDestination',
            type: 'GET',
            data: { CustodianName: CustodianName },
            dataType: 'JSON',
            success: function (data) {
                debugger;
                if (data != '') {
                    $('#FinalDestinationList').html('');
                    var html = '';
                    var tab = 401;
                    var jsondata = JSON.parse(JSON.stringify(data));
                    $.each(jsondata, function (i, item) {
                        html += '<li tabindex=' + tab + '_' + i + ' onkeypress="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode + '&quot;)" onclick="SelectFinalDestination(' + item.CustodianId + ',&quot;' + item.CustodianCode + '&quot;)">' + item.CustodianCode + '</li>';
                    });
                    $('#FinalDestinationList').html(html);
                }
            }
        });
    }


    function SelectFinalDestination(CustodianId, CustodianCode) {
        $('#CustodianId').val(CustodianId);
        $('#CustodianCode').val(CustodianCode);
        $('#DestinationModal').modal("hide");
    }
    function DestinationModalClose() {
        $('#DestinationModal').modal("hide");
        $('#DestinationModal .navList > li').show();
        $('#DestinationBox').val('');
    }
    function PopupActivate(Id, TFlag) {
        debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {

            $('#' + Id).modal('show');


            if (Id == "ModalTrader") {
                ModalTraderSearch(TFlag);
                $('#ContainerNobox').focus();
            }
            
            if (Id == "DivModalStuffingNo") {
                LoadStuffingForAmendment();
                $('#SearchStuffingNoBox').focus();
            }
            if (Id = "DestinationModal") {
                GetFinalDestination();
                $('#FinalDestinationBox').focus();
            }

        }
    }

    $('#DivModalStuffingNo').on('shown.bs.modal', function () {
        $('#SearchStuffingNoBox').focus();
    });

    function ModalStuffingNoClose() {
        $('#DivModalStuffingNo').modal("hide");
        $('#StuffingNo').focus();
        $('#SearchStuffingNoBox').val('');
    }


    function GetContainerStuffList() {
        $('#SearchCSNo').val('');
        $('#DivContainerStuffingList').load('/Export/DSR_CWCExport/AmendmentContainerStuffingList');
    }
    function SearchCSNo() {
        var SearchValue = $('#SearchCSNo').val().trim();
        $('#DivContainerStuffingList').load('/Export/DSR_CWCExport/AmendmentContainerStuffingList?SearchValue=' + SearchValue);
    }

    $('#SearchStuffingNo').on("click", function () {
        LoadStuffingForAmendment();
    });
    function LoadStuffingForAmendment() {
        Page = 0;
        $('#LstStuffingNo').html('');
        $.ajax({
            url: '/Export/DSR_CWCExport/GetStuffingNoForAmendment',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                    var html = '';
                    var tab = 401;
                    var jsondata = JSON.parse(JSON.stringify(data.Data));
                    if (jsondata.length > 0) {
                        $.each(jsondata, function (i, item) {
                            html += '<li tabindex=' + tab + '_' + i + ' onkeypress="SelectContainerStuffing(' + item.ContainerStuffingId + ',&quot;' + item.StuffingNo + '&quot;,&quot;' + item.RequestDate + '&quot;)" onclick="SelectContainerStuffing(' + item.ContainerStuffingId + ',&quot;' + item.StuffingNo + '&quot;,&quot;' + item.StuffingDate + '&quot;)">' + item.StuffingNo + '</li>';
                        });
                    }
                    $('#LstStuffingNo').html(html);
                }

            }
        });
    }

    $('#SearchStuffingNoBox').keyup(function () {
        //debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#DivModalStuffingNo .navList > li').show();
        }
        else {
            $('#DivModalStuffingNo .navList > li').each(function () {
                //debugger;
                var Text = $(this).text().toLowerCase();
                (Text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    function SelectContainerStuffing(ContainerStuffingId, StuffingNo, StuffingDate) {
        debugger;
        $('#StuffingNo').val(StuffingNo);
        $('#ContainerStuffingId').val(ContainerStuffingId);
        $('#StuffingDate').val(StuffingDate);
        $('#DivModalStuffingNo').modal("hide");
        GetStuffingDetails(ContainerStuffingId);
        $('#BtnAddContainerStuff').prop("disabled", true);
        $('#StuffingDate').focus();
    }

    var cgtype = "Haz";
    function GetStuffingDetails(ContainerStuffingId) {
        ArrayOfContainerStuff = [];
        ArrayOfContainer = [];
        $.ajax({
            url: '/Export/DSR_CWCExport/GetStuffingDetailsForAmendment',
            type: 'GET',
            dataType: 'JSON',
            data: { ContainerStuffingId: ContainerStuffingId },
            success: function (data) {
                debugger;
                if (data != '' && data != null) {

                    $('#StuffingReqId').val(data.StuffingReqId);
                    $('#StuffingReqNo').val(data.StuffingReqNo);
                    $('#RequestDate').val(data.RequestDate);
                    $('#PODId').val(data.PODId);
                    $('#POD').val(data.POD);
                    $('#DirectStuffing').val(data.DirectStuffing);
                    $('#TransportMode').val(data.TransportMode);
                    $('#ContOrigin').val(data.ContOrigin);
                    $('#ContVia').val(data.ContVia);
                    $('#ContPOL').val(data.ContPOL);
                    $('#PolId').val(data.PolId);                 
                    $('#CustodianCode').val(data.CustodianCode);
                    $('#CustodianId').val(data.CustodianId);
                    $('#Remarks').val(data.Remarks);
                    ArrayOfContainerStuff = data.LstppgStuffingDtl;

                    GenerateContainerStuffTable();
                    $('#TblContainerStuffing').show();
                }
            }
        });
    }

    
    function SendSF() {
        debugger;
        var ContainerStuffingId = $('#ContainerStuffingId').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: "/Export/DSR_CWCExport/SendSF",
            type: "POST",
            dataType: "JSON",
            data: { ContainerStuffingId: ContainerStuffingId },
            headers: { "__RequestVerificationToken": Token },
            async: false,
            success: function (data) {
                if (data.Status == 1) {
                    $('#BtnCIMSF').prop('disabled', true);
                    alert(data.Message);
                }
                else {
                    alert(data.Message);
                }
            }
        });
    }
</script>




