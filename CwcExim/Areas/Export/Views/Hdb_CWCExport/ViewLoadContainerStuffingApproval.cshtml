@model CwcExim.Areas.Export.Models.PortOfCall

<div class="container-fluid">
    <div class="row">
        <div class="col-md-11 col-md-offset-0-5">
            <div class="container-fluid">
                <div class="Head_h4">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Loaded Container Stuffing Approval</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Approval Date:</label>
                            </div>
                            <div class="col-md-2-5 Date_Img">
                                @Html.TextBoxFor(m => m.ApprovalDate, new { @class = "form-control input_sm", @readonly = true })
                                @Html.HiddenFor(m => m.StuffingReqId)
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Stuffing No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.StuffingReqNo, new { @readonly = true })
                            </div>


                            <div class="col-md-1-5 col-md-offset-4">
                                <label>Stuffing Date:</label>
                            </div>
                            <div class="col-md-2-5 Date_Img">
                                @Html.TextBoxFor(m => m.StuffingReqDate, new { @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Container No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ContainerNo, new { @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset">
                                <label>CFS Code:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CFSCode, new { @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset">
                                <label>Size:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Size, new { @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Exporter:</label>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextBoxFor(m => m.ExporterName, new { @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Shipping Line:</label>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextBoxFor(m => m.ShippingLineName, new { @readonly = true })
                            </div>
                        </div>
                    </div>



                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Port of Call Name:</label>
                            </div>
                            <div class="col-md-4-5">

                                @Html.TextBoxFor(m => m.PortOfCallName, new { @readonly = true })
                            </div>

                            <div class="col-md-1-5 col-md-offset-2">
                                <label>Port of Call Coded:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.PortOfCallCode, new { @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Next Port of Call Name:</label>
                            </div>
                            <div class="col-md-4-5">
                                @Html.TextBoxFor(m => m.NextPortOfCallName, new { @readonly = true })
                            </div>

                            <div class="col-md-1-5 col-md-offset-2">
                                <label>Next Port of Call Coded:</label>
                            </div>

                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.NextPortOfCallCode, new { @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                <label>Mode of Transport:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ModeOfTransportName, new { @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row SignUp_space_bottom SignUp_space_top">
                        <div class="stoke"></div>
                    </div>

                    <div class="row SignUp_space_bottom2">

                        <div class="col-md-offset-4 col-md-2">
                            <input type="button" value="Back" class="btn log_Btn_sm" onclick="ResetField()">
                        </div>
                        <div class="col-md-2-5">
                            <input type="button" id="btnSendCIMASR" class="btn log_Btn_sm" value="SEND CIM ASR" onclick="sendCIMASR()" />
                        </div>
                    </div>

                    <div class="row SignUp_space_bottom SignUp_space_top">
                        <div class="stoke"></div>
                    </div>

                    <div><br /></div>



                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")

<script>

    function ResetField() {
        $('#DivBody').load('/Export/Hdb_CWCExport/CreateLoadContainerStuffingApproval');
    }


    function sendCIMASR() {
        debugger;


        var ContainerStuffingId = $('#StuffingReqId').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: "/Export/Hdb_CWCExport/LoadedContainerSendASR",
            type: "POST",
            dataType: "JSON",
            data: { ContainerStuffingId: ContainerStuffingId },
            headers: { "__RequestVerificationToken": Token },
            async: false,
            success: function (data) {
                if (data.Status == 1) {
                    $('#btnSendCIMASR').prop('disabled', true);
                    alert(data.Message);
                }
                else {
                    alert(data.Message);
                }
            }
        });
    }
</script>

