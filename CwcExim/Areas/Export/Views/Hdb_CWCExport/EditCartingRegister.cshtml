@model CwcExim.Areas.Export.Models.Hdb_CartingRegister
<div id="DivEditCartingRegister" class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            @using (Ajax.BeginForm("AddEditCartingRegister", "Hdb_CWCExport", new AjaxOptions { Confirm = "Are you sure you want to Save?", HttpMethod = "POST", OnSuccess = "RegisterOnSuccess", OnFailure = "RegisterOnFailure" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.CartingRegisterId)
                @Html.HiddenFor(m => m.CartingAppId)
                @Html.HiddenFor(m => m.XMLData)
                @Html.HiddenFor(m => m.ClearLocation)
                <div class="row">
                    <div class="col-md-12">
                        <h4 class="">Carting Register</h4>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                           <label>Carting No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.CartingRegisterNo, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                        <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                           <label>Register Date:</label>
                        </div>
                        <div class="col-md-2-5 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.RegisterDate, new { @class = "form-control input-sm", @readonly = true })
                            @Html.ValidationMessageFor(m => m.RegisterDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Application No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.ApplicationNo, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                        <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                            <label>Application Date:</label>
                        </div>
                        <div class="col-md-2-5 col_cus_2_5">
                            @Html.TextBoxFor(m => m.ApplicationDate, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Carting Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownListFor(m => m.CartingType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="Manual",Value="1"},
                                    new SelectListItem { Text="Mechanical",Value="2"},
                                    new SelectListItem { Text="Mechanical and Manual",Value="3"}
                                }, "----Select----", new { })
                            @Html.ValidationMessageFor(m => m.CartingType)
                        </div>
                        <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                            <label>Commodity Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                                {
                                    new SelectListItem { Text="General",Value="1"},
                                    new SelectListItem { Text="Heavy/Scrape",Value="2"}
                                }, "----Select----", new { })
                            @Html.ValidationMessageFor(m => m.CommodityType)
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.HiddenFor(m => m.CHAId)
                            @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Godown Name:</label>
                        </div>
                        <div class="col-md-4 col_cus_4">
                            @Html.HiddenFor(m => m.GodownId)
                            @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                            <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                            @Html.ValidationMessageFor(m => m.GodownName)
                        </div>
                        @*<div class="col-md-1-5 col-md-offset-2-5 col_cus_offset_2 col_cus_2 padding_rt">
                            <label>Stuffing Request Date:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.RequestDate, "", new { @class = "form-control input-sm", @onblur = "ClearErrMsg(this)", maxlength = "30", @readonly = true, })
                            @Html.ValidationMessageFor(m => m.RequestDate)
                        </div>*@
                    </div>
                </div>
                <div class="row Form_Space_top Form_Space_bottom">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                            @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div id="DivShippingDetails" class="Head_h5">
                    <div class="row">
                        <div class="col-md-12">
                            <h5>Carting Details</h5>
                        </div>
                    </div>
                    @Html.Hidden("CartingAppDtlId")
                    @Html.Hidden("LocationDetails")
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Shipping Bill No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("ShippingBillNo", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt"> 
                                <label>Shipping Bill Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBox("ShippingBillDate", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Exporter:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBox("Exporter", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBox("CargoDescription", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Commodity:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBox("Commodity", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-2-5 col_cus_offset_1_5 col_cus_2 padding_rt">
                                <label>Cargo Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("CargoType", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Marks & No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("MarksAndNo", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>No of Units:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("NoOfUnits", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Weight:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("Weight", "", new { @class = "form-control input-sm", @readonly = true, maxlength = "11" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>CUM:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("CUM", "", new { @class = "form-control input-sm", maxlength = "11", @onkeypress = "return AllowOnlyDecimal(event)" })
                                @Html.ValidationMessage("CUM", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Actual Pkgs received:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("ActualQty", "", new { @class = "form-control input-sm", @maxlength = "9", onkeypress = "return AllowOnlyInteger(event)" })
                                @Html.ValidationMessage("ActualQty", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>Space occupied:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("SQM", "", new { @class = "form-control input-sm", maxlength = "11",min=5, @onkeypress = "return AllowOnlyDecimal(event)" })
                                @Html.ValidationMessage("SQM", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>FOB Value:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBox("FOBValue", "", new { @class = "form-control input-sm", @readonly = true, maxlength = "11" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-2-5 col_cus_offset_1_5 col_cus_2">
                                <label>Actual Weight:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("ActualWeight", "", new { @class = "form-control input-sm", maxlength = "11", @onkeypress = "return AllowOnlyDecimal()" })
                                @Html.ValidationMessage("ActualWeight", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Location:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("Location", "", new { @class = "form-control input-sm", @readonly = true })
                                <span id="LocationSearch" @*style="display:none;"*@ class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#LocationModal"></i></span>
                                @Html.ValidationMessage("Location", new { @class = "Error_Msg" })
                            </div>

                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Storage Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownList("Storage", new List<SelectListItem>
                                {
                                    new SelectListItem { Text="Open",Value="Open"},
                                    new SelectListItem { Text="Covered",Value="Covered"}
                               }, "----Select----", new { @onchange = "return StorageError()" })
                                @Html.ValidationMessage("Storage", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">

                            <div class="col-md-1-5 col_cus_1_5">
                                <label style="word-wrap: break-word;">Consolidator / Forwarder Name:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.Hidden("ForwarderId")
                                @Html.Hidden("ForwarderName", "", new { @class = "form-control input-sm", @readonly = true, @onblur = "ClearErrMsg(this)" })
                                @*@Html.TextBox("ForwarderName", "", new { @class = "form-control input-sm" })*@
                                @*@Html.ValidationMessage("ForwarderName", new { @class = "Error_Msg" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row Form_Space_bottom">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="button" id="BtnAddCartingReg" class="btn log_Btn_sm" value="Add" onclick="SaveRegDtl()" />
                        </div>
                        @*<div class="col-md-2">
                            <input type="button" id="BtnResetCartingReg" class="btn log_Btn_sm" value="Reset" />
                        </div>*@
                    </div>
                    <div id="DivCartingRegTblErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                    <div class="row Form_Space_bottom Form_Space_top">
                        <div class="col-md-12">
                            <table class="table table-striped table-bordered dataTable" id="tblShippingDetails" style="width:100%;">
                                <thead>
                                    <tr>
                                        <th class="text-center" style="width:8%;">@Html.DisplayName("SL No")</th>
                                        <th>@Html.DisplayName("Shipping Bill No")</th>
                                        <th>@Html.DisplayName("Shipping Bill Date")</th>
                                        <th>@Html.DisplayName("Exporter")</th>
                                        <th class="text-center">@Html.DisplayName("Edit")</th>
                                        <th class="text-center">@Html.DisplayName("View")</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                </div>
                <div class="row">
                    <div class="col-md-offset-4 col-md-2">
                        <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSaveCartingReg" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" class="btn log_Btn_sm" value="Cancel" onclick="LoadCartingRegPage()" />
                    </div>
                </div>
                <div id="DivCartingRegMsg" class="logSuccMsg" style="background-color:transparent"></div>
                <div id="DivCartingRegErrMsg" class="logErrMsg Form_Space_bottom" style="background-color:transparent"></div>

            }
        </div>
    </div>
</div>
<div id="GodownModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Godownbox" type="text" />
                <ul class="navList" id="lstGodown">
                    @{
                        if (ViewBag.ListOfGodown != null)
                        {
                            foreach (var item in ViewBag.ListOfGodown)
                            {
                                <li id="@item.Value" onclick="SelectGodown(this)">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="LocationModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown Wise Location</h4>
            </div>
            <div class="modal-body popup_body">
                <div class="row">
                    <div class="form-group Form_Input" id="DivLocationDet">
                        @*@{
                                foreach (var item in Model.lstGdnWiseLctn)
                                {
                                    @Html.Label(item.Row + " " + item.Column, new { @for = item.LocationId })
                                    @Html.CheckBox(@item.LocationId.ToString())
                                }
                            }*@
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var ArrayOfCartingRegDtl = [];
    var LocationDetails = [];
    $(function () {
        $('#BtnAddCartingReg').prop("disabled",true);
        ArrayOfCartingRegDtl= @Html.Raw(Json.Encode(Model.lstRegisterDtl));
        GenerateCartingRegTable();
        GetGodownWiseLocation();
       // LocationDet();
    });
    $('#RegisterDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='RegisterDate']").html('');
        }
    });
    function LoadCartingRegPage(){
        $('#DivBody').load( '/Export/Hdb_CWCExport/CreateCartingRegister');
    }
    function RegisterOnSuccess(data)
    {
        debugger;
        $('#DivCartingRegErrMsg').html('');
        $('#DivCartingRegMsg').html('');
        if(data.Status==2||data.Status==1)
        {
            //$('#DivCartingRegMsg').html(data.Message);           
            LoadCartingRegPage();
            setTimeout(function () { $('#DivCartingRegMsg').html(data.Message); }, 100);
        }
        else
        {
            $('#DivCartingRegErrMsg').html(data.Message);
            //setTimeout(function () { $('#DivCartingRegErrMsg').html(''); }, 5000);
        }
        setTimeout(function () { $('#DivCartingRegMsg').html(''); }, 5000);
    }
    function RegisterOnFailure() {

    }
    $('#BtnSaveCartingReg').on("click", function () {
        debugger;
        if (($('#DivShippingDetails #CUM').val() != "" || $('#SQM').val() != "" || $('#ActualQty').val() != "" || $('#ActualWeight').val()!="") && ($('#DivShippingDetails').find('input:text').prop("disabled") == false)) {
            $('#DivCartingRegErrMsg').html('Please Save The Details Before Submitting');
            return false;
        }
        else
        {
            $('#XMLData').val(JSON.stringify(ArrayOfCartingRegDtl));
        }
    });
    function ResetCartingRegister() {
        var RegisterDate = $('#DivEditCartingRegister #RegisterDate').val();
        $('#DivEditCartingRegister').find('input:text,textarea').val('');
        $('#RegisterDate').val(RegisterDate);
        $('#tblShippingDetails').hide();
        $('#tblShippingDetails >tbody').html('');
        $('#DivCartingRegMsg').html('');
        $('#DivCartingRegErrMsg').html('');
        $('#DivCartingRegTblErrMsg').html('');
        $('#Storage').val('');
    }
    function GenerateCartingRegTable() {
        debugger;
        $('#tblShippingDetails').hide();
        var html = '';
        $.each(ArrayOfCartingRegDtl, function (i, item) {
            debugger;
            html += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + item.ShippingBillNo + '</td><td>' + item.ShippingDate + '</td><td>' + item.Exporter + '</td><td style="text-align:center"><a href="#" onclick="EditCartingReg(' + i + ')"><i class="fa fa-pencil-square Edit" aria-hidden="true"></i></a></td><td style="text-align:center"><a href="#" onclick="ViewCartingReg(' + i + ')"><i class="fa fa-search-plus" aria-hidden="true"></i></a></td></tr>';
        });
        $('#tblShippingDetails>tbody').html(html);
        $('#tblShippingDetails').show();
    }
    function SaveRegDtl() {

        var Validation=true;
        $('#DivCartingRegTblErrMsg').html('');
        $('#DivCartingRegErrMsg').html('');
        $('[data-valmsg-for="CUM"]').html('<span><span>');
        $('[data-valmsg-for="SQM"]').html('<span></span>');
        $(['data-valmsg-for="ActualWeight"']).html('<span></span>');
        $(['data-valmsg-for="ActualQty"']).html('<span></span>');
        $('[data-valmsg-for="Location"]').html('<span></span>');
        $('[data-valmsg-for="Storage"]').html('<span></span>');

        if (!DecimalValidation("CUM") & $('#CUM').val()!="") {
            $('[data-valmsg-for="CUM"]').html('<span>CUM Must Be A Decimal Up To 2 Places And Less Then 99999999.99</span>');
            Validation=false;
        }
        if ($('#ActualQty').val() == "") {
            $('[data-valmsg-for="ActualQty"]').html('<span>Please Enter Actual Quantity Received.</span>');
            Validation = false;
        }
        if (!DecimalValidation("SQM") & $('#SQM').val()!="") {
            $('[data-valmsg-for="SQM"]').html('<span>SQM Must Be A Decimal Up To 2 Places And Less Then 99999999.99</span>');
            Validation=false;
        }
        if ($('#SQM').val() == "" || eval($('#SQM').val()) <eval(5)) {
            $('[data-valmsg-for="SQM"]').html('<span>Minimum Occupied Space Should be 5 sq/m</span>');
            Validation = false;
        }
        if (!DecimalValidationGW("ActualWeight") & $('#ActualWeight')!="") {
            $('[data-valmsg-for="ActualWeight"]').html('<span>Actual Weight Must Be A Decimal Up To 2 Places And Less Then 99999999.99</span>');
            Validation = false;
        }
        if ($('#CartingAppDtlId').val() == "" || $('#Exporter').val() == "")
        {
            Validation = false;
        }
        if ($('#Location').val() == "") {
            $('[data-valmsg-for="Location"]').html('<span>Please Select Godown.</span>');
            Validation = false;
        }
        if ($('#Storage').val() == "" || $('#Storage').val() == "---Select---") {
            $('[data-valmsg-for="Storage"]').html('<span>Please Select Storage Type.</span>');
            Validation = false;
        }
        var LctnDet = $('#DivLocationDet').find('input[type="checkbox"]:checked');
        if (LctnDet != null && LctnDet != undefined) {
            var Det = '';
            $(LctnDet).each(function () {
                if (Det == '')
                    Det += $(this).prop('id');
                else
                    Det += ',' + $(this).prop('id');
            });
            $('#LocationDetails').val(Det);
        }
        if (Validation == true) {
            var RegDtl = {
                "ShippingBillNo": $('#ShippingBillNo').val(),
                "ShippingDate": $('#ShippingBillDate').val(),
                "Exporter": $('#Exporter').val(),
                "CargoDescription": $('#CargoDescription').val(),
                "Commodity": $('#Commodity').val(),
                "CargoType": $('#CargoType').val() == 'HAZ'?1:2,
                "MarksAndNo": $('#MarksAndNo').val(),
                "NoOfUnits": $('#NoOfUnits').val(),
                "Weight": $('#Weight').val(),
                "CUM": $('#CUM').val() == "" ? 0 : $('#CUM').val(),
                "ActualQty": $('#ActualQty').val() == "" ? 0 : $('#ActualQty').val(),
                "ActualWeight":$('#ActualWeight').val() == "" ? 0 : $('#ActualWeight').val(),
                "SQM": $('#SQM').val() == "" ? 0 : $('#SQM').val(),
                "FoBValue": $('#FOBValue').val(),
                "ActualWeight": $('#ActualWeight').val() == "" ? 0 : $('#ActualWeight').val(),
                "CartingAppDtlId": $('#CartingAppDtlId').val(),
                "LocationDetails": $('#LocationDetails').val(),
                "Location": $('#Location').val(),
                "Storage": $('#Storage').val(),
            }
            ArrayOfCartingRegDtl.push(RegDtl);
            ResetRegDtl();
            GenerateCartingRegTable();
            $('#BtnAddCartingReg').prop("disabled",true);
        }
    }
    function EditCartingReg(Index) {
        
        if ($('#DivShippingDetails #Exporter').val() == '' || $('#DivShippingDetails #Exporter').prop("disabled") == true)
        {
            /*If there is any existing data earlier that needs to be cleared and to show search magnifier*/
            $('#LocationSearch').css("display", "block");
            $('#LocationDetails,#LocationDetails').val('');
            $('#DivLocationDet').find('input[type="checkbox"]:checked').prop("checked",false);
            $('#BtnAddCartingReg').prop("disabled",false);
            /**********************************************************************************************/
            $('#DivShippingDetails').find('input').prop("disabled", false);
            $('#ShippingBillNo').val(ArrayOfCartingRegDtl[Index].ShippingBillNo);
            $('#ShippingBillDate').val(ArrayOfCartingRegDtl[Index].ShippingDate);
            $('#Exporter').val(ArrayOfCartingRegDtl[Index].Exporter);
            $('#CargoDescription').val(ArrayOfCartingRegDtl[Index].CargoDescription);
            $('#Commodity').val(ArrayOfCartingRegDtl[Index].CommodityName);
            if (ArrayOfCartingRegDtl[Index].CargoType == 1) {
                $('#CargoType').val('HAZ');
            }
            else {
                $('#CargoType').val('Non-HAZ');
            }
           // $('#CargoType').val(ArrayOfCartingRegDtl[Index].CargoType);
            $('#MarksAndNo').val(ArrayOfCartingRegDtl[Index].MarksAndNo);
            $('#NoOfUnits').val(ArrayOfCartingRegDtl[Index].NoOfUnits);
            $('#Weight').val(ArrayOfCartingRegDtl[Index].Weight);
            $('#FOBValue').val(ArrayOfCartingRegDtl[Index].FoBValue);
            $('#CartingAppDtlId').val(ArrayOfCartingRegDtl[Index].CartingAppDtlId);
            $('#CUM').val(ArrayOfCartingRegDtl[Index].CUM);
            $('#SQM').val(ArrayOfCartingRegDtl[Index].SQM);
            $('#ActualWeight').val(ArrayOfCartingRegDtl[Index].ActualWeight);
            $('#ActualQty').val(ArrayOfCartingRegDtl[Index].ActualQty);
            debugger;
            /*Selecting the Already Occupied area by checkbox*/
            if (ArrayOfCartingRegDtl[Index].LocationDetails != null && ArrayOfCartingRegDtl[Index].LocationDetails != undefined) {
                var split = ArrayOfCartingRegDtl[Index].LocationDetails.split(',');
                $(split).each(function (j,data) {
                   // $('#'+data).prop('disabled', false);
                    $('#'+data).prop('checked', true);
                });
            }
            /***************************************************************/
            $('#LocationDetails').val(ArrayOfCartingRegDtl[Index].LocationDetails);
            $('#Location').val(ArrayOfCartingRegDtl[Index].Location);
            $('#Storage').val(ArrayOfCartingRegDtl[Index].Storage);
            $('#ForwarderName').val(ArrayOfCartingRegDtl[Index].ForwarderName);
            ArrayOfCartingRegDtl.splice(Index, 1);
            GenerateCartingRegTable();

        }
        else {
            $('#DivCartingRegTblErrMsg').html('Please Add The Records');
        }

    }
    function ViewCartingReg(Index) {

        if ($('#DivShippingDetails #Exporter').val() == '' || $('#DivShippingDetails #Exporter').prop("disabled") == true) {
            $('#DivShippingDetails').find('input').prop("disabled", true);
            $('#ShippingBillNo').val(ArrayOfCartingRegDtl[Index].ShippingBillNo);
            $('#ShippingBillDate').val(ArrayOfCartingRegDtl[Index].ShippingDate);
            $('#Exporter').val(ArrayOfCartingRegDtl[Index].Exporter);
            $('#CargoDescription').val(ArrayOfCartingRegDtl[Index].CargoDescription);
            $('#Commodity').val(ArrayOfCartingRegDtl[Index].CommodityName);
            if (ArrayOfCartingRegDtl[Index].CargoType == 1) {
                $('#CargoType').val('HAZ');
            }
            else {
                $('#CargoType').val('Non-HAZ');
            }
           // $('#CargoType').val(ArrayOfCartingRegDtl[Index].CargoType);
            $('#MarksAndNo').val(ArrayOfCartingRegDtl[Index].MarksAndNo);
            $('#NoOfUnits').val(ArrayOfCartingRegDtl[Index].NoOfUnits);
            $('#Weight').val(ArrayOfCartingRegDtl[Index].Weight);
            $('#FOBValue').val(ArrayOfCartingRegDtl[Index].FoBValue);
            $('#CartingAppDtlId').val(ArrayOfCartingRegDtl[Index].CartingAppDtlId);
            $('#CUM').val(ArrayOfCartingRegDtl[Index].CUM);
            $('#SQM').val(ArrayOfCartingRegDtl[Index].SQM);
            $('#ActualWeight').val(ArrayOfCartingRegDtl[Index].ActualWeight);
            $('#ActualQty').val(ArrayOfCartingRegDtl[Index].ActualQty);
            $('#Location').val(ArrayOfCartingRegDtl[Index].Location);
            $('#Storage').val(ArrayOfCartingRegDtl[Index].Storage);
            $('#ForwarderName').val(ArrayOfCartingRegDtl[Index].ForwarderName);
        }
        else {
            $('#DivCartingRegTblErrMsg').html('Please Add The Records');
        }

    }
    function ResetRegDtl() {
        $('#DivShippingDetails').find('input:text').val('');
        $('#Storage').val('');
    }
    function DecimalValidation(Id) {
        debugger
        var State = true;
        // var Id = obj.id;
        var Value = $('#' + Id).val();
        if (!Value.match(/^[\d]{1,8}\.\d{0,2}$/) && !Value.match(/^[\d]{1,8}$/))
        {
            //$('[data-valmsg-for="' + Id + '"]').html('<span>' + Id + ' Must Be A Decimal Up To 2 Places And Less Then 99999999.99</span>')
            State = false;
        }
        return State;
    }
    function DecimalValidationGW(Id) {
        var State = true;
        // var Id = obj.id;
        var Value = $('#' + Id).val();
        if (!Value.match(/^[\d]{1,8}\.\d{0,2}$/) && !Value.match(/^[\d]{1,8}$/))
        {
            //$('[data-valmsg-for="' + Id + '"]').html('<span>' + Id + ' Must Be A Decimal Up To 2 Places And Less Then 99999999.99</span>')
            State = false;
        }
        return State;
    }
    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    @*function LocationDet() {
        var htm = '';
        LocationDetails=@Html.Raw(Json.Encode(Model.lstGdnWiseLctn));
        $.each(LocationDetails, function (i, data) {
            //if (data.IsOccupied)
            //    htm += '<div class="col-md-4"><div class="boolean-container"><input type="checkbox" onclick="CheckBoxChange(this)" disabled id="' + data.LocationId + '"/><label for="' + data.LocationId + '">' + data.Row + ' ' + data.Column + '<i class="square" style="margin-left:10px;"></i></label></div></div>';
            //else
                htm += '<div class="col-md-4"><div class="boolean-container"><input type="checkbox" onclick="CheckBoxChange(this)" id="' + data.LocationId + '"/><label for="' + data.LocationId + '">' + data.Row + ' ' + data.Column + '<i class="square" style="margin-left:10px;"></i></label></div></div>';
        });
        $('#DivLocationDet').html(htm);
    }*@

    function SelectLocation() {
        debugger;
        var data = '';
        var inf = '';
        $('#DivLocationDet').find('input:checked').each(function () {
            if (data == '')
                data = $(this).prop('name');
            else
                data = data + ',' + $(this).prop('name');
            if (inf == '')
                inf = $('label[for="' + $(this).prop('id') + '"]').text();
            else
                inf = inf + ',' + $('label[for="' + $(this).prop('id') + '"]').text();
        });
        $('#LocationDetails').val(data);
        $('#Location').val(inf);
        $('[data-valmsg-for="Location"]').html('<span></span>');
    }

    function GetGodownWiseLocation() {
        debugger;
        var GodownId = $('#GodownId').val();
        $.ajax({
            url: '/Export/Hdb_CWCExport/GetGodownWiseLocation',
            type: 'GET',
            data: { GodownId: GodownId },
            dataType: 'JSON',
            async:false,
            success: function (data) {
                debugger;
                if (data != null) {
                    var html = '';
                    $.each(data, function (i, elem) {
                        //  debugger;
                        $('#Location').val('');
                        $('#LocationDetails').val('');
                       
                        html += '<div class="col-md-2"><div class="boolean-container"><input type="checkbox" id="' + elem.LocationId + 'g" name="' + elem.LocationId + '" onclick="SelectLocation()" /><label for="' + elem.LocationId + 'g"><i class="square"></i><span>' + elem.LocationName + '</span></label></div></div>';
                    });
                    $('#DivLocationDet').html(html);

                }

            }
        });
    }
    function SelectGodown(data) {
        debugger;
        $('#GodownId').val(data.id);
        $('#GodownName').val(data.innerText);
        $("#GodownModal").modal("hide");
        GetGodownWiseLocation();
    }

    $('#Godownbox').keyup(function () {
        debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstGodown > li').show();
        } else {
            $('#lstGodown > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    //function CheckBoxChange(item)
    //{
    //    /* If existing Godown locations are changed then those Ids added in Clear Location */
    //    var Location=$('#ClearLocation').val();
    //    if($('#'+item.id).prop("checked")==false)
    //    {
    //        if(Location==''||Location==null||Location==undefined)
    //            Location=item.id;
    //        else
    //            Location+=','+item.id;
    //        $('#ClearLocation').val(Location);
    //    }
    //    /**********************************************
    //     Clear Location contains the Ids which contains
    //    the data which is earlier occupied but now it is unoccupied
    //    and  needs to be cleared in Godown Wise Location
    //    ***********************************************/
        
    //    var Locationtext = '';
    //    $('#DivLocationDet').find('input[type="checkbox"]:checked').each(function () {
    //        if (Locationtext == '')
    //            Locationtext=$('label[for="' + $(this).prop('id') + '"]').text();
    //        else {
    //            Locationtext+=',' + $('label[for="' + $(this).prop('id') + '"]').text();
    //        }
    //    });
    //    $('#Location').val(Locationtext);
    //}

    function StorageError()
    {
        debugger;
        if ($('#Storage').val() == "" || $('#Storage').val() == "---Select---") {
            $('[data-valmsg-for="Storage"]').html('<span>Please Select Storage Type.</span>');
            return false;
        }
        else {
            $('[data-valmsg-for="Storage"]').html('<span></span>');
            return true;
        }
    }
</script>