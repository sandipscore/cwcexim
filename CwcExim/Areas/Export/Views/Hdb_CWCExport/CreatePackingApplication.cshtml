@model CwcExim.Areas.Export.Models.Hdb_PackingApplication
<script>
    $('#EntryDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='EntryDate']").html('');
        }
    });
</script>

<style>
    .height{height: 75px;}
</style>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                @using (Ajax.BeginForm("AddEditPackingApplication", "Hdb_CWCExport", new AjaxOptions
                {
                    Confirm = "Are you sure you want to Save/Update",
                    HttpMethod = "POST",
                    OnSuccess = "PackingApplicationOnSuccess",
                    OnFailure = "PackingOnFailure"
                }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Packing Application</h4>
                        </div>
                    </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    <label>Packing No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.PackingNo, new { @class = "form-control input-sm", @id = "PackingNo",@readonly=true })
                                    @Html.ValidationMessageFor(m => m.PackingNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4-5 col-md-1-5 col_cus_2 padding_rt">
                                    <label>Vehicle No:</label>
                                </div>
                                <div class="col-md-2 Date_Img">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-control input_sm", @id = "VehicleNo" })
                                    @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    <label>Party Name:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.PartyName, new { @class = "form-control input-sm", @id = "PartyName" })
                                    @Html.ValidationMessageFor(m => m.PartyName, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4-5 col-md-1-5 col_cus_2 padding_rt">
                                    <label>Entry Date:</label>
                                </div>
                                <div class="col-md-2 Date_Img" >
                                    @Html.TextBoxFor(m => m.EntryDate, new { @class = "form-control input-sm", @id = "EntryDate", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.EntryDate, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                            
                            <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-1-5">
                                            <label>Material Type:</label>
                                        </div>
                                        <div class="col-md-2-5">
                                            <span class="ReQSimbol">*</span>
                                         @Html.DropDownListFor(m => m.MaterialType, new List<SelectListItem>
                                       {
                                            new SelectListItem { Text="Pallets",Value="Pallets"},
                                            new SelectListItem { Text="Roles",Value="Roles"},
                                            new SelectListItem { Text="Others",Value="Others"},

                                       }, "----Select----") 
                                            @Html.ValidationMessageFor(m => m.MaterialType)
                                            <div id="DivOthers" style="margin-top:5px;">
                                                <div class="Date_Img">
                                                    @Html.TextBoxFor(m => m.Others, new { @class = "form-control input-sm", @id = "Noofitems" })
                                                    @Html.ValidationMessageFor(m => m.Others, "", new { @class = "Error_Msg" })
                                                </div>
                                            </div>
                                        </div>
                                    <div class="col-md-offset-4-5 col-md-1-5 col_cus_2">
                                        <label>No Of Items:</label>
                                    </div>
                                    <div class="col-md-2 Date_Img">
                                        <span class="ReQSimbol">*</span>
                                        @Html.TextBoxFor(m => m.NoofItems,"", new { @class = "form-control input-sm", onkeypress = "return AllowOnlyInteger(event)", @id = "Noofitems" })
                                        @Html.ValidationMessageFor(m => m.NoofItems, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Remarks:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_10">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextAreaFor(m => m.Remarks, new { @class = "height", @id = "Remarks" })
                                    @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                                </div>

                            </div>
                        </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row SignUp_space_bottom">
                        <div class="row">
                            <div class="col-md-offset-3 col-md-2">
                                <input type="submit" value="Save" class="btn log_Btn_sm" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Reset" class="btn log_Btn_sm" onclick="ClearPackingApplication()" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Show List" class="btn log_Btn_sm" onclick="ShowList()" />
                            </div>
                        </div>
                    </div>
                    
                    <div class="logErrMsg Form_Space_top SignUp_space_bottom2" id="DivEntrySuc" style="background-color:transparent"></div>
                }
                    <div class="row">
                        <div class="col-md-12">
                            <div id="DivPackingList"></div>
                        </div>
                    </div>

                <div class="row">
                    <div class="col-md-12">
                        <div id="DivPackingHead">
                            <table id="tblPackingHead" class="table table-bordered table-striped dataTable" style="width:100%">
                                <thead>
                                    <tr>
                                        <th class="text-center">@Html.DisplayName("SL No")</th>
                                        <th>@Html.DisplayName("Vehicle No")</th>
                                        <th>@Html.DisplayName("Entry Date")</th>
                                        <th>@Html.DisplayName("Party Name")</th>
                                        <th>@Html.DisplayName("No of Items")</th>
                                        <th>@Html.DisplayName("Material Type")</th>
                                        <th class="text-center">@Html.DisplayName("Edit")</th>
                                        <th class="text-center">@Html.DisplayName("View")</th>
                                        <th class="text-center">@Html.DisplayName("Delete")</th>
                                        <th class="text-center">@Html.DisplayName("Print Preview")</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

                









                @Scripts.Render("~/bundles/jqueryval")
                <script>

                    function ClearPackingApplication() {
                        $('#VehicleNo,#PartyName,#MaterialType,#NoofItems,#Remarks').val('');
                        $('[data-valmsg-for]').html('');
                        $('#DivOthers').hide();
                    }
                    function PackingApplicationOnSuccess(data) {
                        debugger;
                        if (data.Status == 1) {
                            if ($('#DivEntrySuc').hasClass('logErrMsg'))
                                $('#DivEntrySuc').removeClass('logErrMsg').addClass('logSuccMsg');
                            $('#DivEntrySuc').html(data.Message);
                            //alert(data.Message);
                            ClearPackingApplication();
                            setTimeout(function () { $('#DivEntrySuc').html(''); }, 5000);

                        }
                        else {
                            if ($('#DivEntrySuc').hasClass('logSuccMsg'))
                                $('#DivEntrySuc').removeClass('logSuccMsg').addClass('logErrMsg');
                            $('#DivEntrySuc').html(data.Message);
                            setTimeout(function () { $('#DivEntrySuc').html(''); }, 5000);
                        }

                    }
                    function PackingOnFailure() { }
                    $('#box').keyup(function () {
                        var valThis = $(this).val().toLowerCase();
                        if (valThis == "") {
                            $('.navList > li').show();
                        } else {
                            $('.navList > li').each(function () {
                                var text = $(this).text().toLowerCase();
                                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
                            });
                        };
                    });
                    function ShowList() {
                        LoadPackingApplicationList();
                        $('#DivPackingHead').hide();

                    }

                    function LoadPackingApplicationList() {
                        $('#DivPackingList').load('/Export/Hdb_CWCExport/ListOfPackingApplication');
                    }
                    $("#DivOthers").hide();
                    $('#MaterialType').change(function () {
                        var val = $(this).find(":selected").text();
                        if (val == 'Others') {
                            $('#DivOthers').show();

                        }
                        else {
                            $('#DivOthers').hide();
                        }
                    })
                    function AllowOnlyInteger(evt) {
                        var CharCode;
                        if (window.event) {
                            CharCode = window.event.keyCode;
                        }
                        else {
                            CharCode = evt.which;
                        }
                        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
                            return true;
                        }
                        else {
                            evt.preventDefault;
                            return false;
                        }
                    }
                </script>


