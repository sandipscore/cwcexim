@model CwcExim.Areas.Export.Models.Ppg_LoadContSF

@if (ViewBag.LoadContainerReqList != null)
{
    <input type="hidden" id="hdnLoadContainerReq" value="@ViewBag.LoadContainerReqList" />
}
else
{
    <input type="hidden" id="hdnLoadContainerReq" value="" />
}

<style>
    .slimScrollDiv {
        height: 300px !important;
    }

    #slim_scroll {
        height: 300px !important;
    }

    #slim_scroll_1 {
        height: 300px !important;
    }

    .table.tblhd {
        border-bottom: 0;
    }

    .table.tblhd1 {
        border-bottom: 0;
    }

    .modal {
        padding-top: 70px;
    }
</style>

<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script type="text/javascript">
    $(function () {
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });

    $(function () {
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });
</script>
<style>
    .table-striped > tbody > tr > td > input[type=text], .table-striped > tbody > tr > td > select, .table-striped > tfoot > tr > td > input[type=text], .table-striped > tfoot > tr > td > select {
        width: auto !important;
    }
</style>


<div class="row">
    <div class="col-md-12">
        <div class="Head_h4">
            <div class="row">
                <div class="col-md-12">
                    <h4>Loaded Container SF</h4>
                </div>
            </div>
            <div class="content_wrp">
                <div style="width:97%;margin-left:auto;margin-right:auto;">
                    <div class="row clearfix">
                        @using (Ajax.BeginForm("AddEditLoadContainerStuffingSF", "Ppg_CWCExportV2", new AjaxOptions
            {
                Confirm = "Are you sure you want to  Save?",
                HttpMethod = "POST",
                OnSuccess = "OnSuccess",
                OnFailure = "OnFailure"
            }))
            {
                            @Html.AntiForgeryToken()

                            <div class="panel with-nav-tabs panel-primary cwc_panel">
                                <div class="panel-heading cwc_panel_heading">
                                    <ul class="nav nav-tabs" id="DivTabs">
                                        <li class="active"><a href="#DivContainerStuffing" data-toggle="tab">Loaded Container SF</a></li>
                                    </ul>
                                </div>
                                <div class="panel-body">
                                    <div class="tab-content">
                                        <div class="tab-pane fade in active" id="DivContainerStuffing">
                                            <div id="DivAddContainerStuffing">

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Request No:</label>
                                                        </div>
                                                        <div class="position-relative">
                                                            @Html.HiddenFor(m => m.StuffingReqId)
                                                            @Html.TextBoxFor(m => m.StuffingReqNo, new { @readonly = true, @onkeydown = "PopupActivate('stuffingModal');" })
                                                            <span class="input_icon" id="stuffingsearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#stuffingModal"></i></span>
                                                            @Html.ValidationMessageFor(m => m.StuffingReqNo, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-6">
                                                        <div class="form-group">
                                                            <label>Stuffing Date:</label>
                                                        </div>
                                                        <div class="position-relative Date_Img">
                                                            @Html.TextBoxFor(m => m.StuffingReqDate, new { @readonly = true })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Container No:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.ContainerNo, new { @readonly = true })
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-1-5">
                                                        <div class="form-group">
                                                            <label>CFS Code:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.CFSCode, new { @readonly = true })
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-1-5">
                                                        <div class="form-group">
                                                            <label>Size:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Size, new { @readonly = true })
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label>Exporter:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.ExporterName, new { @readonly = true })
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label>Shipping Line:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.ShippingLineName, new { @readonly = true })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <div class="clearfix"></div>

                            </div>
                            <div class="row">
                                <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                            </div>

                                <div class="d-flex justify-content-left">
                                    <input type="button" id="btnSaveContainerStuff" class="btn btn-primary mr-1 btn-100px" value="Save">
                                    <input type="button" class="btn btn-primary-border mr-1 btn-100px" value="Reset" onclick="ResetAllField()">
                                    <input type="button" id="btnSendCIMSF" class="btn btn-primary mr-1 btn-100px" disabled value="SEND CIM SF" onclick="sendCIMSF()">
                                </div>

                                <div class="logSuccMsg" style="background-color:transparent" id="DivContainerStuffingMsg"></div>
                                <div class="logErrMsg Form_Space_bottom" style="background-color:transparent" id="DivContainerStuffingErrMsg"></div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="d-flex justify-content-left Form_Space_top">
                                            <input type="button" id="btnShowList" class="btn btn-primary mr-1 btn-100px" value="Show List" onclick="ShowList()">
                                        </div>
                                    </div>
                                    <div class="col-md-2 col-md-offset-1">
                                        <div class="form-group">
                                            <label></label>
                                        </div>
                                        <label>Load Request No/Container/CBT No :</label>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label></label>
                                        </div>
                                        <div class="position-relative">
                                            @Html.TextBox("ContSearch", "", new { placeholder = "Search Here" })
                                            <span class="input_icon"><i class="fa fa-search" aria-hidden="true" onclick="SearchStuffing()"></i></span>
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="col-md-12">
                                        <div id="DivContainerStuffingList">
                                            <table class="table table-bordered table-striped dataTable" style="width:100%; table-layout:fixed; word-break:break-word; overflow:hidden;">
                                                <thead>
                                                    <tr>
                                                        <td>View</td>
                                                        <td>S.No</td>
                                                        <td>Request No</td>
                                                        <td>Request Date</td>
                                                        <td>Container/CBT No</td>
                                                        <td>CFS Code</td>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                        }
                        @Scripts.Render("~/bundles/jqueryval")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div id="stuffingModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="StuffingModalClose()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Request No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="stuffingbox" type="text" tabindex="401" />
                <ul class="navList" id="lststuffing"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="StuffingModalClose()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script>

    $(document).ready(function () {
        StuffingReqBinding();
        $('#StuffingReqNo').focus();
    });

    $("#ApprovalDate").datetimepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ApprovalDate']").html('');
        }
    });

    function ShowList() {
        debugger;
        $('#ContSearch').val('');
        $('#DivContainerStuffingList').load('/Export/Ppg_CWCExportV2/GetLoadContainerStuffingSFList');
    }


    function SearchStuffing() {
        debugger;
        if ($('#ContSearch').val().trim() == "" || $('#ContSearch').val().trim() == null) {
            ShowList();
        }
        else {
            $('#DivContainerStuffingList').load('/Export/Ppg_CWCExportV2/GetLoadContainerStuffingSFist?SearchValue=' + $('#ContSearch').val().trim());

        }
    }

    function ResetAllField() {
        $('#DivBody').load('/Export/Ppg_CWCExportV2/CreateLoadContainerSF');
    }

    function OnSuccess(data) {
        debugger;
        if (data.Status == 1) {
            if ($('#DivContainerStuffingMsg').hasClass('logErrMsg'))
                $('#DivContainerStuffingMsg').html(data.Message);
            $('#DivContainerStuffingMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivContainerStuffingMsg').html(data.Message);
            $('#btnSendCIMSF').prop('disabled', false);
            $('#BtnSaveContainerStuff').prop('disabled', true);
            setTimeout(function () { $('#DivSucMsg').html(''); }, 5000);

        }
        else {
            $('#DivContainerStuffingErrMsg').html(data.Message);
            setTimeout(function () { $('#DivContainerStuffingErrMsg,#DivContainerStuffingMsg').html(''); }, 5000);
        }
    }
    function OnFailure()
    { }

    function StuffingReqBinding() {
        debugger;
        if ($('#hdnLoadContainerReq').val() != '') {
            var StuffingJson = JSON.parse($('#hdnLoadContainerReq').val());
            var html = '';
            var tab = 401;
            $.each(StuffingJson, function (i, item) {

                html += '<li tabindex=' + tab + '_' + i + ' id="' + item.StuffingReqId + '" onkeypress="selectStuffing(' + item.StuffingReqId + ',&quot;' + item.StuffingReqNo + '&quot;);" onclick="selectStuffing(' + item.StuffingReqId + ',&quot;' + item.StuffingReqNo + '&quot;);">' + item.StuffingReqNo + '-' + item.ContainerNo + '</li>';
            });
            $('#lststuffing').html(html);
        }
    }
    $('#stuffingbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lststuffing > li').show();
        else {
            $('#lststuffing > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    function selectStuffing(id) {
        debugger;
        var StuffingJson = JSON.parse($('#hdnLoadContainerReq').val());
        var StuffingRequest = $.grep(StuffingJson, function (item) { return item.StuffingReqId == id; })[0];
        $('#StuffingReqId').val(StuffingRequest.StuffingReqId);
        $('#StuffingReqNo').val(StuffingRequest.StuffingReqNo);
        $('#StuffingReqDate').val(StuffingRequest.StuffingReqDate);
        $('#ShippingLineName').val(StuffingRequest.ShippingLineName);
        $('#ExporterName').val(StuffingRequest.ExporterName);
        $('#ContainerNo').val(StuffingRequest.ContainerNo);
        $('#CFSCode').val(StuffingRequest.CFSCode);
        $('#Size').val(StuffingRequest.Size);

        $("#stuffingModal").modal("hide");
        $('#stuffingbox').val('');
        $('#lststuffing > li').show();
    }

    function StuffingModalClose() {
        $('#stuffingModal').modal("hide");
        $('#stuffingbox').val('');
        $('#StuffingReqNo').focus();
        $('#lststuffing > li').show();
    }

    function PopupActivate(Id) {
        //debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {

            $('#' + Id).modal('show');

            if (Id == "stuffingModal") {
                //debugger;
                $('#stuffingbox').focus();
                StuffingReqBinding();
            }

        }

    }

    $('#stuffingModal').on('shown.bs.modal', function () {
        $('#stuffingbox').focus();
    });


    $('.mTabindex').keydown(function (e) {
        ////debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });

    function sendCIMSF() {
        debugger;

        var ContainerStuffingId = $('#StuffingReqId').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: "/Export/Ppg_CWCExportV2/SendLoadedSF",
            type: "POST",
            dataType: "JSON",
            data: { ContainerStuffingId: ContainerStuffingId },
            headers: { "__RequestVerificationToken": Token },
            async: false,
            success: function (data) {
                if (data.Status == 1) {

                    $('#btnSendCIMSF').prop('disabled', true);
                    alert(data.Message);
                }
                else {
                    alert(data.Message);
                }
            }
        });
    }

</script>
