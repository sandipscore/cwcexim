@model CwcExim.Areas.Export.Models.PortOfCall


@if (ViewBag.StuffingReqList != null)
{
    <input type="hidden" id="hdnStuffingReq" value="@ViewBag.StuffingReqList" />
}
else
{
    <input type="hidden" id="hdnStuffingReq" value="" />
}

<style>
    .slimScrollDiv {
        height: 300px !important;
    }

    #slim_scroll {
        height: 300px !important;
    }

    #slim_scroll_1 {
        height: 300px !important;
    }

    .table.tblhd {
        border-bottom: 0;
    }

    .table.tblhd1 {
        border-bottom: 0;
    }

    .modal {
        padding-top: 70px;
    }
</style>

<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script type="text/javascript">
    $(function () {
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });

    $(function () {
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });
</script>
<style>
    .table-striped > tbody > tr > td > input[type=text], .table-striped > tbody > tr > td > select, .table-striped > tfoot > tr > td > input[type=text], .table-striped > tfoot > tr > td > select {
        width: auto !important;
    }
</style>

@*@using (Ajax.BeginForm("AddEditContainerStuffingApproval", "Ppg_CWCExportV2", new AjaxOptions
    {
        Confirm = "Are you sure you want to  Save?",
        HttpMethod = "POST",
        OnSuccess = "OnSuccess",
        OnFailure = "OnFailure"
    }))
    {*@

<div class="row">
    <div class="col-md-12">
        <div class="Head_h4">
            <div class="row">
                <div class="col-md-12">
                    <h4>Container Stuffing Approval</h4>
                </div>
            </div>
            <div class="content_wrp">
                <div style="width:97%;margin-left:auto;margin-right:auto;">
                    <div class="row clearfix">
                        @using (Ajax.BeginForm("AddEditContainerStuffingApproval", "Ppg_CWCExportV2", new AjaxOptions
                        {
                            Confirm = "Are you sure you want to  Save?",
                            HttpMethod = "POST",
                            OnSuccess = "OnSuccess",
                            OnFailure = "OnFailure"
                        }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(m => m.ApprovalId)
                            @Html.HiddenFor(m => m.StuffingReqId)
                            <div class="panel with-nav-tabs panel-primary cwc_panel">
                                <div class="panel-heading cwc_panel_heading">
                                    <ul class="nav nav-tabs" id="DivTabs">
                                        <li class="active"><a href="#DivContainerStuffing" data-toggle="tab">Container Stuffing Approval</a></li>
                                    </ul>
                                </div>
                                <div class="panel-body">
                                    <div class="tab-content">
                                        <div class="tab-pane fade in active" id="DivContainerStuffing">
                                            <div id="DivAddContainerStuffing">

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Approval Date:</label>
                                                        </div>
                                                        <div class="position-relative Date_Img">
                                                            @Html.TextBoxFor(m => m.ApprovalDate, new { @placeholder = "Select Approval Date", @readonly = true })
                                                            @Html.ValidationMessageFor(m => m.ApprovalDate, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Stuffing No:</label>
                                                        </div>
                                                        @Html.HiddenFor(m => m.StuffingReqId)
                                                        @Html.TextBoxFor(m => m.StuffingReqNo, new { @readonly = true })
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-6">
                                                        <div class="form-group">
                                                            <label>Stuffing Date:</label>
                                                        </div>
                                                        <div class="position-relative Date_Img">
                                                            @Html.TextBoxFor(m => m.StuffingReqDate, new { @readonly = true })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Container No:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.ContainerNo, new { @readonly = true })
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-1-5">
                                                        <div class="form-group">
                                                            <label>CFS Code:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.CFSCode, new { @readonly = true })
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-1-5">
                                                        <div class="form-group">
                                                            <label>Size:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.Size, new { @readonly = true })
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label>Exporter:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.ExporterName, new { @readonly = true })
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-12">
                                                        <div class="form-group">
                                                            <label>Shipping Line:</label>
                                                        </div>
                                                        @Html.TextBoxFor(m => m.ShippingLineName, new { @readonly = true })
                                                    </div>
                                                </div>


                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Port of Call Name:</label>
                                                        </div>
                                                        <div class="position-relative">
                                                            @Html.HiddenFor(m => m.PortOfCallId)
                                                            @Html.TextBoxFor(m => m.PortOfCallName, new { @readonly = true, @onkeydown = "PopupActivate('PortOfCallModal');" })
                                                            <span class="input_icon" id="PortOfCallsearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PortOfCallModal"></i></span>
                                                            @Html.ValidationMessageFor(m => m.PortOfCallName, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-6">
                                                        <div class="form-group">
                                                            <label>Port of Call Coded:</label>
                                                        </div>
                                                        <div class="position-relative">
                                                            @Html.TextBoxFor(m => m.PortOfCallCode, new { @readonly = true, @onkeydown = "PopupActivate('PortOfCallModal');" })
                                                            <span class="input_icon" id="PortOfCallsearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PortOfCallModal"></i></span>
                                                            @Html.ValidationMessageFor(m => m.PortOfCallCode, "", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Next Port of Call Name:</label>
                                                        </div>
                                                        <div class="position-relative">
                                                            @Html.HiddenFor(m => m.NextPortOfCallId)
                                                            @Html.TextBoxFor(m => m.NextPortOfCallName, new { @readonly = true, @onkeydown = "PopupActivate('NextPortOfCallModal');" })
                                                            <span class="input_icon" id="NextPortOfCallsearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#NextPortOfCallModal"></i></span>
                                                            <span style="color:red" id="ErrNextPortOfCall"></span>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3 col-md-offset-6">
                                                        <div class="form-group">
                                                            <label>Next Port of Call Coded:</label>
                                                        </div>

                                                        <div class="position-relative">
                                                            @Html.TextBoxFor(m => m.NextPortOfCallCode, new { @readonly = true, @onkeydown = "PopupActivate('NextPortOfCallModal');" })
                                                            <span class="input_icon" id="NextPortOfCallsearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#NextPortOfCallModal"></i></span>
                                                            <span style="color:red" id="ErrNextPortOfCall"></span>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row Form_Space_top">
                                                    <div class="col-md-3">
                                                        <div class="form-group">
                                                            <label>Mode of Transport:</label>
                                                        </div>
                                                        @Html.DropDownListFor(m => m.ModeOfTransport, new List<SelectListItem>
                                           {
                                            new SelectListItem { Text="Sea",Value="1"},
                                            new SelectListItem { Text="Rail",Value="2"},
                                            new SelectListItem { Text="Truck",Value="3"},
                                            new SelectListItem { Text="Air",Value="4"}
                                            }, new { })
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="clearfix"></div>

                            </div>

                            <div class="row">
                                <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                            </div>

                            <div class="d-flex justify-content-left">
                                <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save" ng-click="AddOblEntry()">
                                <input type="button" class="btn btn-primary-border mr-1 btn-100px"  value="Reset" onclick="ResetAllField()">
                                <input type="button" id="btnSendCIMASR" class="btn btn-primary mr-1 btn-100px" disabled value="SEND CIM ASR" onclick="sendCIMASR()">
                            </div>

                                <div class="logSuccMsg" style="background-color:transparent" id="DivContainerStuffingMsg"></div>
                                <div class="logErrMsg Form_Space_bottom" style="background-color:transparent" id="DivContainerStuffingErrMsg"></div>
                        }
                        @Scripts.Render("~/bundles/jqueryval")
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade mTabindex" id="PortOfCallModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="ClosePortOfCall()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port Of Call</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Port Name Or Port Code" id="PortOfCallbox" type="text" tabindex="200" autofocus />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchPortOfCallByPortCode()"></i></span>
                <table tabindex="201" class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Port Of Call Name</th>
                            <th colspan="4" width="20%">Port Of Call Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tblePortOfCall">
                        <tbody>
                            @{
                                if (ViewBag.lstPortOfCall != null)
                                {
                                    var tabvalue = 201;
                                    foreach (var item in ViewBag.lstPortOfCall)
                                    {
                                        <tr tabindex="@tabvalue" onkeypress="SelectPortOfCall(@item.PortOfCallId,'@item.PortOfCallName','@item.PortOfCallCode')" onclick="SelectPortOfCall(@item.PortOfCallId,'@item.PortOfCallName','@item.PortOfCallCode')">
                                            <td colspan="8" width="80%" class="txt_wrp">@item.PortOfCallName</td>
                                            <td colspan="4" width="20%" class="txt_wrp">@item.PortOfCallCode</td>
                                        </tr>
                                        tabvalue++;
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.StatePortOfCall != null && Convert.ToBoolean(ViewBag.StatePortOfCall) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePortOfCall()" class="btn log_Btn_sm" id="btnLoadMore">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePortOfCall()" class="btn log_Btn_sm" id="btnLoadMore" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="ClosePortOfCall()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="modal fade mTabindex" id="NextPortOfCallModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseNextPortOfCall()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port Of Call</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Port Name Or Port Code" id="NextPortOfCallbox" type="text" tabindex="200" autofocus />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchNextPortOfCallByPortCode()"></i></span>
                <table tabindex="201" class="table table-striped table-bordered dataTable tblhd1" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Port Of Call Name</th>
                            <th colspan="4" width="20%">Port Of Call Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll_1">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tbleNextPortOfCall">
                        <tbody>
                            @{
                                if (ViewBag.lstNextPortOfCall != null)
                                {
                                    var tabvalue = 201;
                                    foreach (var item in ViewBag.lstNextPortOfCall)
                                    {
                                        <tr tabindex="@tabvalue" onkeypress="SelectNextPortOfCall(@item.PortOfCallId,'@item.PortOfCallName','@item.PortOfCallCode')" onclick="SelectNextPortOfCall(@item.PortOfCallId,'@item.PortOfCallName','@item.PortOfCallCode')">
                                            <td colspan="8" width="80%" class="txt_wrp">@item.PortOfCallName</td>
                                            <td colspan="4" width="20%" class="txt_wrp">@item.PortOfCallCode</td>
                                        </tr>
                                        tabvalue++;
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.StateNextPortOfCall != null && Convert.ToBoolean(ViewBag.StateNextPortOfCall) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreNextPortOfCall()" class="btn log_Btn_sm" id="btnLoadMore">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreNextPortOfCall()" class="btn log_Btn_sm" id="btnLoadMore" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseNextPortOfCall()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>


    $(document).ready(function () {
        LoadPortOfCall();
        LoadNextPortOfCall();
    });

    $("#ApprovalDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ApprovalDate']").html('');
        }
    }).datepicker("setDate", "0");



    function ResetAllField() {
        $('#DivBody').load('/Export/Ppg_CWCExportV2/CreateContainerStuffingApproval');
    }
    function OnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            if (data.Status == 1 || data.Status == 2) {
                if ($('#DivContainerStuffingMsg').hasClass('logErrMsg'))
                    $('#DivContainerStuffingMsg').html(data.Message);
                $('#DivContainerStuffingMsg').removeClass('logErrMsg').addClass('logSuccMsg');
                $('#DivContainerStuffingMsg').html(data.Message);
                $('#btnSendCIMASR').prop("disabled", false);
                setTimeout(ResetAllField, 3000);
            }
            else {
                if ($('#DivContainerStuffingMsg').hasClass('logSuccMsg'))
                    $('#DivContainerStuffingMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                $('#DivSucMsg').html(data.Message);
                $('#btnSendCIMASR').prop("disabled", false);
            }
            setTimeout(function () { $('#DivSucMsg').html(''); }, 5000);
        }
        else {
            $('#DivContainerStuffingErrMsg').html(data.Message);
            setTimeout(function () { $('#DivContainerStuffingErrMsg,#DivContainerStuffingMsg').html(''); }, 5000);
        }
    }
    function OnFailure()
    { }


    function PopupActivate(Id) {
        debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {

            $('#' + Id).modal('show');

            if (Id == "PortOfCallModal") {

                $('#PortOfCallbox').focus();

                LoadPortOfCall();

            }

            if (Id == "NextPortOfCallModal") {
                $('#NextPortOfCallbox').focus();
                LoadNextPortOfCall();
            }

        }

    }

    $('#PortOfCallModal').on('shown.bs.modal', function () {
        $('#PortOfCallbox').focus();
    });
    $('#NextPortOfCallModal').on('shown.bs.modal', function () {
        $('#NextPortOfCallbox').focus();
    });

    $('.mTabindex').keydown(function (e) {
        ////debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });


    function SelectPortOfCall(PortOfCallId, PortOfCallName, PortOfCallCode) {
        $('#PortOfCallId').val(PortOfCallId);
        $('#PortOfCallName').val(PortOfCallName);
        $('#PortOfCallCode').val(PortOfCallCode);
        $("#PortOfCallModal").modal("hide");
        LoadPortOfCall();
    }


    var Page = 0;
    var Page1 = 0;
    function LoadPortOfCall() {
        debugger;
        Page = 0;
        $.ajax({
            url: '/Export/Ppg_CWCExportV2/LoadPortOfCall',
            type: 'GET',
            data: { PortCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data.lstPortOfCall, function (item, elem) {

                        html += '<tr onclick="SelectPortOfCall(' + elem.PortOfCallId + ',&quot;' + elem.PortOfCallName + '&quot;,&quot;' + elem.PortOfCallCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PortOfCallName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PortOfCallCode + '</td></tr>';
                    });

                    $('#tblePortOfCall tbody').html(html);

                    if (data.Data.StatePortOfCall == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function LoadMorePortOfCall() {
        debugger;
        $.ajax({
            url: '/Export/Ppg_CWCExportV2/LoadPortOfCall',
            type: 'GET',
            data: { PortCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    $.each(data.Data.lstPortOfCall, function (item, elem) {

                        html += '<tr onclick="SelectPortOfCall(' + elem.PortOfCallId + ',&quot;' + elem.PortOfCallName + '&quot;,&quot;' + elem.PortOfCallCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PortOfCallName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PortOfCallCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tblePortOfCall tbody').html(html);
                    else
                        $('#tblePortOfCall tbody').append(html);
                    Page++;


                    if (data.Data.StatePortOfCall == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }
    function SearchPortOfCallByPortCode() {
        debugger;
        if ($('#PortOfCallbox').val() != '') {
            $.ajax({
                url: '/Export/Ppg_CWCExportV2/SearchPortOfCallByPortCode',
                type: 'GET',
                data: { PortCode: $('#PortOfCallbox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        debugger;
                        var html = '';
                        $.each(data.Data.lstPortOfCall, function (item, elem) {
                            html += '<tr onclick="SelectPortOfCall(' + elem.PortOfCallId + ',&quot;' + elem.PortOfCallName + '&quot;,&quot;' + elem.PortOfCallCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PortOfCallName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PortOfCallCode + '</td></tr>';
                        });
                        $('#tblePortOfCall tbody').html('');
                        $('#tblePortOfCall tbody').html(html);
                        $('#btnLoadMore').prop('disabled', true);
                        Page = -1;
                    }
                    else {
                        $('#tblePortOfCall tbody').html('');
                        Page = -1;
                        $('#btnLoadMore').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadPortOfCall();
    }

    function ClosePortOfCall() {
        $('#PortOfCallbox').val('');
        $("#PortOfCallModal").modal("hide");
        LoadPortOfCall();
    }

    function SelectNextPortOfCall(PortOfCallId, PortOfCallName, PortOfCallCode) {
        debugger;
        $('#NextPortOfCallId').val(PortOfCallId);
        $('#NextPortOfCallName').val(PortOfCallName);
        $('#NextPortOfCallCode').val(PortOfCallCode);
        $("#NextPortOfCallModal").modal("hide");
        LoadNextPortOfCall();
    }



    function LoadNextPortOfCall() {
        debugger;
        Page1 = 0;
        $.ajax({
            url: '/Export/Ppg_CWCExportV2/LoadNextPortOfCall',
            type: 'GET',
            data: { PortCode: "", Page: Page1 },
            success: function (data) {
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data.lstNextPortOfCall, function (item, elem) {

                        html += '<tr onclick="SelectNextPortOfCall(' + elem.PortOfCallId + ',&quot;' + elem.PortOfCallName + '&quot;,&quot;' + elem.PortOfCallCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PortOfCallName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PortOfCallCode + '</td></tr>';
                    });

                    $('#tbleNextPortOfCall tbody').html(html);

                    if (data.Data.StateNextPortOfCall == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function LoadMoreNextPortOfCall() {
        debugger;
        $.ajax({
            url: '/Export/Ppg_CWCExportV2/LoadNextPortOfCall',
            type: 'GET',
            data: { PortCode: "", Page: Page1 + 1 },
            success: function (data) {
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data.lstNextPortOfCall, function (item, elem) {

                        html += '<tr onclick="SelectNextPortOfCall(' + elem.PortOfCallId + ',&quot;' + elem.PortOfCallName + '&quot;,&quot;' + elem.PortOfCallCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PortOfCallName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PortOfCallCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tbleNextPortOfCall tbody').html(html);
                    else
                        $('#tbleNextPortOfCall tbody').append(html);
                    Page++;


                    if (data.Data.StateNextPortOfCall == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }
    function SearchNextPortOfCallByPortCode() {

        if ($('#NextPortOfCallbox').val() != '') {
            $.ajax({
                url: '/Export/Ppg_CWCExportV2/SearchNextPortOfCallByPortCode',
                type: 'GET',
                data: { PortCode: $('#NextPortOfCallbox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        $.each(data.Data.lstNextPortOfCall, function (item, elem) {
                            html += '<tr onclick="SelectNextPortOfCall(' + elem.PortOfCallId + ',&quot;' + elem.PortOfCallName + '&quot;,&quot;' + elem.PortOfCallCode + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.PortOfCallName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PortOfCallCode + '</td></tr>';
                        });
                        $('#tbleNextPortOfCall tbody').html('');
                        $('#tbleNextPortOfCall tbody').html(html);
                        $('#btnLoadMore').prop('disabled', true);
                        Page = -1;
                    }
                    else {
                        $('#tbleNextPortOfCall tbody').html('');
                        Page = -1;
                        $('#btnLoadMore').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadNextPortOfCall();
    }

    function CloseNextPortOfCall() {
        $('#NextPortOfCallbox').val('');
        $("#NextPortOfCallModal").modal("hide");
        LoadNextPortOfCall();
    }

    function sendCIMASR() {
        debugger;


        var ContainerStuffingId = $('#StuffingReqId').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: "/Export/Ppg_CWCExportV2/SendASR",
            type: "POST",
            dataType: "JSON",
            data: { ContainerStuffingId: ContainerStuffingId },
            headers: { "__RequestVerificationToken": Token },
            async: false,
            success: function (data) {
                if (data.Status == 1) {
                    $('#btnSendCIMASR').prop('disabled', true);
                    alert(data.Message);
                }
                else {
                    alert(data.Message);
                }
            }
        });
    }
</script>