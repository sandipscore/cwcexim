@model CwcExim.Areas.Export.Models.BTTCargoEntry


@using (Ajax.BeginForm("AddEditBTTCargo", "Ppg_CWCExport", new AjaxOptions { Confirm = "Are you sure you want to Save?", HttpMethod = "POST", OnBegin = "ValidateGrid", OnSuccess = "BTTCargoOnSuccess", OnFailure = "BTTCargoOnFailure" }))
{
    @Html.AntiForgeryToken()

    <div class="Head_h4">
        <div class="row">
            <div class="col-md-12">
                <h4>Back To Town Cargo Entry</h4>
            </div>
        </div>
        <div class="content_wrp">
            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.BTTId)
                        @Html.HiddenFor(m => m.Flag)
                        <label>BTT No:</label>
                    </div>
                    @Html.TextBoxFor(m => m.BTTNo, new { @readonly = true })
                </div>
                <div class="col-md-3 col-md-offset-6">
                    <div class="form-group">
                        <label>BTT Date:</label>
                    </div>
                    <div class="position-relative Date_Img">
                        @Html.TextBoxFor(m => m.BTTDate, new { @readonly = true })
                        @Html.ValidationMessageFor(m => m.BTTDate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Carting No.:</label>
                    </div>
                    <div class="position-relative">
                        @Html.HiddenFor(m => m.CartingId)
                        @Html.TextBoxFor(m => m.CartingNo, new { @placeholder = "Search Carting No.", @readonly = true })
                        <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CartingNoModal"></i></span>
                        @Html.ValidationMessageFor(m => m.CartingNo, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-3 col-md-offset-6">
                    <div class="form-group">
                        <label>Carting Date:</label>
                    </div>
                    <div class="position-relative Date_Img">
                        @Html.TextBoxFor(m => m.CartingDate, new { @placeholder = "Select Carting Date", @readonly = true })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>CHA:</label>
                    </div>
                    <div class="position-relative">
                        @Html.HiddenFor(m => m.CHAId)
                        @Html.TextBoxFor(m => m.CHAName, new { @placeholder = "Search CHA", @readonly = true })
                        <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>
                        @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top Form_Space_bottom">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>File No.</label>
                    </div>
                    @Html.TextAreaFor(m => m.Remarks, new { @placeholder = "Enter File No.", @maxlength = 500, @style = "width:100%;height:100px;" })
                    @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                    <div class="Error_Msg" id="DivBBTTCargoMsg" style="background-color:transparent"></div>
                </div>
            </div>
            <div id="DivShipping" class="Head_h5">
                <div class="row Form_Space_top">
                    <div class="col-md-3">
                        <div class="form-group">
                            @Html.Label("Shipping Bill No:", new { @class = "InputLabel" })
                        </div>
                        <div class="position-relative">
                            @Html.Hidden("BTTDetailId", "0")
                            @Html.Hidden("DestuffingEntryDtlId", "0")
                            @Html.Hidden("ShippingId", "0")
                            @Html.TextBox("txtShippingBillNo", "", new { @placeholder = "Search Shipping Bill No.", @onblur = "ClearErrMsg(this)", onkeypress = "return ValidateData(event)", maxlength = "30", @readonly = true })
                            <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingModal"></i></span>
                            <span id="ErrShippingBillNo" class="Error_Msg"></span>
                        </div>
                    </div>
                    <div class="col-md-3 col-md-offset-6">
                        <div class="form-group">
                            @Html.Label("Shipping Bill Date:", new { @class = "InputLabel" })
                        </div>
                        <div class="position-relative Date_Img">
                            @Html.TextBox("txtShippingBillDate", "", new { @placeholder = "Select Date", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label("Cargo Description:", new { @class = "InputLabel" })
                        </div>
                        @Html.TextArea("txtCargoDescription", "", new { @placeholder = "Enter Cargo Description", @style = "width:100%;height:100px;", @readonly = true })
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label("Commodity:", new { @class = "InputLabel" })
                        </div>
                        @Html.Hidden("CommodityId", "0")
                        @Html.TextBox("txtCommodity", "", new { @placeholder = "Enter Commodity", @readonly = true })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.Label("No of Units:", new { @class = "InputLabel" })
                    </div>
                    @Html.TextBox("txtNoOfUnits", "", new { @placeholder = "Enter No of Unit", @readonly = true })
                </div>
                <div class="col-md-3 col-md-offset-6">
                    <div class="form-group">
                        @Html.Label("Gross Weight (Kg):", new { @class = "InputLabel" })
                    </div>
                    @Html.TextBox("txtGrossWeight", "", new { @placeholder = "Enter Gross Weight (Kg)", @readonly = true })
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.Label("BTT Qty:", new { @class = "InputLabel" })
                    </div>
                    @Html.TextBox("txtBTTQty", "", new { @placeholder = "Enter BTT Qty", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyInteger(event)" })
                    <span id="ErrBttQty" class="Error_Msg"></span>
                </div>
                <div class="col-md-3 col-md-offset-6">
                    <div class="form-group">
                        @Html.Label("BTT Weight (Kg):", new { @class = "InputLabel" })
                    </div>
                    @Html.TextBox("txtBTTWeight", "", new { @placeholder = "Enter BTT Weight (Kg.)", @onblur = "ClearErrMsg(this)", onkeypress = "return AllowOnlyDecimal(event)" })
                    <span id="ErrBTTWeight" class="Error_Msg"></span>
                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>

            <div class="d-flex justify-content-left Form_Space_bottom">
                <input type="button" id="btnAddCargoDet" class="btn btn-primary mr-1 btn-100px" value="Add" onclick="AddBTTCargoEntryDet()">
                <input type="button" id="btnResetCargoDet" class="btn btn-primary-border btn-100px" value="Reset" onclick="ResetBTTCargoEntryDet()">
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div id="divBTTDet"></div>
                </div>
            </div>
            <div>
                @Html.HiddenFor(m => m.BTTCargoEntryDtlJS)
                @Html.ValidationMessageFor(m => m.BTTCargoEntryDtlJS)
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>

            <div class="d-flex justify-content-left">
                <input type="submit" id="btnSave" class="btn btn-primary mr-1 btn-100px" value="Save">
                <input type="button" id="btnReset" class="btn btn-primary-border btn-100px" value="Reset" onclick="ResetAllFields()">
            </div>

            <div class="logSuccMsg Form_Space_bottom" id="DivBBTTCargoMsg" style="background-color:transparent"></div>
            <div class="row">
                <div class="col-md-12">
                    <div id="divBTTCargoEntryList"></div>
                </div>
            </div>
        </div>
    </div>


                    <div class="modal fade" id="CHAModal" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List of CHA Names</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="CHAbox" type="text" />
                                    <ul class="navList" id="lstCHA">
                                        @{
                                            foreach (var item in Model.lstCHAList)
                                            {
                                                <li id="@item.CHAId">@item.CHAName</li>
                                            }
                                        }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn btn-primary-border btn-100px" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="CartingNoModal" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List of Carting Application</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="CartingNobox" type="text" />
                                    <ul class="navList" id="lstCarting">
                                        @{
                                            foreach (var item in Model.lstCartingList)
                                            {
                                                <li id="@item.CartingId" att-flag="@item.Flag">@item.CartShip</li>
                                            }
                                        }
                                    </ul>
                                </div>
                                @Html.HiddenFor(m => m.BTTCartingListJS)
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn btn-primary-border btn-100px" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal fade" id="ShippingModal" role="dialog">
                        <div class="modal-dialog">

                            <!-- Modal content-->
                            <div class="modal-content popup_modal">
                                <div class="modal-header popup_header">
                                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                    <h4 class="modal-title">List of Shipping Bills</h4>
                                </div>
                                <div class="modal-body popup_body">
                                    <input placeholder="Search Me" id="Shippingbox" type="text" />
                                    <ul class="navList" id="lstShipping">
                                        @{
                                            foreach (var item in Model.lstCartingDetailList)
                                            {
                                                <li id="@item.CartingDetailId">@item.ShippingBillNo</li>
                                            }
                                        }
                                    </ul>
                                </div>
                                <div class="modal-footer">
                                    <div class="row">
                                        <div class="col-md-offset-6 col-md-6">
                                            <button type="button" class="btn btn-primary-border btn-100px" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                                            }

@Scripts.Render("~/bundles/jqueryval")
<script>
    var r = JSON.parse($("#hdnRights").val());
    if (r.CanAdd == 1) {
        // $('#BtnSaveCartingReg').css('display', 'block');
        $('#btnSave').removeAttr("disabled");

    } else {
        //$('#BtnSaveCartingReg').css('display', 'none');
        $('#btnSave').attr("disabled", true);
    }



    var TimeInSeconds;
    var ArrayCartingNoList = [];
    var ArrayShippingBillList = [];
    $(document).ready(function () {
        ArrayCartingNoList = $.parseJSON($('#BTTCartingListJS').val());
        GetBTTCargoList();
        TimeInSeconds = 5000;
        $("#BTTDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });
    });

    function GetBTTCargoList() {

        $('#divBTTCargoEntryList').load('/Export/Ppg_CWCExport/ListOfBTTCargo');

    }
    $("#Remarks").keyup(function () {
        debugger;
        var Textboxvalue = $("#Remarks").val();


        if (Textboxvalue.length >= 500) {
            alert("File No Should be 500 characters only");
        }


    });

    $('#CHAbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCHA > li').show();
        else {
            $('#lstCHA > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstCHA > li').on("click", function () {
        $('#CHAName').val($(this).text());
        $('#CHAId').val($(this).attr('id'));
        $("#CHAModal").modal("hide");
    });

    $('#CartingNobox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCarting > li').show();
        else {
            $('#lstCarting > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstCarting > li').on("click", function () {
        debugger;

        var cartapp = ($(this).text());
        var cartreg = cartapp.split("-");
        $('#CartingNo').val(cartreg[0]);
        $('#CartingId').val($(this).attr('id'));
        $('#Flag').val($(this).attr('att-flag'));
        GetShippingDetail();
        $("#CartingNoModal").modal("hide");

    });

    $('#Shippingbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstShipping > li').show();
        else {
            $('#lstShipping > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstShipping > li').on("click", function () {
        $('#txtShippingBillNo').val($(this).text());
        $('#ShippingId').val($(this).attr('id'));
        ShippingChange();
        $("#ShippingModal").modal("hide");
    });
</script>
<script>
    var EditIndex = -1;
    var ArrayOfCargoEntryDetails = [];

    function AddBTTCargoEntryDet() {
        if (ValidateBTTCargoEntryDet()) {
            //debugger;
            var CargoEntryDetails = {
                "BTTDetailId": $('#BTTDetailId').val(),
                "CartingDetailId": $('#ShippingId').val(),
                "ShippingBillNo": $('#txtShippingBillNo').val(),
                "ShippingBillDate": $('#txtShippingBillDate').val(),
                "CargoDescription": $('#txtCargoDescription').val(),
                "CommodityId": $('#CommodityId').val(),
                "CommodityName": $('#txtCommodity').val(),
                "NoOfUnits": $('#txtNoOfUnits').val(),
                "GrossWeight": $('#txtGrossWeight').val(),
                "BTTQuantity": $('#txtBTTQty').val(),
                "BTTWeight": $('#txtBTTWeight').val(),
                "DestuffingEntryDtlId": $('#DestuffingEntryDtlId').val(),
            };
            if (EditIndex > -1)
                ArrayOfCargoEntryDetails.splice(EditIndex, 1, CargoEntryDetails);
            else
                ArrayOfCargoEntryDetails.push(CargoEntryDetails);
            RemoveShippingBill($('#ShippingId').val());
            $('#divBTTDet').html('');
            GenerateTable();
            ResetBTTCargoEntryDet();
        }
    }
    function ValidateBTTCargoEntryDet() {
        //debugger;
        var Status = true;
        if ($('#txtShippingBillNo').val() == "") {
            $('#ErrShippingBillNo').html('<span>Fill Out This Field</span>');
            Status = false;
        }
        if ($('#txtBTTQty').val() == "") {
            $('#ErrBttQty').html('<span>Fill Out This Field</span>');
            Status = false;
        }
        if ($('#txtBTTWeight').val() == "") {
            $('#ErrBTTWeight').html('<span>Fill Out This Field</span>');
            Status = false;
        }

        // setTimeout(function () { $('span[id*="Err"]').html(''); }, 2000);
        return Status;
    }
    function GenerateTable() {
        var tablehtml = '<table id="tblBTTDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
            + '<thead><tr><th style="width:10%;text-align:center;">Edit</th><th style="width:10%;text-align:center;">View</th><th style="width:8%;text-align:center;">SL No</th><th>Shipping Bill No</th><th>Shipping Bill Date</th>'
            + '<th>No of Units</th><th>Weight</th></tr></thead><tbody>';
        $.each(ArrayOfCargoEntryDetails, function (i, data) {
            tablehtml += '<tr><td style="text-align:center;"><div class="table_icon"><a href="#" onclick="EditBTTCargoEntryDet(' + i + ')"><i class="fa fa-pencil"></i></a></div></td>'
                                + '<td style="text-align:center;"><div class="table_icon"><a href="#" onclick="ViewBTTCargoEntryDet(' + i + ')"><i class="fa fa-eye"></i></a></div></td>'
                +'<td style="text-align:center;">' + (i + 1) + '</td>'
                +'<td>' + data.ShippingBillNo + '</td>'
                + '<td>' + data.ShippingBillDate + '</td><td>' + data.NoOfUnits + '</td><td>' + data.GrossWeight + '</td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#divBTTDet').html(tablehtml);

        if (ArrayOfCargoEntryDetails.length > 0) {
            $('#BTTCargoEntryDtlJS').val(JSON.stringify(ArrayOfCargoEntryDetails));
        }
        else {
            $('#BTTCargoEntryDtlJS').val('');
        }
    }
    function ResetBTTCargoEntryDet() {
        $('#BTTDetailId, #ShippingId, #CommodityId').val('0');
        $('#txtShippingBillNo, #txtShippingBillDate, #txtCargoDescription, #txtCommodity, #txtNoOfUnits, #txtGrossWeight, #txtBTTQty, #txtBTTWeight').val('');
        $('#btnAddCargoDet').prop("disabled", false);
        EditIndex = -1;
    }
    function EditBTTCargoEntryDet(i) {
        //debugger;
        $('#btnAddCargoDet').prop("disabled", false);
        $('#BTTDetailId').val(ArrayOfCargoEntryDetails[i].BTTDetailId);
        $('#ShippingId').val(ArrayOfCargoEntryDetails[i].CartingDetailId);
        $('#txtShippingBillNo').val(ArrayOfCargoEntryDetails[i].ShippingBillNo);
        $('#txtShippingBillDate').val(ArrayOfCargoEntryDetails[i].ShippingBillDate);
        $('#txtCargoDescription').val(ArrayOfCargoEntryDetails[i].CargoDescription);
        $('#CommodityId').val(ArrayOfCargoEntryDetails[i].CommodityId);
        $('#txtCommodity').val(ArrayOfCargoEntryDetails[i].CommodityName);
        $('#txtNoOfUnits').val(ArrayOfCargoEntryDetails[i].NoOfUnits);
        $('#txtGrossWeight').val(ArrayOfCargoEntryDetails[i].GrossWeight);
        $('#txtBTTQty').val(ArrayOfCargoEntryDetails[i].BTTQuantity);
        $('#txtBTTWeight').val(ArrayOfCargoEntryDetails[i].BTTWeight);
        $('#DestuffingEntryDtlId').val(ArrayOfCargoEntryDetails[i].DestuffingEntryDtlId);


        EditIndex = i;
        GenerateTable();
    }
    function ViewBTTCargoEntryDet(i) {
        $('#BTTDetailId').val(ArrayOfCargoEntryDetails[i].BTTDetailId);
        $('#ShippingId').val(ArrayOfCargoEntryDetails[i].CartingDetailId);
        $('#txtShippingBillNo').val(ArrayOfCargoEntryDetails[i].ShippingBillNo);
        $('#txtShippingBillDate').val(ArrayOfCargoEntryDetails[i].ShippingBillDate);
        $('#txtCargoDescription').val(ArrayOfCargoEntryDetails[i].CargoDescription);
        $('#CommodityId').val(ArrayOfCargoEntryDetails[i].CommodityId);
        $('#txtCommodity').val(ArrayOfCargoEntryDetails[i].CommodityName);
        $('#txtNoOfUnits').val(ArrayOfCargoEntryDetails[i].NoOfUnits);
        $('#txtGrossWeight').val(ArrayOfCargoEntryDetails[i].GrossWeight);
        $('#txtBTTQty').val(ArrayOfCargoEntryDetails[i].BTTQuantity);
        $('#txtBTTWeight').val(ArrayOfCargoEntryDetails[i].BTTWeight);
        $('#DestuffingEntryDtlId').val(ArrayOfCargoEntryDetails[i].DestuffingEntryDtlId);
        $('#btnAddCargoDet').prop("disabled", true);
    }
</script>
<script>
    function ResetAllFields() {
        GetBTTCargoEntry();
    }
    function BTTCargoOnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            if ($('#DivBBTTCargoMsg').hasClass('logErrMsg'))
                $('#DivBBTTCargoMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            //$('#DivBBTTCargoMsg').html(data.Message);
            alert(data.Message);
            setTimeout(GetBTTCargoEntry, TimeInSeconds);
            GetBTTCargoList();
        }
        else {
            if ($('#DivBBTTCargoMsg').hasClass('logSuccMsg'))
                $('#DivBBTTCargoMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            //$('#DivBBTTCargoMsg').html(data.Message);
            alert(data.Message);
        }
    }
    function BTTCargoOnFailure() {
        alert("Error");
    }
    function ValidateGrid() {
        if ($('#BTTCargoEntryDtlJS').val() == '') {
            alert('Back To Town Cargo Entry Details Must Have Data.');
            return false;
        }
        else {
            return true;
        }
    }
</script>
<script>
    function ValidateData(evt) {
        $('#ErrShippingBillNo').html('<span>Fill Out This Field</span>');
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if (CharCode == 32) {
            return true;
        }
        if ((CharCode > 31 & CharCode < 48) || (CharCode > 57 & CharCode < 65) || (CharCode > 90 & CharCode < 97) || (CharCode > 122)) {
            evt.preventDefault();
            return false;
        }
        return true;
    }
    function AllowOnlyDecimal(evt) {
        $('#ErrBTTWeight').html('<span>Fill Out This Field</span>');
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyInteger(evt) {
        $('#ErrBttQty').html('<span></span>');
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function ClearErrMsg(elem) {
        $('[data-valmsg-for="' + elem.id + '"]').html('');
        $('#ErrBttQty').html('<span></span>');
        $('#ErrBTTWeight').html('<span></span>');
        $('#ErrShippingBillNo').html('<span></span>');
    }
</script>
<script>
    function GetShippingDetail() {
        ArrayShippingBillList = [];
        $('#txtShippingBillNo').val('');
        $('#ShippingId').val('0');
        var CartingId = $('#CartingId').val();
        var Flag = $('#Flag').val();
        if (CartingId > 0) {
            $.ajax({
                url: '/Export/Ppg_CWCExport/GetCartingDetailList',
                type: 'GET',
                data: { CartingId: CartingId, Flag: Flag },
                dataType: 'JSON',
                success: function (data) {
                    //debugger;
                    ArrayShippingBillList = data;
                    $('#lstShipping').html('');
                    var item = '';
                    for (i = 0; i < ArrayShippingBillList.length; i++) {
                        item += '<li id="' + ArrayShippingBillList[i].CartingDetailId + '">' + ArrayShippingBillList[i].ShippingBillNo + '</li>';
                    }
                    $('#lstShipping').html(item);

                    $('#lstShipping > li').on("click", function () {
                        $('#txtShippingBillNo').val($(this).text());
                        $('#ShippingId').val($(this).attr('id'));
                        ShippingChange();
                        $("#ShippingModal").modal("hide");
                    });
                }
            });
            //debugger;
            for (i = 0; i < ArrayCartingNoList.length; i++) {
                $('#CartingDate').val();
                if (ArrayCartingNoList[i].CartingId == CartingId) {
                    $('#CartingDate').val(ArrayCartingNoList[i].CartingDate);
                    $('#CHAName').val(ArrayCartingNoList[i].CHAName);
                    $('#CHAId').val(ArrayCartingNoList[i].CHAId);

                    break;
                }
            }
        }
        ShippingChange();
    }
    function ShippingChange() {
        var ShippingId = $('#ShippingId').val();
        if (ShippingId > 0) {
            //debugger;
            $('#txtShippingBillDate').val('');
            $('#txtCargoDescription').val('');
            $('#CommodityId').val('0');
            $('#txtCommodity').val('');
            $('#txtNoOfUnits').val('');
            $('#txtGrossWeight').val('');

            for (i = 0; i < ArrayShippingBillList.length; i++) {
                if (ArrayShippingBillList[i].CartingDetailId == ShippingId) {
                    $('#txtShippingBillDate').val(ArrayShippingBillList[i].ShippingBillDate);
                    $('#txtCargoDescription').val(ArrayShippingBillList[i].CargoDescription);
                    $('#CommodityId').val(ArrayShippingBillList[i].CommodityId);
                    $('#txtCommodity').val(ArrayShippingBillList[i].CommodityName);
                    $('#txtNoOfUnits').val(ArrayShippingBillList[i].NoOfUnits);
                    $('#txtGrossWeight').val(ArrayShippingBillList[i].GrossWeight);
                    $('#DestuffingEntryDtlId').val(ArrayShippingBillList[i].DestuffingEntryDtlId);
                    break;
                }
            }
        }
        else {
            $('#ShippingId').val('');
            $('#txtShippingBillNo').val('');
            $('#txtShippingBillDate').val('');
            $('#txtCargoDescription').val('');
            $('#CommodityId').val('0');
            $('#txtCommodity').val('');
            $('#txtNoOfUnits').val('');
            $('#txtGrossWeight').val('');
        }
    }
    function RemoveShippingBill(CartingId) {
        //debugger;
        //alert('add');
        $('#lstShipping').html('');
        var item = '';
        for (i = 0; i < ArrayShippingBillList.length; i++) {
            if (ArrayShippingBillList[i].CartingDetailId == CartingId) {
                ArrayShippingBillList.splice(i, 1);
            }
        }
        for (i = 0; i < ArrayShippingBillList.length; i++) {
            item += '<li id="' + ArrayShippingBillList[i].CartingDetailId + '">' + ArrayShippingBillList[i].ShippingBillNo + '</li>';
        }
        $('#lstShipping').html(item);
        $('#lstShipping > li').on("click", function () {
            $('#txtShippingBillNo').val($(this).text());
            $('#ShippingId').val($(this).attr('id'));
            ShippingChange();
            $("#ShippingModal").modal("hide");
        });
    }






    $('#txtBTTQty').on('blur', function () {
        if ($('#NoOfUnits').val() != '' && $('#Weight').val() != '' && $('#ActualQty').val() != '') {
            var n = $('#txtNoOfUnits').val();
            var w = $('#txtGrossWeight').val();
            var q = $('#txtBTTQty').val();

            $('#txtBTTWeight').val(((w / n) * q).toFixed(2));
        }
    });
</script>

