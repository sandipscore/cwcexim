
@model CwcExim.Areas.Export.Models.WFLD_CCINEntry
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>CCIN Entry Approval</h4>
                    </div>
                </div>
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id)
                @*@Html.HiddenFor(m => m.InvoiceId)
                @Html.HiddenFor(m => m.PartySDBalance)
                @Html.HiddenFor(m => m.IsInGateEntry)*@

                <div id="DivJOHdr" class="Form_Space_bottom">

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>CCIN No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CCINNo, new { @class = "form-control input_sm", @readonly = true })
                                <span class="search" id="CCINNoSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CCINNoModal"></i></span>
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>CCIN Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.CCINDate, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SB No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.SBId)
                                @Html.TextBoxFor(m => m.SBNo, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>SB Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SBDate, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SB Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.SBType, new List<SelectListItem>
                                                    {
                                                    new SelectListItem {Text="Baggage",Value="1" },
                                                    new SelectListItem {Text="Duty Free Goods",Value="2" },
                                                    new SelectListItem {Text="Cargo in Drawback",Value="3" }
                                                    }, "----Select----", new { @class = "form-control input_sm dropdown", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Exporter:</label>
                            </div>
                            <div class="col-md-10">
                                @Html.HiddenFor(m => m.ExporterId)
                                @Html.TextBoxFor(m => m.ExporterName, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Shipping Line:</label>
                            </div>
                            <div class="col-md-10">
                                @Html.HiddenFor(m => m.ShippingLineId)
                                @Html.TextBoxFor(m => m.ShippingLineName, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>CHA:</label>
                            </div>
                            <div class="col-md-10">
                                @Html.HiddenFor(m => m.CHAId)
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Consignee:</label>
                            </div>
                            <div class="col-md-10">
                                @Html.TextBoxFor(m => m.ConsigneeName, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Consignee Address:</label>
                            </div>
                            <div class="col-md-10">
                                @Html.TextAreaFor(m => m.ConsigneeAdd, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.CountryId)
                            </div>
                            <div class="col-md-2-5">
                                @if (ViewBag.Country != null)
                                {
                                    @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.Country, "CountryId", "CountryName"), "---Select---", new { @class = "form-control input-sm", @onchange = "GetStateList()", @disabled = "disabled" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input" style="display:none">
                            <div class="col-md-1-5">
                                @Html.HiddenFor(m => m.SelectStateId)
                                @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.StateId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @onchange = "GetCityList()", @readonly = true })
                            </div>
                        </div>

                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.HiddenFor(m => m.SelectStateId)
                                @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.PortOfDestName, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                        
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Godown:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control intpu-sm", @readonly = true })
                                @Html.HiddenFor(m => m.GodownId, "0")
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5" style="display:none;">
                                @Html.HiddenFor(m => m.SelectCityId)
                                @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5" style="display:none;">
                                @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Type:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                                {
                                    new SelectListItem {Text="HAZ",Value="1" },
                                    new SelectListItem {Text="NON-HAZ",Value="2" }
                                }, "----Select----", new { @class = "form-control input_sm dropdown", @disabled = "disabled" })
                                @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Port of Loading:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.PortOfLoadingId)
                                @Html.TextBoxFor(m => m.PortOfLoadingName, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt" style="display:none;">
                                <label>Port of Discharge:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5" style="display:none;">
                                @Html.TextBoxFor(m => m.PortOfDischarge, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>No of Package:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Package, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Weight (Kg):</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Commodity:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.CommodityId)
                                @Html.TextBoxFor(m => m.CommodityName, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>FOB:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.FOB, new { @class = "form-control input_sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Approve:</label>
                            </div>
                            <div class="col-md-1" >
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.IsApproved, new { @Value =true})
                                    <label for="IsApproved"><i class="square"></i></label>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row SignUp_space_top2">
                    <div class="col-md-offset-3 col-md-2">
                        <input type="submit" id="btnSave" class="btn log_Btn_sm" onclick="Save();" value="Save" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllField()" />
                    </div>
                </div>
                <div class="logSuccMsg Form_Space_top" id="DivSucMsg" style="background-color:transparent"></div>
                <div class="logErrMsg Form_Space_bottom" id="DivErrMsg" style="background-color:transparent"></div>

                <div class="row">
                    <div class="col-md-2 SignUp_space_bottom">
                        <input type="button" id="BtnCCINEntryApprovalLoad" value="Show List" class="btn log_Btn_sm" onclick="LoadCCINEntryApprovalList()" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="tblEntryDet"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="CCINEntryApprovalList"></div>
                    </div>
                </div>

            </div>

        </div>
    </div>
</div>
<div class="modal fade" id="CCINNoModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of CCIN No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="CCINNobox" type="text" />
                <ul class="navList" id="lstCCINNo">
                    @{
                        if (ViewBag.ListOfCCINNo != null)
                        {
                            foreach (var item in ViewBag.ListOfCCINNo)
                            {
                                <li id="@item.Id">@item.CCINNo</li>
                            }
                        }
                        else
                        {
                            <li></li>
                        }

                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>

    $(function () {
        GenerateEntryTable();
        $('#CCINDate').val('');
    })
    $('#CCINNobox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCCINNo > li').show();
        else {
            $('#lstCCINNo > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstCCINNo > li').on("click", function () {
        $('#CCINNo').val($(this).text());
        $('#Id').val($(this).attr('id'));
        $("#CCINNoModal").modal("hide");
        GetCCINEntryApprovalDetails();
    });

    function GetStateList() {
        //debugger;
        var CountryId = $('#CountryId').val();
        ClearCityDropdown();
        if (CountryId != "") {
            $.ajax({
                url: '/City/GetStatesByCountry',
                type: 'Get',
                data: { CountryId: CountryId },
                async: false,
                success: function (data) {
                    //debugger;
                    if (data.Status == 1) {
                        ClearStateDropdown();
                        $.each(data.Data, function (i, item) {
                            //debugger;
                            var SelectStateId = parseInt($('#SelectStateId').val());
                            $('#StateId').append($('<option></option>').val(item.StateId).html(item.StateName));
                            if (SelectStateId > 0) {
                                $('#StateId').val(SelectStateId);
                            }
                        });
                    }
                    else {
                        ClearStateDropdown();
                    }
                }
            });
        }
        else {
            ClearStateDropdown();
        }
    }
    function GetCityList() {
        //debugger;
        var StateId = $('#StateId').val();
        if (StateId != "") {
            $.ajax({
                url: '/City/GetCitiesByState',
                type: 'Get',
                data: { StateId: StateId },
                async: false,
                success: function (data) {
                    //debugger;
                    if (data.Status == 1) {
                        ClearCityDropdown();
                        $.each(data.Data, function (i, item) {
                            //debugger;
                            var SelectCityId = parseInt($('#SelectCityId').val());
                            $('#CityId').append($('<option></option>').val(item.CityId).html(item.CityName));
                            if (SelectCityId > 0) {
                                $('#CityId').val(SelectCityId);
                            }
                        });
                    }
                    else {
                        ClearCityDropdown();
                    }
                }
            });
        }
        else {
            ClearCityDropdown();
        }
    }
    function ClearStateDropdown() {
        $('#StateId').html("");
        $('#StateId').append($('<option></option>').val("").html("---Select---"));
    }
    function ClearCityDropdown() {
        $('#CityId').html("");
        $('#CityId').append($('<option></option>').val("").html("---Select---"));
    }

    function GetCCINEntryApprovalDetails() {

        if ($('#Id').val() > 0) {
            $.ajax({
                url: '/Export/VLDA_CWCExport/GetCCINEntryApprovalDetails',
                type: 'Get',
                data: { CCINEntryId: $('#Id').val() },
                async: false,
                success: function (data) {
                    debugger;


                    //if (data.nonApproval == "0") {
                    //    $('#btnSave').prop('disabled', true);

                    //    $("#btnsave").attr("disabled", true);
                    //    alert('As Payment not done so can not go for approval');
                    //    return;
                    //}
                    //if (data.nonApproval == "2") {
                    //    $('#btnSave').prop('disabled', true);
                    //    $("#btnsave").attr("disabled", true);
                    //    alert('As Full Payment not done so can not go for approval');
                    //    return;
                    //}
                   
                        $('#btnSave').prop('disabled', false);
                        $('#btnsave').removeAttr('disabled');
                   
                    if (data != null) {
                        $('#CCINNo').val(data.CCINNo);
                        $('#CCINDate').val(data.CCINDate);
                        $('#SBNo').val(data.SBNo);
                        $('#SBDate').val(data.SBDate);
                        $('#SBType').val(data.SBType);
                        $('#ExporterName').val(data.ExporterName);
                        $('#ShippingLineName').val(data.ShippingLineName);
                        $('#CHAName').val(data.CHAName);
                        $('#ConsigneeName').val(data.ConsigneeName);
                        $('#ConsigneeAdd').val(data.ConsigneeAdd);
                        $('#CountryId').val(data.CountryId);
                        $('#StateId').val(data.StateId);
                        $('#CityId').val(data.CityId);
                        $('#SelectStateId').val(data.SelectStateId);
                        $('#SelectCityId').val(data.SelectCityId);
                        $('#PortOfDestName').val(data.PortOfDestName);
                        $('#PortOfLoadingId').val(data.PortOfLoadingId);
                        $('#PortOfLoadingName').val(data.PortOfLoadingName);
                        $('#PortOfDischarge').val(data.PortOfDischarge);
                        $('#Package').val(data.Package);
                        $('#Weight').val(data.Weight);
                        $('#FOB').val(data.FOB);
                        $('#CommodityName').val(data.CommodityName);
                        $('#PartyName').val(data.PartyName);
                        $('#Remarks').val(data.Remarks);
                        $('#CargoType').val(data.CargoType);
                        $('#IsApproved').prop('checked', (data.IsApproved == true));
                        $('#GodownId').val(data.GodownId);
                        $('#GodownName').val(data.GodownName);
                        //if (data.IsApproved == true) {

                        //    $('#IsApproved').prop('checked', true);
                        //}
                        //else {
                        //    $('#IsApproved').prop('checked', false);
                        //}
                        GetStateList();
                        GetCityList();
                        //$('#btnSave').prop('disabled', false);
                    }
                    
                }
            });
        }
       
    }

    function Save() {
        debugger;
        
        if ($('#CCINNo').val() == '' || $('#CCINNo').val() == null) {
            alert('Please Select CCIN No.');
            return false;
        }
        //var x = document.getElementById("IsApproved").checked;
        //if (x == false || x == undefined) {
        //    alert('Please select approve check box');
        //    return false;
        //}
        if (confirm("Are you sure you want to save?")) {
            debugger;
            $.ajax({
                url: '/Export/VLDA_CWCExport/AddEditCCINEntryApproval',
                type: 'Get',
                data: { Id: $('#Id').val(), IsApproved: true },
                async: false,
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        //alert(data.Message);
                        alert('CCIN data approved');
                        ResetAllField();
                    }
                    else {
                        alert("Error.");
                    }


                }
            });
        }
    }

    function ResetAllField() {
        $('#DivBody').load('/Export/VLDA_CWCExport/CCINEntryApproval');
    }

    function LoadCCINEntryApprovalList() {
        $('#tblEntryDet').html('');
        $('#BtnCCINEntryApprovalLoad').hide();
        $('#CCINEntryApprovalList').load('/Export/VLDA_CWCExport/ListOfCCINEntryApproval');
    }

    function GenerateEntryTable() {
        tablehtml = '';
        var tablehtml = '<table id="tblEntryDet" class="table table-striped table-bordered dataTable" style="width:100%;"><thead><tr><th class="text-center">SL No</th><th>CCIN No</th><th class="text-center">CCIN Date</th><th class="text-center">SB No</th><th class="text-center">SB Date</th><th class="text-center">Approve Status</th></tr></thead><tbody>';
        tablehtml += '</tbody></table>';
        $('#tblEntryDet').html(tablehtml);
    }

</script>