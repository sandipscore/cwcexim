@model CwcExim.Areas.Export.Models.DndExportEIR


@{
    AjaxOptions options = new AjaxOptions();
    // options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "EIROnSuccess";
    options.OnFailure = "EIROnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
    @using (Ajax.BeginForm("AddEditExportEIR", "Dnd_CWCExport", options))
    {            @Html.AntiForgeryToken()
                <div class="row">
                    <div class="col-md-12">
                        <h4>EIR</h4>
                    </div>
                </div>
               <div class="row Form_Space_top">
                  <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2">
                    <label>Container No:</label>
                </div>
                <div class="col-md-2-5">
                    <span class="ReQSimbol">*</span>
                    @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                    <span class="search" id="ContModalSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContModal"></i></span>
                    @Html.ValidationMessageFor(m => m.ContainerNo, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-2 col-md-offset-1-5 col_cus_2 col_cus_offset_0_5 padding_rt">
                    <label>Gate Exit Date & Time:</label>
                </div>
                <div class="col-md-2 col_cus_2_5 Date_Img">
                    @Html.TextBoxFor(m => m.GateExitDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                    @Html.ValidationMessageFor(m => m.GateExitDate, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-2 col_cus_2_5">
                        @Html.TextBoxFor(m => m.GateExitTime, new { @readonly = true })
                </div>
            </div>
        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>CFSCode:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.CFSCOde, new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.CFSCOde, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-2 col-md-offset-1-5 col_cus_2 col_cus_offset_0_5 padding_rt">
                                    <label>PortIn Date & Time:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBoxFor(m => m.PortInDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true, Value = DateTime.Now.ToString("dd/MM/yyyy") })
                                    @Html.ValidationMessageFor(m => m.PortInDate, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-2 col_cus_2_5">
                                    <div class="input-group clockpicker" data-placement="left" data-align="top">
                                        @Html.TextBoxFor(m => m.PortIntime, new { @class = "form-control", Value = DateTime.Now.ToString("h:mmtt"), @readonly = true })
                                        <span class="input-group-addon" style="padding:2px 10px;">
                                            <span class="glyphicon glyphicon-time"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Port Of Loading:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.PortOfLoading, new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search" id="PortModalSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PortModal"></i></span>
                                    @Html.ValidationMessageFor(m => m.PortOfLoading, "", new { @class = "Error_Msg" })
                                    @Html.HiddenFor(m=>m.PortOfLoadingid)
                                </div>
                                </div>
                            </div>
                                <div class="row">
                                    <div class="stoke SignUp_space_top2 SignUp_space_bottom2"></div>
                                </div>
                                <div class="row">
                                    <div class="col-md-offset-4 col-md-2">
                                        <input type="button" id="btnSave" class="btn log_Btn_sm" value="Save" />
                                    </div>
                                    <div class="col-md-2">
                                        <input type="button" id="btnReset" class="btn log_Btn_sm" value="Reset" onclick="ResetAllFields()" />
                                    </div>
                                </div>

                                <div class="logSuccMsg Form_Space_top" id="DivMsg" style="background-color:transparent"></div>
                                <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                                    <div id="DivExitThroughGateMsg" style="background-color:transparent"></div>
                                </div>

                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-2">
                                            <input type="button" value="Show List" onclick="LoadEIRList()" class="btn log_Btn_sm" />
                                        </div>
                                        <div class="col-md-offset-5 col-md-3">
                                            <input type="text" placeholder="Search by Container No Or CFSCode " id="SearchEIR" />
                                        </div> 
                                        <div class="col-md-2">
                                            <input type="button" value="Search" onclick="SearEIR()" class="btn log_Btn_sm" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row Form_Space_top">
                                    <div class="form-group Form_Input">
                                        <div class="col-md-12" id="DivListOfEIR">
                                            <table class="table table-bordered table-striped dataTable">
                                                <thead>
                                                    <tr>
                                                        <th>Sl No</th>
                                                        <th>Container No</th>
                                                        <th>CFSCode</th>
                                                        <th>Gate Exit Date & Time</th>
                                                        <th>Port Of Loading</th>
                                                        <th>Port In Date & Time</th>
                                                        <th>Edit</th>
                                                        <th>View</th>
                                                        <th>Delete</th>
                                                    </tr>
                                                </thead>
                                            </table>
                                        </div>
                                    </div>
                                </div>

                                <div id="ContModal" class="modal fade" role="dialog">
                                    <div class="modal-dialog">
                                        <!-- Modal content-->
                                        <div class="modal-content popup_modal">
                                            <div class="modal-header popup_header">
                                                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                                <h4 class="modal-title"> List of Container No</h4>
                                            </div>
                                            <div class="modal-body popup_body">
                                                <input placeholder="Search Me" id="Contbox" type="text" />
                                                <ul class="navList" id="lstCont">
                                                    @{
                                                        if (@ViewBag.LstCFS != null)
                                                        {
                                                            foreach (var item in @ViewBag.LstCFS)
                                                            {
                                                                <li id="@item.ContainerNo" onclick="GetContDet('@item.ContainerNo','@item.GateExitDate','@item.GateExitTime','@item.PortOfLoadingid','@item.PortOfLoading')">@item.ContainerNo</li>
                                                            }
                                                        }
                                                    }
                                                </ul>
                                            </div>
                                            <div class="modal-footer">
                                                <div class="row">
                                                    <div class="col-md-offset-6 col-md-6">
                                                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div id="PortModal" class="modal fade" role="dialog">
                                    <div class="modal-dialog">
                                        <!-- Modal content-->
                                        <div class="modal-content popup_modal">
                                            <div class="modal-header popup_header">
                                                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                                                <h4 class="modal-title"> List of Port</h4>
                                            </div>
                                            <div class="modal-body popup_body">
                                                <input placeholder="Search Me" id="Portbox" type="text" />
                                                <ul class="navList" id="lstPort">
                                                   @{
                                                       if (@ViewBag.ListOfPort != null)
                                                       {
                                                           foreach (var item in @ViewBag.ListOfPort)
                                                           {
                                                            <li id="@item.PortId">@item.PortName</li>
                                                           }
                                                       }
                                                }
                                                </ul>
                                            </div>
                                            <div class="modal-footer">
                                                <div class="row">
                                                    <div class="col-md-offset-6 col-md-6">
                                                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                                        }
                            </div>
                        </div>
                    </div>
                </div>
<script>
    $(document).ready(function () {
        //LoadEIRList();
    });



    $("#PortInDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        maxDate: new Date(),
        changeYear: true,
        showAnima: "fadein",
        onSelect: function (dateText) {
            var From = $('#GateExitDate').val().toString("dd/mm/yyyy");
            var To = $('#PortInDate').val().toString("dd/mm/yyyy");
            var SF = From.split('/');
            var ST = To.split('/');
            var SFyear = SF[2].split(" ");
            var STyear = ST[2].split(" "); //Split Time and Year From InvoiceDate;
            //var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
            //var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
            var FromDate = SF[1] + '/' + SF[0] + '/' + SFyear[0]; // Createing Date In DD/MM/YYYY;
            var ToDate = ST[1] + '/' + ST[0] + '/' + STyear[0]; // Createing Date In DD/MM/YYYY;
            var dt1 = new Date(FromDate);
            var dt2 = new Date(ToDate);
            if (dt1 > dt2) {
                alert("Port In Date Must be Greater Than or Equal To Gate Exit Date !!");
                return false;
            }
            else
                return true;
        },
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });


    $('.clockpicker').clockpicker({
        donetext: 'Done',
        twelvehour: true
    });

    function GetContDet(ContNo,GateExitDt,GateExitTime,PortId,PortName)
    {
        debugger;
        var cont = ContNo.split('_');
        $('#ContainerNo').val(cont[0]);
        $('#CFSCOde').val(cont[1]);
        $('#GateExitDate').val(GateExitDt);
        $('#GateExitTime').val(GateExitTime);
        $('#PortOfLoadingid').val(PortId);
        $('#PortOfLoading').val(PortName);
        $('#ContModal').modal("hide");

    }


    $('#Contbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCont > li').show();
        else {
            $('#lstCont > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#lstPort>li').on("click", function () {
        $('#PortOfLoading').val($(this).text());
        $('#PortOfLoadingid').val($(this).attr('id'));
        $('#PortModal').modal("hide");

    });

    $('#Portbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstPort > li').show();
        else {
            $('#lstPort > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });


    $('#btnSave').on("click", function () {
     if ($('#ContainerNo').val() == "" || $('#ContainerNo').val() == undefined) {
        alert("Select Container No !!");
        return false;
     }
     if ($('#PortOfLoading').val() == "" || $('#PortOfLoading').val() == undefined) {
         alert("Select Port Of Loading !!");
         return false;
     }
        debugger;
        var From = $('#GateExitDate').val().toString("dd/mm/yyyy");
        var To = $('#PortInDate').val().toString("dd/mm/yyyy");
        var SF = From.split('/');
        var ST = To.split('/');
        var SFyear = SF[2].split(" ");
        var STyear = ST[2].split(" "); //Split Time and Year From InvoiceDate;
        //var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
        //var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
        var FromDate = SF[1] + '/' + SF[0] + '/' + SFyear[0]; // Createing Date In DD/MM/YYYY;
        var ToDate = ST[1] + '/' + ST[0] + '/' + STyear[0]; // Createing Date In DD/MM/YYYY;
        var dt1 = new Date(FromDate);
        var dt2 = new Date(ToDate);

        var time = $("#GateExitTime").val();
        var hours = Number(time.match(/^(\d+)/)[1]);
        var minutes = Number(time.match(/:(\d+)/)[1]);
        var AMPM = time.match(/\s?([AaPp][Mm]?)$/)[1];
        if (AMPM == "PM" && hours < 12) hours = hours + 12;
        if (AMPM == "AM" && hours == 12) hours = hours - 12;
        var ExitHours = hours.toString();
        var ExitMinutes = minutes.toString();
        //if (hours < 10) sHours = "0" + sHours;
        //if (minutes < 10) sMinutes = "0" + sMinutes;
        var Ptime = $("#PortIntime").val();
        var Phours = Number(Ptime.match(/^(\d+)/)[1]);
        var Pminutes = Number(Ptime.match(/:(\d+)/)[1]);
        var PAMPM = Ptime.match(/\s?([AaPp][Mm]?)$/)[1];
        if (PAMPM == "PM" && Phours < 12) Phours = Phours + 12;
        if (PAMPM == "AM" && Phours == 12) Phours = Phours - 12;
        var PortInHours = Phours.toString();
        var PortInMinutes = Pminutes.toString();


       if (dt1 > dt2) {
            alert("Port In Date  Must be Greater Than or Equal To Gate exit Date !!");
            return false;
       }
      
       else if ($('#GateExitDate').val() == $('#PortInDate').val() && parseInt(ExitHours) > parseInt(PortInHours)) {
            alert("Port In Time Must be Greater Than or Equal To Gate Exit Time !!");
            return false;
        }
       else if ($('#GateExitDate').val() == $('#PortInDate').val() && parseInt(PortInHours) == parseInt(ExitHours) && parseInt(ExitMinutes) > parseInt(PortInMinutes)) {
            alert("Port In Time Must be Greater Than or Equal To Gate Exit Time !!");
            return false;
        }
        

        else if ($('#ContainerNo').val() == "" || $('#ContainerNo').val() == undefined) {
            alert("Select Container No !!");
            return false;
        }
       
        else {
            var conf = confirm("Are You Sure You Want To Save?");
            if (conf) {
                $('#btnSave').prop("disabled", true);
                $('#btnSave').submit();
                return true;
            }
            else {
                return false;
            }

        }
    });


    function EIROnSuccess(data) {

        debugger;
        if (data.Status == 1 || data.Status == 2) {

            if ($('#DivExitThroughGateMsg').hasClass('logErrMsg'))
                $('#DivExitThroughGateMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
            setTimeout(LoadEIRView,3000);
            //GetExitThroughGateList();
        }

        else {
            if ($('#DivExitThroughGateMsg').hasClass('logSuccMsg'))
                $('#DivExitThroughGateMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivExitThroughGateMsg').html(data.Message);
        }
    }

    function EIROnFailure()
    {

    }
    function LoadEIRView() {
        $('#DivBody').load('/Export/Dnd_CWCExport/CreateExportEIR');
    }

    function ResetAllFields()
    {
        $('#ContainerNo').val('');
        $('#CFSCOde').val('');
        $('#GateExitDate').val('');
        $('#GateExitTime').val('');
        $('#PortOfLoadingid').val(0);
        $('#PortOfLoading').val('');
    }

    function LoadEIRList()
    {
        $('#DivListOfEIR').load('/Export/Dnd_CWCExport/GetAllEIRData');
    }

    function SearEIR() {
        debugger;
        if ($('#SearchEIR').val().trim() == "" || $('#SearchEIR').val().trim() == null) {
            LoadEIRList();
        }
        else {
            $('#DivListOfEIR').load('/Export/Dnd_CWCExport/SearchEIRData?ContNo=' + $('#SearchEIR').val().trim());

        }
    }

</script>