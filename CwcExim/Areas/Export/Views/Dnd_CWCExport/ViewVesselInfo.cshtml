@model CwcExim.Areas.Export.Models.Dnd_VesselInf

<script>

    function LoadVesselInfoPage() {
        $('#DivBody').load('/Export/Dnd_CWCExport/CreateVesselInformation');
    }
    $(document).ready(function () {
        debugger;
        var editTime = $("#CutOfTime").val();
        //alert(editTime);
        if (editTime != null && editTime != "") {
            $("#time").val(editTime);
        }
    });
</script>

@Html.AntiForgeryToken()
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row SignUp_space_bottom">
                    <div class="col-md-12">
                        <h4>Vessel Information</h4>
                    </div>
                </div>


                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            @Html.LabelFor(m => m.VIA)
                        </div>
                        <div class="col-md-2-5">                            
                            @Html.TextBoxFor(m => m.VIA, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.VIA, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-4-5 col_cus_offset_3 col_cus_2 padding_rt">
                            @Html.LabelFor(m => m.Vessel)
                        </div>
                        <div class="col-md-2 col_cus_2_5">                            
                            @Html.TextBoxFor(m => m.Vessel, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.Vessel, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Port of Loading:</label>
                        </div>
                        <div class="col-md-2-5">                            
                            @Html.HiddenFor(m => m.PortOfLoadingId)
                            @Html.TextBoxFor(m => m.PortOfLoadingName, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.PortOfLoadingId, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-4-5 col_cus_offset_3 col_cus_2 padding_rt">
                            <label>Cut Off Time</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.HiddenFor(m => m.CutOfTime)
                            <div class="input-group clockpicker" data-placement="left" data-align="top">
                                <input type="text" id="time" name="time" class="form-control" readonly="readonly" style="background-color:#fff;z-index:0;" />
                                <input type="hidden" id="EditTime" name="EditTime" value="@ViewBag.strTime" />
                                <span class="input-group-addon" style="padding:2px 10px;">
                                    <span class="glyphicon glyphicon-time"></span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Expected Date Of Arrival</label>
                        </div>
                        <div class="col-md-2-5 col_cus_2_5">                            
                            @Html.TextBoxFor(m => m.ETA, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.ETA, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-4-5 col_cus_offset_3 col_cus_2 padding_rt">
                            <label>Expected Date Of Departure</label>
                        </div>
                        <div class="col-md-2">                           
                            @Html.TextBoxFor(m => m.ETD, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.ETD, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                
                @*<div class="row">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.VesselId, new { @class = "InputLabel" })
                            </div>
                            <div class="col-md-4">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.VesselId, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.VesselId, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.VIA)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.VIA, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.VIA, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Vessel)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.Vessel, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.Vessel, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.PortOfLoadingId)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.PortOfLoadingId, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.PortOfLoadingId, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.PortOfLoadingName)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.PortOfLoadingName, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.PortOfLoadingName, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.ETA)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.ETA, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.ETA, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.ETD)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.ETD, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.ETD, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CutOfTime)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.CutOfTime, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.CutOfTime, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CreatedBy)
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.CreatedBy, "", new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.ValidationMessageFor(m => m.CreatedBy, "", new { @class = "Error_Msg" })
                            </div>



                        </div>
                    </div>*@



                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top ClearFix"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-offset-5 col-md-2">
                        <input type="button" id="BtnCountryBack" value="Back" class="btn log_Btn_sm" onclick="LoadVesselInfoPage()" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

