@model CwcExim.Areas.Master.Models.WFLDHTCharges

<script src="~/Areas/Master/Scripts/App/Services/VLDAHTChargesService.js"></script>
<script src="~/Areas/Master/Scripts/App/Controllers/VLDAHTChargesCtrl.js"></script>
<script>
    angular.bootstrap(document.getElementById('VLDAChargesAppDiv'), ['CWCApp']);

</script>


@Html.AntiForgeryToken()
<div id="VLDAChargesAppDiv">
    <div ng-controller="VLDAHTChargesCtrl" id="VLDAHTChargesCtrl">

        <div class="container-fluid">
            <div class="row">
                <div class="SignUp_space_bottom col-md-12 cwc_body">
                    <h5>H&T Charges For Exim Traders<span class="triangle"></span></h5>
                </div>
            </div>
            <div class="row">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        <label>Effective Date:</label>
                        @*<input type="hidden" id="ChargeList" ng-model="ChargeList" name="ChargeList" />*@
                        @Html.HiddenFor(m => m.ChargeList, new { @class = "form-control input-sm" })
                    </div>
                    <div class="col-md-2 col_cus_2_5 Date_Img">
                        <span class="ReQSimbol">*</span>
                        @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                        <label>Charges For:</label>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                      
                        @Html.DropDownListFor(m => m.ChargesFor, new List<SelectListItem>
                        {
                            new SelectListItem { Value="CONT",Text="CONT" },
                            new SelectListItem { Value="CBT",Text="CBT" }
                        }, "----Select----", new { @class = "form-control input-sm dropdown", ng_model = "ChargesFor", ng_change = "OnChargeChange(ChargesFor)" })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        @Html.LabelFor(m => m.OperationType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        <span class="ReQSimbol">*</span>
                       
                        <span>
                            @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem> {
                               new SelectListItem { Value="1",Text="Import"},
                               new SelectListItem {Value="4",Text="Import (RMS)" },
                               new SelectListItem { Value="2",Text="Export"},
                               new SelectListItem { Value="3",Text="General"}}, "----Select----", new { @class = "form-control input-sm dropdown", @onchange = "GetOperationCode()" })
                        </span>
                        @*}*@
                        @Html.ValidationMessageFor(m => m.OperationType, "", new { @class = "Error_Msg" })
                    </div>
                    <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                        <label>Operation Code:</label>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        <span class="ReQSimbol">*</span>
                        @Html.TextBoxFor(m => m.OperationCode, new { @class = "form-control input-sm", @readonly = "readonly" })
                        @Html.HiddenFor(m => m.OperationId)
                        <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal" onclick="GetOperationCode()"></i></span>
                        @Html.ValidationMessageFor(m => m.OperationCode, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            @*<div ng-show="isdis">*@
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        <label>Container Type:</label>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        @*<span class="ReQSimbol">*</span>*@
                        @Html.DropDownListFor(m => m.ContainerType, new List<SelectListItem>
                       {   new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem { Value="1",Text="Empty Container" },
                           new SelectListItem { Value="2",Text="Loaded Container"},
                           new SelectListItem { Value="3",Text="Cargo" },
                           new SelectListItem { Value="4",Text="RMS"}

                       }, new { @class = "form-control input-sm dropdown" })
                        @Html.ValidationMessageFor(m => m.ContainerType, "", new { @class = "Error_Msg" })
                    </div>

                    <div class="col-md-1-5">
                        <input id="IsODC" name="ODC_" type="checkbox" ng-model="IsODC" />
                        <label for="IsODC"><i class="square"></i><span> IsODC</span></label>
                    </div>

                    <div class="col-md-1 col-md-offset-2 col_cus_2 padding_rt">
                        @Html.LabelFor(m => m.Type, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        @*<span class="ReQSimbol">*</span>*@
                        @Html.DropDownListFor(m => m.Type, new List<SelectListItem>
                       {
                           new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem {Value="1",Text="General" },
                           new SelectListItem {Value="2",Text="Heavy/Scrap" }
                       }, new { @class = "form-control input-sm dropdown" })
                        @Html.ValidationMessageFor(m => m.Type, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        @*<span class="ReQSimbol">*</span>*@
                        @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                        {
                            new SelectListItem { Value="20",Text="20" },
                            new SelectListItem { Value="40",Text="40" }
                        }, "----Select----", new { @class = "form-control input-sm dropdown" })
                        @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })

                     
                    </div>
                    <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                        @Html.LabelFor(m => m.MaxDistance, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        @Html.TextBoxFor(m => m.MaxDistance, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.MaxDistance, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        <label>Commodity Type:</label>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        <span class="ReQSimbol">*</span>
                        @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                       {
                           new SelectListItem { Value="1",Text="HAZ"},
                           new SelectListItem { Value="2",Text="Non HAZ"}
                       }, "----Select----", new { @class = "form-control input-sm dropdown" })
                        @*@Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })*@
                    </div>
                    <div style="display:none">
                        <div class="col-md-offset-3 col-md-1-5">
                            <label>Container Load Type:</label>
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="FCL",Value="FCL"},
                               new SelectListItem { Text="LCL",Value="LCL" },
                               new SelectListItem { Text="DD",Value="DD" }
                           })
                        </div>
                    </div>
                </div>
            </div>
            @*</div>*@
            <div class="row Form_Space_top" style="display:none">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        <label>Transport From:</label>
                    </div>
                    <div class="col-md-2 col_cus_2_5">
                        @*<span class="ReQSimbol">*</span>*@
                        @Html.DropDownListFor(m => m.TransportFrom, new List<SelectListItem>
                       {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                           new SelectListItem { Value="L",Text="LONI"},
                           new SelectListItem { Value="T",Text="TKD"}
                       }, new { @class = "form-control input-sm dropdown" })
                        @Html.ValidationMessageFor(m => m.TransportFrom, "", new { @class = "Error_Msg" })
                    </div>
                    <div class="col-md-offset-3 col-md-1-5">
                        <label>Exim Type:</label>
                    </div>
                    <div class="col-md-2">
                        @Html.DropDownListFor(m => m.EximType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="Exim",Value="E"},
                               new SelectListItem { Text="RMS Exim",Value="RE" },
                               new SelectListItem { Text="RMS Non Exim",Value="RNE" }
                           })
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2">
                        <label>Party Name:</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.PartyName, new { @class = "form-control input-sm", @readonly = true })
                        @Html.HiddenFor(x => x.PartyID)
                        <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="PartyBinding()" data-target="#PartyModal"></i></span>
                        @Html.ValidationMessageFor(m => m.PartyName, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="Head_h4 Form_Space_top">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Rate</h4>
                    </div>
                </div>
                <div class="Form_Space_top">

                    <div class="row">
                        <div class="col-md-8 col-md-offset-2">
                            <div class="form-group Form_Input">
                                <div class="col-md-6">
                                    @*<div class="boolean-container">*@
                                    @Html.HiddenFor(m => m.SlabType)
                                    <input id="WithSlab" ng-model="Slab" name="slab" type="radio" value="WithSlab" ng-change="TransPortModeFunc()">
                                    <label for="WithSlab"><i class="circle"></i><span> With Slab</span></label>
                                    @*@Html.RadioButton("Mode", "With Slab", new { @id = "WithSlab", @checked = true, @onclick = "TransPortModeFunc();" })
                                        <label for="WithSlab"><i class="circle"></i><span>With Slab</span></label>*@
                                </div>
                                @*</div>*@

                                <div class="col-md-6">
                                    <div class="boolean-container">
                                        <input id="WithoutSlab" ng-model="Slab" name="slab" type="radio" value="WithoutSlab" ng-change="TransPortModeFunc()">
                                        <label for="WithoutSlab"><i class="circle"></i><span>Without Slab</span></label>
                                        @*@Html.RadioButton("Mode", "Without Slab", new { @id = "WithoutSlab", @onclick = "TransPortModeFunc();" })*@

                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>

                            <div id="chargeslab">
                                <div class="form-group Form_Input">
                                    <div class="col-md-4">
                                        <div class="boolean-container">
                                            <input id="weight" name="weight_slb" type="checkbox" ng-model="WeightSlab" />
                                            @*<input id="weight" name="weight_slb" type="checkbox" ng-model="WeightSlab" ng-disabled="isSlab" />*@
                                            <label for="weight"><i class="square"></i><span>Weight Slab </span></label>
                                        </div>


                                    </div>


                                    <div class="col-md-4">
                                        <div class="boolean-container">
                                            <input id="distence" name="dis_slb" type="checkbox" ng-model="DistanceSlab" />
                                            @*<input id="distence" name="dis_slb" type="checkbox" ng-model="DistanceSlab" ng-disabled="isSlab" />*@
                                            <label for="distence"><i class="square"></i><span>Distance Slab</span></label>
                                        </div>

                                    </div>
                                    <div class="col-md-4">
                                        <div class="boolean-container">
                                            <input id="cbm" name="cbm_slb" type="checkbox" ng-model="CBMSlab" />
                                            @*<input id="cbm" name="cbm_slb" type="checkbox" ng-model="CBMSlab" ng-disabled="isSlab" />*@
                                            <label for="cbm"><i class="square"></i><span>CBM Slab</span></label>
                                        </div>

                                    </div>
                                    <div class="clearfix"></div>
                                </div>


                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                    <div class="form-group Form_Input">
                        <div id="chargeslabFormTo">
                            <div class="col-md-8 col-md-offset-2">
                                <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                    <label>Weight Slab Form:</label>
                                </div>
                                <div class="col-md-2-5 col_cus_2_5">
                                    @Html.TextBoxFor(m => m.FromWtSlabCharge, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.FromWtSlabCharge, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                    <label>Weight Slab To:</label>
                                </div>
                                <div class="col-md-2-5 col_cus_2_5">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBoxFor(m => m.ToWtSlabCharge, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.ToWtSlabCharge, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-8 col-md-offset-2">
                                <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                    <label>Distance Slab Form:</label>
                                </div>
                                <div class="col-md-2-5 col_cus_2_5">
                                    @Html.TextBoxFor(m => m.FromDisSlabCharge, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.FromDisSlabCharge, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                    <label>Distance Slab To:</label>
                                </div>
                                <div class="col-md-2-5 col_cus_2_5">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBoxFor(m => m.ToDisSlabCharge, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.ToDisSlabCharge, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-8 col-md-offset-2">
                                <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                    <label>CBM Slab Form:</label>
                                </div>
                                <div class="col-md-2-5 col_cus_2_5">
                                    @Html.TextBoxFor(m => m.FromCbmSlabCharge, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.FromCbmSlabCharge, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                    <label>CBM Slab To:</label>
                                </div>
                                <div class="col-md-2-5 col_cus_2_5">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBoxFor(m => m.ToCbmSlabCharge, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.ToCbmSlabCharge, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>CWC Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.RateCWC, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.RateCWC, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                <label>Contractor Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.ContractorRate)
                                @Html.ValidationMessageFor(m => m.ContractorRate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>Round Trip Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.RoundTripRate, new { @class = "form-control input-sm" })

                            </div>
                            <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                <label>Empty Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">

                                @Html.TextBoxFor(m => m.EmptyRate)

                            </div>
                        </div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>Port Name:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.PortName, new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.HiddenFor(m => m.PortId)
                                @*@Html.HiddenFor(m => m.PortToDistance)*@
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myPortModal"></i></span>

                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>Additional Weight Charge:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.AddlWtCharges, new { @class = "form-control input-sm" })

                            </div>
                            <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                <label>Additional Distance Charge:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.AddlDisCharges)
                            </div>
                        </div>

                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>Additional Cbm Charge:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.AddlCbmCharges, new { @class = "form-control input-sm" })

                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-4 col-md-2" style="text-align:center">
                            <input type="button" id="BtnHTSave" value="Add" ng-click="AddHTCharges()" class="btn log_Btn_sm" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="BtnResetDtl" value="Reset" class="btn log_Btn_sm" ng-click="ResetDtl()" />
                        </div>
                    </div>
                    <div class="Form_Space_top">
                        <table id="TblAddRow" class="table table-striped table-bordered dataTable" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th style="text-align:center;">SL No.</th>
                                    <th style="text-align:center;">From Weight Slab</th>
                                    <th style="text-align:center;">To Weight Slab</th>
                                    <th style="text-align:center;">From Distance Slab</th>
                                    <th style="text-align:center;">To Distance Slab</th>
                                    <th style="text-align:center;">From CBM Slab</th>
                                    <th style="text-align:center;">To CBM Slab</th>
                                    <th style="text-align:center;">CWC Rate</th>
                                    <th style="text-align:center;">Contractor Rate</th>
                                    <th style="text-align:center;">Round Trip Rate</th>
                                    <th style="text-align:center;">Empty Rate</th>
                                    <th style="text-align:center;">AddlWt. Charges</th>
                                    <th style="text-align:center;">AddlDis. Charges</th>
                                    <th style="text-align:center;">AddlCbm Charges</th>
                                    <th style="text-align:center;">Port Name</th>
                                    @*<th style="text-align:center;">Port From</th>
                                        <th style="text-align:center;">Port To</th>*@
                                    <th style="text-align:center;">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="k in ChargeList">
                                    <th style="text-align:center;">{{$index+1}}</th>
                                    <th style="text-align:center;">{{k.FromWtSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.ToWtSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.FromDisSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.ToDisSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.FromCbmSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.ToCbmSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.CwcRate}}</th>
                                    <th style="text-align:center;">{{k.ContractorRate}}</th>
                                    <th style="text-align:center;">{{k.RoundTripRate}}</th>
                                    <th style="text-align:center;">{{k.EmptyRate}}</th>
                                    <th style="text-align:center;">{{k.AddlWtCharges}}</th>
                                    <th style="text-align:center;">{{k.AddlDisCharges}}</th>
                                    <th style="text-align:center;">{{k.AddlCbmCharges}}</th>
                                    <th style="text-align:center;">{{k.PortName}}</th>
                                    @*<th style="text-align:center;">{{k.PortFromDistance}}</th>
                                        <th style="text-align:center;">{{k.PortToDistance}}</th>*@
                                    <th style="text-align:center;"><a href="#" ng-hide="!ChargeList.length" ng-click="DeleteHTCharges($index)"><i class="fa fa-window-close-o Delete" aria-hidden="true"></i></a></th>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>
            <div class="row">
                <div class="col-md-offset-4 col-md-2" style="text-align:center">
                    <input type="submit" id="BtnSave" value="Save" class="btn log_Btn_sm" ng-click="SaveHTCharges()" />
                </div>
                <div class="col-md-2">
                    <input type="button" id="BtnReset" value="Reset" class="btn log_Btn_sm" ng-click="Reset()" />
                </div>
            </div>
            <div class="logSuccMsg Form_Space_top SignUp_space_bottom2" id="DivMsg" style="background-color:transparent;"></div>
            @*<input type="hidden" id="BindListData"/>*@
            <div class="row">
                <div class="col-md-12">
                    @*<div id="DivHTChargesList"></div>*@
                    <div id="DivHTChargesList">
                        <table id="TblHTCharges" class="table table-striped table-bordered nowrap" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>@Html.DisplayName("SL No")</th>
                                    <th>@Html.DisplayNameFor(m => m.EffectiveDate)</th>
                                    <th>@Html.DisplayNameFor(m => m.OperationCode)</th>
                                    <th style="text-align:center">@Html.DisplayName("Short Description")</th>
                                    <th style="text-align:center">@Html.DisplayName("Charges For")</th>
                                    <th style="text-align:center">@Html.DisplayName("View")</th>
                                    <th style="text-align:center">@Html.DisplayName("Edit")</th>
                                </tr>
                            </thead>
                            <tbody>
                                @*<tr ng-repeat="viewlst in lists">
                                        <td>{{$index+1}}</td>
                                        <td>{{viewlst.EffectiveDate | date:'MM/dd/yyyy'}}</td>
                                        <td>{{viewlst.OperationCode}}</td>
                                        <td>{{viewlst.OperationDesc}}</td>
                                        <td>{{viewlst.ChargesFor}}</td>
                                        <td style="text-align:center"><a href="#" ng-click="ViewHTCharges(viewlst.HTChargesId)"><i class="fa fa-search-plus Edit" aria-hidden="true"></i></a></td>
                                        <td style="text-align:center"><a href="#" ng-click="EditHTCharges(viewlst.HTChargesId)"><i class="fa fa-pencil-square Edit"></i></a></td>
                                    </tr>*@
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*}*@
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Operation Code</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="OperationList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="myPortModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Portbox" type="text" />
                <ul class="navList" id="PortList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="PartyModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal" onclick="closePartyModel()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">Choose Party Name</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Party Name Or Party Code" type="text" id="txtPartyCode" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="PartySearch()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;text-align:left;">
                    <thead>
                        <tr>
                            <th colspan="8" style="text-align:left;" width="80%">Party Name</th>
                            <th colspan="4" width="20%">Party Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll" style="overflow: scroll; width: auto; height: 250px;">
                    <table class="table dataTable table-bordered table-striped slim_tble">
                        <tbody id="tbleParty"></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        <button type="button" id="txtLoadMoreParty" style="width:100%; margin-left:0;" onclick="LoadPartyList()" class="btn log_Btn_sm">Load More Data</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="closePartyModel()" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function(){
        var TblHTCharges=$('#TblHTCharges').DataTable({
            "bFilter":false,
            "bInfo":false,
            "pageLength": 50,
            "aoColumns":[
                {"sName":"SL No","width": "8%"},
                {"sName":"Effective Date","width": "15%"},
                {"sName":"Operation Code","bSortable":false},
                {"sName":"Short Description","bSortable":false},
                {"sName":"Charges For","bSortable":false},
                {"sName":"View","bSortable":false,"width":"10%"},
                {"sName":"Edit","bSortable":false,"width":"10%"}
            ],
            "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
                $('td:eq(0),td:eq(5),td:eq(6)', nRow).addClass("text-center");
            }
        });
       
        new $.fn.dataTable.FixedHeader(TblHTCharges);
        GetPort();
       
    });
   
    $("#EffectiveDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
        }
    });


    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('#OperationList').on("click",'li', function () {
        debugger;
        var OperationId = $(this).attr('id');
        var Code = $(this).text();
        $('#OperationCode').val(Code);
        $('#OperationId').val(OperationId);
        angular.element(document.getElementById('VLDAHTChargesCtrl')).scope().GetSlab();
        //GetSlab();
        // $("#myModal").modal("hide");
    });

   
  

    function GetOperationCode()
    {
        debugger;
        var Opercode=@Html.Raw(Json.Encode(Model.LstOperation));
        $('#OperationCode').val('');
        $('#OperationId').val('');
       
        $('#OperationList').html('');
        var OperationListHtml="";
        $.each(Opercode,function(i,item)
        {
            //if($('#OperationType').val()==item.Type)
            //{
                OperationListHtml+='<li id='+item.OperationId+' data-dismiss="modal">'+item.Code+'</li>';
            //}
        });
        $('#OperationList').html(OperationListHtml);
    }
    $('#Portbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#PortList').on("click",'li', function () {
        debugger;
        var PortId = $(this).attr('id');
        var PortName = $(this).text();
        $('#PortName').val(PortName);
        $('#PortId').val(PortId);
        var PortJson=@Html.Raw(Json.Encode(Model.LstPort));
        //var Distance = $.grep(PortJson, function (item) { return item.PortId == PortId; })[0].Distance;
        //$('#PortToDistance').val(Distance);
        // $("#myModal").modal("hide");
    });
    function GetPort()
    {
        debugger;
        var Port=@Html.Raw(Json.Encode(Model.LstPort));
        $('#PortName').val('');
        $('#PortId').val('');
        var PortListHtml="";
        $('#PortList').html('');
        $.each(Port,function(i,item)
        {
            PortListHtml+='<li id='+item.PortId+' data-dismiss="modal">'+item.PortName+'</li>';
        });
        $('#PortList').html(PortListHtml);
    }
    function ViewHTCharges(HTChargesId)
    {
        debugger;
        angular.element('#VLDAHTChargesCtrl').scope().ViewHTCharges(HTChargesId);
    }
    function EditHTCharges(HTChargesId)
    {
        debugger;
        angular.element('#VLDAHTChargesCtrl').scope().EditHTCharges(HTChargesId);
    }
    function PartySearch() {
        debugger;
        //pPage += 1;

        $.ajax({
            url: '/Master/VLDAMaster/GetPartyNameForEximTraders',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 1, 'PartyCode': $('#txtPartyCode').val() },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                    //$('#hdnPartyPayee').val(JSON.stringify(data.Data.LstPartyDetails));
                    var EcJson = data.Data.LstPartyDetails;


                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="selectParty(' + item.PartyId + ',&quot;' + item.PartyName + '&quot;);"><td colspan="8" width="80%">' + item.PartyName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PartyCode + '</td></tr>';
                    });
                    $('#tbleParty').html(html);
                    if (data.Data.StatePayer == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });




    }
    function PartyBinding() {
        debugger;
        //pPage += 1;
        $('#txtPartyCode').val('');
        $.ajax({
            url: '/Master/VLDAMaster/GetPartyNameForEximTraders',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 1, 'PartyCode': '' },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                    //$('#hdnPartyPayee').val(JSON.stringify(data.Data.LstPartyDetails));
                    var EcJson = data.Data.LstPartyDetails;


                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="selectParty(' + item.PartyId + ',&quot;' + item.PartyName + '&quot;);"><td colspan="8" width="80%">' + item.PartyName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PartyCode + '</td></tr>';
                    });
                    $('#tbleParty').html(html);
                    if (data.Data.StatePayer == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });

    }

    function selectParty(PartyId, PartyName) {
        debugger;
        $('#PartyID').val(PartyId);
        $('#PartyName').val(PartyName);

        $("#PartyModal").modal("hide");
    }

    var pPage = 0;
    function LoadPartyList() {
        debugger;
        pPage += 1;
        $.ajax({
            url: '/Master/VLDAMaster/GetPartyNameForEximTraders',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': pPage, 'PartyCode': '' },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                    //$('#hdnPartyPayee').val(data.Data.LstPartyDetails);
                    var EcJson = data.Data.LstPartyDetails;


                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="selectParty(' + item.PartyId + ',&quot;' + item.PartyName + '&quot;);"><td colspan="8" width="80%">' + item.PartyName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PartyCode + '</td></tr>';
                    });
                    $('#tbleParty').append(html);
                    if (data.Data.StatePayer == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });

    }

    function closePartyModel() {
        partyPage = 1;
        $("#PartyModal").modal("hide");
    }

    $('#txtPartyCode').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#tbleParty > tr > td').show();
        else {
            $('#tbleParty > tr >td').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

</script>