@model CwcExim.Areas.Master.Models.PPGHTCharges
@using (Ajax.BeginForm("AddEditHTCharges", "LoniHTCharges", new AjaxOptions
{
    Confirm = "Are you sure you want to save?",
    HttpMethod = "POST",
    InsertionMode = InsertionMode.InsertAfter,
    OnSuccess = "HTOnSuccess",
    OnFailure = "HTOnFailure"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m=>m.HTChargesId)
    <div class="container-fluid">
        <div class="row">
            <div class="SignUp_space_bottom col-md-12 cwc_body">
                <h5>Others<span class="triangle"></span></h5>
            </div>
        </div>
                    <div class="row">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Effective Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Operation Type:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <span class="ReQSimbol">*</span>
                                @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem>{
                           new SelectListItem { Value="1",Text="Import"},
                           new SelectListItem { Value="2",Text="Export"},
                           new SelectListItem { Value="3",Text="General"}
                       }, "----Select----", new { @class = "form-control input-sm dropdown",@onchange= "GetOperationCode()" })
                                @Html.ValidationMessageFor(m => m.OperationType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                               <label>Operation Code:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.OperationCode, new { @class = "form-control input-sm" ,@readonly="readonly"})
                                @Html.HiddenFor(m => m.OperationId)
                                @*<span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>*@
                                @Html.ValidationMessageFor(m => m.OperationCode, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                               <label>Container Type:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.DropDownListFor(m => m.ContainerType, new List<SelectListItem>
                       {
                                new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem { Value="1",Text="Empty Container" },
                           new SelectListItem { Value="2",Text="Loaded Container"},
                           new SelectListItem {Value="3",Text="Cargo" },
                           new SelectListItem {Value="4",Text="RMS" }
                       },  new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.ContainerType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-3 col_cus_2">
                                @Html.LabelFor(m => m.Type, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.DropDownListFor(m => m.Type, new List<SelectListItem>
                       {
                               new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem {Value="1",Text="General" },
                           new SelectListItem {Value="2",Text="Heavy/Scrap" }
                       },  new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.Type, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    @*<div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Description, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextAreaFor(m => m.Description, new { @style = "width:100%;height:75px;" })
                                @Html.ValidationMessageFor(m => m.Description, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>*@
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                       {
                   new SelectListItem { Value="0",Text="----Select----" ,Selected=true},
                           new SelectListItem { Value="20",Text="20" },
                           new SelectListItem { Value="40",Text="40" }
                       }, new { @class = "form-control input-sm dropdown" })
                               
                            </div>
                            <div class="col-md-1-5 col-md-offset-3 col_cus_2">
                                @Html.LabelFor(m => m.MaxDistance, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.MaxDistance, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.MaxDistance, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    @*<div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Commodity Type:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <span class="ReQSimbol">*</span>
                                @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                       {
                           new SelectListItem { Value="1",Text="HAZ"},
                           new SelectListItem { Value="2",Text="Non HAZ"}
                       }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                            </div>
                            
                        </div>
                    </div>*@
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Commodity Type:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <span class="ReQSimbol">*</span>
                                @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                       {
                           new SelectListItem { Value="1",Text="HAZ"},
                           new SelectListItem { Value="2",Text="Non HAZ"}
                       }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-3 col-md-1-5">
                                <label>Container Load Type:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="FCL",Value="FCL"},
                               new SelectListItem { Text="LCL",Value="LCL" },
                               new SelectListItem { Text="DD",Value="DD" }
                           }, new { })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Transport From:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.DropDownListFor(m => m.TransportFrom, new List<SelectListItem>
                       {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                           new SelectListItem { Value="L",Text="LONI"},
                           new SelectListItem { Value="T",Text="TKD"}
                       }, new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.TransportFrom, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-3 col-md-1-5">
                                <label>Exim Type:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.EximType, new List<SelectListItem>
                           {
                               //new SelectListItem { Text="----Select----",Value=""},
                               new SelectListItem { Text="Exim",Value="E"},
                               new SelectListItem { Text="RMS Exim",Value="RE" },
                               new SelectListItem { Text="RMS Non Exim",Value="RNE" }
                           }, "----Select----",new {  })
                            </div>
                        </div>
                    </div>
                    <div class="Head_h5 Form_Space_top">
                        <div class="row">
                            <div class="col-md-12">
                                <h5>Rate</h5>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>CWC Rate:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5">
                                    @Html.TextBoxFor(m => m.RateCWC, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.RateCWC, "", new { @class = "Error_Msg" })
                                </div>
                              
                                <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                                   <label>Contractor Rate:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.ContractorRate)
                                    @Html.ValidationMessageFor(m => m.ContractorRate, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top ClearFix"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2" style="text-align:center">
                            <input type="submit" id="BtnSave" value="Save" class="btn log_Btn_sm" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="BtnReset"  value="Back" class="btn log_Btn_sm" onclick="LoadHTChargesPage()" />
                        </div>
                    </div>
                    <div class="logSuccMsg SignUp_space_bottom2 Form_Space_top" id="DivMsg" style="background-color:transparent;"></div>
                </div>
}
@Scripts.Render("~/bundles/jqueryval")
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">List of Operation Code</h4>
            </div>
            <div class="modal-body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="OperationList"></ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>
    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
 
    $('.navList').on("click",'li', function () {
        debugger;
        //var OperationId = $(this).html();
        var OperationId = $(this).attr('id');
        var Code = $(this).text();
        $('#OperationCode').val(Code);
        $('#OperationId').val(OperationId);
        $("#myModal").modal("hide");
    });
     function GetOperationCode()
    {
        var Opercode=@Html.Raw(Json.Encode(Model.LstOperation));
        $('#OperationCode').val('');
        $('#OperationId').val('');
        var OperationListHtml="";
        $('#OperationList').html('');
        $.each(Opercode,function(i,item)
        {
            if($('#OperationType').val()==item.Type)
            {
                OperationListHtml+='<li id='+item.OperationId+'>'+item.Code+'</li>';
            }
        });
        $('#OperationList').html(OperationListHtml);
    }
    function LoadHTChargesPage(){
        $('#DivBody').load('/Master/LoniHTCharges/CreateHTCharges')
    }
    function HTOnSuccess(data)
    {
        if(data.Status==1||data.Status==2)
        {
            if($('#DivMsg').hasClass('logErrMsg'))
                $('#DivMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivMsg').html(data.Message);
            LoadHTChargesPage();
        }
        else
        {
            if($('#DivMsg').hasClass('logSuccMsg'))
                $('#DivMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMsg').html(data.Message);
        }
        setTimeout(function(){$('#DivMsg').html('');},5000);
    }
    function HTOnFailure() { }

    //$("#EffectiveDate").datepicker({
    //    dateFormat: "dd/mm/yy",
    //    showOn: "button",
    //    buttonImage: "/Content/images/calendar.png",
    //    buttonImageOnly: true,
    //    buttonText: "Select date",
    //    changeMonth: true,
    //    changeYear: true,
    //    showAnima: "fadein",
    //    onClose: function () {
    //        $(".Date_Img .Error_Msg").text("");
    //    }
    //});
</script>
<style>
    ul li {
        list-style: none;
    }

    .navList {
        margin-top: 10px;
        padding: 10px;
        height: 150px;
        overflow: auto;
        border: 1px solid #333;
    }

    #box {
        width: 100%;
        border: 1px solid #333;
        border-radius: 2px;
        padding: 5px;
    }

    .search {
        top: 2px;
        right: 20px;
        /* float: left; */
        display: block;
        position: absolute;
        cursor: pointer;
    }

    .la {
        line-height: 38px;
    }
</style>

