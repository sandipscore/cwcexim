@model CwcExim.Areas.Master.Models.PPGHTCharges
<div class="container-fluid">
    <div class="row">
        <div class="SignUp_space_bottom col-md-12 cwc_body">
            <h5>Others<span class="triangle"></span></h5>
        </div>
    </div>
    <div class="row">
        <div class="form-group Form_Input">
            <div class="col-md-1-5 col_cus_2 padding_rt">
                <label>Effective Date:</label>
            </div>
            <div class="col-md-2 col_cus_2_5 Date_Img">
                @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
            </div>
        </div>
    </div>
    <div class="row Form_Space_top">
        <div class="form-group Form_Input">
            <div class="col-md-1-5 col_cus_2 padding_rt">
                <label>Operation Type:</label>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @if (Model.OperationType == 1)
                {
                    @Html.TextBox("OperationType", "Import")
                }
                else if (Model.OperationType == 2)
                {
                    @Html.TextBox("OperationType", "Export")
                }
                else
                {
                    @Html.TextBox("OperationType", "General")
                }
            </div>
            <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                <label>Operation Code:</label>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @Html.TextBoxFor(m => m.OperationCode, new { @class = "form-control input-sm" })
            </div>
        </div>
    </div>
    <div class="row Form_Space_top">
        <div class="form-group Form_Input">
            <div class="col-md-1-5 col_cus_2 padding_rt">
                <label>Container Type:</label>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @if (Model.ContainerType == 1)
                {
                    @Html.TextBox("ContainerType", "Empty Container")
                }
                else if (Model.ContainerType == 2)
                {
                    @Html.TextBox("ContainerType", "Loaded Container")
                }
                else if (Model.ContainerType == 3)
                {
                    @Html.TextBox("ContainerType", "Cargo")
                }
                else if (Model.ContainerType == 4)
                {
                    @Html.TextBox("ContainerType", "RMS")
                }
                else
                {
                    @Html.TextBox("ContainerType", "")
                }
            </div>
            <div class="col-md-1-5 col-md-offset-3 col_cus_2">
                @Html.LabelFor(m => m.Type, new { @class = "InputLabel" })<span class="LabelColon">:</span>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @if (Model.Type == 1)
                {
                    @Html.TextBox("Type", "General")
                }
                else if (Model.Type == 2)
                {
                    @Html.TextBox("Type", "Heavy/Scrap")
                }
                else
                {
                    @Html.TextBox("Type", "")
                }
            </div>
        </div>
    </div>
    @*<div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5">
                    @Html.LabelFor(m => m.Description, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-10-5">
                    @Html.TextAreaFor(m => m.Description, new { @style = "width:100%;height:75px;"})
                </div>
            </div>
        </div>*@
    <div class="row Form_Space_top">
        <div class="form-group Form_Input">
            <div class="col-md-1-5 col_cus_2">
                @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @Html.TextBoxFor(m => m.Size, new { @class = "form-control input-sm" })
            </div>
            <div class="col-md-1-5 col-md-offset-3 col_cus_2">
                @Html.LabelFor(m => m.MaxDistance, new { @class = "InputLabel" })<span class="LabelColon">:</span>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @Html.TextBoxFor(m => m.MaxDistance, new { @class = "form-control input-sm" })
            </div>
        </div>
    </div>
    @*<div class="row Form_Space_top">
        <div class="form-group Form_Input">
            <div class="col-md-1-5 col_cus_2 padding_rt">
                <label>Commodity Type:</label>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @if (Model.CommodityType == 1)
                {
                    @Html.TextBox("CommodityType", "HAZ")
                }
                else
                {
                    @Html.TextBox("CommodityType", "Non HAZ")
                }
            </div>

        </div>
    </div>*@
    @*<div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2 padding_rt">
                    <label>Commodity Type:</label>
                </div>
                <div class="col-md-2 col_cus_2_5">
                    <span class="ReQSimbol">*</span>
                    @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
               {
                   new SelectListItem { Value="1",Text="HAZ"},
                   new SelectListItem { Value="2",Text="Non HAZ"}
               }, "----Select----", new { @class = "form-control input-sm dropdown" })
                    @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                </div>

            </div>
        </div>*@
    <div class="row Form_Space_top">
        <div class="form-group Form_Input">
            <div class="col-md-1-5 col_cus_2 padding_rt">
                <label>Commodity Type:</label>
            </div>
            <div class="col-md-2 col_cus_2_5">
                <span class="ReQSimbol">*</span>
                @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                       {
                           new SelectListItem { Value="1",Text="HAZ"},
                           new SelectListItem { Value="2",Text="Non HAZ"}
                       }, "----Select----", new { @class = "form-control input-sm dropdown", @disabled = true })
                @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
            </div>
            <div class="col-md-offset-3 col-md-1-5">
                <label>Container Load Type:</label>
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="FCL",Value="FCL"},
                               new SelectListItem { Text="LCL",Value="LCL" },
                               new SelectListItem { Text="DD",Value="DD" }
                           }, new { @disabled = true })
            </div>
        </div>
    </div>
    <div class="row Form_Space_top">
        <div class="form-group Form_Input">
            <div class="col-md-1-5 col_cus_2 padding_rt">
                <label>Transport From:</label>
            </div>
            <div class="col-md-2 col_cus_2_5">
                @*<span class="ReQSimbol">*</span>*@
                @Html.DropDownListFor(m => m.TransportFrom, new List<SelectListItem>
                       {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                           new SelectListItem { Value="L",Text="LONI"},
                           new SelectListItem { Value="T",Text="TKD"}
                       }, new { @class = "form-control input-sm dropdown", @disabled = true })
                @Html.ValidationMessageFor(m => m.TransportFrom, "", new { @class = "Error_Msg" })
            </div>
            <div class="col-md-offset-3 col-md-1-5">
                <label>Exim Type:</label>
            </div>
            <div class="col-md-2">
                @Html.DropDownListFor(m => m.EximType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value=""},
                               new SelectListItem { Text="Exim",Value="E"},
                               new SelectListItem { Text="RMS Exim",Value="RE" },
                               new SelectListItem { Text="RMS Non Exim",Value="RNE" }
                           }, new { @disabled = true })
            </div>
        </div>
    </div>
    <div class="Head_h5 Form_Space_top">
        <div class="row">
            <div class="col-md-12">
                <h5>Rate</h5>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    <label>CWC Rate:</label>
                </div>
                <div class="col-md-2 col_cus_2_5">
                    @Html.TextBoxFor(m => m.RateCWC, new { @class = "form-control input-sm" })
                </div>
                <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                    <label>Contractor Rate:</label>
                </div>
                <div class="col-md-2 col_cus_2_5">
                    <span class="ReQSimbol">*</span>
                    @Html.TextBoxFor(m => m.ContractorRate)
                    @Html.ValidationMessageFor(m => m.ContractorRate, "", new { @class = "Error_Msg" })
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
    </div>
    <div class="row SignUp_space_bottom">
        <div class="col-md-offset-5 col-md-2" style="text-align:center">
            <input type="button" id="BtnBack" value="Back" onclick="LoadHTCharges()" class="btn log_Btn_sm" />
        </div>
    </div>
</div>
<script>
    $(function () {
        $('input[type="text"]').prop('readonly', true);
        $('#Description').prop('disabled', true);
    });
    function LoadHTCharges() {
        $('#DivBody').load('/Master/LoniHTCharges/CreateHTCharges');
    }
</script>