@model CwcExim.Areas.Master.Models.PPGRailFreight

@using (Ajax.BeginForm("AddEditRailFreightFees", "PPGRailFreight", new AjaxOptions
{
    Confirm = "Are you sure you want to Save?",
    HttpMethod = "POST",
    OnSuccess = "RailFreightOnSuccess",
    OnFailure = "RailFreightOnFailure"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.RailFreightId)

    <div class="row">
        <div class="col-md-12 SignUp_space_bottom cwc_body">
            <h5>Rail Freight<span class="triangle"></span></h5>
        </div>
    </div>

        <div class="row Form_Space_top">
            <div class="col-md-3">
                <div class="form-group">
                    <span class="ReQSimbol">*</span>
                    <label>Effective Date:</label>
                    <div class="position-relative Date_Img">
                        @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Operation Type:</label>
                    @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem> {
                        new SelectListItem { Text="----Select----",Value="0"},
                        new SelectListItem { Text="Import",Value="1"},
                        new SelectListItem { Text="Export",Value="2"} }, new { @class = "dropdown" })
                    @Html.ValidationMessageFor(m => m.OperationType, "", new { @class = "Error_Msg" })
                </div>
            </div>
            <div class="col-md-3">
                <span class="ReQSimbol">*</span>
                <label>Operation Code:</label>
                @Html.LabelFor(m => m.Port, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                @if (Model.LstPort.Count > 0)
                {
                    @Html.DropDownListFor(m => m.Port, new SelectList(Model.LstPort, "PortId", "PortName"), "---Select---", new { @class = "dropdown" })
                    @Html.ValidationMessageFor(m => m.Port, "", new { @class = "Error_Msg" })
                }
                else
                {
                    @Html.DropDownListFor(m => m.Port, Enumerable.Empty<SelectListItem>(), "----Select----")
                    @Html.ValidationMessageFor(m => m.Port, "", new { @class = "Error_Msg" })
                }
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <span class="ReQSimbol">*</span>
                    <label>Via:</label>
                    @if (Model.LstLocation.Count > 0)
                    {
                        @Html.DropDownListFor(m => m.LocationId, new SelectList(Model.LstLocation, "LocationId", "LocationName"), "---Select---", new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "Error_Msg" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.LocationId, Enumerable.Empty<SelectListItem>(), "----Select----")
                        @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "Error_Msg" })
                    }
                </div>
            </div>
        </div>

            <div class="row Form_Space_top">
                <div class="col-md-4">
                    <span class="ReQSimbol">*</span>
                    <label>Container Type:</label>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.ContainerType, new List<SelectListItem> {
                        new SelectListItem { Text="Empty Container",Value="1"},
                        new SelectListItem { Text="Loaded Container",Value="2"} }, "----Select----", new { @class = "dropdown" })
                            @Html.ValidationMessageFor(m => m.ContainerType, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem> {
                   new SelectListItem { Text="----Select----",Value="0"},
                        new SelectListItem { Text="HAZ",Value="1"},
                        new SelectListItem { Text="Non HAZ",Value="2"} }, new { @class = "dropdown" })
                            @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Container Size:</label>
                        @Html.DropDownListFor(m => m.ContainerSize, new List<SelectListItem>
                   {
                        new SelectListItem { Text="20",Value="20"},
                        new SelectListItem { Text="40",Value="40"},
                        new SelectListItem { Text="ODC",Value="ODC"},
                   }, "----Select----")
                    </div>
                </div>

                <div class="col-md-2">
                    <label>From (Ft/Metric):</label>
                    <div class="form-group">
                        @Html.TextBoxFor(m => m.FromMetric, new { @class = "", @type = "decimal" })
                        @Html.ValidationMessageFor(m => m.FromMetric, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label>To (Ft/Metric):</label>
                        @Html.TextBoxFor(m => m.ToMetric, new { @class = "", @type = "decimal" })
                        @Html.ValidationMessageFor(m => m.ToMetric, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        @Html.LabelFor(m => m.Rate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        @Html.TextBoxFor(m => m.Rate, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.Rate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>

            <div class="d-flex justify-content-left">
                <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save">
                <input type="button" class="btn btn-primary-border btn-100px" value="Back" onclick="LoadEntryFeesView()">
            </div>

                <div class="logErrMsg Form_Space_top SignUp_space_bottom2" id="DivEntrySuc" style="background-color:transparent"></div>

}
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of SAC Code</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="PartyList">
                    @{
                        if (ViewBag.ListOfSAC != null)
                        {
                            foreach (var item in ViewBag.ListOfSAC)
                            {
                                <li id="@item">@item</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    function LoadEntryFeesView() {
        $('#DivFreight').load('/Master/PPGRailFreight/CreateRailFreight');

    }
    function RailFreightOnSuccess(data) {
        if (data.Status == 2) {
            $('#DivEntrySuc').html(data.Message);
            // LoadEntryFeesView();
        }
        else {

            if ($('#DivEntrySuc').hasClass('logSuccMsg'))
                $('#DivEntrySuc').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntrySuc').html(data.Message);
        }
    }
    function RailFreightOnFailure(data) {


    }

    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('.navList li').on("click", function () {
        $('#SacCode').val($(this).text());
        $("#myModal").modal("hide");
    });
</script>