@model CwcExim.Areas.Master.Models.CHNMiscellaneous

<script>
    var TimeInSeconds;
    $(document).ready(function(){
        GetMiscellaneousList();
        TimeInSeconds=5000;
    });
    $('#MiscEffectiveDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select Date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $('[data-valmsg-for="EffectiveDate"]').html('<span></span>');
        }
    });
    function GetMiscellaneousList() {
        $('#DivMiscellaneousList').load('/Master/CHNMaster/GetMiscellaneousList');
    }
    function MiscellaneousReset() {
        $('#DivAddMiscellaneous').find('input:text').val('');
        $('[data-valmsg-for]').html('<span></span>');
        $('#DivAddMiscellaneous #DivMiscellaneousMsg').html("");
        $('#DivAddMiscellaneous #DivMiscellaneousErrMsg').html("");
    }
    function MiscellaneousOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivEditMiscellaneous #DivMiscellaneousMsg').hasClass('logErrMsg'))
                $('#DivEditMiscellaneous #DivMiscellaneousMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivAddMiscellaneous #DivMiscellaneousMsg').html(data.Message);
            setTimeout(MiscellaneousReset, TimeInSeconds);
            GetMiscellaneousList();
        }
        else if(data.Status==2){
            $('[data-valmsg-for="Fumigation"]').html('<span>' + data.Message + '</span>');
        }
        else if (data.Status == 3) {
            $('[data-valmsg-for="Washing"]').html('<span>'+data.Message+'</span>');
        }
        else if (data.Status == 4) {
            $('[data-valmsg-for="Reworking"]').html('<span>'+data.Message+'</span>');
        }
        else if (data.Status == 5) {
            $('[data-valmsg-for="Bagging"]').html('<span>'+data.Message+'</span>');
        }
        else if (data.Status == 6) {
            $('[data-valmsg-for="Palletizing"]').html('<span>' + data.Message + '</span>');
        }
        else if (data.Status == 7) {
            $('[data-valmsg-for="PrintingCharges"]').html('<span>' + data.Message + '</span>');
        }
        else {
            $('#DivAddMiscellaneous #DivMiscellaneousErrMsg').html(data.Message);
        }
    }
    function MiscellaneousOnFailure() { }
    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('.navList li').on("click", function () {
        $('#SacCode').val($(this).text());
        $("#myModal").modal("hide");
    });
</script>

@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    options.Confirm = "Are You Sure You Want To Save?";
    options.OnSuccess = "MiscellaneousOnSuccess";
    options.OnFailure = "MiscellaneousOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
@using (Ajax.BeginForm("AddEditMiscellaneousDetail", "CHNMaster", options))
{
    @Html.AntiForgeryToken()
    <div id="DivAddMiscellaneous" class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="row SignUp_space_bottom">
                    <div class="col-md-12 cwc_body">
                        <h5>Miscellaneous<span class="triangle"></span></h5>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5" style="padding-right:0px">
                            <label>Effective Date:</label>
                        </div>
                        <div class="col-md-2 Date_Img">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "form-control input-sm", @readonly = true, @id = "MiscEffectiveDate" })
                            @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5" style="padding-right:0px;">
                            @Html.LabelFor(m => m.Fumigation, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.Fumigation, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Fumigation, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5" style="padding-right:0px;">
                            @Html.LabelFor(m => m.Washing, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.Washing, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Washing, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5" style="padding-right:0px;">
                            @Html.LabelFor(m => m.Reworking, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.Reworking, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Reworking, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5" style="padding-right:0px;">
                            @Html.LabelFor(m => m.Bagging, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.Bagging, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Bagging, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5" style="padding-right:0px;">
                            @Html.LabelFor(m => m.Palletizing, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.Palletizing, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.Palletizing, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5" style="padding-right:0px;">
                           <label>Printing Charges</label>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.PrintingCharges, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.PrintingCharges, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            <label>SAC Code:</label>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.SacCode, new { @class = "form-control input-sm", @readonly = true })
                            <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>
                            @Html.ValidationMessageFor(m => m.SacCode, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top ClearFix"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-offset-4 col-md-2" style="text-align:center">
                        <input type="submit" value="Save" class="btn log_Btn_sm" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" value="Reset" class="btn log_Btn_sm" onclick="MiscellaneousReset()" />
                    </div>
                </div>
                <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                    <div id="DivMiscellaneousMsg"></div>
                </div>
                <div class="logErrMsg" id="DivMiscellaneousErrMsg" style="background-color:transparent"></div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 SignUp_space_bottom">
            <div id="DivMiscellaneousList"></div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of SAC Code</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="PartyList">
                    @{
                        if (ViewBag.ListOfSAC != null)
                        {
                            foreach (var item in ViewBag.ListOfSAC)
                            {
                                <li id="@item">@item</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>