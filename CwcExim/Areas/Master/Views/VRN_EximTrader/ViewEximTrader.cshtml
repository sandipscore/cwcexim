@model CwcExim.Areas.Master.Models.VRN_EximTrader

<script>
    $(document).ready(function(){
        $('#PasswordVEximTrader').val('@Model.Password');
        $('#ConfrmPasswordVEximTrader').val('@Model.Password');
    });
        function LoadEximTraderPage() {
            $('#DivBody').load('/Master/VRN_EximTrader/CreateEximTrader');
        }

</script>
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-offset-0-5 col-md-11">
                <div class="Head_h4">
                    <div class="row SignUp_space_bottom">
                        <div class="col-md-12">
                            <h4>Exim Trader Master</h4>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group Form_Input">
                            <div class="col-md-2">
                                <div class="boolean-container">
                                   @Html.CheckBoxFor(m => m.Importer, new { @disabled = "disabled" })
                                    <label for="Importer"><i class="square"></i><span>Importer</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Exporter, new { @disabled = "disabled" })
                                    <label for="Exporter"><i class="square"></i><span>Exporter</span></label>
                                </div>
                            </div>
                            <div class="col-md-2 padding_rt padding_lt">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.ShippingLine, new { @disabled = "disabled" })
                                    <label for="ShippingLine"><i class="square"></i><span>ShippingLine</span></label>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.CHA, new { @disabled = "disabled" })
                                    <label for="CHA"><i class="square"></i><span>CHA</span></label>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Forwarder, new { @disabled = "disabled" })
                                    <label for="Forwarder"><i class="square"></i><span>Forwarder/Consolidator</span></label>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Rent, new { @disabled = "disabled" })
                                    <label for="Rent"><i class="square"></i><span>Rent</span></label>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Bidder, new { @disabled = "disabled" })
                                    <label for="Bidder"><i class="square"></i><span>Bidder</span></label>
                                </div>
                            </div>
                          
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.EximTraderName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.EximTraderName, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                            <div class="col-md-offset-1 col-md-1-5">
                                @Html.LabelFor(m => m.EximTraderAlias, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.EximTraderAlias, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.UserId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.UserId, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(model => model.Password, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                <a class="Pass_popup" href="#" data-toggle="tooltip" data-placement="right" title="Password must contain at least : 1 Lowercase character,1 Upper Case character and 1 numeric digit. Special Character is optional and only specified ones are allowed : &amp; # . _ - $,  Password should be minimum 8 characters and maximum 20 characters long."><i class="fa fa-2x fa-question-circle" aria-hidden="true"></i></a>
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control input-sm", @readonly = "readonly", id = "PasswordVEximTrader" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1 padding_rt">
                                <label>Confirm Password:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control input-sm", @readonly = "readonly", id = "ConfrmPasswordVEximTrader" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5">
                                @Html.TextAreaFor(m => m.Address, new { @style = "width:100%;height:75px;", @disabled = "disabled" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.CountryId)<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @if (Model.CountryId > 0)
                            {
                                    @Html.DropDownListFor(m => m.CountryId,new List<SelectListItem> { new SelectListItem { Value=Model.CountryId.ToString(),Text=Model.CountryName.ToString()} }, new { @class = "form-control input-sm",@disabled="disabled"})
                            }
                            else
                            {
                                    @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown" ,@disabled="disabled"})
                            }
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @if (Model.StateId > 0)
                            {
                                    @Html.DropDownListFor(m=>m.StateId,new List<SelectListItem> { new SelectListItem { Value=Model.StateId.ToString(),Text=Model.StateName.ToString()}},new {@class="form-control input-sm dropdown",@disabled="disabled" })
                            }
                            else
                            {
                                    @Html.DropDownListFor(m => m.StateId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                            }
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @if (Model.CityId > 0)
                            {
                                    @Html.DropDownListFor(m=>m.CityId,new List<SelectListItem> { new SelectListItem { Value = Model.CityId.ToString(), Text = Model.CityName.ToString() } },new { @class="form-control input-sm dropdown",@disabled="disabled"})
                            }
                            else
                            {
                                    @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                            }
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.PinCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.PinCode, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.PhoneNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.FaxNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.FaxNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 padding_rt">
                               <label>Contact Person:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.ContactPerson, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Email, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.MobileNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Pan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.Pan, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1 padding_rt">
                                <label>Aadhaar No:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.AadhaarNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.GSTNo, new { @class = "InputLabel", @readonly = "readonly" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.GSTNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.Tan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.Tan, new { @class = "form-control input-sm", @readonly = "readonly" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row SignUp_space_bottom">
                        <div class="col-md-offset-5 col-md-2" style="text-align:center">
                            <input type="button" class="btn log_Btn_sm" value="Back" onclick="LoadEximTraderPage()" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>
