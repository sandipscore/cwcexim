
@model CwcExim.Areas.Master.Models.LNSM_EximTrader
<script>
    $(document).ready(function(){
        $('#PasswordVEximTrader').val('@Model.Password');
        $('#ConfrmPasswordVEximTrader').val('@Model.Password');
    });
        function LoadEximTraderPage() {
            $('#DivBody').load('/Master/LNSM_EximTrader/CreateEximTrader');
        }

</script>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row SignUp_space_bottom">
                    <div class="col-md-12">
                        <h4>Exim Trader Master</h4>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group Form_Input">
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Importer, new { @disabled = "disabled" })
                                <label for="Importer"><i class="square"></i><span>Importer</span></label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Exporter, new { @disabled = "disabled" })
                                <label for="Exporter"><i class="square"></i><span>Exporter</span></label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.ShippingLine, new { @disabled = "disabled" })
                                <label for="ShippingLine"><i class="square"></i><span>ShippingLine</span></label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.CHA, new { @disabled = "disabled" })
                                <label for="CHA"><i class="square"></i><span>CHA</span></label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Forwarder, new { @disabled = "disabled" })
                                <label for="Forwarder"><i class="square"></i><span>Forwarder/Consolidator</span></label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Rent, new { @disabled = "disabled" })
                                <label for="Rent"><i class="square"></i><span>Rent</span></label>
                            </div>
                        </div>

                    </div>
                    <div class="form-group Form_Input">
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Bidder, new { @disabled = "disabled" })
                                <label for="Bidder"><i class="square"></i><span>Bidder</span></label>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Agent, new { @disabled = "disabled" })
                                <label for="Bidder"><i class="square"></i><span>Agent</span></label>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.RailOperator, new { @disabled = "disabled" })
                                <label for="Bidder"><i class="square"></i><span>RailOperator</span></label>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Consignee, new { @disabled = "disabled" })
                                <label for="Bidder"><i class="square"></i><span>Consignee</span></label>
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.Consignor, new { @disabled = "disabled" })
                                <label for="Bidder"><i class="square"></i><span>Consignor</span></label>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.EximTraderName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.EximTraderName, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                        <div class="col-md-offset-1 col-md-1-5">
                            @Html.LabelFor(m => m.EximTraderAlias, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.EximTraderAlias, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top" style="display:none">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.UserId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.UserId, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top" style="display:none">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(model => model.Password, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            <a class="Pass_popup" href="#" data-toggle="tooltip" data-placement="right" title="Password must contain at least : 1 Lowercase character,1 Upper Case character and 1 numeric digit. Special Character is optional and only specified ones are allowed : &amp; # . _ - $,  Password should be minimum 8 characters and maximum 20 characters long."><i class="fa fa-2x fa-question-circle" aria-hidden="true"></i></a>
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control input-sm", @readonly = "readonly", id = "PasswordVEximTrader" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-1 padding_rt">
                            <label>Confirm Password:</label>
                        </div>
                        <div class="col-md-4">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control input-sm", @readonly = "readonly", id = "ConfrmPasswordVEximTrader" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5">
                            <span class="ReQSimbol">*</span>
                            @Html.TextAreaFor(m => m.Address, new { @style = "width:100%;height:75px;", @disabled = "disabled" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.CountryId)<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            <span class="ReQSimbol">*</span>
                            @if (Model.CountryId > 0)
                            {
                                @Html.DropDownListFor(m => m.CountryId, new List<SelectListItem> { new SelectListItem { Value = Model.CountryId.ToString(), Text = Model.CountryName.ToString() } }, new { @class = "form-control input-sm", @disabled = "disabled" })
                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                            }
                        </div>
                        <div class="col-md-1-5 col-md-offset-1">
                            @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            <span class="ReQSimbol">*</span>
                            @if (Model.StateId > 0)
                            {
                                @Html.DropDownListFor(m => m.StateId, new List<SelectListItem> { new SelectListItem { Value = Model.StateId.ToString(), Text = Model.StateName.ToString() } }, new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.StateId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                            }
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @if (Model.CityId > 0)
                            {
                                @Html.DropDownListFor(m => m.CityId, new List<SelectListItem> { new SelectListItem { Value = Model.CityId.ToString(), Text = Model.CityName.ToString() } }, new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                            }
                            else
                            {
                                @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @disabled = "disabled" })
                            }
                        </div>
                        <div class="col-md-1-5 col-md-offset-1">
                            @Html.LabelFor(m => m.PinCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.PinCode, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.PhoneNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-1">
                            @Html.LabelFor(m => m.FaxNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.FaxNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 padding_rt">
                            <label>Contact Person:</label>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.ContactPerson, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.Email, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-1">
                            @Html.LabelFor(m => m.MobileNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.Pan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.Pan, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-1 padding_rt">
                            <label>Aadhaar No:</label>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.AadhaarNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.GSTNo, new { @class = "InputLabel", @readonly = "readonly" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.GSTNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-1">
                            @Html.LabelFor(m => m.Tan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-4">
                            @Html.TextBoxFor(m => m.Tan, new { @class = "form-control input-sm", @readonly = "readonly" })
                        </div>
                    </div>
                </div>
                <br />
                <br />
                <br />
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">

                        <div class="col-md-12">
                            @*@Html.TextAreaFor(m => m.Address, new { @style = "width:100%;height:75px;", @disabled = "disabled" })*@
                            <table id="TblEximTraderAddr" class="table table-bordered table-striped " cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th style="text-align:center; width:5%;">@Html.DisplayName("SL No")</th>
                                        <th style="width:20%;">@Html.DisplayNameFor(m => m.Address)</th>
                                        <th style="width:8%;">Country</th>
                                        <th style="width:8%;">State</th>
                                        <th style="width:8%;">City</th>
                                        <th style="width:8%;">Pin</th>
                                        <th style="width:8%;">Phone</th>
                                        <th style="width:8%;">ContactPerson</th>
                                        <th style="width:8%;">EmailId</th>
                                        <th style="width:8%;">MobNo</th>
                                        <th style="width:8%;">PAN</th>
                                        <th style="width:8%;">GST</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        if (Model.AddressList != null)
                                        {
                                            var SerialNo = 1;
                                            foreach (var item in Model.AddressList)
                                            {
                                                <tr>
                                                    <td style="text-align:center; width:5%;">@SerialNo</td>
                                                    <td style="width:20%;">@item.EximAddress</td>
                                                    <td style="width:10%;">@item.Country</td>
                                                    <td style="width:10%;">@item.State</td>
                                                    <td style="width:10%;">@item.City</td>
                                                    <td style="width:10%;">@item.Pin</td>
                                                    <td style="width:10%;">@item.Phone</td>
                                                    <td style="width:10%;">@item.ContactPerson</td>
                                                    <td style="width:10%;">@item.EmailId</td>
                                                    <td style="width:10%;">@item.MobNo</td>
                                                    <td style="width:10%;">@item.PAN</td>
                                                    <td style="width:10%;">@item.GST</td>
                                                </tr>
                                                SerialNo = SerialNo + 1;
                                            }
                                        }

                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-offset-5 col-md-2" style="text-align:center">
                        <input type="button" class="btn log_Btn_sm" value="Back" onclick="LoadEximTraderPage()" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });

</script>
<script>

        var Page = 0;
        $(document).ready(function(){
            var TblEximTrader = $('#TblEximTraderAddr').DataTable({
            "bFilter":false,
        "bInfo": false,
        "pageLength": 50,
        "aoColumns":[
        {"sName":"SL No","width":"5%"},
        { "sName":"Address","width":"20%"},
            { "sName":"Country","width":"8%"},
            { "sName":"State","width":"8%"},
            { "sName":"City","width":"8%"},
            { "sName":"Pin","width":"8%"},
            { "sName":"Phone","width":"8%"},
            { "sName":"ContactPerson","width":"8%"},
            { "sName":"EmailId","width":"8%"},
            { "sName":"MobNo","width":"8%"},
            { "sName":"PAN","width":"8%"},
            { "sName":"GST","width":"8%"},


        ],
        "fnRowCallback": function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {
            $('td:eq(0)', nRow).addClass("text-center");
        $('td:eq(7),td:eq(8),td:eq(9)', nRow).addClass("text-center");
        $('td:eq(0)', nRow).css("width", "5%");

                //    $('td:eq(8)', nRow).css("width", "5%");
                //    $('td:eq(9)', nRow).css("width", "5%");
                }
            });
        new $.fn.dataTable.FixedHeader(TblEximTrader);
        });
</script>
