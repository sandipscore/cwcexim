@model CwcExim.Areas.Master.Models.PpgGroundRentCharge
@using (Ajax.BeginForm("AddEditMstGroundRent", "PPGCWCCharges", new AjaxOptions
{
    Confirm = "Are you sure you want to  Save?",
    HttpMethod = "POST",
    OnSuccess = "GrndRentOnSuccess",
    OnFailure = "GrndRentOnFailure"
}))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-12">

            <div class="row SignUp_space_bottom">
                <div class="col-md-12 cwc_body">
                    <h5>Ground Charges <span class="triangle"></span></h5>
                </div>
            </div>

            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Effective Date:</label>
                        <div class="position-relative Date_Img">
                            @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "", @id = "EntryFeesEffectiveDate", @readonly = true })
                            @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <span class="ReQSimbol">*</span>
                    @Html.LabelFor(m => m.SacCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    <div class="position-relative">
                        @Html.TextBoxFor(m => m.SacCode, new { @class = "", @readonly = true })
                        <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>
                        @Html.ValidationMessageFor(m => m.SacCode, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-3">
                    <span class="ReQSimbol">*</span>
                    <label>Days Range:</label>
                    <div class="row">
                       <div class="col-md-5 pr-0">
                           @Html.TextBoxFor(m => m.DaysRangeFrom, new { placeholder = "Enter Range From" })
                           @Html.ValidationMessageFor(m => m.DaysRangeFrom, "", new { @class = "Error_Msg" })
                       </div>
                        <div class="col-md-1">-</div>
                        <div class="col-md-5 pr-0">
                            @Html.TextBoxFor(m => m.DaysRangeTo, new { placeholder = "Enter Range To" })
                            @Html.ValidationMessageFor(m => m.DaysRangeTo, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <span class="ReQSimbol">*</span>
                    <label>Container Type:</label>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.ContainerType, new List<SelectListItem> {
                       new SelectListItem { Text="Empty Container",Value="1"},
                       new SelectListItem { Text="Loaded Container",Value="2"}
                   }, "----Select----", new { @class = "dropdown" })
                            @Html.ValidationMessageFor(m => m.ContainerType, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem> {
                       new SelectListItem { Text="HAZ",Value="1"},
                       new SelectListItem { Text="Non HAZ",Value="2"}
                   }, "----Select----", new { @class = "dropdown" })
                            @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        @Html.DropDownListFor(m => m.Size, new List<SelectListItem> {
                       new SelectListItem {Text="20",Value="20" },
                       new SelectListItem {Text="40",Value="40" },
                   }, "----Select----", new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>FCL/LCL:</label>
                        @Html.DropDownListFor(m => m.FclLcl, new List<SelectListItem> {
                                new SelectListItem { Text="--Select--",Value=""},
                                 new SelectListItem { Text="FCL",Value="FCL"},
                                 new SelectListItem { Text="LCL",Value="LCL"}
                            }, new { @class = "" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Amount:</label>
                        @Html.TextBoxFor(m => m.RentAmount, new { placeholder = "Enter Amount" })
                        @Html.ValidationMessageFor(m => m.RentAmount, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Operation Type:</label>
                        @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem> {
                       new SelectListItem {Text="Import",Value="1" },
                       new SelectListItem {Text="Export",Value="2" },
                       new SelectListItem {Text="Empty Import",Value="3" },
                       new SelectListItem {Text="Empty Export",Value="4" },
                   }, "----Select----", new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.OperationType, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>

            <div class="d-flex justify-content-left">
                <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save" id="BtnSave">
                <input type="button" class="btn btn-primary-border btn-100px" id="BtnReset" value="Reset" onclick="ClearGroundRent()">
            </div>

            <div class="logSuccMsg Form_Space_top SignUp_space_bottom2" id="DivGrndSuccMsg" style="background-color:transparent;"></div>

        </div>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <div id="DivGroundRentList"></div>
    </div>
</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h5 class="modal-title">List of SAC Code</h5>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="PartyList">
                    @{
                        if (ViewBag.ListOfSAC != null)
                        {
                            foreach (var item in ViewBag.ListOfSAC)
                            {
                                <li id="@item">@item</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $('#GroundEffectiveDate').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });
        LoadGroundRentList();
    });
    function LoadGroundRentList() {
        $('#DivGroundRentList').load('/Master/PPGCWCCharges/GroundRentList');
    }
    function ClearGroundRent() {
        $('input[type="text"],select').val('');
        $('[data-valmsg-for]').html('');
        $('#Reefer').prop("checked", false);
    }
    function GrndRentOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivGrndSuccMsg').hasClass('logErrMsg'))
                $('#DivGrndSuccMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivGrndSuccMsg').html(data.Message);
            LoadGroundRentList();
            ClearGroundRent();
        }
        else {
            if ($('#DivGrndSuccMsg').hasClass('logSuccMsg'))
                $('#DivGrndSuccMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivGrndSuccMsg').html(data.Message);
        }
        setTimeout(function () { $('#DivGrndSuccMsg').html(''); }, 5000);
    }
    function GrndRentOnFailure() { }
    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('.navList li').on("click", function () {
        $('#SacCode').val($(this).text());
        $("#myModal").modal("hide");
    });
</script>
