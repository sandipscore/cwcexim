@model CwcExim.Areas.Master.Models.PpgMovementCharge

@using (Ajax.BeginForm("AddEditMstMovementCharge", "PPGCWCCharges", new AjaxOptions
{
    Confirm = "Are you sure you want to  Save?",
    HttpMethod = "POST",
    OnSuccess = "MovementChargeOnSuccess",
    OnFailure = "MovementChargeOnFailure"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.MovementChargeId)
    <div class="row">
        <div class="col-md-12">
            <div class="row SignUp_space_bottom">
                <div class="col-md-12 cwc_body">
                    <h5>Movement Charges <span class="triangle"></span></h5>
                </div>
            </div>

            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Effective Date:</label>
                        <div class="position-relative Date_Img">
                            @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "", @id = "MovementEffectiveDate", @readonly = true })
                            @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        @Html.LabelFor(m => m.MovementVia, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        @Html.DropDownListFor(m => m.MovementVia, new List<SelectListItem> {
                                       new SelectListItem {Text="LONI",Value="LONI" },
                                       new SelectListItem {Text="TKD",Value="TKD" },
                                        new SelectListItem {Text="ROAD",Value="ROAD" },
                                   }, "----Select----", new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.MovementVia, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-3">
                    <span class="ReQSimbol">*</span>
                    <label>Origin:</label>
                    @Html.DropDownListFor(m => m.Origin, new List<SelectListItem> {
                       new SelectListItem { Text="FAC",Value="FAC"},
                       new SelectListItem { Text="NON FAC",Value="NON FAC"}
                   }, "----Select----", new { @class = "dropdown" })
                    @Html.ValidationMessageFor(m => m.Origin, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        @Html.LabelFor(m => m.CargoType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem> {
                                new SelectListItem {Text="Haz",Value="1" },
                                new SelectListItem {Text="Non Haz",Value="2" },
                                }, "----Select----", new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.CargoType, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>

            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <label>Size:</label>
                    @Html.DropDownListFor(m => m.Size, new List<SelectListItem> {
                                new SelectListItem { Text="--Select--",Value=""},
                                 new SelectListItem { Text="20",Value="20"},
                                 new SelectListItem { Text="40",Value="40"}
                            }, new { @class = "" })
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Rate:</label>
                        @Html.TextBoxFor(m => m.Rate, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.Rate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>

            <div class="d-flex justify-content-left">
                <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save" id="BtnSave">
                <input type="button" class="btn btn-primary-border btn-100px" id="BtnBack" value="Back" onclick="LoadMovementChargeView()">
            </div>

            <div class="logSuccMsg Form_Space_top SignUp_space_bottom2" id="DivMovementSuccMsg" style="background-color:transparent;"></div>

        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $('#MovementEffectiveDate').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });
    });

    function MovementChargeOnSuccess(data) {
        if (data.Status == 1) {
            $('#DivMovementSuccMsg').html(data.Message);
            setTimeout(function () { $('#DivMovementSuccMsg').html(''); $('#DivMovement').load('/Master/PPGCWCCharges/CreateMovementCharge'); }, 5000);

        }
        else {
            if ($('#DivMovementSuccMsg').hasClass('logSuccMsg'))
                $('#DivMovementSuccMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMovementSuccMsg').html(data.Message);
        }
    }
    function MovementChargeOnFailure() { }
    function LoadMovementChargeView() {
        $('#DivMovement').load('/Master/PPGCWCCharges/CreateMovementCharge');
    }
</script>
