@model CwcExim.Areas.Master.Models.PpgThcFscV2
@using (Ajax.BeginForm("AddEditFscThc", "PPGCWCCharges", new AjaxOptions
{
    Confirm = "Are you sure you want to save?",
    HttpMethod = "POST",
    InsertionMode = InsertionMode.InsertAfter,
    OnSuccess = "HTOnSuccess",
    OnFailure = "HTOnFailure"
}))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.THCFSCChargesId)
    <div class="row">
        <div class="SignUp_space_bottom col-md-12 cwc_body">
            <h5>FAC/THC(TKD)<span class="triangle"></span></h5>
        </div>
    </div>

        <div class="row Form_Space_top">
            <div class="col-md-3">
                <div class="form-group">
                    <span class="ReQSimbol">*</span>
                    <label>Effective Date:</label>
                    <div class="position-relative Date_Img">
                        @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "" })
                        @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <span class="ReQSimbol">*</span>
                    @Html.LabelFor(m => m.OperationType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    <span>
                        @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem> {
                               new SelectListItem { Value="1",Text="Import"},
                               new SelectListItem {Value="4",Text="Import (RMS)" },
                               new SelectListItem { Value="2",Text="Export"},
                               new SelectListItem { Value="3",Text="General"}}, "----Select----", new { @class = "dropdown", @onchange = "GetOperationCode()" })
                    </span>
                    @Html.ValidationMessageFor(m => m.OperationType, "", new { @class = "Error_Msg" })
                </div>
            </div>
            <div class="col-md-3">
                <span class="ReQSimbol">*</span>
                <label>Operation Code:</label>
                <div class="position-relative">
                    @Html.TextBoxFor(m => m.OperationCode, new { @class = "", @readonly = "readonly" })
                    @Html.HiddenFor(m => m.OperationId)
                    <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>
                    @Html.ValidationMessageFor(m => m.OperationCode, "", new { @class = "Error_Msg" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Container Type:</label>
                    @Html.DropDownListFor(m => m.ContainerType, new List<SelectListItem>
                       {   new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem { Value="1",Text="Empty Container" },
                           new SelectListItem { Value="2",Text="Loaded Container"},
                           new SelectListItem { Value="3",Text="Cargo" },
                           new SelectListItem { Value="4",Text="RMS"}
                       }, new { @class = "dropdown" })
                    @Html.ValidationMessageFor(m => m.ContainerType, "", new { @class = "Error_Msg" })
                </div>
            </div>
        </div>

            <div class="row Form_Space_top">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.Type, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    @Html.DropDownListFor(m => m.Type, new List<SelectListItem>
                       {
                           new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem {Value="1",Text="General" },
                           new SelectListItem {Value="2",Text="Heavy/Scrap" }
                       }, new { @class = "dropdown" })
                    @Html.ValidationMessageFor(m => m.Type, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                        {
                    new SelectListItem { Value=" ",Text="----Select----" ,Selected=true},
                            new SelectListItem { Value="20",Text="20" },
                            new SelectListItem { Value="40",Text="40" }
                        }, new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.MaxDistance, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    @Html.TextBoxFor(m => m.MaxDistance, new { @class = "" })
                    @Html.ValidationMessageFor(m => m.MaxDistance, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Commodity Type:</label>
                        @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                       {
                           new SelectListItem { Value="1",Text="HAZ"},
                           new SelectListItem { Value="2",Text="Non HAZ"}
                       }, "----Select----", new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>

            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <label>Container Load Type:</label>
                    @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="FCL",Value="FCL"},
                               new SelectListItem { Text="LCL",Value="LCL" },
                               new SelectListItem { Text="DD",Value="DD" }
                           })
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Transport From:</label>
                        @Html.DropDownListFor(m => m.TransportFrom, new List<SelectListItem>
                       {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                           new SelectListItem { Value="L",Text="LONI"},
                           new SelectListItem { Value="T",Text="TKD"},
                           new SelectListItem { Value="A",Text="ACTL"}
                       }, new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.TransportFrom, "", new { @class = "Error_Msg" })
                    </div>
                </div>
                <div class="col-md-3">
                    <label>Exim Type:</label>
                    @Html.DropDownListFor(m => m.EximType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="Exim",Value="E"},
                               new SelectListItem { Text="RMS Exim",Value="RE" },
                               new SelectListItem { Text="RMS Non Exim",Value="RNE" }
                           })
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <span class="ReQSimbol">*</span>
                        <label>Port Of Loading:</label>
                        @if (Model.LstLocation.Count > 0)
                        {
                        @Html.DropDownListFor(m => m.LocationId, new SelectList(Model.LstLocation, "LocationId", "LocationName"), "---Select---", new { @class = "dropdown" })
                        @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "Error_Msg" })
                        }
                        else
                        {
                        @Html.DropDownListFor(m => m.LocationId, Enumerable.Empty<SelectListItem>(), "----Select----")
                        @Html.ValidationMessageFor(m => m.LocationId, "", new { @class = "Error_Msg" })
                        }
                    </div>
                </div>
            </div>

            <div class="row Form_Space_top">
                <div class="col-md-3">
                    <label>From (Ft/Metric):</label>
                    @Html.TextBoxFor(m => m.FromMetric, new { @class = "", @type = "decimal" })
                    @Html.ValidationMessageFor(m => m.FromMetric, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>To (Ft/Metric):</label>
                        @Html.TextBoxFor(m => m.ToMetric, new { @class = "", @type = "decimal" })
                        @Html.ValidationMessageFor(m => m.ToMetric, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>

            <div class="Head_h5 Form_Space_top">
                <div class="row">
                    <div class="col-md-12">
                        <h5>Rate</h5>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>CWC Rate:</label>
                            @Html.TextBoxFor(m => m.RateCWC, new { @class = "" })
                            @Html.ValidationMessageFor(m => m.RateCWC, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                    <div class="col-md-3 col-md-offset-6">
                        <span class="ReQSimbol">*</span>
                        <label>Contractor Rate:</label>
                        @Html.TextBoxFor(m => m.ContractorRate)
                        @Html.ValidationMessageFor(m => m.ContractorRate, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>
            <div class="d-flex justify-content-left">
                <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save" id="BtnSave">
                <input type="button" class="btn btn-primary-border btn-100px" id="btnReset" value="Back" onclick="Reset()">
            </div>

            <div class="logSuccMsg Form_Space_top SignUp_space_bottom2" id="DivMsg" style="background-color:transparent;"></div>

            <div class="row">
                <div class="col-md-12">
                    <div id="DivHTChargesList"></div>
                </div>
            </div>

}
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h5 class="modal-title">List of Operation Code</h5>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="OperationList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $("#EffectiveDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
        }
    });
    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('.navList').on("click",'li', function () {
        debugger;
        var OperationId = $(this).attr('id');
        var Code = $(this).text();
        $('#OperationCode').val(Code);
        $('#OperationId').val(OperationId);
        // $("#myModal").modal("hide");
    });

    $(function(){LoadHTListData();});
    function LoadHTListData()
    {
        //$('#DivHTChargesList').load('/Master/PPGHTCharges/GetAllHTCharges');
    }
    function GetOperationCode()
    {

        var Opercode=@Html.Raw(Json.Encode(Model.LstOperation));
        $('#OperationCode').val('');
        $('#OperationId').val('');
        var OperationListHtml="";
        $('#OperationList').html('');
        $.each(Opercode,function(i,item)
        {
            if($('#OperationType').val()==item.Type)
            {
                OperationListHtml+='<li id='+item.OperationId+' data-dismiss="modal">'+item.ShortDescription+'</li>';
            }
        });
        $('#OperationList').html(OperationListHtml);
    }
    function Reset()
    {

        $('#THCFSCChargesId').val(0);
        $('[data-valmsg-for]').html('');
        $('input[type="text"]').val('');
        $('input[type="decimal"]').val(0);
        $('select').val('');
        $('#ContainerType,#Type,#MaxDistance,#RateCWC,#Size').val('0');
        $('#DivGroundRent,#DivStorageCharge,#DivEntryFees,#DivInsurance,#DivFreight,#DivOth,#DivMiscellaneous,#DivMovementCharge,#DivTHCFSCCharge').html('');
        $('#DivTHCFSCCharge').load('/Master/PPGCWCCharges/CreateFscThc');
    }
    function HTOnSuccess(data)
    {
        if(data.Status==1||data.Status==2)
        {
            if($('#DivMsg').hasClass('logErrMsg'))
                $('#DivMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivMsg').html(data.Message);
            setTimeout(Reset,5000);
            LoadHTListData();
        }
        else
        {
            if($('#DivMsg').hasClass('logSuccMsg'))
                $('#DivMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMsg').html(data.Message);
        }
        setTimeout(function(){$('#DivMsg').html('');},5000);
    }
    function HTOnFailure() { }

</script>
