@model CwcExim.Areas.Master.Models.kdl_EximTrader
<script>
    var TimeInSeconds;
    var CheckPasswordPolicy;
    var ExistingUser;
        $(document).ready(function () {
            TimeInSeconds = 5000;
            debugger;
            CheckPasswordPolicy = false;
            ExistingUser = false;
            var UserId = '@Model.UserId';
            var Password = '@Model.Password';
            $('#PasswordEditEximTrader').val('@Model.Password');
            $('#ConfrmPasswordEditEximTrader').val('@Model.Password');
            var CountryId = Number(@Model.CountryId);
            var StateId = Number(@Model.StateId);
            var CityId = Number(@Model.CityId);
            if (CountryId > 0) {
                $('#DivEditEximTrader #CountryId').val(CountryId);
                GetStateList();
            }
            if (StateId > 0) {
                $('#DivEditEximTrader #StateId').val(StateId);
               var a= $('#DivEditEximTrader #StateId').val();
                GetCityList();
            }
            if (CityId > 0) {
                $('#DivEditEximTrader #CityId').val(CityId);
            }
            if (Password == "") {
                $('#PasswordEditEximTrader').prop("readonly", false);
                $('#ConfrmPasswordEditEximTrader').prop("readonly", false);
            }
            if (UserId == "") {
                ExistingUser = false;
                $('#UserIdEditEximTrader').prop("readonly", false);
            }
            else {
                ExistingUser = true;
            }
        });
    function LoadEximTraderPage() {

            $('#DivBody').load('/Master/kdl_EximTrader/CreateEximTrader');
        }
        function ClearStateDropdown() {
            $('#DivEditEximTrader #StateId').html("");
            $('#DivEditEximTrader #StateId').append($('<option></option>').val("").html("---Select---"));
        }
        function ClearCityDropdown() {
            $('#DivEditEximTrader #CityId').html("");
            $('#DivEditEximTrader #CityId').append($('<option></option>').val("").html("---Select---"));
        }
        function GetStateList() {
            debugger;
            var CountryId = $('#DivEditEximTrader #CountryId').val();
            ClearCityDropdown();
            if (CountryId != "" & CountryId!=null)
            {
                $.ajax({
                    url: '/City/GetStatesByCountry',
                    type: 'Get',
                    async:false,
                    data: { CountryId: CountryId },
                    success: function (data) {
                        debugger;
                        if (data.Status == 1) {
                            ClearStateDropdown();
                            $.each(data.Data, function (i, item) {
                                debugger;
                                $('#DivEditEximTrader #StateId').append($('<option></option>').val(item.StateId).html(item.StateName));
                            });
                        }
                        else {
                            ClearStateDropdown();
                        }
                    }
                });
            }
            else {
                ClearStateDropdown();
            }
        }
        function GetCityList() {
            debugger;
            var StateId = $('#DivEditEximTrader #StateId').val();
            if (StateId != "" & StateId!=null) {
                $.ajax({
                    url: '/City/GetCitiesByState',
                    type: 'Get',
                    async:false,
                    data: { StateId: StateId },
                    success: function (data) {
                        debugger;
                        if (data.Status == 1) {
                            ClearCityDropdown();
                            $.each(data.Data, function (i, item) {
                                debugger;
                                $('#DivEditEximTrader #CityId').append($('<option><.option>').val(item.CityId).html(item.CityName));
                            });
                        }
                        else {
                            ClearCityDropdown();
                        }
                    }
                });
            }
            else {
                ClearCityDropdown();
            }
        }
        function ClearCheckBoxValidation() {
            debugger;
            $('[data-valmsg-for="CheckBoxValidation"]').html('<span></span>');
        }
        function EximTraderOnSuccess(data) {
            debugger;
            if (data.Status == 1) {
                if ($('#DivEximTraderMsg').hasClass('logErrMsg'))
                    $('#DivEximTraderMsg').removeClass('logErrMsg').addClass('logSuccMsg');
                $('#DivEditEximTrader #DivEximTraderMsg').html(data.Message);
                setTimeout(LoadEximTraderPage, TimeInSeconds);
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 2) {
                $('[data-valmsg-for="EximTraderName"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 3) {
                $('[data-valmsg-for="EximTraderAlias"]').html('<span>' + data.Message + '</option>');
                 $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                 $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 4) {
                $('[data-valmsg-for="Email"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 5) {
                $('[data-valmsg-for="Pan"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 6) {
                $('[data-valmsg-for="AadhaarNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 7) {
                $('[data-valmsg-for="GSTNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 8) {
                $('[data-valmsg-for="PhoneNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 9) {
                $('[data-valmsg-for="MobileNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 10) {
                $('[data-valmsg-for="FaxNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 11) {
                $('[data-valmsg-for="Tan"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                 $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 12) {
                $('[data-valmsg-for="UserId"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                 $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }

            else if (data.Status == 15) {

                debugger;
                $('[data-valmsg-for="PinCode"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else {
                if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                    $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                $('#DivEditEximTrader #DivEximTraderMsg').html(data.Message);
                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
            }
        }
        function EximTraderOnFailure() {
        }
        $('#FormEditEximTrader').submit(function (e) {
            debugger;
            debugger;
            var StateId = $("#StateId option:selected").val();


            if (StateId == 0 || StateId == "") {
                $('[data-valmsg-for="StateId"]').html('<span>Please Select State Name</span>');
                return false;
            }
            $('#DivEximTraderMsg').html('');
           var FrmVlalidation = $('#FormEditEximTrader').valid();
           var Password = $('#PasswordEditEximTrader').val();
           var UserId = $('#UserIdEditEximTrader').val();
           var IsShippingLine = $('#ShippingLine').is(":checked")

           if ($('#DivEditEximTrader #Importer').is(":checked") || $('#DivEditEximTrader #Exporter').is(":checked") || $('#DivEditEximTrader #ShippingLine').is(":checked") || $('#DivEditEximTrader #CHA').is(":checked") || $('#DivEditEximTrader #Rent').is(":checked"))
            {
               // if (IsShippingLine == false) {
                    //if ($.trim($('#Pan').val()) == '') {
                    //    if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                    //        $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                    //    $('#DivEximTraderMsg').html('Pan Is Required');
                    //    //$('[data-valmsg-for="Pan"]').html('<span>Fill Out This Field</span>');
                    //    return false;
                    //}
                    //if ($.trim($('#GSTNo').val()) == '') {
                    //    if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                    //        $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                    //    $('#DivEximTraderMsg').html('GSTNo Is Required');
                    //    // $('[data-valmsg-for="GSTNo"]').html('<span>Fill Out This Field</span>');
                    //    return false;
                    //}
               // }
                if (FrmVlalidation == true)
                {
                    if (Password == "" & UserId == "") {
                return true;
                    }
                    else if (Password == "" & UserId != "") {
                        $('[data-valmsg-for="Password"]').html('<span>Please Give A Password For The User Id</span>');
                        return false;
                    }
                    else if (Password != "" & UserId == "") {
                        //$('[data-valmsg-for="GSTNo"]').html('<span>Please Give A User Id For The Respective Password</span>');
                        $('[data-valmsg-for="Password"]').html('<span>Please Give A User Id For The Respective Password</span>');
                       // $('[data-valmsg-for="UserId"]').html('<span>Please Give A User Id For The Respective Password</span>');
                        return false;
                      //  $('[data-valmsg-for="GSTNo"]').html('<span>Please Give A User Id For The Respective Password</span>');
                       // debugger;
                    }
                    else {
                        if (ExistingUser == false) {
                            if (CheckEximPasswordPolicy() == true) {
                                debugger;
                                Encrypt();
                                var Confirm = confirm("Are You Sure You Want To Save?");
                                if (Confirm == true) {
                                    return true;
                                }
                                else {
                                    $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                                    $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
                                    return false;
                                }
                            }
                            else {
                                return false;
                            }
                        }
                        else {
                            return true;
                        }
                    }
                }
                else {
                    return false;
                }
            }
            else {
                $('[data-valmsg-for="CheckBoxValidation"]').html('<span>One Of The Checkbox Must Be Ticked</span>');
                return false;
            }
        });

        function CheckEximPasswordPolicy() {
            debugger;
            var Password = $('#PasswordEditEximTrader').val();
            if ($('#UserIdEditEximTrader').val().toUpperCase() == Password.toUpperCase()) {
                $('[data-valmsg-for="UserId"]').html('<span>User Id and Password must not be same.</span>');
                CheckPasswordPolicy = false;
                return false;
            }
            else if (!Password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@('@')._$#-]+$/)) {
                $('[data-valmsg-for="Password"]').html('<span>Password Policy does not match</span>');
                CheckPasswordPolicy = false;
                return false;
            }
            else if ((Password.length < 8) || (Password.length > 21)) {
                $('[data-valmsg-for="Password"]').html('<span>Password must be minimum 8 characters long and maximum 20 characters long.</span>');
                CheckPasswordPolicy = false;
                return false;
            }
            else {
                CheckPasswordPolicy = true;
                return true;
            }
        }
    function Encrypt() {
        debugger;
        $('#HdnPassword').val($('#PasswordEditEximTrader').val());
        $('#PasswordEditEximTrader').val(md5($('#PasswordEditEximTrader').val()));
        $('#ConfrmPasswordEditEximTrader').val(md5($('#ConfrmPasswordEditEximTrader').val()));
        return true;
            }
    function ClearPasswordMsg() {
        $('[data-valmsg-for="Password"]').html('<span></span>');
    }
</script>
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    // options.Confirm = "Are You Sure You Want To Save?";
    options.InsertionMode = InsertionMode.InsertAfter;
    options.OnSuccess = "EximTraderOnSuccess";
    options.OnFailure = "EximTraderOnFailure";
}
@using (Ajax.BeginForm("AddEditEximTraderDetail", "kdl_EximTrader", null, options, new { id = "FormEditEximTrader" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.EximTraderId)
    <div id="DivEditEximTrader" class="container-fluid">
        <div class="row">
            <div class="col-md-offset-0-5 col-md-11">
                <div class="Head_h4">
                    <div class="row SignUp_space_bottom">
                        <div class="col-md-12">
                            <h4>Exim Trader Master</h4>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group Form_Input">
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Importer, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="Importer"><i class="square"></i><span>Importer</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Exporter, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="Exporter"><i class="square"></i><span>Exporter</span></label>
                                </div>
                            </div>
                            <div class="col-md-2 padding_rt padding_lt">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.ShippingLine, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="ShippingLine"><i class="square"></i><span>ShippingLine</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.CHA, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="CHA"><i class="square"></i><span>CHA</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Rent, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="Rent"><i class="square"></i><span>Rent</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4-5">
                            @Html.ValidationMessage("CheckBoxValidation", "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.EximTraderName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.EximTraderName, new { @class = "form-control input-sm", @maxlength = "100", @minlength = "3" })
                                @Html.ValidationMessageFor(m => m.EximTraderName, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.EximTraderAlias, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.EximTraderAlias, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.EximTraderAlias, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.UserId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.UserId, new { @class = "form-control input-sm", id = "UserIdEditEximTrader", @readonly = "readonly", @onblur = "ClearPasswordMsg()" })
                                @Html.ValidationMessageFor(m => m.UserId, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(model => model.Password, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                <a class="Pass_popup" href="#" data-toggle="tooltip" data-placement="right" title="Password must contain at least : 1 Lowercase character,1 Upper Case character and 1 numeric digit. Special Character is optional and only specified ones are allowed : &amp; # . _ - $,  Password should be minimum 8 characters and maximum 20 characters long."><i class="fa fa-2x fa-question-circle" aria-hidden="true"></i></a>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control input-sm", id = "PasswordEditEximTrader", @readonly = "readonly", @onblur = "ClearPasswordMsg()" })
                                @Html.HiddenFor(m => m.HdnPassword)
                                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1 padding_rt">
                                <label>Confirm Password:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control input-sm", @readonly = "readonly", id = "ConfrmPasswordEditEximTrader" })
                                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row SignUp_space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextAreaFor(m => m.Address, new { @style = "width:100%;height:75px;", @maxlength = "100", @minlength = "3" })
                                @Html.ValidationMessageFor(m => m.Address, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.CountryId)<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @if (ViewBag.Country != null)
                                {
                                    <span class="ReQSimbol">*</span>
                                    @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.Country, "CountryId", "CountryName"), "---Select---", new { @class = "form-control input-sm", @onchange = "GetStateList()" })
                                    @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "Error_Msg" })
                                }
                                else
                                {
                                    <span class="ReQSimbol">*</span>
                                    @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new {@class = "form-control input-sm dropdown" })
                                    @Html.ValidationMessageFor(m => m.CountryId, "", new { @class = "Error_Msg" })

                                }
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.StateId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @onchange = "GetCityList()" })
                                @Html.ValidationMessageFor(m => m.StateId, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.PinCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.PinCode, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.PinCode, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.PhoneNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.FaxNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.FaxNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.FaxNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 padding_rt">
                                <label>Contact Person:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.ContactPerson, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.ContactPerson, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Email, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.MobileNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.Pan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.TextBoxFor(m => m.Pan, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Pan, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1 padding_rt">
                                <label>Aadhaar No:</label>
                            </div>
                            <div class="col-md-4">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.TextBoxFor(m => m.AadhaarNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.AadhaarNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5">
                                @Html.LabelFor(m => m.GSTNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.TextBoxFor(m => m.GSTNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.GSTNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m => m.Tan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.Tan, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Tan, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2" style="text-align:center">
                            <input type="submit" class="btn log_Btn_sm" value="Save" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Cancel" onclick="LoadEximTraderPage()" />
                        </div>
                    </div>
                    <div id="DivEximTraderMsg" class="logSuccMsg Form_Space_top SignUp_space_bottom2" style="background-color:transparent">

                    </div>
                    <div id="DivEximTraderErrMsg" class="logErrMsg"></div>
                </div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>
