@model CwcExim.Areas.Master.Models.VRN_MiscChargePtyWise

<script>
    $(function () { LoadEntryFeesList(); });
    $('#EntryFeesEffectiveDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select Date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $('[data-valmsg-for="EffectiveDate"]').html('');
        }
    });
    function LoadEntryFeesList() {
        debugger;
        $('#DivEntryFeesList').load('/Master/VRN_Master/GetAllMiscRateFeesPtyWise');
    }
    function ClearCheckBoxValidation() {
        debugger;
        $('[data-valmsg-for="CheckBoxValidation"]').html('<span></span>');
    }
</script>
@using (Ajax.BeginForm("AddEditEntryRateFeesPtyWise", "VRN_Master", new AjaxOptions
{
    Confirm = "Are you sure you want to Save/Update",
    HttpMethod = "POST",
    OnSuccess = "EntryFeesOnSuccess",
    OnFailure = "EntryFeesOnFailure"
}))
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="row">
            <div class="SignUp_space_bottom col-md-12 cwc_body">
                <h5>Rate Master<span class="triangle"></span></h5>
            </div>
        </div>
        <div class="row">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    <label>Effective Date:</label>
                </div>
                <div class="col-md-2 Date_Img">
                    <span class="ReQSimbol">*</span>
                    @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "form-control input-sm", @id = "EntryFeesEffectiveDate", @readonly = true })
                    @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                </div>
            </div>
        </div>

        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    @Html.LabelFor(m => m.ChargeName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-2">
                    <span class="ReQSimbol">*</span>
                    @Html.HiddenFor(m => m.ChargeId)
                    @Html.TextBoxFor(m => m.ChargeName, new { @class = "form-control input-sm", @readonly = true })
                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ChargesModal"></i></span>
                    @Html.ValidationMessageFor(m => m.ChargeName, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-1-5 col-md-offset-1 col_cus_2 padding_rt">
                    @Html.LabelFor(m => m.SacCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-2">
                    <span class="ReQSimbol">*</span>
                    @Html.HiddenFor(m => m.SACId)
                    @Html.TextBoxFor(m => m.SacCode, new { @class = "form-control input-sm", @readonly = true })
                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>
                    @Html.ValidationMessageFor(m => m.SacCode, "", new { @class = "Error_Msg" })
                </div>
            </div>
        </div>

        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    <label>Operation Type:</label>
                </div>
                <div class="col-md-2">
                    <span class="ReQSimbol">*</span>
                    @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem> {
                        new SelectListItem { Text="Import",Value="Import"},
                        new SelectListItem { Text="Export",Value="Export"},
                        new SelectListItem { Text="Bond",Value="Bond"}
                        }, "----Select----")
                    @Html.ValidationMessageFor(m => m.OperationType, "", new { @class = "Error_Msg" })
                </div>
                <div class="col-md-1-5 col-md-offset-1 col_cus_2 padding_rt">
                    <label>Container Type:</label>
                </div>
                <div class="col-md-2">
                    @*<span class="ReQSimbol">*</span>*@
                    @Html.DropDownListFor(m => m.ContainerType, new List<SelectListItem>
                   {
                        new SelectListItem { Text="Loaded",Value="Loaded"},
                        new SelectListItem { Text="Empty",Value="Empty"}
                   }, "----Select----")
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    <label>Container Load Type:</label>
                </div>
                <div class="col-md-2">
                    @*<span class="ReQSimbol">*</span>*@
                    @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                    {
                        new SelectListItem { Text="FCL",Value="FCL"},
                        new SelectListItem { Text="LCL",Value="LCL"}
                    }, "----Select----")
                </div>
                <div class="col-md-1-5 col-md-offset-1 col_cus_2 padding_rt">
                    @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>

                <div class="col-md-2">
                    @Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                   {
                        new SelectListItem { Text="20",Value="20"},
                        new SelectListItem { Text="40",Value="40"}

                   }, "----Select----")
                </div>



                <div class="col-md-1-5 col_cus_2">
                    @Html.LabelFor(m => m.IsOdc, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-1 padding_rt">
                    <div class="boolean-container">
                        @Html.CheckBoxFor(m => m.IsOdc, new { @onclick = "ClearCheckBoxValidation()" })
                        <label for="IsOdc"><i class="square"></i></label>
                    </div>
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2 padding_rt">
                    @Html.LabelFor(m => m.Rate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-2">
                    <span class="ReQSimbol">*</span>
                    @Html.TextBoxFor(m => m.Rate, new { @class = "form-control input-sm" })
                    @Html.ValidationMessageFor(m => m.Rate, "", new { @class = "Error_Msg" })
                </div>

                <div class="col-md-1-5 col-md-offset-1 col_cus_2 padding_rt">
                    @Html.LabelFor(m => m.CartingType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>

                <div class="col-md-2">
                    @Html.DropDownListFor(m => m.CartingType, new List<SelectListItem>
                   {
                        new SelectListItem { Text="Upto 25%",Value="1"},
                        new SelectListItem { Text="Above 25%",Value="2"}

                   }, "----Select----")
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2 padding_rt">
                    <label>Party Name:</label>
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(m => m.PartyName, new { @class = "form-control input-sm", @readonly = true })
                    @Html.HiddenFor(x => x.PartyID)
                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="PartyBinding()" data-target="#PartyModal"></i></span>
                    @Html.ValidationMessageFor(m => m.PartyName, "", new { @class = "Error_Msg" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
        </div>
        <div class="row SignUp_space_bottom">
            <div class="row">
                <div class="col-md-offset-4 col-md-2">
                    <input type="submit" value="Save" class="btn log_Btn_sm" />
                </div>
                <div class="col-md-2">
                    <input type="button" value="Reset" class="btn log_Btn_sm" onclick="ClearEntryFees()" />
                </div>
            </div>
        </div>
        <div class="logErrMsg SignUp_space_bottom2" id="DivEntrySuc" style="background-color:transparent;"></div>
    </div>
}
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div id="DivEntryFeesList"></div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of SAC Code</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="lstSac">
                    @{
                        if (ViewBag.ListOfSAC != null)
                        {
                            foreach (var item in ViewBag.ListOfSAC)
                            {
                                <li id="@item.Value">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="ChargesModal" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Charges Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="boxCharges" type="text" />
                <ul class="navList" id="PartyList">
                    @{
                        if (ViewBag.ListOfChargeName != null)
                        {
                            foreach (var item in ViewBag.ListOfChargeName)
                            {
                                <li id="@item.Value">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="PartyModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal" onclick="closePartyModel()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">Choose Party Name</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Party Name Or Party Code" type="text" id="txtPartyCode" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="PartySearch()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;text-align:left;">
                    <thead>
                        <tr>
                            <th colspan="8" style="text-align:left;" width="80%">Party Name</th>
                            <th colspan="4" width="20%">Party Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll" style="overflow: scroll; width: auto; height: 250px;">
                    <table class="table dataTable table-bordered table-striped slim_tble">
                        <tbody id="tbleParty"></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        <button type="button" id="txtLoadMoreParty" style="width:100%; margin-left:0;" onclick="LoadPartyList()" class="btn log_Btn_sm">Load More Data</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="closePartyModel()" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>

    function ClearEntryFees() {
        $('input[type="text"],select').val('');
        $('input[type="checkbox"]').prop("checked", false);
        $('[data-valmsg-for]').html('');
    }
    function EntryFeesOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivEntrySuc').hasClass('logErrMsg'))
                $('#DivEntrySuc').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEntrySuc').html(data.Message);
            ClearEntryFees();
            LoadEntryFeesList();
        }
        else {
            if ($('#DivEntrySuc').hasClass('logSuccMsg'))
                $('#DivEntrySuc').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEntrySuc').html(data.Message);
        }
        //setTimeout(function () { $('#DivEntrySuc').html(''); }, 10000);
        //alert("Charges Saved Successfully");
    }
    function EntryFeesOnFailure() { }

    $('#box').keyup(function () {
        debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('#boxCharges').keyup(function () {
        debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('#lstSac li').on("click", function () {
        debugger;
        $('#SACId').val($(this).attr('id'));
        $('#SacCode').val($(this).text());
        $("#myModal").modal("hide");

    });

    $('#PartyList li').on("click", function () {
        debugger;
        $('#ChargeId').val($(this).attr('id'));
        $('#ChargeName').val($(this).text());
        $("#ChargesModal").modal("hide");

    });

    function PartySearch() {
        debugger;
        //pPage += 1;

        $.ajax({
            url: '/Master/VRN_Master/GetPartyNameForCWCCharges',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 1, 'PartyCode': $('#txtPartyCode').val() },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                    //$('#hdnPartyPayee').val(JSON.stringify(data.Data.LstPartyDetails));
                    var EcJson = data.Data.LstPartyDetails;


                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="selectParty(' + item.PartyId + ',&quot;' + item.PartyName + '&quot;);"><td colspan="8" width="80%">' + item.PartyName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PartyCode + '</td></tr>';
                    });
                    $('#tbleParty').html(html);
                    if (data.Data.StatePayer == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });
    }
    function PartyBinding() {
        debugger;
        //pPage += 1;
        $('#txtPartyCode').val('');
        $.ajax({
            url: '/Master/VRN_Master/GetPartyNameForCWCCharges',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 1, 'PartyCode': '' },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {

                    var EcJson = data.Data.LstPartyDetails;


                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="selectParty(' + item.PartyId + ',&quot;' + item.PartyName + '&quot;);"><td colspan="8" width="80%">' + item.PartyName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PartyCode + '</td></tr>';
                    });
                    $('#tbleParty').html(html);
                    if (data.Data.StatePayer == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });

    }

    function selectParty(PartyId, PartyName) {
        debugger;
        $('#PartyID').val(PartyId);
        $('#PartyName').val(PartyName);

        $("#PartyModal").modal("hide");
    }


    var pPage = 0;
    function LoadPartyList() {
        debugger;
        pPage += 1;
        $.ajax({
            url: '/Master/VRN_Master/GetPartyNameForCWCCharges',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': pPage, 'PartyCode': '' },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {

                    var EcJson = data.Data.LstPartyDetails;


                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="selectParty(' + item.PartyId + ',&quot;' + item.PartyName + '&quot;);"><td colspan="8" width="80%">' + item.PartyName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.PartyCode + '</td></tr>';
                    });
                    $('#tbleParty').append(html);
                    if (data.Data.StatePayer == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });

    }

    function closePartyModel() {
        partyPage = 1;
        $("#PartyModal").modal("hide");
    }

    $('#txtPartyCode').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#tbleParty > tr > td').show();
        else {
            $('#tbleParty > tr >td').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

</script>