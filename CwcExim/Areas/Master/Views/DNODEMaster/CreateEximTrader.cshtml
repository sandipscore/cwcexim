@model CwcExim.Areas.Master.Models.CHNEximTrader
<script>
    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 5000;        
        GenerateTable();
        GetStateList();
        @*$('#EximTraderAlias').keyup(function () {
            var yourInput = $(this).val();
            re = /[`~!@('@')#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi;
            var isSplChar = re.test(yourInput);
            if (isSplChar) {
                var no_spl_char = yourInput.replace(/[`~!@('@')#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, '');
                $(this).val(no_spl_char);
            }
        });*@
    });

    function GetEximTraderList() {
        debugger;
        $('#tblEntryDet').hide();
        //document.getElementById('#tblEntryDet').style.visibility = ;
        $('#DivEximTraderList').load('/Master/CHNMaster/GetEximTraderList');
    }

    function GenerateTable() {
        tablehtml = '';
        var tablehtml = '<table id="tblEntryDet" class="table table-striped table-bordered dataTable" style="width:100%;"><thead><tr><th class="text-center">SL No</th><th>Type</th><th>Party Code</th><th>Name</th><th>Email</th><th>Contact Person</th><th>Gst No.</th><th class="text-center">View</th><th class="text-center">Edit</th><th class="text-center">Delete</th></tr></thead><tbody>';
        tablehtml += '</tbody></table>';
        $('#tblEntryDet').html(tablehtml);
    }
    //function GetEximTraderList() {
    //    $('#DivEximTraderList').load('/Master/PPGEximTrader/GetEximTraderList');
    //}

    function SearchByPartyCodeDetails() {
        //debugger;
        $('#tblEntryDet').hide();
        if ($('#PartyCode').val().trim() == '') {
            alert('Enter Party Name or Code or GST Number or PAN or Mobile Number for searching');
            return;
        }
        var party =encodeURI($('#PartyCode').val().trim());
        //alert(party);
        $('#DivEximTraderList').load('/Master/CHNMaster/GetEximTraderListPartyCode?PartyCode=' + party);//$('#PartyCode').val().replace(' ', '+')
    }

    function ClearStateDropdown() {
        $('#StateId').html("");
        $('#StateId').append($('<option></option>').val("").html("---Select---"));
    }
    function ClearCityDropdown() {
        $('#CityId').html("");
        $('#CityId').append($('<option></option>').val("").html("---Select---"));
    }
    //var StateList = [];
    function GetStateList() {
        debugger;
        var CountryId = $('#CountryId').val();
        ClearCityDropdown();
        if (CountryId != "") {
            $.ajax({
                url: '/City/GetStatesByCountry',
                type: 'Get',
                data: { CountryId: CountryId },
                async: false,
                success: function (data) {
                    debugger;
                    //StateList = data.Data;
                    if (data.Status == 1) {
                        ClearStateDropdown();
                        $.each(data.Data, function (i, item) {
                            debugger;
                            $('#StateId').append($('<option></option>').val(item.StateId).html(item.StateName));
                        });
                    }
                    else {
                        ClearStateDropdown();
                    }
                }
            });
        }
        else {
            ClearStateDropdown();
        }
    }
    //var GstStateCode = '';
    function GetCityList() {
        debugger;
        var StateId = $('#StateId').val();
        if (StateId != "") {
            $.ajax({
                url: '/City/GetCitiesByState',
                type: 'Get',
                data: { StateId: StateId },
                async: false,
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        ClearCityDropdown();
                        $.each(data.Data, function (i, item) {
                            debugger;
                            $('#CityId').append($('<option><.option>').val(item.CityId).html(item.CityName));
                        });
                    }
                    else {
                        ClearCityDropdown();
                    }
                    //debugger;
                    //GstStateCode = $.grep(StateList, function (item) {
                    //    return item.StateId == StateId;
                    //})[0].GstStateCode;
                    
                }
            });
        }
        else {
            ClearCityDropdown();
        }
    }
    function ClearValidation() {
        $('[data-valmsg-for=""]').html('<span>/<span>');
        //$('.field-validation-error').each(function () {
        //    $(this).html('');
        //});
        ClearCheckBoxValidation();
    }
    function ClearCheckBoxValidation() {
        debugger;
        $('[data-valmsg-for="CheckBoxValidation"]').html('<span></span>');
    }
    function ResetEximTrader() {
        debugger;
        ClearValidation();
        ClearStateDropdown();
        ClearCityDropdown();
        $('#DivEximTrader #EximTraderName').val("");
        $('#DivEximTrader #EximTraderAlias').val("");
        $('#DivEximTrader #UserIdEximTrader').val("");
        $('#DivEximTrader #PasswordEximTrader').val('');
        $('#DivEximTrader #ConfrmPasswordEximTrader').val('');
        $('#DivEximTrader #HdnPassword').val('');
        $('#DivEximTrader #CountryId').val("");
        $('#DivEximTrader #Address').val("");
        $('#DivEximTrader #PinCode').val("");
        $('#DivEximTrader #PhoneNo').val("");
        $('#DivEximTrader #FaxNo').val("");
        $('#DivEximTrader #Email').val("");
        $('#DivEximTrader #ContactPerson').val("");
        $('#DivEximTrader #MobileNo').val("");
        $('#DivEximTrader #Pan').val("");
        $('#DivEximTrader #AadhaarNo').val("");
        $('#DivEximTrader #GSTNo').val("");
        $('#DivEximTrader #Tan').val('');
        $('#DivEximTrader #DivEximTraderMsg').html("");
        $('#DivEximTrader #Importer').prop("checked", false);
        $('#DivEximTrader #Exporter').prop("checked", false);
        $('#DivEximTrader #ShippingLine').prop("checked", false);
        $('#DivEximTrader #CHA').prop("checked", false);
        $('#DivEximTrader #Forwarder').prop("checked", false);
        $('#DivEximTrader #Rent').prop("checked", false);
    }
    function EximTraderOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivEximTraderMsg').hasClass('logErrMsg'))
                $('#DivEximTraderMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEximTrader #DivEximTraderMsg').html(data.Message);
            setTimeout(ResetEximTrader, TimeInSeconds);
            GetEximTraderList();
        }
        else if (data.Status == 2) {
            $('[data-valmsg-for="EximTraderName"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 3) {
            $('[data-valmsg-for="EximTraderAlias"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 4) {
            $('[data-valmsg-for="Email"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 5) {
            $('[data-valmsg-for="Pan"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 6) {
            $('[data-valmsg-for="AadhaarNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 7) {
            $('[data-valmsg-for="GSTNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 8) {
            $('[data-valmsg-for="PhoneNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 9) {
            $('[data-valmsg-for="MobileNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 10) {
            $('[data-valmsg-for="FaxNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 11) {
            $('[data-valmsg-for="Tan"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 12) {
            $('[data-valmsg-for="UserId"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }

        else {
            if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEximTraderMsg').html(data.Message);
            $('#PasswordEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
        }
    }
    function EximTraderOnFailure() {
    }
    $('#FormEximTrader').submit(function (e) {
        debugger;
        $('#DivEximTraderMsg').html('');
        $('[data-valmsg-for="Password"]').html('<span></span>');
        $('[data-valmsg-for="UserId"]').html('<span></span>');
        var FrmVlalidation = $('#FormEximTrader').valid();
        var Password = $('#PasswordEximTrader').val();
        var UserId = $('#UserIdEximTrader').val();
        var IsShippingLine = $('#ShippingLine').is(":checked")
       
        if ($('#Importer').is(":checked") || $('#Exporter').is(":checked") || $('#ShippingLine').is(":checked") || $('#CHA').is(":checked") || $('#Forwarder').is(":checked") || $('#Rent').is(":checked")) {
            
            if (FrmVlalidation == true) {
                if (Password == "" & UserId == "") {
                    return true;
                }
                else if (Password == "" & UserId != "") {
                    $('[data-valmsg-for="Password"]').html('<span>Please Give A Password For The User Id</span>');
                    return false;
                }
                else if (Password != "" & UserId == "") {
                    $('[data-valmsg-for="Password"]').html('<span>Please Give A User Id For The Respective Password</span>');
                    return false;
                }
                else {
                    if (CheckEximPasswordPolicy() == true) {
                        debugger;
                        Encrypt();
                        var Confirm = confirm("Are You Sure You Want To Save?");
                        if (Confirm == true) {
                            return true;
                        }
                        else {
                            $('#PasswordEximTrader').val($('#HdnPassword').val());
                            $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
                            return false;
                        }                       
                    }
                    else {
                        return false;
                    }
                }
            }
            else {
                return false;
            }
        }
        else {
            $('[data-valmsg-for="CheckBoxValidation"]').html('<span>One Of The Checkbox Must Be Ticked</span>');
            return false;
        }
    });

    function CheckEximPasswordPolicy() {
        debugger;
        var Password = $('#PasswordEximTrader').val();
        if ($('#UserIdEximTrader').val().toUpperCase() == Password.toUpperCase()) {
            $('[data-valmsg-for="Password"]').html('<span>User Id and Password must not be same.</span>');
            return false;
        }
        else if (!Password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@('@')._$#-]+$/)) {
            $('[data-valmsg-for="Password"]').html('<span>Password Policy does not match</span>');
            return false;
        }
        else if ((Password.length < 8) || (Password.length > 21)) {
            $('[data-valmsg-for="Password"]').html('<span>Password Must Be Minimum 8 Characters Long And Maximum 20 Characters Long.</span>');
            return false;
        }
        else {
            return true;
        }
    }
    function Encrypt() {
        debugger;
        $('#HdnPassword').val($('#PasswordEximTrader').val());
        $('#PasswordEximTrader').val(md5($('#PasswordEximTrader').val()));
        $('#ConfrmPasswordEximTrader').val(md5($('#ConfrmPasswordEximTrader').val()));
        return true;
    }

    function ClearPasswordMsg() {
        $('[data-valmsg-for="Password"]').html('<span></span>');
    }

</script>
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    //options.Confirm = "Are You Sure You Want To Save?";
    options.InsertionMode = InsertionMode.InsertAfter;
    options.OnSuccess = "EximTraderOnSuccess";
    options.OnFailure = "EximTraderOnFailure";
}


<div id="DivEximTrader" class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                @using (Ajax.BeginForm("AddEditEximTraderDetail", "CHNMaster", null, options, new { id = "FormEximTrader" }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row SignUp_space_bottom">
                        <div class="col-md-12">
                            <h4>Exim Trader Master</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Importer, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="Importer"><i class="square"></i><span>Importer</span></label>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Exporter, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="Exporter"><i class="square"></i><span>Exporter</span></label>
                                </div>
                            </div>
                            <div class="col-md-2 padding_rt padding_lt">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.ShippingLine, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="ShippingLine"><i class="square"></i><span>Shipping Line</span></label>
                                </div>

                            </div>
                            <div class="col-md-2">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.CHA, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="CHA"><i class="square"></i><span>CHA</span></label>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Forwarder, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="Forwarder"><i class="square"></i><span>Forwarder / Consolidator</span></label>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.Rent, new { @onclick = "ClearCheckBoxValidation()" })
                                    <label for="Rent"><i class="square"></i><span>Rent</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4-5">
                            @Html.ValidationMessage("CheckBoxValidation", "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.EximTraderName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.EximTraderName, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.EximTraderName, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-1">
                                    @Html.LabelFor(m => m.EximTraderAlias, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.EximTraderAlias, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.EximTraderAlias, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.UserId)<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.UserId, new { @class = "form-control input-sm", id = "UserIdEximTrader", @onblur = "ClearPasswordMsg()" })
                                    @Html.ValidationMessageFor(m => m.UserId, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(model => model.Password, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    <a class="Pass_popup" href="#" data-toggle="tooltip" data-placement="right" title="Password must contain at least : 1 Lowercase character,1 Upper Case character and 1 numeric digit. Special Character is optional and only specified ones are allowed : &amp; # . _ - $,  Password should be minimum 8 characters and maximum 20 characters long."><i class="fa fa-2x fa-question-circle" aria-hidden="true"></i></a>
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control input-sm", id = "PasswordEximTrader", @onblur = "ClearPasswordMsg()" })
                                    @Html.HiddenFor(m => m.HdnPassword)
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "Error_Msg" })

                                </div>
                                <div class="col-md-offset-1 col-md-1-5 padding_rt">
                                    <label>Confirm Password:</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control input-sm", id = "ConfrmPasswordEximTrader" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-10-5">
                                    @Html.TextAreaFor(m => m.Address, new { @style = "width:100%;height:75px;" })
                                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.CountryId)<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @if (ViewBag.Country != null)
                                    {
                                        @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.Country, "CountryId", "CountryName",76), "---Select---", new { @class = "form-control input-sm", @onchange = "GetStateList()" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown" })
                                    }
                                </div>
                                <div class="col-md-1-5 col-md-offset-1">
                                    @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(m => m.StateId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown", @onchange = "GetCityList()" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-1">
                                    @Html.LabelFor(m => m.PinCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-2">
                                    @Html.TextBoxFor(m => m.PinCode, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.PinCode, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.PhoneNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.PhoneNo, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-1">
                                    @Html.LabelFor(m => m.FaxNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.FaxNo, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.FaxNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 padding_rt">
                                    <label>Contact Person:</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.ContactPerson, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.ContactPerson, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.Email, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-1 col-md-1-5">
                                    @Html.LabelFor(m => m.MobileNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control input-sm", maxlength = 10 })
                                    @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.Pan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBoxFor(m => m.Pan, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Pan, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-1 col-md-1-5 padding_rt">
                                    <label>Aadhaar No:</label>
                                </div>
                                <div class="col-md-4">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBoxFor(m => m.AadhaarNo, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.AadhaarNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @Html.LabelFor(m => m.GSTNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBoxFor(m => m.GSTNo, new { @class = "form-control input-sm",maxlength = 15 })
                                    @Html.ValidationMessageFor(m => m.GSTNo, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-1 col-md-1-5">
                                    @Html.LabelFor(m => m.Tan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                </div>
                                <div class="col-md-4">
                                    @Html.TextBoxFor(m => m.Tan, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Tan, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>              
                        <div class="row">
                            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2" style="text-align:center">
                                <input type="submit" class="btn log_Btn_sm" value="Save" id="btnsubmit" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetEximTrader()" />
                            </div>
                        </div>
                        <div id="DivEximTraderMsg" class="logSuccMsg Form_Space_top SignUp_space_bottom2" style="background-color:transparent">
                            @*<div ></div>*@
                        </div>
                }

                <div class="row">
                    <div class="col-md-2 SignUp_space_bottom">
                        <input type="button" id="BtnEximTraderLoad" value="Show List" class="btn log_Btn_sm" onclick="GetEximTraderList()" />
                    </div>
                </div>
                

                <div class="row Form_Space_top Form_Space_bottom">
                    <div class="form-group Form_Input">
                        <div class="col-md-offset-5 col-md-4" style="text-align:right;" >
                            <label>Party Name/Code/GST No/PAN/ Mobile No:</label>
                        </div>
                        <div class="col-md-3">
                            @Html.TextBox("PartyCode")
                            @*<input id="PartyCode" name="PartyCode" type="text" value="gfh gf">*@
                            <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="SearchByPartyCodeDetails()"></i></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div id="tblEntryDet"></div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12 SignUp_space_bottom">
                        <div id="DivEximTraderList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>
