@model CwcExim.Areas.Master.Models.HDBHTCharges
<script src="~/Areas/Master/Scripts/App/Services/HDBHTChargesService.js"></script>
<script src="~/Areas/Master/Scripts/App/Controllers/HDBHTChargesCtrl.js"></script>
<script>angular.bootstrap(document.getElementById('HDBHTChargesAppDiv'), ['CWCApp']);
    //$('#SlabType').val(1);
    //function TransPortModeFunc() {
    //    var Radio = $('input[name=Mode]:checked').val();
    //    if (Radio == "Without Slab") {
    //        $('#SlabType').val(2);
    //        document.getElementById("WithoutSlab").checked = true;
    //        document.getElementById("WithSlab").checked = false;
    //        $('#chargeslab').prop('checked', false);
    //        $('#weight').prop('checked', false);
    //        $('#distence').prop('checked', false);
    //        $('#chargeslab').hide();
    //    }
    //    else {
    //        $('#SlabType').val(1);
    //        document.getElementById("WithSlab").checked = true;
    //        document.getElementById("WithoutSlab").checked = false;
    //        $('#chargeslab').show();
    //    }
    //} 
</script>
@*@using (Ajax.BeginForm("AddEditHTCharges", "HTCharges", new AjaxOptions
{
    Confirm = "Are you sure you want to save?",
    HttpMethod = "POST",
    InsertionMode = InsertionMode.InsertAfter,
    OnSuccess = "HTOnSuccess",
    OnFailure = "HTOnFailure"
}))*@

    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.HTChargesId)
    <div id="HDBHTChargesAppDiv">
        <div ng-controller="HDBHTChargesCtrl">

            <div class="container-fluid">
                <div class="row">
                    <div class="SignUp_space_bottom col-md-12 cwc_body">
                        <h5>H&T Charges<span class="triangle"></span></h5>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Effective Date:</label>
                            @*<input type="hidden" id="ChargeList" ng-model="ChargeList" name="ChargeList" />*@
                            @Html.HiddenFor(m => m.ChargeList, new { @class = "form-control input-sm" })
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                            <label>Charges For:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <select name="ChargesFor" ng-model="ChargesFor" ng-change="OnChargeChange(ChargesFor)" ng-disabled="isSlab">
                                <option value="" selected>--Select--</option>
                                <option value="CONT" selected>CONT</option>
                                <option value="CBT">CBT</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            @Html.LabelFor(m => m.OperationType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <span class="ReQSimbol">*</span>
                            @*if (Session["BranchId"].ToString() == "1")
                                 {
                                     <span>
                                     @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem> {
                                new SelectListItem { Value="1",Text="Import"},
                                new SelectListItem {Value="4",Text="Import (RMS)" },
                                new SelectListItem { Value="5",Text="Import (Non RMS [100%])"},
                                new SelectListItem { Value = "6", Text = "Import (Non RMS [25%])" },
                                new SelectListItem { Value = "7", Text = "Heavy Scrap" },
                                new SelectListItem { Value="2",Text="Export"},
                                new SelectListItem { Value="3",Text="General"}}, "----Select----", new { @class = "form-control input-sm dropdown", @onchange = "GetOperationCode()" })
                                     </span>
                                 }
                                 else
                                 {*@
                            <span>
                                @Html.DropDownListFor(m => m.OperationType, new List<SelectListItem> {
                               new SelectListItem { Value="1",Text="Import"},
                               new SelectListItem {Value="4",Text="Import (RMS)" },
                               new SelectListItem { Value="2",Text="Export"},
                               new SelectListItem { Value="3",Text="General"}}, "----Select----", new { @class = "form-control input-sm dropdown", @onchange = "GetOperationCode()" })
                            </span>
                            @*}*@
                            @Html.ValidationMessageFor(m => m.OperationType, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                            <label>Operation Code:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.OperationCode, new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.HiddenFor(m => m.OperationId)
                            <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>
                            @Html.ValidationMessageFor(m => m.OperationCode, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                @*<div ng-show="isdis">*@
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Container Type:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.DropDownListFor(m => m.ContainerType, new List<SelectListItem>
                       {   new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem { Value="1",Text="Empty Container" },
                           new SelectListItem { Value="2",Text="Loaded Container"},
                           new SelectListItem { Value="3",Text="Cargo" },
                           new SelectListItem { Value="4",Text="RMS"}
                           
                       }, new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.ContainerType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5">
                                <input id="IsODC" name="ODC_" type="checkbox" ng-model="IsODC" />
                                <label for="IsODC"><i class="square"></i><span>ODC</span></label>
                            </div>

                            <div class="col-md-1 col-md-offset-2 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.Type, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.DropDownListFor(m => m.Type, new List<SelectListItem>
                       {
                           new SelectListItem { Value="0",Text="----Select----" },
                           new SelectListItem {Value="1",Text="General" },
                           new SelectListItem {Value="2",Text="Heavy/Scrap" }
                       }, new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.Type, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    @*<div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5">
                        @Html.LabelFor(m => m.Description, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-10-5">
                        @Html.TextAreaFor(m => m.Description, new { @style = "width:100%;height:75px;%" })
                        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>*@
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.Size, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @*<span class="ReQSimbol">*</span>*@
                                @*@Html.DropDownListFor(m => m.Size, new List<SelectListItem>
                        {
                            new SelectListItem { Value="20",Text="20" },
                            new SelectListItem { Value="40",Text="40" }
                        }, "----Select----", new { @class = "form-control input-sm dropdown" })
                             @Html.ValidationMessageFor(m => m.Size, "", new { @class = "Error_Msg" })*@
                                @*<select name="Size" ng-options="size.name for size in sizelist" ng-model="Size" ng-change="OnSizeChange()" ng-disabled="isSlab"></select>*@
                                <select ng-model="Size" ng-change="OnSizeChange()" ng-disabled="isSlab">
                                    <option value="">--Select--</option>
                                    <option value="{{s.id}}" ng-repeat="s in sizelist">{{s.name}}</option>
                                </select>
                            
                             </div>
                            <div class="col-md-1-5 col-md-offset-3 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.MaxDistance, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.MaxDistance, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.MaxDistance, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Commodity Type:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                <span class="ReQSimbol">*</span>
                                @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                       {
                           new SelectListItem { Value="1",Text="HAZ"},
                           new SelectListItem { Value="2",Text="Non HAZ"}
                       }, "----Select----", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                            </div>
                            <div style="display:none">
                                <div class="col-md-offset-3 col-md-1-5">
                                    <label>Container Load Type:</label>
                                </div>
                                <div class="col-md-2">
                                    @Html.DropDownListFor(m => m.ContainerLoadType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="FCL",Value="FCL"},
                               new SelectListItem { Text="LCL",Value="LCL" },
                               new SelectListItem { Text="DD",Value="DD" }
                           })
                                </div>
                            </div>
                        </div>
                    </div>
                @*</div>*@
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Transport From:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.DropDownListFor(m => m.TransportFrom, new List<SelectListItem>
                       {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                           new SelectListItem { Value="L",Text="LONI"},
                           new SelectListItem { Value="T",Text="TKD"}
                       }, new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessageFor(m => m.TransportFrom, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-3 col-md-1-5">
                                <label>Exim Type:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.DropDownListFor(m => m.EximType, new List<SelectListItem>
                           {
                               new SelectListItem { Text="----Select----",Value="",Selected = true },
                               new SelectListItem { Text="Exim",Value="E"},
                               new SelectListItem { Text="RMS Exim",Value="RE" },
                               new SelectListItem { Text="RMS Non Exim",Value="RNE" }
                           })
                            </div>
                        </div>
                    </div>
                <div class="Form_Space_top">

                    <div class="row">
                        <div class="col-md-8 col-md-offset-2">
                            <div class="form-group Form_Input">
                                <div class="col-md-6">
                                    @*<div class="boolean-container">*@
                                    @Html.HiddenFor(m => m.SlabType)
                                    <input id="WithSlab" ng-model="Slab" name="slab" type="radio" value="WithSlab" ng-change="TransPortModeFunc()">
                                    <label for="WithSlab"><i class="circle"></i><span>With Slab</span></label>
                                    @*@Html.RadioButton("Mode", "With Slab", new { @id = "WithSlab", @checked = true, @onclick = "TransPortModeFunc();" })
                            <label for="WithSlab"><i class="circle"></i><span>With Slab</span></label>*@
                                </div>
                                @*</div>*@

                                <div class="col-md-6">
                                    <div class="boolean-container">
                                        <input id="WithoutSlab" ng-model="Slab" name="slab" type="radio" value="WithoutSlab" ng-change="TransPortModeFunc()">
                                        <label for="WithoutSlab"><i class="circle"></i><span>Without Slab</span></label>
                                        @*@Html.RadioButton("Mode", "Without Slab", new { @id = "WithoutSlab", @onclick = "TransPortModeFunc();" })*@

                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div id="chargeslab">
                                <div class="form-group Form_Input">
                                    <div class="col-md-4">
                                        <div class="boolean-container">
                                            <input id="weight" name="weight_slb" type="checkbox" ng-model="WeightSlab" ng-disabled="isSlab" />
                                            <label for="weight"><i class="square"></i><span>Weight Slab </span></label>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="boolean-container">
                                            <input id="distence" name="dis_slb" type="checkbox" ng-model="DistanceSlab" ng-disabled="isSlab" />
                                            <label for="distence"><i class="square"></i><span>Distance Slab</span></label>
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="boolean-container">
                                            <input id="CBM" name="CBM_slb" type="checkbox" ng-model="CBMSlab" ng-disabled="isSlab" />
                                            <label for="CBM"><i class="square"></i><span>CBM Slab</span></label>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                <div class="col-md-4">
                                    <table id="TblCommodity" class="table table-striped table-bordered dataTable" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>

                                                <th style="text-align:center;">Form</th>
                                                <th style="text-align:center;">To</th>
                                                <th style="text-align:center;">Select</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr ng-repeat="i in WeightSlabList">

                                                <td style="text-align:center">{{i.FromWeightSlab}}</td>
                                                <td style="text-align:center">{{i.ToWeightSlab}}</td>
                                                <td style="text-align:center">
                                                    <div class="boolean-container" style="width: auto; margin: auto;">
                                                        <input id='w_{{i.WeightSlabId}}' ng-model="i.chkWeightSlab" name="WeightSlab" type="checkbox" ng-click="WeightSlabSelection($index, WeightSlabList )">
                                                        @*@Html.CheckBoxFor(m => m.chkWeightSlab)*@
                                                        <label for='w_{{i.WeightSlabId}}'><i class="square"></i><span></span></label>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>

                                <div class="col-md-4">
                                    <table id="TblDistanceSlab" class="table table-striped table-bordered dataTable" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>

                                                <th style="text-align:center;">Form</th>
                                                <th style="text-align:center;">To</th>
                                                <th style="text-align:center;">Select</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr ng-repeat="j in DistanceSlabList">

                                                <td style="text-align:center">{{j.FromDistanceSlab}}</td>
                                                <td style="text-align:center">{{j.ToDistanceSlab}}</td>
                                                <td style="text-align:center">
                                                    <div class="boolean-container" style="width: auto; margin: auto;">
                                                        <input id=d_{{j.DistanceSlabId}} ng-model="j.chkDistanceSlab" name="DistanceSlab" type="checkbox" ng-click="DistanceSlabSelection($index, DistanceSlabList)">
                                                        @*@Html.CheckBoxFor(m => m.chkDistanceSlab)*@
                                                        <label for=d_{{j.DistanceSlabId}} ng-model="j.chkDistanceSlab"><i class="square"></i><span></span></label>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>

                                <div class="col-md-4">
                                    <table id="TblDistanceSlab" class="table table-striped table-bordered dataTable" cellspacing="0" width="100%">
                                        <thead>
                                            <tr>

                                                <th style="text-align:center;">Form</th>
                                                <th style="text-align:center;">To</th>
                                                <th style="text-align:center;">Select</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr ng-repeat="j in CBMSlabList">

                                                <td style="text-align:center">{{j.FromCBMSlab}}</td>
                                                <td style="text-align:center">{{j.ToCBMSlab}}</td>
                                                <td style="text-align:center">
                                                    <div class="boolean-container" style="width: auto; margin: auto;">
                                                        <input id=d_{{j.CbmSlabId}} ng-model="j.chkCBMSlab" name="CBMSlab" type="checkbox" ng-click="CBMSlabSelection($index, CBMSlabList)">
                                                        @*@Html.CheckBoxFor(m => m.chkDistanceSlab)*@
                                                        <label for=d_{{j.CbmSlabId}} ng-model="j.chkCBMSlab"><i class="square"></i><span></span></label>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                    <div class="form-group Form_Input">
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>CWC Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.RateCWC, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.RateCWC, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                <label>Contractor Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.ContractorRate)
                                @Html.ValidationMessageFor(m => m.ContractorRate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>Round Trip Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.RoundTripRate, new { @class = "form-control input-sm" })

                            </div>
                            <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                <label>Empty Rate:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">

                                @Html.TextBoxFor(m => m.EmptyRate)

                            </div>
                        </div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>Port Name:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.PortName, new { @class = "form-control input-sm", @readonly = "readonly" })
                                @Html.HiddenFor(m => m.PortId)
                                @*@Html.HiddenFor(m => m.PortToDistance)*@
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myPortModal"></i></span>

                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="col-md-8 col-md-offset-2">
                            <div class="col-md-1-5 col_cus_2" style="padding:0;">
                                <label>Additional Weight Charge:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.AddlWtCharges, new { @class = "form-control input-sm" })

                            </div>
                            <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                <label>Additional Distance Charge:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.AddlDisCharges)
                            </div>
                            <div class="col-md-2-5 col-md-offset-2 col_cus_2 padding_rt">
                                <label>Additional CBM Charge:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.AddCBMCharges)
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-offset-4 col-md-2" style="text-align:center">
                            <input type="button" id="BtnHTSave" value="Add" ng-click="AddHTCharges()" class="btn log_Btn_sm" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="BtnResetDtl" value="Reset" class="btn log_Btn_sm" ng-click="ResetDtl()" />
                        </div>
                    </div>
                    <div class="Form_Space_top">
                        <table id="TblAddRow" class="table table-striped table-bordered dataTable" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th style="text-align:center;">SL No.</th>
                                    <th style="text-align:center;">From Weight Slab</th>
                                    <th style="text-align:center;">To Weight Slab</th>
                                    <th style="text-align:center;">From Distance Slab</th>
                                    <th style="text-align:center;">To Distance Slab</th>
                                    <th style="text-align:center;">From CBM Slab</th>
                                    <th style="text-align:center;">To CBM Slab</th>
                                    <th style="text-align:center;">CWC Rate</th>
                                    <th style="text-align:center;">Contractor Rate</th>
                                    <th style="text-align:center;">Round Trip Rate</th>
                                    <th style="text-align:center;">Empty Rate</th>
                                    <th style="text-align:center;">AddlWt. Charges</th>
                                    <th style="text-align:center;">AddlDis. Charges</th>
                                    <th style="text-align:center;">Port Name</th>
                                    @*<th style="text-align:center;">Port From</th>
                            <th style="text-align:center;">Port To</th>*@
                                    <th style="text-align:center;"></th>
                                    <th style="text-align:center;"></th>
                                    <th style="text-align:center;">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="k in ChargeList">
                                    <th style="text-align:center;">{{$index+1}}</th>
                                    <th style="text-align:center;">{{k.FromWtSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.ToWtSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.FromDisSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.ToDisSlabCharge}}</th>

                                    <th style="text-align:center;">{{k.FromCBMSlabCharge}}</th>
                                    <th style="text-align:center;">{{k.ToCBMSlabCharge}}</th>

                                    <th style="text-align:center;">{{k.CwcRate}}</th>
                                    <th style="text-align:center;">{{k.ContractorRate}}</th>
                                    <th style="text-align:center;">{{k.RoundTripRate}}</th>
                                    <th style="text-align:center;">{{k.EmptyRate}}</th>
                                    <th style="text-align:center;">{{k.AddlWtCharges}}</th>
                                    <th style="text-align:center;">{{k.AddlDisCharges}}</th>
                                    <th style="text-align:center;">{{k.PortName}}</th>
                                    @*<th style="text-align:center;">{{k.PortFromDistance}}</th>
                            <th style="text-align:center;">{{k.PortToDistance}}</th>*@
                                    <th style="text-align:center;"></th>
                                    <th style="text-align:center;"></th>
                                    <th style="text-align:center;"><a href="#" ng-hide="!ChargeList.length" ng-click="DeleteHTCharges($index)"><i class="fa fa-window-close-o Delete" aria-hidden="true"></i></a></th>
                                </tr>
                            </tbody>
                        </table>
                    </div>

                </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2" style="text-align:center">
                            <input type="submit" id="BtnSave" value="Save" class="btn log_Btn_sm" ng-click="SaveHTCharges()" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="BtnReset" value="Back" class="btn log_Btn_sm" onclick="LoadHTChargesPage()" />
                        </div>
                    </div>
                    <div class="logSuccMsg Form_Space_top SignUp_space_bottom2" id="DivMsg" style="background-color:transparent;"></div>

                    @*<div class="row">
                <div class="col-md-12">
                    <div id="DivHTChargesList"></div>
                </div>
            </div>*@<div class="row">
                        <div class="col-md-12">
                            <div id="DivHTChargesList"></div>
                        </div>
                    </div>
                </div>
        </div>
    </div>
    @*}*@
@Scripts.Render("~/bundles/jqueryval")
<div class="modal fade" id="myModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of Operation Code</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="box" type="text" />
                    <ul class="navList" id="OperationList"></ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
<div class="modal fade" id="myPortModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Portbox" type="text" />
                <ul class="navList" id="PortList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>

    $(document).ready(function(){
        GetOperationCode();
        GetPort();
    });

    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('.navList').on("click",'li', function () {
        debugger;
        //var OperationId = $(this).html();
        var OperationId = $(this).attr('id');
        var Code = $(this).text();
        $('#OperationCode').val(Code);
        $('#OperationId').val(OperationId);
        $("#myModal").modal("hide");
    });
    
    function GetOperationCode()
    {
        debugger;
        var Opercode=@Html.Raw(Json.Encode(Model.LstOperation));
        //if($('#HTChargesId').val()==0){
        //    $('#OperationCode').val('');
        //    $('#OperationId').val('');
        //}
        var OperationListHtml="";
        $('#OperationList').html('');
        $.each(Opercode,function(i,item)
        {
            if($('#OperationType').val()==item.Type)
            {
                OperationListHtml+='<li id='+item.OperationId+'>'+item.Code+'</li>';
            }
        });
        $('#OperationList').html(OperationListHtml);
    }
    function LoadHTChargesPage(){
        $('#DivBody').load('/Master/HDBMaster/CreateHTCharges')
    }
    

    $("#EffectiveDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
        }
    });

    $('#Portbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#PortList').on("click",'li', function () {
        debugger;
        var PortId = $(this).attr('id');
        var PortName = $(this).text();
        $('#PortName').val(PortName);
        $('#PortId').val(PortId);
        // $("#myModal").modal("hide");
    });
    function GetPort()
    {
        debugger;
        var Port=@Html.Raw(Json.Encode(Model.LstPort));
        $('#PortName').val('');
        $('#PortId').val('');
        var PortListHtml="";
        $('#PortList').html('');
        $.each(Port,function(i,item)
        {
            PortListHtml+='<li id='+item.PortId+' data-dismiss="modal">'+item.PortName+'</li>';
        });
        $('#PortList').html(PortListHtml);
    }
</script>
<style>
    ul li {
        list-style: none;
    }

    .navList {
        margin-top: 10px;
        padding: 10px;
        height: 150px;
        overflow: auto;
        border: 1px solid #333;
    }

    #box {
        width: 100%;
        border: 1px solid #333;
        border-radius: 2px;
        padding: 5px;
    }

    .search {
        top: 2px;
        right: 20px;
        /* float: left; */
        display: block;
        position: absolute;
        cursor: pointer;
    }

    .la {
        line-height: 38px;
    }
</style>



