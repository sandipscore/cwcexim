@model CwcExim.Areas.Master.Models.PPGRentReservationModel
<script>
    var TimeInSeconds;
    var CheckPasswordPolicy;
    var ExistingUser;
    $(document).ready(function () {
        TimeInSeconds = 5000;
        debugger;
        CheckPasswordPolicy = false;
        ExistingUser = false;
        var UserId = '@Model.UserId';
        var Password = '@Model.Password';
        $('#PasswordEditEximTrader').val('@Model.Password');
        $('#ConfrmPasswordEditEximTrader').val('@Model.Password');
        var CountryId = Number(@Model.CountryId);
        var StateId = Number(@Model.StateId);
        var CityId = Number(@Model.CityId);
        if (CountryId > 0) {
            $('#DivEditEximTrader #CountryId').val(CountryId);
            GetStateList();
        }
        if (StateId > 0) {
            $('#DivEditEximTrader #StateId').val(StateId);
            var a = $('#DivEditEximTrader #StateId').val();
            GetCityList();
        }
        if (CityId > 0) {
            $('#DivEditEximTrader #CityId').val(CityId);
        }
        if (Password == "") {
            $('#PasswordEditEximTrader').prop("readonly", false);
            $('#ConfrmPasswordEditEximTrader').prop("readonly", false);
        }
        if (UserId == "") {
            ExistingUser = false;
            $('#UserIdEditEximTrader').prop("readonly", false);
        }
        else {
            ExistingUser = true;
        }
    });
    function LoadRailReservationPage() {

        $('#DivBody').load('/Master/PPGRentReservationParty/CreateRentReservationParty');
    }
    function ClearStateDropdown() {
        $('#DivEditEximTrader #StateId').html("");
        $('#DivEditEximTrader #StateId').append($('<option></option>').val("").html("---Select---"));
    }
    function ClearCityDropdown() {
        $('#DivEditEximTrader #CityId').html("");
        $('#DivEditEximTrader #CityId').append($('<option></option>').val("").html("---Select---"));
    }
    function GetStateList() {
        debugger;
        var CountryId = $('#DivEditEximTrader #CountryId').val();
        ClearCityDropdown();
        if (CountryId != "" & CountryId != null) {
            $.ajax({
                url: '/City/GetStatesByCountry',
                type: 'Get',
                async: false,
                data: { CountryId: CountryId },
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        ClearStateDropdown();
                        $.each(data.Data, function (i, item) {
                            debugger;
                            $('#DivEditEximTrader #StateId').append($('<option></option>').val(item.StateId).html(item.StateName));
                        });
                    }
                    else {
                        ClearStateDropdown();
                    }
                }
            });
        }
        else {
            ClearStateDropdown();
        }
    }
    function GetCityList() {
        debugger;
        var StateId = $('#DivEditEximTrader #StateId').val();
        if (StateId != "" & StateId != null) {
            $.ajax({
                url: '/City/GetCitiesByState',
                type: 'Get',
                async: false,
                data: { StateId: StateId },
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        ClearCityDropdown();
                        $.each(data.Data, function (i, item) {
                            debugger;
                            $('#DivEditEximTrader #CityId').append($('<option><.option>').val(item.CityId).html(item.CityName));
                        });
                    }
                    else {
                        ClearCityDropdown();
                    }
                }
            });
        }
        else {
            ClearCityDropdown();
        }
    }
    function ClearCheckBoxValidation() {
        debugger;
        $('[data-valmsg-for="CheckBoxValidation"]').html('<span></span>');
    }
    function RentReservationOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivEximTraderMsg').hasClass('logErrMsg'))
                $('#DivEximTraderMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivEditEximTrader #DivEximTraderMsg').html(data.Message);
            setTimeout(LoadRentReservationPage, TimeInSeconds);
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 2) {
            $('[data-valmsg-for="PartyName"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 3) {
            $('[data-valmsg-for="PartyAlias"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 4) {
            $('[data-valmsg-for="Email"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 5) {
            $('[data-valmsg-for="Pan"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 6) {
            $('[data-valmsg-for="AadhaarNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 7) {
            $('[data-valmsg-for="GSTNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 8) {
            $('[data-valmsg-for="PhoneNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 9) {
            $('[data-valmsg-for="MobileNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 10) {
            $('[data-valmsg-for="FaxNo"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 11) {
            $('[data-valmsg-for="Tan"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else if (data.Status == 12) {
            $('[data-valmsg-for="UserId"]').html('<span>' + data.Message + '</option>');
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
        else {
            if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivEditEximTrader #DivEximTraderMsg').html(data.Message);
            $('#PasswordEditEximTrader').val($('#HdnPassword').val());
            $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
        }
    }
    function RentReservationOnFailure() {
    }
    $('#FormEditRentReservation').submit(function (e) {
        debugger;
        $('#DivEximTraderMsg').html('');
        var FrmVlalidation = $('#FormEditRentReservation').valid();
        var Password = $('#PasswordEditEximTrader').val();
        var UserId = $('#UserIdEditEximTrader').val();

        if ($('#DivEditEximTrader #Rent').is(":checked") || $('#DivEditEximTrader #Reservation').is(":checked")
            ) {
            // if (IsShippingLine == false) {
            //if ($.trim($('#Pan').val()) == '') {
            //    if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
            //        $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            //    $('#DivEximTraderMsg').html('Pan Is Required');
            //    //$('[data-valmsg-for="Pan"]').html('<span>Fill Out This Field</span>');
            //    return false;
            //}
            //if ($.trim($('#GSTNo').val()) == '') {
            //    if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
            //        $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            //    $('#DivEximTraderMsg').html('GSTNo Is Required');
            //    // $('[data-valmsg-for="GSTNo"]').html('<span>Fill Out This Field</span>');
            //    return false;
            //}
            // }
            if (FrmVlalidation == true) {
                if (Password == "" & UserId == "") {
                    return true;
                }
                else if (Password == "" & UserId != "") {
                    $('[data-valmsg-for="Password"]').html('<span>Please Give A Password For The User Id</span>');
                    return false;
                }
                else if (Password != "" & UserId == "") {
                    //$('[data-valmsg-for="GSTNo"]').html('<span>Please Give A User Id For The Respective Password</span>');
                    $('[data-valmsg-for="Password"]').html('<span>Please Give A User Id For The Respective Password</span>');
                    // $('[data-valmsg-for="UserId"]').html('<span>Please Give A User Id For The Respective Password</span>');
                    return false;
                    //  $('[data-valmsg-for="GSTNo"]').html('<span>Please Give A User Id For The Respective Password</span>');
                    // debugger;
                }
                else {
                    if (ExistingUser == false) {
                        if (CheckEximPasswordPolicy() == true) {
                            debugger;
                            Encrypt();
                            var Confirm = confirm("Are You Sure You Want To Save?");
                            if (Confirm == true) {
                                return true;
                            }
                            else {
                                $('#PasswordEditEximTrader').val($('#HdnPassword').val());
                                $('#ConfrmPasswordEditEximTrader').val($('#HdnPassword').val());
                                return false;
                            }
                        }
                        else {
                            return false;
                        }
                    }
                    else {
                        return true;
                    }
                }
            }
            else {
                return false;
            }
        }
        else {
            $('[data-valmsg-for="CheckBoxValidation"]').html('<span>One Of The Checkbox Must Be Ticked</span>');
            return false;
        }
    });

    function CheckEximPasswordPolicy() {
        debugger;
        var Password = $('#PasswordEditEximTrader').val();
        if ($('#UserIdEditEximTrader').val().toUpperCase() == Password.toUpperCase()) {
            $('[data-valmsg-for="UserId"]').html('<span>User Id and Password must not be same.</span>');
            CheckPasswordPolicy = false;
            return false;
        }
        else if (!Password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@('@')._$#-]+$/)) {
            $('[data-valmsg-for="Password"]').html('<span>Password Policy does not match</span>');
            CheckPasswordPolicy = false;
            return false;
        }
        else if ((Password.length < 8) || (Password.length > 21)) {
            $('[data-valmsg-for="Password"]').html('<span>Password must be minimum 8 characters long and maximum 20 characters long.</span>');
            CheckPasswordPolicy = false;
            return false;
        }
        else {
            CheckPasswordPolicy = true;
            return true;
        }
    }
    function Encrypt() {
        debugger;
        $('#HdnPassword').val($('#PasswordEditEximTrader').val());
        $('#PasswordEditEximTrader').val(md5($('#PasswordEditEximTrader').val()));
        $('#ConfrmPasswordEditEximTrader').val(md5($('#ConfrmPasswordEditEximTrader').val()));
        return true;
    }
    function ClearPasswordMsg() {
        $('[data-valmsg-for="Password"]').html('<span></span>');
    }
</script>
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    // options.Confirm = "Are You Sure You Want To Save?";
    options.InsertionMode = InsertionMode.InsertAfter;
    options.OnSuccess = "RentReservationOnSuccess";
    options.OnFailure = "RentReservationOnFailure";
}
@using (Ajax.BeginForm("AddEditRentReservationDetail", "PPGRentReservationParty", null, options, new { id = "FormEditRentReservation" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.PartyId)
    <div id="DivEditEximTrader">
        <div class="row">
            <div class="col-md-12">
                <div class="Head_h4">
                    <div class="row SignUp_space_bottom">
                        <div class="col-md-12">
                            <h4>Rent  Party Master</h4>
                        </div>
                    </div>
                    <div class="content_wrp">
                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-1">
                                    <div class="boolean-container">
                                        @Html.CheckBoxFor(m => m.Rent, new { @onclick = "ClearCheckBoxValidation()" })
                                        <label for="Rent"><i class="square"></i><span>Rent</span></label>
                                        @Html.ValidationMessage("CheckBoxValidation", "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <span class="ReQSimbol">*</span>
                                        @Html.LabelFor(m => m.PartyName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                        @Html.TextBoxFor(m => m.PartyName, new { @placeholder = "Enter Name" })
                                        @Html.ValidationMessageFor(m => m.PartyName, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(m => m.PartyAlias, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.PartyAlias, new { @placeholder = "Enter Alias" })
                                    @Html.ValidationMessageFor(m => m.PartyAlias, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextAreaFor(m => m.Address, new { @placeholder = "Enter Address",  @style = "width:100%;height:75px;" })
                                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CountryId)<span class="LabelColon">:</span>
                                    @if (ViewBag.Country != null)
                                    {
                                        @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.Country, "CountryId", "CountryName"), "---Select---", new { @class = "", @onchange = "GetStateList()" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "dropdown" })
                                    }
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.DropDownListFor(m => m.StateId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "dropdown", @onchange = "GetCityList()" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "dropdown" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.PinCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.PinCode, new { @placeholder = "Enter Pincode" })
                                @Html.ValidationMessageFor(m => m.PinCode, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                       
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PhoneNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.PhoneNo, new { @placeholder = "Enter Phone No" })
                                    @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.FaxNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.FaxNo, new { @placeholder = "Enter Fax No" })
                                @Html.ValidationMessageFor(m => m.FaxNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Contact Person:</label>
                                    @Html.TextBoxFor(m => m.ContactPerson, new { @placeholder = "Enter Contact Person" })
                                    @Html.ValidationMessageFor(m => m.ContactPerson, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.Email, new { @placeholder = "Enter Email Id" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                       
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.MobileNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.MobileNo, new { @placeholder = "Enter Mobile No" })
                                @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Pan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.Pan, new { @placeholder = "Enter PAN" })
                                    @Html.ValidationMessageFor(m => m.Pan, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label>Aadhaar No:</label>
                                @Html.TextBoxFor(m => m.AadhaarNo, new { @placeholder = "Enter Aadhaar No" })
                                @Html.ValidationMessageFor(m => m.AadhaarNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.GSTNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.GSTNo, new { @placeholder = "Enter GST No" })
                                    @Html.ValidationMessageFor(m => m.GSTNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.Tan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.Tan, new { @placeholder = "Enter TAN" })
                                @Html.ValidationMessageFor(m => m.Tan, "", new { @class = "Error_Msg" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                        </div>

                        <div class="d-flex justify-content-left">
                            <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save">
                            <input type="button" class="btn btn-primary-border btn-100px" value="Cancel" onclick="LoadRentReservationPage()">
                        </div>

                        <div id="DivEximTraderMsg" class="logSuccMsg Form_Space_top SignUp_space_bottom2" style="background-color:transparent"></div>

                        <div id="DivEximTraderErrMsg" class="logErrMsg"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>

