@model CwcExim.Areas.Master.Models.PPGRentReservationModel

<script>
        var TimeInSeconds;
        $(document).ready(function () {
            TimeInSeconds = 5000;
            GetRentReservationList();
        });
        function GetRentReservationList() {
            $('#DivEximTraderList').load('/Master/PPGRentReservationParty/GetRentReservationPartyList');
        }
        function ClearStateDropdown() {
            $('#StateId').html("");
            $('#StateId').append($('<option></option>').val("").html("---Select---"));
        }
        function ClearCityDropdown() {
            $('#CityId').html("");
            $('#CityId').append($('<option></option>').val("").html("---Select---"));
        }
        function GetStateList() {
            debugger;
            var CountryId = $('#CountryId').val();
            ClearCityDropdown();
            if (CountryId != "")
            {
                $.ajax({
                    url: '/City/GetStatesByCountry',
                    type: 'Get',
                    data: { CountryId: CountryId },
                    async:false,
                    success: function (data) {
                        debugger;
                        if (data.Status == 1) {
                            ClearStateDropdown();
                            $.each(data.Data, function (i, item) {
                                debugger;
                                $('#StateId').append($('<option></option>').val(item.StateId).html(item.StateName));
                            });
                        }
                        else {
                            ClearStateDropdown();
                        }
                    }
                });
            }
            else {
                ClearStateDropdown();
            }
        }
        function GetCityList() {
            debugger;
            var StateId = $('#StateId').val();
            if (StateId != "") {
                $.ajax({
                    url: '/City/GetCitiesByState',
                    type: 'Get',
                    data: { StateId: StateId },
                    async:false,
                    success: function (data) {
                        debugger;
                        if (data.Status == 1) {
                            ClearCityDropdown();
                            $.each(data.Data, function (i, item) {
                                debugger;
                                $('#CityId').append($('<option><.option>').val(item.CityId).html(item.CityName));
                            });
                        }
                        else {
                            ClearCityDropdown();
                        }
                    }
                });
            }
            else {
                ClearCityDropdown();
            }
        }
        function ClearValidation() {
            $('[data-valmsg-for=""]').html('<span>/<span>');
            //$('.field-validation-error').each(function () {
            //    $(this).html('');
            //});
            ClearCheckBoxValidation();
        }
        function ClearCheckBoxValidation() {
            debugger;
            $('[data-valmsg-for="CheckBoxValidation"]').html('<span></span>');
        }
        function ResetRentReservation() {
            debugger;
            ClearValidation();
            ClearStateDropdown();
            ClearCityDropdown();
            $('#DivEximTrader #PartyName').val("");
            $('#DivEximTrader #PartyAlias').val("");
            $('#DivEximTrader #UserIdEximTrader').val("");
            $('#DivEximTrader #PasswordEximTrader').val('');
            $('#DivEximTrader #ConfrmPasswordEximTrader').val('');
            $('#DivEximTrader #HdnPassword').val('');
            $('#DivEximTrader #CountryId').val("");
            $('#DivEximTrader #Address').val("");
            $('#DivEximTrader #PinCode').val("");
            $('#DivEximTrader #PhoneNo').val("");
            $('#DivEximTrader #FaxNo').val("");
            $('#DivEximTrader #Email').val("");
            $('#DivEximTrader #ContactPerson').val("");
            $('#DivEximTrader #MobileNo').val("");
            $('#DivEximTrader #Pan').val("");
            $('#DivEximTrader #AadhaarNo').val("");
            $('#DivEximTrader #GSTNo').val("");
            $('#DivEximTrader #Tan').val('');
            $('#DivEximTrader #DivEximTraderMsg').html("");
            $('#DivEximTrader #Rent').prop("checked", false);
            $('#DivEximTrader #Reservation').prop("checked", false);
           
        }
        function RentReservationOnSuccess(data) {
            if (data.Status == 1) {
                if ($('#DivEximTraderMsg').hasClass('logErrMsg'))
                    $('#DivEximTraderMsg').removeClass('logErrMsg').addClass('logSuccMsg');
                $('#DivEximTrader #DivEximTraderMsg').html(data.Message);
                setTimeout(ResetRentReservation, TimeInSeconds);
                GetRentReservationList();
            }
            else if (data.Status == 2) {
                $('[data-valmsg-for="PartyName"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 3) {
                $('[data-valmsg-for="PartyAlias"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 4) {
                $('[data-valmsg-for="Email"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 5) {
                $('[data-valmsg-for="Pan"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 6) {
                $('[data-valmsg-for="AadhaarNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 7) {
                $('[data-valmsg-for="GSTNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 8) {
                $('[data-valmsg-for="PhoneNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 9) {
                $('[data-valmsg-for="MobileNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 10) {
                $('[data-valmsg-for="FaxNo"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 11) {
                $('[data-valmsg-for="Tan"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else if (data.Status == 12) {
                $('[data-valmsg-for="UserId"]').html('<span>' + data.Message + '</option>');
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
            else {
                if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                    $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                $('#DivEximTraderMsg').html(data.Message);
                $('#PasswordEximTrader').val($('#HdnPassword').val());
                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
            }
        }
        function RentReservationOnFailure() {
        }
        $('#FormRentReservation').submit(function (e) {
            debugger;
            $('#DivEximTraderMsg').html('');
            $('[data-valmsg-for="Password"]').html('<span></span>');
            $('[data-valmsg-for="UserId"]').html('<span></span>');
            var FrmVlalidation = $('#FormRentReservation').valid();
             var Password = $('#PasswordEximTrader').val();
             var UserId = $('#UserIdEximTrader').val();
            
             if ($('#Rent').is(":checked") || $('#Reservation').is(":checked")) {
                //return true;
               // if (IsShippingLine == false) {
                    //if ($.trim($('#Pan').val()) == '') {
                    //    if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                    //        $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                    //    $('#DivEximTraderMsg').html('Pan Is Required');
                    //    //$('[data-valmsg-for="Pan"]').html('<span>Fill Out This Field</span>');
                    //    return false;
                    //}
                    //if ($.trim($('#GSTNo').val()) == '') {
                    //    if ($('#DivEximTraderMsg').hasClass('logSuccMsg'))
                    //        $('#DivEximTraderMsg').removeClass('logSuccMsg').addClass('logErrMsg');
                    //    $('#DivEximTraderMsg').html('GSTNo Is Required');
                    //    // $('[data-valmsg-for="GSTNo"]').html('<span>Fill Out This Field</span>');
                    //    return false;
                    //}
               // }
                if (FrmVlalidation == true)
                {
                    if (Password == "" & UserId=="") {
                        return true;
                    }
                    else if (Password == "" & UserId != "") {
                        $('[data-valmsg-for="Password"]').html('<span>Please Give A Password For The User Id</span>');
                        return false;
                    }
                    else if (Password != "" & UserId == "") {
                        $('[data-valmsg-for="Password"]').html('<span>Please Give A User Id For The Respective Password</span>');
                        return false;
                    }
                    else {
                        if (CheckEximPasswordPolicy() == true)
                        {
                            debugger;
                                Encrypt();
                            var Confirm = confirm("Are You Sure You Want To Save?");
                            if (Confirm == true) {
                                return true;
                            }
                            else {
                                $('#PasswordEximTrader').val($('#HdnPassword').val());
                                $('#ConfrmPasswordEximTrader').val($('#HdnPassword').val());
                                return false;
                            }
                                //$.ajax({
                                //    processData: false,
                                //    contentType: false,
                                //    data: new FormData(this),
                                //    type: 'POST',
                                //    url:'/EximTrader/AddEditEximTraderDetail',
                                //    //url: $(this).attr('action'),
                                //    success: function (data) {
                                //        debugger;
                                //        EximTraderOnSuccess(data);
                                //    },
                                //    error: function (request, status, error) {
                                //        debugger;
                                //        alert(request.responseText);
                                //    }
                                //});
                        }
                        else {
                            return false;
                        }
                    }
                }
                else {
                    return false;
                }
            }
            else {
                $('[data-valmsg-for="CheckBoxValidation"]').html('<span>One Of The Checkbox Must Be Ticked</span>');
                return false;
            }
        });

        function CheckEximPasswordPolicy() {
             debugger;
             var Password = $('#PasswordEximTrader').val();
             if ($('#UserIdEximTrader').val().toUpperCase() == Password.toUpperCase()) {
                 $('[data-valmsg-for="Password"]').html('<span>User Id and Password must not be same.</span>');
                 return false;
             }
             else if (!Password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d@('@')._$#-]+$/)) {
                 $('[data-valmsg-for="Password"]').html('<span>Password Policy does not match</span>');
                 return false;
             }
             else if ((Password.length < 8) || (Password.length > 21)) {
                 $('[data-valmsg-for="Password"]').html('<span>Password Must Be Minimum 8 Characters Long And Maximum 20 Characters Long.</span>');
                 return false;
             }
             else {
                 return true;
             }
         }
        function Encrypt() {
            debugger;
            $('#HdnPassword').val($('#PasswordEximTrader').val());
            $('#PasswordEximTrader').val(md5($('#PasswordEximTrader').val()));
            $('#ConfrmPasswordEximTrader').val(md5($('#ConfrmPasswordEximTrader').val()));
            return true;
        }

        function ClearPasswordMsg() {
            $('[data-valmsg-for="Password"]').html('<span></span>');
        }
</script>
@{
    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    //options.Confirm = "Are You Sure You Want To Save?";
    options.InsertionMode = InsertionMode.InsertAfter;
    options.OnSuccess = "RentReservationOnSuccess";
    options.OnFailure = "RentReservationOnFailure";
}


<div id="DivEximTrader">
    <div class="row">
        <div class="col-md-12">
            <div class="Head_h4">
                <div class="row SignUp_space_bottom">
                    <div class="col-md-12">
                        <h4>Rent Party Master</h4>
                    </div>
                </div>
                <div class="content_wrp">
                    @using (Ajax.BeginForm("AddEditRentReservationDetail", "PPGRentReservationParty", null, options, new { id = "FormRentReservation" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="row Form_Space_top">
                            <div class="form-group">
                                <div class="col-md-1">
                                    <div class="boolean-container">
                                        @Html.CheckBoxFor(m => m.Rent, new { @onclick = "ClearCheckBoxValidation()" })
                                        <label for="Rent"><i class="square"></i><span>Rent</span></label>
                                        @Html.ValidationMessage("CheckBoxValidation", "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <span class="ReQSimbol">*</span>
                                        @Html.LabelFor(m => m.PartyName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                        @Html.TextBoxFor(m => m.PartyName, new { @placeholder = "Enter Name" })
                                        @Html.ValidationMessageFor(m => m.PartyName, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    @Html.LabelFor(m => m.PartyAlias, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.PartyAlias, new { @placeholder = "Enter Alias" })
                                    @Html.ValidationMessageFor(m => m.PartyAlias, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Address, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextAreaFor(m => m.Address, new { @placeholder = "Enter Address", @style = "width:100%;height:75px;" })
                                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                       
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CountryId)<span class="LabelColon">:</span>
                                    @if (ViewBag.Country != null)
                                    {
                                        @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.Country, "CountryId", "CountryName"), "---Select---", new { @class = "", @onchange = "GetStateList()" })
                                    }
                                    else
                                    {
                                        @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "dropdown" })
                                    }
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.StateId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                               @Html.DropDownListFor(m => m.StateId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "dropdown", @onchange = "GetCityList()" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.CityId, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.DropDownListFor(m => m.CityId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "dropdown" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.PinCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.PinCode, new { @placeholder = "Enter Pincode" })
                                @Html.ValidationMessageFor(m => m.PinCode, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                       
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.PhoneNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.PhoneNo, new { @placeholder = "Enter Phone No" })
                                    @Html.ValidationMessageFor(m => m.PhoneNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.FaxNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.FaxNo, new { @placeholder = "Enter Fax No" })
                                @Html.ValidationMessageFor(m => m.FaxNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Contact Person:</label>
                                    @Html.TextBoxFor(m => m.ContactPerson, new { @placeholder = "Enter Contact Person" })
                                    @Html.ValidationMessageFor(m => m.ContactPerson, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Email, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.Email, new { @placeholder = "Enter Email Id" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                                                
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.MobileNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.MobileNo, new { @placeholder = "Enter Mobile No" })
                                @Html.ValidationMessageFor(m => m.MobileNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Pan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.Pan, new { @placeholder = "Enter PAN" })
                                    @Html.ValidationMessageFor(m => m.Pan, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <label>Aadhaar No:</label>
                                @Html.TextBoxFor(m => m.AadhaarNo, new { @placeholder = "Enter Aadhaar No" })
                                @Html.ValidationMessageFor(m => m.AadhaarNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.GSTNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                    @Html.TextBoxFor(m => m.GSTNo, new { @placeholder = "Enter GST No" })
                                    @Html.ValidationMessageFor(m => m.GSTNo, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                @Html.LabelFor(m => m.Tan, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                                @Html.TextBoxFor(m => m.Tan, new { @placeholder = "Enter TAN" })
                                @Html.ValidationMessageFor(m => m.Tan, "", new { @class = "Error_Msg" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                        </div>

                        <div class="d-flex justify-content-left">
                            <input type="submit" class="btn btn-primary mr-1 btn-100px" value="Save">
                            <input type="button" class="btn btn-primary-border btn-100px" value="Reset" onclick="ResetRentReservation()">
                        </div>


                        <div id="DivEximTraderMsg" class="logSuccMsg Form_Space_top SignUp_space_bottom2" style="background-color:transparent"></div>
                    }
                    <div class="row">
                        <div class="col-md-12 SignUp_space_bottom">
                            <div id="DivEximTraderList"></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


@Scripts.Render("~/bundles/jqueryval")
<script>
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
    });
</script>


