@model CwcExim.Areas.Master.Models.PpgStorageCharge

<script>
    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 5000;
        GetStorageChargeList();
        OnChargeChange();
    });

    function OnChargeChange(){
        if($('#ChargeType').val()=="")
        {
            $('#SqMPer').hide();
            $('#CubMeter').hide();
            $('#RateSqMPerWeek').val('');
            $('#RateCubMeterPerDay').val('');
        }
        else if ($('#ChargeType').val() == "1") {
            $('#SqMPer').show();
            $('#CubMeter').hide();
            $('#RateCubMeterPerDay').val('');
        }
        else if ($('#ChargeType').val() == "2") {
            $('#CubMeter').show();
            $('#SqMPer').hide();
            $('#RateSqMPerWeek').val('');
        }
    }
    $('#EffectiveDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage:  "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select Date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $('[data-valmsg-for="EffectiveDate"]').html('<span></span>');
        }
    });
    function StorageChargeReset() {
        $('[data-valmsg-for]').html('<span></span>');
        $('#DivAddStorageCharge').find('input:text').val('');
        $('#DivAddStorageCharge').find('select').val('');
        $('#DivStorageChargeErrMsg').html("");
        $('#DivStorageChargeMsg').html("");
        $('#ChargeType').val('');
        $('#CommodityType').val('2');
        $('#SqMPer').hide();
        $('#CubMeter').hide();
        $('#RateCubMeterPerDay').val('');
        $('#RateSqMPerWeek').val('');
    }
    function GetStorageChargeList() {
        $('#DivStorageChargeList').load('/Master/LoniCWCCharges/GetStorageChargeList')
    }
    function StorageOnSuccess(data) {
        $('#DivStorageChargeErrMsg').html("");
        if (data.Status == 1) {
            $('#DivStorageChargeMsg').html(data.Message);
            setTimeout(StorageChargeReset, 5000);
            GetStorageChargeList();
        }
        else {
            $('#DivStorageChargeErrMsg').html(data.Message);
        }
    }
    function StorageOnFailure() { }
    $('#box').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('.navList > li').show();
        } else {
            $('.navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    $('.navList li').on("click", function () {
        $('#SacCode').val($(this).text());
        $("#myModal").modal("hide");
    });
</script>
@{
    AjaxOptions options = new AjaxOptions();
    options.Confirm = "Are You Sure You Want To Save?";
    options.HttpMethod = "POST";
    options.OnSuccess = "StorageOnSuccess";
    options.OnFailure = "StorageOnFailure";
    options.InsertionMode = InsertionMode.InsertAfter;
}
@using (Ajax.BeginForm("AddEditStorageCharge", "LoniCWCCharges", options))
{
    @Html.AntiForgeryToken()
    <div id="DivAddStorageCharge" class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <div class="row SignUp_space_bottom">
                    <div class="col-md-12 cwc_body">
                        <h5>Storage Charge (Godown) <span class="triangle"></span></h5>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 padding_rt">
                            <label>Effective Date:</label>
                        </div>
                        <div class="col-md-2 Date_Img">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.EffectiveDate, new { @class = "form-control input-sm", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.EffectiveDate, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-offset-3 col-md-1-5">
                            @Html.LabelFor(m => m.SacCode, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.SacCode, new { @class = "form-control input-sm", @readonly = true })
                            <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#myModal"></i></span>
                            @Html.ValidationMessageFor(m => m.SacCode, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 padding_rt">
                            <label>Warehouse Type:</label>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.DropDownListFor(m => m.WarehouseType, new List<SelectListItem> { new SelectListItem { Value = "1", Text = "Import" }, new SelectListItem { Value = "2", Text = "Export" }, new SelectListItem { Value = "3", Text = "Bonded" }, new SelectListItem { Value = "4", Text = "HAZ" }, new SelectListItem { Value = "5", Text = "OCY" } }, "---Select---", new { @class = "form-control input-sm dropdown" })
                            @Html.ValidationMessageFor(m => m.WarehouseType, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-offset-3 col-md-1-5 padding_rt">
                            <label>Charge Type:</label>
                        </div>
                        <div class="col-md-2">
                            @*<span class="ReQSimbol">*</span>*@
                            @Html.DropDownListFor(m => m.ChargeType, new List<SelectListItem> {  new SelectListItem { Value="1",Text="SQM"},new SelectListItem { Value="2",Text="CM"}@*,new SelectListItem { Value="3",Text="MT"} *@},"---Select---", new { @class = "form-control input-sm dropdown",onchange="OnChargeChange()" })
                            @Html.ValidationMessageFor(m => m.ChargeType, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top" id="SqMPer">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.RateSqMPerWeek, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.RateSqMPerWeek, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.RateSqMPerWeek, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2" style="padding:0px;">
                            <label>/Sq Meter/Week</label>
                        </div>
                        @*<div class="col-md-offset-1 col-md-1-5">
                                @Html.LabelFor(m => m.RateSqMPerMonth, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.RateSqMPerMonth, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.RateSqMPerMonth, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2" style="padding:0px;">
                                <label>/Sq Meter/Month</label>
                            </div>*@

                    </div>
                </div>
                <div class="row Form_Space_top" id="CubMeter">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.RateCubMeterPerDay, new { @class = "InputLabel" })<span>:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.RateCubMeterPerDay, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.RateCubMeterPerDay, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2" style="padding:0px">
                            <label>/Cubic Meter/Day</label>
                        </div>
                        @*<div class="col-md-1-5 col-md-offset-1">
                                @Html.LabelFor(m=>m.RateSqMeterPerMonth, new { @class="InputLabel"})<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.RateSqMeterPerMonth, new { @class="form-control input-sm"})
                                @Html.ValidationMessageFor(m => m.RateSqMeterPerMonth, "", new { @class="Error_Msg"})
                            </div>
                            <div class="col-md-2" style="padding:0px">
                                <label>/Sq.Mtr/Month</label>
                            </div>
                            <div class="col-md-offset-1 col-md-1-5">
                                @Html.LabelFor(m => m.RateCubMeterPerWeek, new { @class = "InputLabel" })<span>:</span>
                            </div>
                            <div class="col-md-2">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.RateCubMeterPerWeek, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.RateCubMeterPerWeek, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2" style="padding:0px">
                                <label>/Cubic Meter/Week</label>
                            </div>*@
                    </div>
                </div>
                @*<div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.RateMeterPerDay, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.RateMeterPerDay, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.RateMeterPerDay, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2" style="padding:0px;">
                            <label>/Metric Ton/Day</label>
                        </div>
                        <div class="col-md-offset-1 col-md-1-5">
                            @Html.LabelFor(m => m.RateCubMeterPerMonth, new { @class = "InputLabel" })<span>:</span>
                        </div>
                        <div class="col-md-2">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.RateCubMeterPerMonth, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.RateCubMeterPerMonth, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2" style="padding:0px">
                            <label>/Cubic Meter/Month</label>
                        </div>
                    </div>
                </div>*@
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 padding_rt">
                            <label>Days Range From:</label>
                        </div>
                        <div class="col-md-2">
                            <table>
                                <tbody>
                                    <tr>
                                        <td style="width:40%;">
                                            <span class="ReQSimbol">*</span>
                                            @Html.TextBoxFor(m => m.DaysRangeFrom, new { @class = "form-control input-sm", @style = "padding:3px 5px;" })
                                            @Html.ValidationMessageFor(m => m.DaysRangeFrom, "", new { @class = "Error_Msg" })
                                        </td>
                                        <td class="text-center">-</td>
                                        <td style="width:40%;">
                                            <span class="ReQSimbol">*</span>
                                            @Html.TextBoxFor(m => m.DaysRangeTo, new { @class = "form-control input-sm", @style = "padding:3px 5px;" })
                                            @Html.ValidationMessageFor(m => m.DaysRangeTo, "", new { @class = "Error_Msg" })
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-md-offset-3 col-md-1-5 padding_rt">
                            <label>Commodity Type:</label>
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownListFor(m => m.CommodityType, new List<SelectListItem>
                       {
                           new SelectListItem { Text="Non HAZ",Value="2",Selected=true},
                           new SelectListItem { Text="HAZ",Value="1"},
                       })
                            @Html.ValidationMessageFor(m => m.CommodityType, "", new { @class = "Error_Msg" })
                        </div>
                    </div>                    
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5">
                            @Html.LabelFor(m => m.SurCharge, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2">
                            @Html.TextBoxFor(m => m.SurCharge, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.SurCharge, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>

                <div class="row Form_Space_top">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row SignUp_space_bottom">
                    <div class="col-md-offset-4 col-md-2" style="text-align:center">
                        <input type="submit" value="Save" class="btn log_Btn_sm" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" value="Reset" class="btn log_Btn_sm" onclick="StorageChargeReset()" />
                    </div>
                </div>
                <div class="logSuccMsg SignUp_space_bottom2" style="background-color:transparent">
                    <div id="DivStorageChargeMsg"></div>
                </div>
                <div id="DivStorageChargeErrMsg" class="logErrMsg Form_Space_bottom" style="background-color:transparent"></div>
            </div>
        </div>
    </div>
}
@Scripts.Render("~/bundles/jqueryval")
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 SignUp_space_bottom">
            <div id="DivStorageChargeList"></div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of SAC Code</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="box" type="text" />
                <ul class="navList" id="PartyList">
                    @{
                        if (ViewBag.ListOfSAC != null)
                        {
                            foreach (var item in ViewBag.ListOfSAC)
                            {
                                <li id="@item">@item</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>