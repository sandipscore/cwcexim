@model CwcExim.Areas.Bond.Models.SpaceAvailableCert

    <div class="col-md-12">
            <div id="DivBondApp">
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5">
                                @Html.LabelFor(m => m.ApplicationDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 col_cus_3 Date_Img">
                                @Html.TextBoxFor(m => m.ApplicationDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5 padding_rt">
                               <label>Application No:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.ApplicationNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10 col_cus_9_5">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5 padding_rt">
                               <label>Importer Name:</label>
                            </div>
                            <div class="col-md-10 col_cus_9_5">
                                @Html.TextBoxFor(m => m.ImporterName, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5 padding_rt">
                               <label>Importer License No:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.ImporterLicenseNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                                <label>BOL / AWB No:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.BOLAWBNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5">
                                @Html.LabelFor(m => m.BOENo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.BOENo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2">
                                @Html.LabelFor(m => m.BOEDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 col_cus_3 Date_Img">
                                @Html.TextBoxFor(m => m.BOEDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5">
                               <label>Description of Cargo:</label>
                            </div>
                            <div class="col-md-10 col_cus_9_5">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;", @disabled = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5 padding_rt">
                                <label>Nature Of Packages:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.NatureOfPackages, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5">
                                @Html.LabelFor(m => m.NoOfUnits, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.NoOfUnits, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                                <label>Nature Of Material:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.DropDownListFor(m => m.NatureOfMaterial, new List<SelectListItem> {
                               new SelectListItem { Text="Non Haz",Value="2"},
                               new SelectListItem { Text="Haz",Value="1"},
                               new SelectListItem { Text="Extra Haz",Value="3"},
                                }, new { @disabled=true})
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5 padding_rt">
                               <label>Dimension Per Unit:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.DimensionPerUnit, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                                @Html.LabelFor(m => m.Weight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5 padding_rt">
                                <label>Requirement Of Space (in sq. mts.):</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.SpaceReq, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                               <label>Assessable / CIF Value:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.AssessCIFvalue, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5">
                               <label>Duty Amount:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.DutyAmt, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                               <label>Expected Date of Warehouse:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_3 Date_Img">
                                @Html.TextBoxFor(m => m.ExpDateofWarehouse, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
            </div>
            @using (Ajax.BeginForm("AddEditSpaceAvailCert", "CWCBond", new AjaxOptions { Confirm="Are You Sure You Want To Save?",HttpMethod="POST",OnSuccess= "SpaceAvailCertOnSuccess" ,OnFailure= "SpaceAvailCertOnFailure" }))
            {
                @Html.AntiForgeryToken()
            <div class="row" id="DivSpaceAvailCert">
                @Html.HiddenFor(m=>m.IsSubmitted)
                @Html.HiddenFor(m=>m.SpaceappId)
                <div class="col-md-12">
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col-md-offset-2 col_cus_3 col_cus_offset_2_5">
                                <div class="boolean-container">
                                    @Html.RadioButtonFor(m=>m.IsApproved,1, new { @id="Approved", @checked="true"})
                                    <label for="Approved"><i class="circle"></i><span>Approved</span></label>
                                </div>
                            </div>
                            <div class="col-md-2 col_cus_3">
                                <div class="boolean-container">
                                    @Html.RadioButtonFor(m => m.IsApproved, 2, new {@id="Rejected" })
                                    <label for="Rejected"><i class="circle"></i><span>Rejected</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SacNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_3 Date_Img">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SacDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col_cus_2_5 padding_rt">
                                <label>Area reserved (in Sq meters):</label>
                            </div>
                            <div class="col-md-3">
                                @Html.TextBoxFor(m => m.AreaReserved, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.AreaReserved, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2">
                                <label>Valid Upto:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_3 Date_Img">
                                @Html.TextBoxFor(m => m.ValidUpto, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ValidUpto, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-2-5 col-md-offset-1">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSpaceSave" @*onclick="SaveSpaceAvailCert(0)"*@ />
                        </div>
                        <div class="col-md-2-5">
                            <input type="submit" class="btn log_Btn_sm" value="Submit" id="BtnSpaceSubmit" @*onclick="SaveSpaceAvailCert(1)"*@ />
                        </div>
                        <div class="col-md-2-5">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" id="BtnSpaceReset" />
                        </div>
                        <div class="col-md-2-5">
                            <input type="button" class="btn log_Btn_sm" value="Print" onclick="PrintSpaceAvailCert(@Model.SpaceappId)" id="BtnPrintSpace" disabled/>
                        </div>
                    </div>
                    <div id="DivSpaceAvailErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                    <div id="DivSpaceAvailMsg" class="logSuccMsg" style="background-color:transparent"></div>
                </div>
            </div>
            }
        </div>


@Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        debugger;
        if ($('#IsSubmitted').val() == 1) {
            $('#DivSpaceAvailCert').find('input:text').prop("disabled", true);
           $('#BtnSpaceSave').prop("disabled", true);
           $('#BtnSpaceSubmit').prop("disabled", true);
           $('#BtnSpaceReset').prop("disabled", true);
           $('#Approved').prop("disabled", true);
           $('#Rejected').prop("disabled", true);
           if ($('#Approved').prop("checked") == true) {
               $('#BtnPrintSpace').prop("disabled", false);
           }
           else {
               $('#BtnPrintSpace').prop("disabled", true);
           }
           
        }
    });
    function PrintSpaceAvailCert(SpaceappId) {
        $.ajax({
            url:"/Bond/CWCBond/PrintSpaceAvailCert",
            type:"GET",
            data:{SpaceappId:SpaceappId},
            dataType:"JSON",
            async:false,
            success:function(data){
                debugger;
                if(data.Status==1){
                    window.open(data.Message+"?_t="+(new Date().getTime()),"_blank");
                }
                
            }
        })
    }
    $('#ValidUpto').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
       // maxDate:'0',
        onClose: function () {
            $("[data-valmsg-for='ValidUpto']").html('');
        }
    });
    $('#SacDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='SacDate']").html('');
        }
    });
    function LoadSpaceAvailCertList() {
        $('#DivBody').load('/Bond/CWCBond/GetSpaceAvailList');
    }
    function ResetAll() {
        $('#AreaReserved').val('');
        $('#SacDate').val('');
        $('#ValidUpto').val('');
       // $('#DivSpaceAvailCert').find('input:text').val('');
        $('[data-valmsg-for]').html('<span></span>');
    }
    function SpaceAvailCertOnSuccess(data) {
        if (data.Status = 1) {
            $('#DivSpaceAvailMsg').html(data.Message);
            setTimeout(LoadSpaceAvailCertList,5000);
        }
        else {
            $('#DivSpaceAvailErrMsg').html(data.Message);
        }
    }
    function SpaceAvailCertOnFailure() { }

    $('#BtnSpaceSave').on("click", function () {
        debugger;
        if($('#AreaReserved').val()==0){
            $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than 0</span>');
            return false;
        }
        var SacDate = $('#SacDate').val();
        var ApplicationDate = $('#ApplicationDate').val();
        var SplitSacDate = SacDate.split('/');
        var SplitAppDate = ApplicationDate.split('/');
        var SacDt = new Date(SplitSacDate[2], (Number(SplitSacDate[1]) - 1), SplitSacDate[0]);
        var AppDt = new Date(SplitAppDate[2], (Number(SplitAppDate[1]) - 1), SplitAppDate[0]);
        if (SacDt > AppDt) {
            $('[data-valmsg-for="SacDate"]').html('<span>Sac Date Must Be Less Than Application Date</span>');
            return false;
        }
        $('#IsSubmitted').val(0);
    });

    $('#BtnSpaceSubmit').on("click", function () {
        if($('#AreaReserved').val()==0){
            $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than 0</span>');
            return false;
        }
        var SacDate = $('#SacDate').val();
        var ApplicationDate = $('#ApplicationDate').val();
        var SplitSacDate = SacDate.split('/');
        var SplitAppDate = ApplicationDate.split('/');
        var SacDt = new Date(SplitSacDate[2], (Number(SplitSacDate[1]) - 1), SplitSacDate[0]);
        var AppDt = new Date(SplitAppDate[2], (Number(SplitAppDate[1]) - 1), SplitAppDate[0]);
        if (SacDt > AppDt) {
            $('[data-valmsg-for="SacDate"]').html('<span>Sac Date Must Be Less Than Application Date</span>');
            return false;
        }
        $('#IsSubmitted').val(1);
    });
</script>
