@model CwcExim.Areas.Bond.Models.SpaceAvailCertExtend

<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            <div id="DivSpaceAvailExt">
                @using (Ajax.BeginForm("AddEditSpaceAvailCertExtend", "CWCBond", new AjaxOptions { Confirm = "Are You Sure You Want To Save?", HttpMethod = "POST", OnSuccess = "SpaceAvailExtOnSuccess", OnFailure = "SpaceAvailExtOnFailure" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(m => m.SpaceappId)
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Space Availability Certificate (Extend)</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="SacSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#SacModal"></i></span>
                                @Html.ValidationMessageFor(m => m.SacNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_2 col_cus_offset_3">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SacDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Area reserved (in Sq meters):</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.AreaReserved, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.AreaReserved, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_2 col_cus_offset_3">
                                <label>Valid Upto:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ValidUpto, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ValidUpto, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Extend On:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ExtendOn, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ExtendOn, "", new { @class= "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4-5 col_cus_2 col_cus_offset_3">
                                <label>Extend Upto:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ExtendUpto, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.ExtendUpto, "", new { @class= "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Application No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ApplicationNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_2 col_cus_offset_3">
                                @Html.LabelFor(m => m.ApplicationDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ApplicationDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Importer Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.ImporterName, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSpaceAvailExtSave" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetSpaceAvailExt()" />
                        </div>
                    </div>
                    <div style="background-color:transparent" id="DivSpaceAvailExtMsg" class="logSuccMsg"></div>
                    <div style="background-color:transparent" id="DivSpaceAvailExtErrMsg" class="logErrMsg"></div>
                }
            </div>
           <div class="row">
               <div class="col-md-12">
                   <div id="DivSpaceAvailExtList"></div>
              </div>
           </div>
        </div>
    </div>
</div>
<div id="SacModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Sac No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="SacNobox" type="text" />
                <ul class="navList" id="SacNoList">
                    @{
                        if (ViewBag.SacNoList != null)
                        {
                            foreach (var item in ViewBag.SacNoList)
                            {
                                <li id="@item.Value">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            GetSpaceAvailExtList();
        });

        $('#SacNobox').keyup(function () {
            var val = $(this).val().toLowerCase();
            if (val == "")
                $('#SacNoList > li').show();
            else {
                $('#SacNoList > li').each(function () {
                    var text = $(this).text().toLowerCase();
                    (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
                });
            }
        });

        $('#SacNoList > li').on("click", function () {
            debugger;
            $('#SacNo').val($(this).text());
            $('#SpaceappId').val($(this).attr('id'));
            var SpaceappId=$('#SpaceappId').val();
            $("#SacModal").modal("hide");
            GetSacNoDet(SpaceappId);
        });
        function GetSacNoDet(SpaceappId) {
            $.ajax({
                url: "/Bond/CWCBond/GetSacNoDetails",
                type: "Get",
                dataType: "JSON",
                data: { SpaceappId: SpaceappId },
                async: false,
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        $('#AreaReserved').val(data.Data.AreaReserved);
                       // $('#SacNo').val(data.SacNo);
                        $('#ApplicationNo').val(data.Data.ApplicationNo);
                        $('#SacDate').val(data.Data.SacDate);
                        $('#ApplicationDate').val(data.Data.ApplicationDate);
                        $('#ValidUpto').val(data.Data.ValidUpto);
                        $('#CHAName').val(data.Data.CHAName);
                        $('#ImporterName').val(data.Data.ImporterName);
                    }
                }
            });
        }
        $('#ExtendOn').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $("[data-valmsg-for='ValidUpto']").html('');
            }
        });

        $('#ExtendUpto').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $("[data-valmsg-for='SacDate']").html('');
            }
        });

        function GetSpaceAvailExtList() {
            $('#DivSpaceAvailExtList').load('/Bond/CWCBond/GetSpaceAvailCertExtendList');
        }

        function ResetSpaceAvailExt() {
            $('#DivSpaceAvailExt').find('input:text').val('');
            $('#SpaceappId').val('');
           // $('#DivSpaceAvailExt').find('input:hidden').val('');
            $('[data-valmsg-for]').html('<span></span>');
            $('#DivSpaceAvailExtMsg').html('');
            $('#DivSpaceAvailExtErrMsg').html('');
        }

        function SpaceAvailExtOnSuccess(data) {
            if (data.Status = 1) {
                $('#DivSpaceAvailExtMsg').html(data.Message);
              //  $("#SacModal ul li:contains(" + $('#SacNo').val() + ")").remove();
                setTimeout(ResetSpaceAvailExt, 5000);
                GetSpaceAvailExtList();
            }
            else {
                $('#DivSpaceAvailExtErrMsg').html(data.Message);
            }
        }

        function SpaceAvailExtOnFailure() { }

        $('#BtnSpaceAvailExtSave').on("click", function () {
            debugger;
            if ($('#SacNo').val() == '') {
                $('[data-valmsg-for="SacNo"]').html('<span>Fill Out This Field</span>');
                return false;
            }
            var ExtendOn = $('#ExtendOn').val();
            var ExtendUpto = $('#ExtendUpto').val();
            var ExtendOnDate = ExtendOn.split('/');
            var ExtendUptoDate = ExtendUpto.split('/');
            var ExtendOnDt = new Date(ExtendOnDate[2], (Number(ExtendOnDate[1]) - 1), ExtendOnDate[0]);
            var ExtendUptoDt = new Date(ExtendUptoDate[2], (Number(ExtendUptoDate[1]) - 1), ExtendUptoDate[0]);
            if (ExtendOnDt > ExtendUptoDt) {
                $('[data-valmsg-for="ExtendUpto"]').html('<span>Extend Upto Date Must Be Greater Than Extend On Date</span>');
                return false;
            }
        });

    </script>
