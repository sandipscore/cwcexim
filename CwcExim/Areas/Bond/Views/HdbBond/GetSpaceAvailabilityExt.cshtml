@model CwcExim.Areas.Bond.Models.HdbBondAppExtendDetails

<div class="container-fluid">
    <div id="DivSpaceAvailExt">
        @Html.HiddenFor(m => m.SpaceAvailCertExtId)
        @Html.HiddenFor(m => m.SpaceappId)
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    <label>SAC No:</label>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col-md-offset-1-5 col_cus_2_5 col_cus_offset_0_5">
                    <label>SAC Date:</label>
                </div>
                <div class="col-md-2-5 Date_Img">
                    @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Area reserved (in Sq meters):</label>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.AreaReserved, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col-md-offset-1-5 col_cus_2_5 col_cus_offset_0_5">
                    <label>Valid Upto:</label>
                </div>
                <div class="col-md-2-5 Date_Img">
                    @Html.TextBoxFor(m => m.ValidUpto, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Extend On:</label>
                </div>
                <div class="col-md-4 Date_Img">
                    @Html.TextBoxFor(m => m.ExtendOn, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col-md-offset-1-5 col_cus_2_5 col_cus_offset_0_5">
                    <label>Extend Upto:</label>
                </div>
                <div class="col-md-2-5 Date_Img">
                    @Html.TextBoxFor(m => m.ExtendUpto, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Application No:</label>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.ApplicationNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col-md-offset-1-5 col_cus_2_5 col_cus_offset_0_5 padding_rt">
                    <label>Application Date:</label>
                </div>
                <div class="col-md-2-5 Date_Img">
                    @Html.TextBoxFor(m => m.ApplicationDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>CHA Name:</label>
                </div>
                <div class="col-md-10 col_cus_9_5">
                    @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Importer Name:</label>
                </div>
                <div class="col-md-10 col_cus_9_5">
                    @Html.TextBoxFor(m => m.ImporterName, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="Form_Input">
                <div class="col-md-2 col-md-offset-2 col_cus_offset_2_5">
                    <div class="boolean-container">
                        @Html.RadioButtonFor(m => m.IsApproved, "1", new { @id = "rbApprove" })
                        <label for="rbApprove"><i class="circle"></i><span>Approve</span></label>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="boolean-container">
                        @Html.RadioButtonFor(m => m.IsApproved, "2", new { @id = "rbReject" })
                        <label for="rbReject"><i class="circle"></i><span>Reject</span></label>
                    </div>
                </div>
            </div>
        </div>
        @if (Model.IsApproved == 0)
        {
            <div class="row">
                <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
            </div>
            <div class="row">
                <div class="col-md-offset-4-5 col-md-3">
                    <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" onclick="SaveExtendsDetails()" />
                </div>
            </div>
        }
        else if (Model.IsApproved == 1|| Model.IsApproved == 2)
        {
            <div class="row">
                <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
            </div>
            <div class="row">
                <div class="col-md-offset-4-5 col-md-3">
                    <input type="submit" class="btn log_Btn_sm" value="Print" id="BtnPrint" onclick="SaveExtendPrintDetails()" />
                </div>
            </div>
        }
        <div style="background-color:transparent" id="DivSpaceAvailExtMsg" class="logSuccMsg"></div>
        <div style="background-color:transparent" id="DivSpaceAvailExtErrMsg" class="logErrMsg"></div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        if ('@Model.IsApproved' > 0) {
            $('#rbApprove,#rbReject').prop('disabled', true);
        }
    });
    function SaveExtendsDetails() {
        if ($('#rbApprove').is(':checked') || $('#rbReject').is(':checked')) {
            var IsApproved = ($('#rbApprove').is(':checked') ? $('#rbApprove').val() : $('#rbReject').val());
            var SpaceAvailCertExtId = $('#SpaceAvailCertExtId').val();
            var Confirm = confirm("Are you sure you want to Save?");
            if (Confirm == true) {
                var PostData = new FormData();
                PostData.append("SpaceAvailCertExtId", SpaceAvailCertExtId);
                PostData.append("IsApproved", IsApproved);
                var Token = $('input[name="__RequestVerificationToken"]').val();
                $.ajax({
                    url: '/Bond/HdbBond/UpdateAppExtend',
                    type: 'POST',
                    headers: { "__RequestVerificationToken": Token },
                    data: PostData,
                    processData: false,
                    contentType: false,
                    dataType: 'JSON',
                    success: function (data) {
                        if (data.Status == 1)
                            $('#DivSpaceAvailExtMsg').html(data.Message);
                        else
                            $('#DivSpaceAvailExtErrMsg').html(data.Message);
                        setTimeout(function () { LoadData(true); }, 5000);
                    }
                });
            }
        }
        else
            alert('Select Approve/Reject');
    }
    function SaveExtendPrintDetails() {
        var urlstring = '';
        if ($('#rbApprove').is(':checked') == true) {
            urlstring = '/Bond/HdbBond/PrintSpaceAvailCertApprove';
        }
        else if ($('#rbReject').is(':checked') == true) {
            urlstring = '/Bond/HdbBond/PrintSpaceAvailCertReject';
        }
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: urlstring,
            type: 'GET',
            // data: { SpaceAvailCertExtId: $('#SpaceAvailCertExtId').val() },
            data: { "SpaceappId": $('#SpaceappId').val() },
            dataType: 'JSON',
            //headers: { "__RequestVerificationToken": Token },
            success: function (data) {
                if (data.Status == 1) {
                    window.open(data.Message + "?_t=" + (new Date().getTime()), "_blank");
                }
            }
        });
    }
</script>
