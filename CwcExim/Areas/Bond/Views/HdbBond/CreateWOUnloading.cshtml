@model CwcExim.Areas.Bond.Models.HdbBondWOUnloading

<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            @using (Ajax.BeginForm("AddEditWOUnloading", "HdbBond", new AjaxOptions { Confirm = "Are you sure you want to Save?", HttpMethod = "POST", OnSuccess = "UnloadingOnSuccess", OnFailure = "UnloadingOnFailure" }))
            {
                <div id="DivBondApp">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Unloading at Bonded Warehouse</h4>
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.GodownId)
                    @Html.HiddenFor(m => m.SpaceAppId)
                    @Html.HiddenFor(m => m.DepositAppId)
                    @Html.AntiForgeryToken()
                    <div class="row Form_Space_top"> 
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Deposit No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DepositNo, new { @class = "form-control input-sm", @readonly = true })
                              
                                @Html.ValidationMessageFor(m => m.DepositNo)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Deposit Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DepositDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DepositDate)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond BOE No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BondBOENo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Bond BOE Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.BondBOEDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#SacNoModal"></i></span>
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Bond Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.WRNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.WRNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>WR Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.WRDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.WRDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Godown Name:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SacNo)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Unloaded Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.UnloadedDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.UnloadedDate)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Location Name:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.LocationId)
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.LocationName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#LocationModal"></i></span>
                                @Html.ValidationMessageFor(m => m.LocationName)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col-md-1-5 col_cus_2">
                                <label>Area Occupied:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.AreaOccupied, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.AreaOccupied)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;", @disabled = true })
                            </div>
                        </div>
                    </div>
                    @Html.Hidden("Units")
                    @Html.Hidden("Weight")
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Unloaded Units:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.UnloadedUnits, new { @class = "form-control input-sm", @onchange = "FillBalancedUnits()" })
                                @Html.ValidationMessageFor(m => m.UnloadedUnits)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Balanced Units:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BalancedUnits, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Unloaded Weights:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.UnloadedWeights, new { @class = "form-control input-sm", @onchange = "FillBalancedWeights()" })
                                @Html.ValidationMessageFor(m => m.UnloadedWeights)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Balanced Weights:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BalancedWeights, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Conditions Of Packages:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.PackageCondition, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" />
                        </div>
                    </div>
                    <div id="DivMsg" class="logSuccMsg" style="background-color:transparent"></div>
                    <div id="DivMsgErr" class="logErrMsg" style="background-color:transparent"></div>
                </div>
            }
            <div class="row">
                <div class="col-md-12">
                    <div id="DivBondWODList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="SacNoModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Bond No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Bondbox" type="text" />
                <ul class="navList" id="SacList">
                    @{
                        if (ViewBag.WorkOrderNo != null)
                        {
                            foreach (var item in ViewBag.WorkOrderNo)
                            {
                                <li id="@item.DepositAppId">@item.BondNo</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="LocationModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown Location</h4>
            </div>
            <div class="modal-body popup_body">
                <ul class="navList" id="lstGodown"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $('#UnloadedDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        maxDate: 0,
        onClose: function () {
            $("[data-valmsg-for='UnloadedDate']").html('');
        },
        onSelect: function (date) {
            if ($('#SacDate').val() != '') {
                var varsac = $('#SacDate').val();
                var varday = varsac.substring(0, 2);
                var varmm = varsac.substring(5, 3);
                var varyy = varsac.substring(10, 6);
                var mmk = '' + varyy + '-' + varmm + '-' + varday + '';
                var vardate = new Date(mmk);

                //var varsac = $('#SacDate').val();
                var Svarday = date.substring(0, 2);
                var Svarmm = date.substring(5, 3);
                var Svaryy = date.substring(10, 6);
                var Smmk = '' + Svaryy + '-' + Svarmm + '-' + Svarday + '';
                var Svardate = new Date(Smmk);



                var sdate = new Date(Svardate);


                if (vardate > sdate) {
                    alert('Unloading Date should be greater than or equal to SAC Date');
                    $('#UnloadedDate').val('');

                }
            }
   
         }
    });
    //$('#WRDate').datepicker({
    //    dateFormat: "dd/mm/yy",
    //    showOn: "button",
    //    buttonImage: "/Content/images/calendar.png",
    //    buttonImageOnly: true,
    //    buttonText: "Select date",
    //    changeMonth: true,
    //    changeYear: true,
    //    showAnima: "fadein",
    //    onClose: function () {
    //        $("[data-valmsg-for='WRDate']").html('');
    //    }
    //});
    $(function () {
        LoadBondWODList();
    });
    function LoadBondWODList() {
        debugger;
        $('#DivBondWODList').load('/Bond/HdbBond/ListOfWOUnloading');
    }
    function ResetAll()
    {
        $('#DepositNo,#DepositDate,#BondBOENo,#BondBOEDate,#BondNo,#BondDate,#WRNo,#WRDate,#GodownName,#CargoDescription,#SacNo,#SacDate,#UnloadedDate,#LocationName,#LocationId,#AreaOccupied,#Units,#Weight,#GodownId,#SpaceAppId,#UnloadedUnits,#BalancedUnits,#UnloadedWeights,#BalancedWeights,#PackageCondition,#Remarks').val('');
        setTimeout(function () { $('#DivMsg,#DivMsgErr').html(''); }, 5000);
    }
    $('#Bondbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#SacList > li').show();
        } else {
            $('#SacList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#SacList li').on("click", function () {
        debugger;
        var bond = $(this).text();
        var arr = bond.split('_');
        $('#BondNo').val(arr[0]);
        $('#DepositAppId').val($(this).attr('id'));
        $("#SacNoModal").modal("hide");
        $('#BondBOEDate,#BondDate,#WRNo,#WRDate,#GodownName,#CargoDescription,#SacDate,#Units,#Weight').val('');
        $('#lstGodown').html('');
        FillDetails();
    });
    function FillDetails() {
        debugger;
        var DepositAppId = $('#DepositAppId').val();
        if (DepositAppId > 0) {
            $.ajax({
                url: '/Bond/HdbBond/GetDetailsfrUnloading',
                type: 'GET',
                data: { DepositAppId: DepositAppId },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        $('#GodownId').val(data.Data.BOE.GodownId);
                        $('#SpaceAppId').val(data.Data.BOE.SpaceAppId);
                        $('#BondBOENo').val(data.Data.BOE.BondBOENo);
                        $('#BondBOEDate').val(data.Data.BOE.BondBOEDate);
                        $('#DepositNo').val(data.Data.BOE.DepositNo);
                        $('#BondDate').val(data.Data.BOE.BondDate);
                        $('#WRNo').val(data.Data.BOE.WRNo);
                        $('#WRDate').val(data.Data.BOE.WRDate);
                        $('#GodownName').val(data.Data.BOE.GodownName);
                        $('#CargoDescription').val(data.Data.BOE.CargoDescription);
                        $('#SacNo').val(data.Data.BOE.SacNo);
                        $('#SacDate').val(data.Data.BOE.SacDate);
                        $('#UnloadedDate').val('');
                        $('#Units').val(data.Data.BOE.Units);
                        $('#Weight').val(data.Data.BOE.Weight);
                        $('#UnloadedUnits').val(data.Data.BOE.Units);
                        $('#Remarks').val(data.Data.BOE.Remarks);
                        $('#UnloadedWeights').val(data.Data.BOE.Weight);
                        $('#DepositDate').val(data.Data.BOE.DepositDate);
                        $('#AreaOccupied').val(data.Data.BOE.AreaReserved);
                        $('#BalancedUnits').val(parseInt(Number($('#Units').val()) - Number($('#UnloadedUnits').val())));
                        $('#BalancedWeights').val(Number(parseFloat(Number($('#Weight').val()) - Number($('#UnloadedWeights').val()))).toFixed(2));
                        var html = '';
                        $.each(data.Data.lstGodown, function (i, item)
                        {
                            html = html + '<div class="col-md-4"><div class="boolean-container"><input type="checkbox" onclick="CheckBoxChange()" id="g-' + item.LocationId + '"/><label for="g-' + item.LocationId + '">' + item.LocationName + '<i class="square" style="margin-left:10px;"></i></label></div></div>';
                        });
                        $('#lstGodown').html(html);
                    }
                }
            });
        }
    }
    function CheckBoxChange() {
        var locationName = '', locationId = '';
        $('#lstGodown input[type="checkbox"]:checked').each(function () {
            if (locationName == '')
                locationName = $('label[for="' + $(this).prop('id') + '"]').text();
            else
                locationName += ',' + $('label[for="' + $(this).prop('id') + '"]').text();
            if (locationId == '')
                locationId = $(this).prop('id').split("-")[1];
            else
                locationId += ',' + $(this).prop('id').split("-")[1];
        });
        $('#LocationId').val(locationId);
        $('#LocationName').val(locationName);
    }
    function UnloadingOnSuccess(data) {
        if (data.Status == 1)
        {
            $('#DivMsg').html(data.Message);
            LoadBondWODList();
            ResetAll();
        }
        else {
            $('#DivMsgErr').html(data.Message);
        }
    }
    function UnloadingOnFailure() {

    }
    function FillBalancedUnits()
    {
        $('#BalancedUnits').val(parseInt(Number($('#Units').val()) - Number($('#UnloadedUnits').val())));
    }
    function FillBalancedWeights()
    {
        $('#BalancedWeights').val(Number(parseFloat(Number($('#Weight').val()) - Number($('#UnloadedWeights').val()))).toFixed(2));
    }
</script>