@model CwcExim.Areas.Bond.Models.WFLDBondApp

<style>
    .encls_chk .boolean-container {
        width: auto;
        display: inline-block;
    }
</style>

<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            <div id="DivBondApp">
                @using (Ajax.BeginForm("AddEditBondApp", "WFLDBond", new AjaxOptions
                {
                    Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "BondOnSuccess",
                    OnFailure = "BondOnFailure"
                }))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Application For Availability Of Space</h4>
                        </div>
                    </div>
                    @Html.Hidden("AreaRemainingCHA")
                    @Html.Hidden("AreaRemainingIMP")
                    @Html.Hidden("NetAreaRemainingCHA")
                    @Html.Hidden("NetAreaRemainingIMP")
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.ApplicationDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ApplicationDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.ApplicationNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ApplicationNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.CHAId)
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                @if (Convert.ToBoolean(ViewData["cha"]) == false)
                                {
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.ImporterName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.ImporterId)
                                @Html.TextBoxFor(m => m.ImporterName, new { @class = "form-control input-sm", @readonly = true })
                                @if (Convert.ToBoolean(ViewData["importer"]) == false)
                                {
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ImporterModal"></i></span>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Importer License No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ImporterLicenseNo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">

                            </div>
                            <div class="col-md-2-5 ">

                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @*<label>BOL / AWB No:</label>*@
                                <label>BOL No.</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BOLAWBNo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                @*<label>BOL / AWB Date:</label>*@
                                <label>BOL Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.BolAwbDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>AWB No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.AWBNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.AWBNo)
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>AWB Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.AWBDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.BOENo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BOENo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                @Html.LabelFor(m => m.BOEDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.BOEDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.BOEDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>IGM No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.IGMNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.IGMNo)
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>IGM Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.IGMDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                <span class="ReQSimbol">*</span>
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Nature Of Packages:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.DropDownListFor(m => m.NatureOfPackages, new List<SelectListItem>
                        {
                         new SelectListItem { Text = "Pallet", Value = "Pallet" },
                        new SelectListItem { Text = "Cartoon", Value = "Cartoon" },
                         new SelectListItem { Text = "Drum", Value = "Drum" },
                         new SelectListItem { Text = "Metal", Value = "Metal" },
                         new SelectListItem { Text = "Fibre", Value = "Fibre" },
                         new SelectListItem { Text = "Wooden", Value = "Wooden Crate" },
                         new SelectListItem { Text = "Others", Value = "Others" },
                        }, "----Select----")
                                <div id="DivOthers" style="margin-top:5px;">
                                    <div class="Date_Img">
                                        @Html.TextBoxFor(m => m.Others, new { @class = "form-control input-sm", @id = "Others" })
                                        @Html.ValidationMessageFor(m => m.Others, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Godown No.:</label>
                            </div>
                            <div class="col-md-4-5">
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                                @Html.ValidationMessageFor(m => m.GodownName)
                                @Html.HiddenFor(m => m.GodownId)
                            </div>
                            <div class="col-md-offset-2 col-md-1-5 padding_rt">
                                <label>Space Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.SpaceType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="Normal",Value="N"},
                                       new SelectListItem { Text="High Secured",Value="HS"},
                                       new SelectListItem { Text="Air Conditioned",Value="AC"},
                                   })
                                @Html.ValidationMessageFor(m => m.SpaceType, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.NoOfUnits, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.NoOfUnits, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.NoOfUnits, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.DimensionUOM, new { @class = "form-control input-sm", @placeholder = "UOM" })
                                @Html.ValidationMessageFor(m => m.DimensionUOM, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_3 col-md-offset-1 col_cus_2 padding_rt">

                            </div>
                            <div class="col-md-2-5">
                                <label>Nature Of Material:</label>
                            </div>
                            <div class="col-md-1-5">
                                @Html.DropDownListFor(m => m.NatureOfMaterial, new List<SelectListItem> {
                               new SelectListItem { Text="Non Haz",Value="2"},
                               new SelectListItem { Text="Haz",Value="1"},
                               new SelectListItem { Text="Extra Haz",Value="3"},
                               new SelectListItem { Text="ODC",Value="4"},
                                })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.Noofpackage, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Noofpackage, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Noofpackage, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Dimension Per Unit:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DimensionPerUnit, new { @class = "form-control input-sm" })
                            </div>
                            @*<div class="col-md-1-5">
                                    @Html.TextBoxFor(m => m.DimensionUOM, new { @class = "form-control input-sm", @placeholder = "UOM" })
                                </div>*@
                            <div class="col-md-1-5">

                            </div>
                            <div class="col-md-1-5 col_cus_offset_3 col-md-offset-1 col_cus_2 padding_rt">
                                <label>Weight:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5">
                                @Html.DropDownListFor(m => m.WeightUOM, new List<SelectListItem> {
                               new SelectListItem { Text="KG",Value="KG"},
                               new SelectListItem { Text="QTL",Value="QTL"},
                               new SelectListItem { Text="MT",Value="MT"},
                           })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">                                
                                <label>Net Area Basis:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.NetSpaceReq, new { @class = "form-control input-sm", @readonly = true })

                                @Html.ValidationMessageFor(m => m.NetSpaceReq, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                                <label>Net Area Remaining:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.NetSpaceRemaining, new { @class = "form-control input-sm", @readonly = true })

                                @Html.ValidationMessageFor(m => m.NetSpaceRemaining, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @*<label>Requirement Of Space Unreserved (sq. mts.):</label>*@
                                <label>Unreserved Area (sq. mts.):</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.SpaceReq, new { @class = "form-control input-sm" })

                                @Html.ValidationMessageFor(m => m.SpaceReq, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                                @*<label>Requirement Of Space Reserved (sq. mts.):</label>*@
                                <label>Reserved Area (sq. mts.):</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SpaceReqReserved, new { @class = "form-control input-sm", @onchange = "ValidateReservedArea()" })
                                @*@Html.TextBoxFor(m => m.SpaceReqReserved, new { @class = "form-control input-sm" })*@
                                @Html.ValidationMessageFor(m => m.SpaceReqReserved, "", new { @class = "Error_Msg" })
                            </div>                           
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Assessable / CIF Value:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.AssessCIFvalue, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.DutyAmt, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DutyAmt, new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Custom Seal No.:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                                <label>Expected Date of Warehouse:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.TextBoxFor(m => m.ExpDateofWarehouse, new { @class = "form-control input-sm", @readonly = true })
                                @*@Html.ValidationMessageFor(m => m.ExpDateofWarehouse, "", new { @class = "Error_Msg" })*@
                            </div>
                        </div>
                    </div>
                    

                    <div class="Head_h4">
                        <div class="row">
                            <div class="col-md-12">
                                <h4>Dimension</h4>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @*@Html.LabelFor(m => m.Length+ "(in mts.)", new { @class = "InputLabel" })<span class="LabelColon">:</span>*@
                                    <label>Length (mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.Length, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Length)
                                </div>
                                <div class="col-md-1-5">
                                    @*@Html.LabelFor(m => m.Width, new { @class = "InputLabel" })<span class="LabelColon">(in mts.):</span>*@
                                    <label>Width (mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.Width, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Width)
                                </div>
                                <div class="col-md-1-5">
                                    @*@Html.LabelFor(m => m.Height, new { @class = "InputLabel" })<span class="LabelColon">(in mts.):</span>*@
                                    <label>Height (mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.Height, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Height)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 padding_rt">
                                <label>Encls:</label>
                            </div>
                            <div class="col-md-4 encls_chk">
                                <div class="boolean-container">
                                    @*<input type="checkbox" id="IsInvoiceCopy" />*@
                                    @Html.CheckBoxFor(m => m.IsInvoiceCopy, new { @id = "IsInvoiceCopy" })
                                    <label for="IsInvoiceCopy"><i class="square"></i><span>Invoice Copy</span></label>
                                </div>
                                <div class="boolean-container">
                                    @*<input type="checkbox" id="IsPackingList" />*@
                                    @Html.CheckBoxFor(m => m.IsPackingList, new { @id = "IsPackingList" })
                                    <label for="IsPackingList"><i class="square"></i><span>Packing List</span></label>
                                </div>
                                <div class="boolean-container">
                                    @*<input type="checkbox" id="IsBOLAWB" />*@
                                    @Html.CheckBoxFor(m => m.IsBOLAWB, new { @id = "IsBOLAWB" })
                                    <label for="IsBOLAWB"><i class="square"></i><span>BOL/AWB</span></label>
                                </div>
                                <div class="boolean-container">
                                    @*@*<input type="checkbox" id="IsBOE" />*@
                                    @Html.CheckBoxFor(m => m.IsBOE, new { @id = "IsBOE" })
                                    <label for="IsBOE"><i class="square"></i><span>BOE</span></label>
                                </div>
                            </div>
                            <div class="col-md-offset-2-5 col-md-1-5 padding_rt">
                                <label>Storage Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.StorageType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="Open",Value="O"},
                                       new SelectListItem { Text="Covered",Value="C"},
                                   }, "----Select----")
                                @Html.ValidationMessageFor(m => m.StorageType, "", new { @class = "Error_Msg" })
                            </div>                            
                        </div>
                    </div>

                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" />
                            </div>
                        </div>
                        <div id="DivMsg" class="logErrMsg" style="background-color:transparent"></div>
                }
            </div>
            <div class="row Form_Space_top Form_Space_bottom">
                <div class="form-group Form_Input">
                    <div class="col-md-offset-8-5 col-md-3-5">
                        @Html.TextBox("Search", "", new { placeholder = "Search By Application / BOL / AWB No." })
                        <span class="search"><i class="fa fa-search" aria-hidden="true" onclick="ListSearch()"></i></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2 SignUp_space_bottom">
                    <input type="button" id="btnShowList" value="Show List" class="btn log_Btn_sm" onclick="ShowList()" />
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="DivBondAppList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@*<div id="CHAModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of CHA</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="CHAbox" type="text" />
                <ul class="navList" id="lstCHA">
                    @{
                        if (ViewBag.ListOfCHA != null)
                        {
                            foreach (var item in ViewBag.ListOfCHA)
                            {
                    <li id="@item.CHAId">@item.CHAName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@
<div class="modal fade" id="CHAModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseCHA()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List Of CHA</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By CHA Name Or Party Code " id="Chabox" type="text" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick=SearchChaByPartyCode()></i></span>

                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">CHA Name</th>
                            <th colspan="4" width="20%">Party Code</th>
                        </tr>
                    </thead>
                </table>

                <div id="slim_scroll">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tbleCha">
                        @{
                            if (ViewBag.lstCHA != null)
                            {
                                foreach (var item in ViewBag.lstCHA)
                                {
                                    <tr onclick="SelectCHA(@item.CHAId,'@item.CHAName')">
                                        <td colspan="8" width="80%" class="txt_wrp">@item.CHAName</td>
                                        <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                    </tr>
                                }
                            }
                        }
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.CHAState != null && Convert.ToBoolean(ViewBag.CHAState) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCHA()" class="btn log_Btn_sm" id="btnLoadCHA">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCHA()" class="btn log_Btn_sm" id="btnLoadCHA" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseCHA()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*<div id="ImporterModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Importer Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Importerbox" type="text" />
                <ul class="navList" id="lstImporter">
                    @{
                        if (ViewBag.ListOfImporter != null)
                        {
                            foreach (var item in ViewBag.ListOfImporter)
                            {
                    <li id="@item.ImporterId">@item.ImporterName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@<div class="modal fade" id="ImporterModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseImporter()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Importer Name</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Importer Name Or Party Code" id="Impbox" type="text" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick=SearchImporterByPartyCode()></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Importer Name</th>
                            <th colspan="4" width="20%">Party Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll_1">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tbleImp">
                        @{
                            if (ViewBag.lstImporter != null)
                            {
                                foreach (var item in ViewBag.lstImporter)
                                {
                                    <tr onclick="SelectImporter(@item.ImporterId,'@item.ImporterName')">
                                        <td colspan="8" width="80%" class="txt_wrp">@item.ImporterName</td>
                                        <td colspan="4" width="20%" class="txt_wrp">@item.PartyCode</td>
                                    </tr>
                                }
                            }
                        }
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.ImpState != null && Convert.ToBoolean(ViewBag.ImpState) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreImporter()" class="btn log_Btn_sm" id="btnLoadImp">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreImporter()" class="btn log_Btn_sm" id="btnLoadImp" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseImporter()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="GodownModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Godownbox" type="text" />
                <ul class="navList" id="lstGodown">
                    @{
                        if (ViewBag.ListOfGodown != null)
                        {
                            foreach (var item in ViewBag.ListOfGodown)
                            {
                    <li id="@item.GodownId">@item.GodownName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>

    $(function () {
        //LoadBondAppList();
        //$("#Weight").val('');
        //$("#NoOfUnits").val('');
        // $("#BtnSave").attr("disabled", "disabled");
    });
    $('#ApplicationDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ApplicationDate']").html('');
        }
    });
    $('#BOEDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BOEDate']").html('');
        }
    });
    $('#IGMDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='IGMDate']").html('');
        }
    });
    $('#ExpDateofWarehouse').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ExpDateofWarehouse']").html('');
        }
    });

    $('#BolAwbDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BolAwbDate']").html('');
        }
    });
    $('#AWBDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BolAwbDate']").html('');
        }
    });
    function LoadBondAppList() {
        $('#DivBondAppList').load('/Bond/WFLDBond/ListOfBondApp');
    }
    function ResetAll() {
        $('#CHAName,#ImporterName,#ImporterLicenseNo,#BOLAWBNo,#BOENo,#BOEDate,#IGMDate,#IGMNo,#CargoDescription,#NatureOfPackages,#ExpDateofWarehouse,#BolAwbDate,#Others').val('');
        $('#AWBNo,#AWBDate,#DimensionUOM,#GodownName,#CustomSealNo').val('');
        $('#WeightUOM').val("KG");
        $('#ImporterId,#CHAId,#NoOfUnits,#DimensionPerUnit,#SpaceReq,#DutyAmt,#Weight,#AssessCIFvalue,#GodownId,#SpaceReqReserved,#Noofpackage,#NetSpaceReq,#NetSpaceRemaining').val('0');
        $('#Length,#Width,#Height').val('');
        $('#IsInvoiceCopy,#IsBOLAWB, #IsPackingList, #IsBOE').attr('checked', false);
        $("#BtnSave").attr("enable", "enable");
    }
    function BondOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivMsg').hasClass('logErrMsg'))
                $('#DivMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivMsg').html(data.Message);
            ResetAll();
            LoadBondAppList();
        }
        else {
            if ($('#DivMsg').hasClass('logSuccMsg'))
                $('#DivMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMsg').html(data.Message);
        }
        setTimeout(function () { $('#DivMsg').html(''); }, 5000);
    }
    function BondOnFailure() {

    }
    $('#CHAbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstCHA > li').show();
        } else {
            $('#lstCHA > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstCHA li').on("click", function () {
        $('#CHAName').val($(this).text());
        $('#CHAId').val($(this).attr('id'));
        $("#CHAModal").modal("hide");
    });
    $('#Importerbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstImporter > li').show();
        } else {
            $('#lstImporter > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstImporter li').on("click", function () {
        $('#ImporterName').val($(this).text());
        $('#ImporterId').val($(this).attr('id'));
        $("#ImporterModal").modal("hide");
    });
    $('#Godownbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstGodown > li').show();
        } else {
            $('#lstGodown > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstGodown li').on("click", function () {
        $('#GodownName').val($(this).text());
        $('#GodownId').val($(this).attr('id'));
        var GDwnId = $(this).attr('id');
        var ImpId = $('#ImporterId').val();
        var CHAId = $('#CHAId').val();
        $("#GodownModal").modal("hide");
        $('#SpaceReqReserved').val(0);
        var SType = $('#SpaceType').val();
        //fill Net Area
        LoadImporterReservation(CHAId,ImpId, GDwnId,SType);
    });

    function LoadImporterReservation(CHAId,ImpId, GDwnId,SType)
    {
        debugger;
        $.ajax({
            url: '/Bond/WFLDBond/LoadImporterReservationDetails',
            type: 'GET',
            dataType: 'JSON',
            data: { CHAId : CHAId , 
                ImpId : ImpId, 
                GodownId : GDwnId,
                SpaceType : SType },
            success: function (data) {
                if(data.Status == 1 ) {
                    debugger;
                    if(data.Data.SpaceReservedCHA>0 || data.Data.SpaceReservedIMP>0){

                        $('#NetAreaRemainingCHA').val(data.Data.NetSpaceReservedCHA);
                        $('#NetAreaRemainingIMP').val(data.Data.NetSpaceReservedIMP);

                        $('#AreaRemainingCHA').val(data.Data.SpaceReservedCHA);
                        $('#AreaRemainingIMP').val(data.Data.SpaceReservedIMP);

                        debugger;
                        var valRes = $('#SpaceReqReserved').val();

                        var valNetRemCHA = $('#NetAreaRemainingCHA').val();
                        var valNetRemIMP = $('#NetAreaRemainingIMP').val();

                        var valRemCHA = $('#AreaRemainingCHA').val();
                        var valRemIMP = $('#AreaRemainingIMP').val();
                        var valRem = 0;

                        if(Number(valRemCHA) !=0){
                            $('#NetSpaceReq').val(valNetRemCHA);
                            $('#NetSpaceRemaining').val(valRemCHA);
                        }
                        else
                        {
                            $('#NetSpaceReq').val(valNetRemIMP);
                            $('#NetSpaceRemaining').val(valRemIMP);
                        }

                        //if (Number(valRes) > Number(valRem)) {
                        //    alert("Reserved area should be less than area remaining. Area remaining is " + valRem );
                        //    $('#SpaceReqReserved').val(0);
                        //}
                        //else {
            
                        //}
                    }
                    else
                    {
                        $('#AreaRemainingCHA').val(0);
                        $('#AreaRemainingIMP').val(0);
                        $('#SpaceReqReserved').val(0);
                        $('#NetSpaceReq').val(0);
                        $('#NetSpaceRemaining').val(0);
                        //alert("Area is not reserved in this godown with given space type." );
                    }                   
                }
                else
                {

                }
            }
        });
        
    }

    function ValidateReservedArea() {
        debugger;
        var ImpId = $('#ImporterId').val();
        var CHAId = $('#CHAId').val();        
        var GDwnId = $('#GodownId').val();
        var SType = $('#SpaceType').val();

        //LoadImporterReservation(CHAId,ImpId,GDwnId,SType);

        //$.ajax({
        //    url: '/Bond/WFLDBond/LoadImporterReservationDetails',
        //    type: 'GET',
        //    dataType: 'JSON',
        //    data: { CHAId : CHAId , 
        //        ImpId : ImpId, 
        //        GodownId : GDwnId,
        //        SpaceType : SType },
        //    success: function (data) {

        var valRemCHA = $('#AreaRemainingCHA').val();
        var valRemIMP = $('#AreaRemainingIMP').val();


        //if(valRemCHA >0 && valRemIMP > 0 ) {
                    debugger;
                    if(valRemCHA>0 || valRemIMP>0){
                        //$('#AreaRemainingCHA').val(data.Data.SpaceReservedCHA);
                        //$('#AreaRemainingIMP').val(data.Data.SpaceReservedIMP);

                        debugger;
                        var valRes = $('#SpaceReqReserved').val();
                        
                        var valRem = 0;

                        if(Number(valRemCHA) !=0){
                            valRem = valRemCHA;
                        }
                        else
                        {
                            valRem = valRemIMP;
                        }

                        if (Number(valRes) > Number(valRem)) {
                            alert("Reserved area should be less than area remaining. Area remaining is " + valRem );
                            $('#SpaceReqReserved').val(0);
                            $('#NetSpaceRemaining').val(valRem);
                        }
                        else {
                            var NetSpaceRem =  Number(valRem) - Number(valRes);
                            $('#NetSpaceRemaining').val(NetSpaceRem);
                        }
                    }
                    else
                    {
                        $('#AreaRemainingCHA').val(0);
                        $('#AreaRemainingIMP').val(0);
                        $('#SpaceReqReserved').val(0);
                        alert("Area is not reserved in this godown with given space type." );
                    }                   
                //}
               // else
        //        {

        //        }
        //    }
        //});

        
    }

    $("#DivOthers").hide();
    $('#NatureOfPackages').change(function () {
        var val = $(this).find(":selected").text();
        if (val == 'Others') {
            $('#DivOthers').show();

        }
        else {
            $('#DivOthers').hide();
        }
    })

    function ListSearch()
    {
        if ($('#Search').val().trim() == '')
        {
            alert('Please enter Application / BOL / AWB No. to search');
        }
        else
        $('#DivBondAppList').load('/Bond/WFLDBond/SearchOfBondApp?Search=' + ($('#Search').val().trim()));
    }
    function ShowList()
    {
        $('#Search').val('');
        $('#DivBondAppList').load('/Bond/WFLDBond/ListOfBondApp');        
    }
    $('#DimensionUOM').on('blur', function () {
        $('#DimensionUOM').val($('#DimensionUOM').val().toUpperCase());
    });

    function SelectCHA(CHAId, CHAName) {
        debugger;
        $('#CHAName').val(CHAName);
        $('#CHAId').val(CHAId);
        $("#CHAModal").modal("hide");
        $('#Chabox').val('');
        $('[data-valmsg-for="CHAName"]').html('<span></span>');
        LoadCHA();
    }

    var Page = 0;

    function LoadMoreCHA() {
        debugger;
        $.ajax({
            url: '/Export/WFLD_CWCExport/LoadCHAList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    $.each(data.Data.lstCHA, function (item, elem) {
                        debugger;
                        html += '<tr onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tbleCha tbody').html(html);
                    else
                        $('#tbleCha tbody').append(html);
                    Page++;

                    debugger;
                    if (data.Data.State == true)
                        $('#btnLoadCHA').prop('disabled', false);
                    else $('#btnLoadCHA').prop('disabled', true);
                }
            }
        });
    }

    function LoadCHA() {
        debugger;
        Page = 0;
        $.ajax({
            url: '/Export/WFLD_CWCExport/LoadCHAList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    $.each(data.Data.lstCHA, function (item, elem) {
                        debugger;
                        html += '<tr onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });

                    $('#tbleCha tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadCHA').prop('disabled', false);
                    else $('#btnLoadCHA').prop('disabled', true);
                }
            }
        });
    }

    function SearchChaByPartyCode() {
        debugger;
        if ($('#Chabox').val() != '') {
            $.ajax({
                url: '/Export/WFLD_CWCExport/CHASearchByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#Chabox').val() },
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        var html = '';
                        $.each(data.Data.lstCHA, function (item, elem) {
                            html += '<tr onclick="SelectCHA(' + elem.CHAId + ',&quot;' + elem.CHAName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.CHAName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tbleCha tbody').html('');
                        $('#tbleCha tbody').html(html);
                        $('#btnLoadCHA').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleCha tbody').html('');
                        Page = -1;
                        $('#btnLoadCHA').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadCHA();
    }

    function CloseCHA() {
        $('#Chabox').val('');
        $("#CHAModal").modal("hide");
        LoadCHA();
    }

    function debounce(func, wait, immediate) {
        var timeout;
        return function () {
            var context = this, args = arguments;
            var later = function () {
                timeout = null;
                if (!immediate) func.apply(context, args);
            };
            var callNow = immediate && !timeout;
            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
            if (callNow) func.apply(context, args);
        };
    };
    document.getElementById('Chabox').addEventListener('keyup', debounce(function () {
        SearchChaByPartyCode()
    }, 800));
    document.getElementById('Impbox').addEventListener('keyup', debounce(function () {
        SearchImporterByPartyCode()
    }, 800));

    function SelectImporter(ImporterId, ImporterName) {
        $('#ImporterName').val(ImporterName);
        $('#ImporterId').val(ImporterId);
        $("#ImporterModal").modal("hide");
        $('#Impbox').val('');
        $('[data-valmsg-for="ImporterName"]').html('<span></span>');

        $('#GodownName').val('');        
        $('#GodownId,#SpaceReqReserved').val('0');

        LoadImporter();        
    }

    function LoadMoreImporter() {
        debugger;
        $.ajax({
            url: '/Import/Wfld_OblEntry/LoadImporterList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    $.each(data.Data.lstImporter, function (item, elem) {
                        debugger;
                        //html += '<tr onclick="SelectImporter(' + elem.ImporterId + ',&quot;' + elem.ImporterName + '&quot;)"><td>' + elem.ImporterName + '</td></tr>';
                        html += '<tr onclick="SelectImporter(' + elem.ImporterId + ',&quot;' + elem.ImporterName.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ImporterName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';

                    });
                    if (Page == -1)
                        $('#tbleImp tbody').html(html);
                    else
                        $('#tbleImp tbody').append(html);
                    Page++;

                    if (data.Data.State == true)
                        $('#LoadMoreImporter').prop('disabled', false);
                    else $('#LoadMoreImporter').prop('disabled', true);
                }
            }
        });
    }

    var Page = 0;
    function LoadImporter() {
        debugger;
        Page = 0;
        $.ajax({
            url: '/Import/Wfld_OblEntry/LoadImporterList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    $.each(data.Data.lstImporter, function (item, elem) {
                        debugger;
                        html += '<tr onclick="SelectImporter(' + elem.ImporterId + ',&quot;' + elem.ImporterName.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ImporterName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    $('#tbleImp tbody').html(html);

                    if (data.Data.State == true)
                        $('#LoadMoreImporter').prop('disabled', false);
                    else $('#LoadMoreImporter').prop('disabled', true);
                }
            }
        });
    }

    function SearchImporterByPartyCode() {
        if ($('#Impbox').val() != '') {
            $.ajax({
                url: '/Import/Wfld_OblEntry/SearchImporterByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#Impbox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        $.each(data.Data.lstImporter, function (item, elem) {
                            html += '<tr onclick="SelectImporter(' + elem.ImporterId + ',&quot;' + elem.ImporterName.replace(/\r?\n|\r/g, "") + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.ImporterName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tbleImp tbody').html('');
                        $('#tbleImp tbody').html(html);
                        $('#LoadMoreImporter').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleImp tbody').html('');
                        Page = -1;
                        $('#LoadMoreImporter').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadImporter();
    }

    function CloseImporter() {
        $('#Impbox').val('');
        $("#ImporterModal").modal("hide");
        LoadImporter();
    }




</script>
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script>
    $(function () {
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });
    $(function () {
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });
    </script>