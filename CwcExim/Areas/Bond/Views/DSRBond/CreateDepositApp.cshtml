@model CwcExim.Areas.Bond.Models.DSRDepositApp
<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div id="DivDepositApp" class="Head_h4"> 
            <div>
                @using (Ajax.BeginForm("AddEditDepositApp", "DSRBond", new AjaxOptions
                {
                    OnComplete = "SaveDisabled",
                    OnBegin = "SaveEnabled",
                    Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "DepositAppOnSuccess",
                    OnFailure = "DepositAppOnFailure"
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.SpaceappId)
                    @Html.HiddenFor(m => m.EntryId)
                    @Html.HiddenFor(m => m.EntryDate)
                    @Html.HiddenFor(m => m.GodownWiseDtlXml)
                    @Html.HiddenFor(m => m.SpaceReq)
                    @Html.HiddenFor(m => m.SpaceReqReserved)
                    @Html.HiddenFor(m => m.IsOnlyForReserved)
                    @Html.Hidden("TWeight")
                    @Html.Hidden("TUnits")
                    @Html.Hidden("GodownLength")
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Deposit Application</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Deposit No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DepositNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Deposit Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DepositDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DepositDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="SacSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#SacModal"></i></span>
                                @Html.ValidationMessageFor(m => m.SacNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SacDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Vehicle No:</label>
                            </div>                            
                            <div class="col-md-2-5">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="VehicleSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#VehicleModal"></i></span>
                                @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })

                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Custom Seal No:</label>
                            </div>

                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                                @*@Html.DropDownListFor(m => m.VehicleNo, new List<SelectListItem>
                                           {
                                           }, "----Select----", new { @class = "form-control input_sm dropdown" })
                                    @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond BOE No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BondBOENo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondBOENo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Bond BOE Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.BondBOEDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondBOEDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>WR No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.WRNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.WRNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>WR Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.WRDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.WRDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>


                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Bond Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Custom Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomBondNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomBondNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Custom Bond Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.CustomBondDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomBondDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>IGM No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.IGMNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>IGM Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.IGMDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="Head_h5" style="margin-top:20px;margin-bottom:20px;padding:10px;">


                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Godown:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                                    @Html.ValidationMessageFor(m => m.GodownName)
                                    @Html.HiddenFor(m => m.GodownId)

                                </div>
                                <div id="divTotalSpace">
                                    Reserved Space : <strong><span id="LabTotalSpace"></span></strong>
                                </div>
                                @Html.Hidden("TotalSpace")
                                @Html.Hidden("ReservationTo")

                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    <label>Space Unreserved (sq. mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("SpaceUnreserved", "", new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("SpaceUnreserved", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                    <label>Space Reserved (sq. mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("SpaceReserved", "", new { @class = "form -control input-sm", @onchange = "ValidSpaceReserved()", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("SpaceReserved", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    <label>Units:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Units2", "", new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("Units2", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                    <label>Weight:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Weight2", "", new { @class = "form -control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("Weight2", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    <label>Value:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Value2", "", new { @class = "form-control input-sm" })
                                    @Html.ValidationMessage("Value2", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                    <label>Duty:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Duty2", "", new { @class = "form-control input-sm" })
                                    @Html.ValidationMessage("Duty2", "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="button" id="BtnAddGodownWiseEntry" class="btn log_Btn_sm" value="Add" onclick="SaveGodownWiseDtl()" disabled />
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Reset" id="btnReset" onclick="ResetGodownDet2()" />
                            </div>
                        </div>
                        <div id="DivGodownWiseEntryTblMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                        <table class="table table-striped table-bordered dataTable slim_tble" id="TblGodownWiseEntryDet" style="width:100%;">
                            <thead>
                                <tr>
                                    <th width="2%" class="text-center">@Html.DisplayName("SL No")</th>
                                    <th rowspan="2" width="15%" class="text-center">@Html.DisplayName("Godown Name")</th>
                                    <th rowspan="2" width="15%" class="text-center">@Html.DisplayName("Space Unreserved")</th>
                                    <th rowspan="2" width="6%" class="text-center">@Html.DisplayName("Space Reserved")</th>
                                    <th rowspan="2" width="6%" class="text-center">@Html.DisplayName("Units")</th>
                                    <th rowspan="2" width="6%" class="text-center">@Html.DisplayName("Weight")</th>
                                    <th rowspan="2" width="6%" class="text-center">@Html.DisplayName("Value")</th>
                                    <th rowspan="2" width="6%" class="text-center">@Html.DisplayName("Duty")</th>
                                    <th rowspan="2" width="5%" class="text-center">@Html.DisplayName("Edit")</th>
                                    @*<th rowspan="2" width="5%" class="text-center">@Html.DisplayName("View")</th>*@
                                </tr>
                            </thead>
                            <tbody align="center"></tbody>
                        </table>
                    </div>

                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.HiddenFor(m => m.GodownId, new { Value = "0" })
                                <label>Godown:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="GodownSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                                @Html.ValidationMessageFor(m => m.GodownName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHA, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @*@Html.HiddenFor(m => m.CHAId)*@
                                @Html.TextBoxFor(m => m.CHA, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.Importer, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.ImporterId)
                                @Html.TextBoxFor(m => m.Importer, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="SacSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ImporterModal"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt" style="display:none">
                                <label>Units:</label>
                            </div>
                            <div class="col-md-2-5" style="display:none">
                                @Html.TextBoxFor(m => m.Units, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Units, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Dimension UOM:</label>
                            </div>
                            <div class="col-md-1-5">
                                @Html.TextBoxFor(m => m.DimensionUOM, new { @class = "form-control input-sm", @placeholder = "UOM", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_3 col-md-offset-1 col_cus_2 padding_rt">

                            </div>
                            <div class="col-md-1-5" style="display:none">
                                <label>Weight:</label>
                            </div>
                            <div class="col-md-2-5" style="display:none">
                                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Value:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Value, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Value, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>Duty:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Duty, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Duty, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.IsInsured)
                            </div>
                            <div class="col-md-1 padding_rt">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.IsInsured)
                                    <label for="IsInsured"><i class="square"></i></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetDepositAppApp()" />
                        </div>
                    </div>
                    <div id="DivDepositAppErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                    <div id="DivDepositAppMsg" class="logSuccMsg" style="background-color:transparent"></div>
                    <div class="form-group Form_Input">
                        <div class="col-md-12">
                            <div class="col-md-2">
                                <input type="button" id="ShowList" class="btn log_Btn_sm" value="ShowList" onclick="GetDepositAppList()">
                            </div>
                            <div class="col-md-offset-5 col-md-3 Error_Msg">
                                <input type="text" placeholder="Search by Deposit No." id="SearchDepositNo">
                                @Html.ValidationMessage("SearchDepositNo")
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Search" onclick="SearchDepositAppDetails()" class="btn log_Btn_sm">

                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="DivDepositAppList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="SacModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Sac No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="SacNobox" type="text" />
                <ul class="navList" id="SacNoList">
                    @{
                        if (ViewBag.SacNoList != null)
                        {
                            foreach (var item in ViewBag.SacNoList)
                            {
                                <li id="@item.SpaceappId" onclick="onSacNoClick(@item.EntryId,@item.SpaceappId,'@item.SacNo')">@item.SacNo</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="VehicleModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Vehicle No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="VehicleNobox" type="text" />
                <ul class="navList" id="VehicleNoList">
                    @*@{
                            if (ViewBag.SacNoList != null)
                            {
                                foreach (var item in ViewBag.SacNoList)
                                {
                                    <li id="@item.SpaceappId" onclick="onSacNoClick(@item.EntryId,@item.SpaceappId,'@item.SacNo')">@item.SacNo</li>
                                }
                            }
                        }*@
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ImporterModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Importer Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Importerbox" type="text" />
                <ul class="navList" id="lstImporter">
                    @{
                        if (ViewBag.ListOfImporter != null)
                        {
                            foreach (var item in ViewBag.ListOfImporter)
                            {
                                <li id="@item.ImporterId">@item.ImporterName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="GodownModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Godownbox" type="text" />
                <ul class="navList" id="GodownList">
                    @*@{
                            if (ViewBag.GodownList != null)
                            {
                                foreach (var item in ViewBag.GodownList)
                                {
                                    <li id="@item.Value">@item.Text</li>
                                }
                            }
                        }*@
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    // var dateString ;
    // var myDate = new Date(dateString);
    var ArrayLst = [];
    $(function () {
        debugger;
       // GetDepositAppList();
        $('#VehicleSearch').hide();
        $("#divTotalSpace").hide();
        $('#TblGodownWiseEntryDet').hide();
        $('#DepositNo').focus();
    });

    $('#DepositDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onSelect: function (dateText) {
            var From = $('#EntryDate').val();
            var To = $('#DepositDate').val();
            var SF = From.split('/');
            var ST = To.split('/');
            var STyear = ST[2].split(" "); //Split Time and Year From InvoiceDate;
            //var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
            //var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
            var FromDate = SF[1] + '/' + SF[0] + '/' + SF[2]; // Createing Date In DD/MM/YYYY;
            var ToDate = ST[1] + '/' + ST[0] + '/' + STyear[0]; // Createing Date In DD/MM/YYYY;
            var dt1 = new Date(FromDate);
            var dt2 = new Date(ToDate);
            if (dt1 > dt2) {
                alert("Deposit Date Must be Greater Than or Equal To Gate Entry Date !!");
                return false;
            }
            else
                return true;
        },
        onClose: function () {
            $("[data-valmsg-for='DepositDate']").html('');
        }
    });

    $('#BOEDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BOEDate']").html('');
        }
    });

    $('#BondBOEDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BondBOEDate']").html('');
        }
    });

    $('#WRDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='WRDate']").html('');
        }
    });

    $('#BondDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='WRDate']").html('');
        }
    });

    $('#CustomBondDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='CustomBondDate']").html('');
        }
    });

    function GetDepositAppList() {
        debugger;
        $('#SearchDepositNo').val('');
        $('#DivDepositAppList').load('/Bond/DSRBond/GetDepositAppList');
    }

    function SearchDepositAppDetails()
    {
        debugger;
        var SearchDepositNo = $('#SearchDepositNo').val();
        if (SearchDepositNo == '' || SearchDepositNo == null) {
            $("span[data-valmsg-for='SearchDepositNo']").text('Fill this field');
        }
        else {
            $("span[data-valmsg-for='SearchDepositNo']").text('');
            $('#DivDepositAppList').load('/Bond/DSRBond/GetDepositAppListBySearch?DepositNo=' + SearchDepositNo + '');
        }
    }

    function ResetDepositAppApp() {
        debugger;
        var DepositDate = $('#DepositDate').val();
        // $("#SacModal ul li:contains(" + $("#SacNo").val() + ")").remove();
        $('#DivDepositApp').find('input:text,textarea').val('');
        $('#DivDepositApp #SpaceappId,#GodownId,#ImporterId').val('0');
        $('#DivDepositAppMsg').html('');
        $('#DivDepositAppErrMsg').html('');
        $('#DepositDate').val(DepositDate);
        $('#WRDate').val(DepositDate);
        $('#IsInsured').prop("checked", false);
        $('[data-valmsg-for]').html('<span></span>');
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        $("#divTotalSpace").hide();
        // GetDepositAppList();
        // $('#CHAName,#ImporterName,#ImporterLicenseNo,#BOLAWBNo,#BOENo,#BOEDate,#CargoDescription,#NatureOfPackages,#ExpDateofWarehouse').val('');
        //  $('#ImporterId,#CHAId,#NoOfUnits,#DimensionPerUnit,#SpaceReq,#DutyAmt,#AssessCIFvalue').val('0');
    }

    function LoadDepositApp() {
        debugger;
        // $('#DivBody').load('/Bond/DSRBond/CreateDepositApp');
        $('#VehicleNo').val('');
        $('#DivDepositAppMsg').html('');
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        var Sac = $('#SacNo').val();
        GetAllVehicle(Sac);
        GetSACWiseGodownList(Sac);
        ResetGodownDet2();
        GetDepositAppList();
    }

    function DepositAppOnSuccess(data) {
        debugger;
        if (data.Status == 1) {
            $('#DivDepositAppMsg').html(data.Message);
            setTimeout(LoadDepositApp, 5000);
            // ResetAll();
            // GetDepositAppList();
        }
        else {
            $('#DivDepositAppErrMsg').html(data.Message);
        }
    }
    function DepositAppOnFailure() {
    }
    $('#Importerbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstImporter > li').show();
        } else {
            $('#lstImporter > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstImporter li').on("click", function () {
        $('#Importer').val($(this).text());
        $('#ImporterId').val($(this).attr('id'));
        $("#ImporterModal").modal("hide");
    });

    $('#Godownbox').keyup(function () {
        debugger;
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#GodownList > li').show();
        else {
            $('#GodownList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    function GodownDtl(GodownId, GodownName) {
        debugger;
        //if ($('#EntryId').val() == 0) {
        //    alert("Please Select Vehicle No ");
        //    $("#GodownModal").modal("hide");
        //    return false;
        //}
        
        $('#GodownName').val(GodownName);
        $('#GodownId').val(GodownId);
        $("#GodownModal").modal("hide");
        $('#BtnAddGodownWiseEntry').prop("disabled", false);
        $('#btnReset').prop("disabled", false);
        GodownWiseReserveSpace(GodownId);
    };

    $('#SacNobox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#SacNoList > li').show();
        else {
            $('#SacNoList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    //$('#SacNoList > li').on("click", function () {
    function onSacNoClick(EntryId, SpaceappId, SacNo) {
        debugger;
        ResetDepositAppApp();
        var arr = SacNo.split('_');
        var Sac = arr[0];
        $('#SacNo').val(Sac);
        $('#SpaceappId').val(SpaceappId);
        $("#SacModal").modal("hide");
        $("#divTotalSpace").hide();
        GetSacNoDet(SpaceappId, EntryId);
        $('#VehicleSearch').show();
        GetAllVehicle(Sac);
        GetSACWiseGodownList(Sac);
    }
    //});
    function GetSACWiseGodownList(Sac) {
        debugger;
        //var arr = Sac.split('/');
        //var SacNo = 'SAC/APP/' + arr[1];
        $.ajax({
            url: '/Bond/DSRBond/ListOfSACWiseGodown',
            type: 'GET',
            dataType: 'JSON',
            data: { SacNo: Sac },
            success: function (data) {
                debugger;
                $('#GodownLength').val(data.length)
                var Html = '';
                $.each(data, function (i, item) {
                    Html += '<li onclick="GodownDtl(' + item.GodownId + ',&quot;' + item.GodownName + '&quot;)" id="' + item.GodownId + '">' + item.GodownName + '</li>';
                });
                $('#GodownList').html(Html);

            }
        });
    }
    var VehicleDtl = [];
    function GetAllVehicle(Sac) {
        debugger;
        $.ajax({
            url: '/Bond/DSRBond/GetAllVehicle',
            type: 'GET',
            dataType: 'JSON',
            data: { SacNo: Sac },
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    VehicleDtl = [];
                    VehicleDtl = data;
                    var Html = '';
                    $.each(data.Data, function (i, item) {
                        Html += '<li onclick="FillVehicleNoBox(' + item.EntryId + ',' + item.SpaceappId + ',&quot;' + item.VehicleNo + '&quot;)">' + item.VehicleNo + '</li>';
                    });
                    $('#VehicleNoList').html(Html);
                }
            }
        });
    }


    $('#VehicleNoBox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#VehicleModal .navList > li').show();
        } else {
            $('#VehicleModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    function FillVehicleNoBox(EntryId, SpaceappId, VehicleNo) {
        debugger;
        $('#BtnSave').prop('disabled', false);
        $('#VehicleNo').val(VehicleNo);
        $('#EntryId').val(EntryId);
        $('#SpaceappId').val(SpaceappId);
        $("#VehicleModal").modal("hide");
        GetSacNoDet(SpaceappId, EntryId);
    }

    function GetSacNoDet(SpaceappId, EntryId) {
        $.ajax({
            url: "/Bond/DSRBond/GetSacNoDepositDetails",
            type: "Get",
            dataType: "JSON",
            data: { SpaceappId: SpaceappId, EntryId: EntryId },
            async: false,
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    $('#SacDate').val(data.Data.SacDate);
                    $('#CHA').val(data.Data.CHA);
                    $('#CustomSealNo').val(data.Data.CustomSealNo);
                    //$('#VehicleNo').val(data.Data.VehicleNo);
                    //$('#GodownName').val(data.Data.GodownName);
                    //$('#GodownId').val(data.Data.GodownId);
                    $('#Importer').val(data.Data.Importer);
                    $('#ImporterId').val(data.Data.ImporterId);
                    $('#BondBOENo').val(data.Data.BondBOENo);
                    $('#BondBOEDate').val(data.Data.BondBOEDate);
                    $('#CargoDescription').val(data.Data.CargoDescription);
                    $('#EntryDate').val(data.Data.EntryDate);
                    $('#IGMNo').val(data.Data.IGMNo);
                    $('#IGMDate').val(data.Data.IGMDate);
                    $('#WRNo').val(data.Data.WRNo);
                    $('#TUnits').val(data.Data.Units);
                    $('#TWeight').val(data.Data.Weight);
                    $('#Value').val(data.Data.Value);
                    $('#Duty').val(data.Data.Duty);
                    $('#DimensionUOM').val(data.Data.DimensionUOM);
                    $('#IsOnlyForReserved').val((data.Data.IsOnlyForReserved));
                    if (data.Data.IsOnlyForReserved == 1) {
                        //$('#SpaceUnreserved').prop('readonly', true);
                        $('#SpaceUnreserved').prop('readonly', false);
                    } else {
                        $('#SpaceUnreserved').prop('readonly', false);
                    }
                    //set Deposite date not less than SAC date. mks
                    if (data.Data.SacDate != "") {
                        var from = data.Data.SacDate.split("/");
                        var date = new Date(from[2], from[1] - 1, from[0])
                        var currentMonth = date.getMonth();
                        var currentDate = date.getDate();
                        var currentYear = date.getFullYear();
                        $('#DepositDate').datepicker("option", "minDate", data.Data.SacDate);
                    }
                }
            }
        });
    }

    $('#BtnSave').on("click", function () {
        debugger;
        var From = $('#EntryDate').val();
        var To = $('#DepositDate').val();
        var SF = From.split('/');
        var ST = To.split('/');
        var STyear = ST[2].split(" "); //Split Time and Year From InvoiceDate;
        //var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
        //var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
        var FromDate = SF[1] + '/' + SF[0] + '/' + SF[2]; // Createing Date In DD/MM/YYYY;
        var ToDate = ST[1] + '/' + ST[0] + '/' + STyear[0]; // Createing Date In DD/MM/YYYY;
        var dt1 = new Date(FromDate);
        var dt2 = new Date(ToDate);
        if (dt1 > dt2) {
            alert("Deposit Date Must be Greater Than or Equal To Gate Entry Date !!");
            return false;
        }
        else {
            //    var retn=true;
            //    var  Confirm = confirm("Are you sure you want to Save?");
            //if (Confirm) {
            //    $('#BtnSave').attr('disabled','disabled');
            //    retn=true;
            //}
            //else {
            //    $('#BtnSave').attr('enabled','enabled');
            //    retn=false;
            //}
            //return retn;
            return true;
        }
    });

    function SaveEnabled() {
        $('#BtnSave').attr('enabled', 'enabled');
        retn = true;

    };
    function SaveDisabled() {
        $('#BtnSave').attr('disabled', 'disabled');
        retn = true;
    }
    function SaveGodownWiseDtl() {
        debugger;
        var IsValidGodown = $('#GodownId').val();
        var reVal = 0;
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                if (IsValidGodown == item.GodownId) {
                    $('#DivGodownWiseEntryTblMsg').html('Already Added Godown Name');
                    reVal = 1;
                }
            });
        }
        if (reVal == 1) {
            return false;
        }

        $('#DivGodownWiseEntryTblMsg').html('');
        if ($('#SpaceUnreserved').val() == '') {
            $('[data-valmsg-for="SpaceUnreserved"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#SpaceReserved').val() == '') {
            $('[data-valmsg-for="SpaceReserved"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#Units2').val() == '') {
            $('[data-valmsg-for="Units2"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#Weight2').val() == '') {
            $('[data-valmsg-for="Weight2"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#SacNo').val() == '') {
            $('#DivGodownWiseEntryTblMsg').html('Please Select SacNo No To Add Details');
            return false;
        }

        var SpaceUnreserved = 0;
        var SpaceReserved = 0;
        if ($('#SpaceReserved').val() == "") {
            Manual = 0;
        }
        else {
            Manual = $('#SpaceReserved').val();
            $('[data-valmsg-for="SpaceReserved"]').html('');
        }
        if ($('#SpaceUnreserved').val() == "") {
            Mechanical = 0;
        }
        else {
            Mechanical = $('#SpaceUnreserved').val();
            $('[data-valmsg-for="SpaceUnreserved"]').html('');
        }
        if ((Number(Manual) + Number(Mechanical)) <= 0) {
            alert('Reserved or Unreserved Space will be greater than zero');
            return false;
        }

        if ($('#GodownName').val() != "") {
            debugger;
            var Rdate = $('#ReservationTo').val()
            var sdate = Rdate.split(' ');

            var GodownEntryDtl = {
                "ReservationTo": sdate[0],
                "Units": $('#Units2').val(),
                "Weight": $('#Weight2').val(),
                "Value": $('#Value2').val(),
                "Duty": $('#Duty2').val(),
                "GodownId": $('#GodownId').val(),
                "GodownName": $('#GodownName').val(),
                "SpaceUnreserved": $('#SpaceUnreserved').val(),
                "SpaceReserved": $('#SpaceReserved').val(),
            }
        };
        ArrayLst.push(GodownEntryDtl);

        //if (!SumOfUnits()) {
        //    return false
        //}
        //if (!SumOfWeight()) {
        //    return false
        //}
        $('#BtnAddGodownWiseEntry').prop("disabled", true);
        $('#btnReset').prop("disabled", false);
        ResetGodownDet();
        GenerateGodownWiseEntryTable();
        SumOfGodownDetails();
        $("#divTotalSpace").hide();
    }

    function GenerateGodownWiseEntryTable() {
        debugger;
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        $("#SpaceReq").val('');
        $("#SpaceReqReserved").val('');
        var Html = '';
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                Html += '<tr>';
                Html += '<td class="text-center">' + (i + 1) + '</td>';
                Html += '<td width="50px" class="txt_wrp">' + item.GodownName + '</td>';
                Html += '<td width="6%" class="txt_wrp">' + item.SpaceUnreserved + '</td>';
                Html += '<td width="20%" class="txt_wrp">' + item.SpaceReserved + '</td>';
                Html += '<td width="20%" class="txt_wrp">' + item.Units + '</td>';
                Html += '<td width="20%" class="txt_wrp">' + item.Weight + '</td>';
                Html += '<td width="20%" class="txt_wrp">' + item.Value + '</td>';
                Html += '<td width="20%" class="txt_wrp">' + item.Duty + '</td>';
                Html += '<td width="5%" class="text-center"><a href="#" onclick="EditGodownWiseEntry(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td>';
                //Html += '<td width="5%" class="text-center"><a href="#" onclick="ViewGodownWiseEntry(' + i + ')"><i class="fa fa-search-plus" aria-hidden="true"></i></a></td>';
                Html += '</tr>';
            });
            $('#TblGodownWiseEntryDet>tbody').html(Html);
            $('#TblGodownWiseEntryDet').show();
            // Sum();
        }
    }
    function ResetGodownDet() {
        debugger;

        $('#Units2').val('');
        $('#Weight2').val('');
        $('#Value2').val('');
        $('#Duty2').val('');
        $('#GodownId').val('');
        $('#GodownName').val('');
        $('#SpaceUnreserved').val('');
        $('#SpaceReserved').val('');
        $("#SpaceReserved").prop("disabled", false);
        $('#GodownName').prop("disabled", false);
        $('#SpaceUnreserved').prop('readonly', false);
        $('#SpaceReserved').prop('readonly', false);
        $('#BtnAddGodownWiseEntry').prop("disabled", true);
        $('[data-valmsg-for="SpaceUnreserved"]').html('<span></span>');
        $('[data-valmsg-for="SpaceReserved"]').html('<span></span>');
        $('#DivGodownWiseEntryTblMsg').html('');
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        $("#divTotalSpace").hide();
    }
    function ResetGodownDet2() {
        debugger;

        $('#Units2').val('');
        $('#Weight2').val('');
        $('#Value2').val('');
        $('#Duty2').val('');
        $('#GodownId').val('');
        $('#GodownName').val('');
        $('#SpaceUnreserved').val('');
        $('#SpaceReserved').val('');
        //  ArrayLst = [];
        $("#SpaceReserved").prop("disabled", false);
        $('#GodownName').prop("disabled", false);
        $('#SpaceUnreserved').prop('readonly', false);
        $('#SpaceReserved').prop('readonly', false);
        $('#BtnAddGodownWiseEntry').prop("disabled", true);
        $('[data-valmsg-for="SpaceUnreserved"]').html('<span></span>');
        $('[data-valmsg-for="SpaceReserved"]').html('<span></span>');
        $('#DivGodownWiseEntryTblMsg').html('');
        // $('#TblGodownWiseEntryDet').hide();
        // $('#TblGodownWiseEntryDet>tbody').html('');
        $("#divTotalSpace").hide();
    }

    function EditGodownWiseEntry(Index) {

        $('#Units2').val(ArrayLst[Index].Units);
        $('#Weight2').val(ArrayLst[Index].Weight);
        $('#Value2').val(ArrayLst[Index].Value);
        $('#Duty2').val(ArrayLst[Index].Duty);
        $('#GodownId').val(ArrayLst[Index].GodownId);
        $('#GodownName').val(ArrayLst[Index].GodownName);
        $('#SpaceUnreserved').val(ArrayLst[Index].SpaceUnreserved);
        $('#SpaceReserved').val(ArrayLst[Index].SpaceReserved);
        if (ArrayLst[Index].SpaceReserved == 0) {
            $("#SpaceReserved").prop("disabled", true);
        }
        $('#BtnAddGodownWiseEntry').prop("disabled", false);
        ArrayLst.splice(Index, 1);
        GenerateGodownWiseEntryTable();
    }
    function SumOfGodownDetails() {
        debugger;
        var TotalSpUnreserved = 0;
        var TotalSpReserved = 0;
        var TotalUnits = 0;
        var TotalWeight = 0;
        var TotalValue = 0;
        var TotalDuty = 0;
        $("#SpaceReq").val('');
        $("#SpaceReqReserved").val('');
        $("#Units").val('');
        $("#Weight").val('');
        $("#Value").val('');
        $("#Duty").val('');
        if (ArrayLst.length != 0) {
            for (var i = 0; i < ArrayLst.length; i++) {
                TotalSpUnreserved += ArrayLst[i].SpaceUnreserved << 0;
                TotalSpReserved += ArrayLst[i].SpaceReserved << 0;
                TotalUnits += ArrayLst[i].Units << 0;
                //TotalWeight += ArrayLst[i].Weight << 0;
                TotalWeight += Number(ArrayLst[i].Weight);
                TotalValue += ArrayLst[i].Value << 0;
                TotalDuty += ArrayLst[i].Duty << 0;
            }
        }
        $("#SpaceReq").val(TotalSpUnreserved);
        $("#SpaceReqReserved").val(TotalSpReserved);
        debugger;
        $("#Units").val(TotalUnits);
        $("#Weight").val(TotalWeight);
        $("#Value").val(TotalValue);
        $("#Duty").val(TotalDuty);

    }


    $('#BtnSave').on('click', function () {
        if ($('#CHAName').val() != '') {
            if (ArrayLst.length != 0) {
                $('#GodownWiseDtlXml').val(JSON.stringify(ArrayLst));
                $('#GodownId').val(0);
                $('#GodownName').val('Test');
                //$('#Units').val($('#TUnits').val());
                // $('#Weight').val($('#TWeight').val());
                return true;
            } else {
                $('#DivGodownWiseEntryTblMsg').html('Please Add The Above Records');
                return false;
            }
        };
    });
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }

    function GodownWiseReserveSpace(GodownId) {
        debugger;
        $("#TotalSpace").html('');
        $("#ReservationTo").html('')
        $("#ValidUpto").html('');
        $("#divTotalSpace").hide();

        var sacNo = $('#SacNo').val();
        var toDay = $("#DepositDate").val();
        $.ajax({
            url: '/Bond/DSRBond/GodownWiseReserveSpace',
            type: 'GET',
            dataType: 'JSON',
            data: { GodownId: GodownId, SACNo: sacNo, ToDay: toDay },
            success: function (data) {
                debugger;
                if (data != 0) {
                    var GdLength = $('#GodownLength').val();
                    if (GdLength == 1) {
                        if (VehicleDtl.length != 0) {
                            for (var i = 0; i < VehicleDtl.Data.length; i++) {
                                if ($('#EntryId').val() == VehicleDtl.Data[i].EntryId) {
                                    $("#Units2").val(VehicleDtl.Data[i].NoOfPackages);
                                    $("#Weight2").val(VehicleDtl.Data[i].GrossWeight);
                                }
                            }
                        }
                        $("#SpaceUnreserved").val(data.Data.DSRSpaceReservedtl.AreaReserved);
                        // $("#Units2").val(data.Data.DSRSpaceReservedtl.NoOfUnits);
                        $("#Value2").val(data.Data.DSRSpaceReservedtl.AssessCIFvalue);
                        //$("#Weight2").val(data.Data.DSRSpaceReservedtl.Weight);
                        $("#Duty2").val(data.Data.DSRSpaceReservedtl.DutyAmt);
                    } else {
                        $("#SpaceUnreserved").val(0);
                        $("#Units2").val('');
                        $("#Value2").val('');
                        $("#Weight2").val('');
                        $("#Duty2").val('');
                    }

                    if ($('#IsOnlyForReserved').val() == 1) {
                        $('#SpaceUnreserved').prop('readonly', true).val(0);
                    } else {
                        $('#SpaceUnreserved').prop('readonly', false).val(0);
                    }
                    $("#ReservationTo").val(data.Data.ReservationTo);
                    $("#TotalSpace").val(data.Data.TotalSpace);
                    $("#LabTotalSpace").html(data.Data.TotalSpace);
                    if (data.Data.TotalSpace == 0) {
                        $("#SpaceReserved").val(0);
                        $("#SpaceReserved").prop("disabled", true);
                    } else {
                        $("#SpaceReserved").val(0);
                        $("#SpaceReserved").prop("disabled", false);
                    }
                    $("#divTotalSpace").show();

                } else {
                    alert("Godown Out of Date Range");
                    $('#GodownName').val("");
                    $('#GodownId').val("");
                    $("#divTotalSpace").hide();

                }
            }
        });
    }
    function ValidSpaceReserved() {
        debugger;
        var s = $("#TotalSpace").val();
        var b = $("#SpaceReserved").val();
        var toDay = $("#DepositDate").val();
        if (Number(s) == 0) {
            alert("Reserved Space Not Available");
            $("#SpaceReserved").val(0);
        } else if (Number(s) < Number(b)) {
            alert("Space Reserved Must be Less Than or Equal To Total Reserved Space " + s);
            $("#SpaceReserved").val('');
        }
    }
</script>