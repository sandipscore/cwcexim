@model CwcExim.Areas.Bond.Models.DSRBondWOUnloading
<style>
    .rel_pos {
        position: relative;
    }

        .rel_pos .search {
            top: 9px;
            right: 13px;
        }
</style>
<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            @using (Ajax.BeginForm("AddEditWOUnloading", "DSRBond", new AjaxOptions { Confirm = "Are you sure you want to Save?", HttpMethod = "POST", OnSuccess = "UnloadingOnSuccess", OnFailure = "UnloadingOnFailure" }))
            {
                <div id="DivBondApp">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Unloading at Bonded Warehouse</h4>
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.UnloadingId)
                    @Html.HiddenFor(m => m.GodownId)
                    @Html.HiddenFor(m => m.SpaceAppId)
                    @*@Html.HiddenFor(m => m.BondWOId)*@
                    @Html.HiddenFor(m => m.GodownWiseLocXml)
                    @Html.Hidden("ResvSpaceId")
                    @Html.Hidden("ReferenceNo")
                    @Html.AntiForgeryToken()
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Deposit No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DepositNo, new { @class = "form-control input-sm", @readonly = true })

                                @Html.ValidationMessageFor(m => m.DepositNo)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Deposit Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DepositDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DepositDate)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond BOE No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BondBOENo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Bond BOE Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.BondBOEDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Bond Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.WRNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.WRNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                @Html.LabelFor(m => m.WRDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.WRDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Godown Name:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Unloaded Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2 Date_Img">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.UnloadedDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.UnloadedDate)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Nature Of Material:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.DropDownListFor(m => m.NatureOfMaterial, new List<SelectListItem> {
                               new SelectListItem { Text="Non Haz",Value="2"},
                               new SelectListItem { Text="Haz",Value="1"}
                                })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt" style="display:none">
                                <label>Location Name:</label>
                            </div>
                            <div class="col-md-2-5" style="display:none">
                                @Html.HiddenFor(m => m.LocationId)
                                @Html.TextBoxFor(m => m.LocationName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#LocationModal"></i></span>
                                @Html.ValidationMessageFor(m => m.LocationName)
                            </div>
                            <div class="col_cus_2 col-md-1-5 padding_rt">
                                <label>Area Occupied:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.AreaOccupied, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.AreaOccupied)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;", @disabled = true })
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(m => m.Units)
                    @Html.HiddenFor(m => m.Weight)

                    <div style="margin-top:20px; margin-bottom:20px;">

                        <table class="table table-striped table-bordered dataTable slim_tble" id="TblGodownWiseEntryDet" style="width:100%;">
                            <thead>
                                <tr>
                                    <th rowspan="2" width="10%" class="text-center">@Html.DisplayName("Godown Name")</th>
                                    <th rowspan="2" width="10%" class="text-center">@Html.DisplayName("Space Unreserved")</th>
                                    <th rowspan="2" width="6%" class="text-center">@Html.DisplayName("Space Reserved")</th>
                                    <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Units")</th>
                                    <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Weight")</th>
                                    <th rowspan="2" width="10%" class="text-center"><span class="ReQSimbol">*</span> @Html.DisplayName("Location Name")</th>
                                    <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Unloaded Units")</th>
                                    <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Balanced Units")</th>
                                    <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Unloaded Weights")</th>
                                    <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Balanced Weights")</th>
                                </tr>
                            </thead>
                            <tbody align="center"></tbody>
                        </table>
                    </div>
                    <div id="DivGodownWiseEntryTblMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>

                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Unloaded Units:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.UnloadedUnits, new { @class = "form-control input-sm", @onchange = "FillBalancedUnits()" })
                                @Html.ValidationMessageFor(m => m.UnloadedUnits)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Balanced Units:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BalancedUnits, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Unloaded Weights:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.UnloadedWeights, new { @class = "form-control input-sm", @onchange = "FillBalancedWeights()" })
                                @Html.ValidationMessageFor(m => m.UnloadedWeights)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Balanced Weights:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BalancedWeights, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Handling Weight (Manual):</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.HandlingChargeManual, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Handling Weight (Mechanical):</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.HandlingChargeMechanical, new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Conditions Of Packages:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                <span class="ReQSimbol">*</span>
                                @Html.TextAreaFor(m => m.PackageCondition, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Back" onclick="LoadPage()" />
                        </div>
                    </div>
                    <div id="DivMsg" class="logSuccMsg" style="background-color:transparent"></div>

                    <div id="DivMsgErr" class="logErrMsg SignUp_space_bottom2" style="background-color:transparent"></div>
                </div>
            }
        </div>
    </div>
</div>
<div id="LocationModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown Location</h4>
            </div>
            <div class="modal-body popup_body">
                <div class="navList" id="lstGodown">
                    @if (ViewBag.Godown != null)
                    {

                    }
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var ArrayLst = [];
    $(function () {
        debugger;
        ArrayLst=@Html.Raw(Json.Encode(Model.LstGodownWiseDtl));
        GenerateGodownWiseEntryTable();
        if (ArrayLst.length != 0) {

            $.each(ArrayLst, function (i, item) {
                $('#UnloadedUnits_' + item.GodownId).val(item.UnloadedUnit);
                $('#UnloadedWeights_' + item.GodownId).val(item.UnloadedWeight);
                $('#LocationId_' + item.GodownId).val(item.LocationId);
                $('#LocationName_' + item.GodownId).val(item.LocationName);
                
                FillBalancedUnits(item.GodownId);
                FillBalancedWeights(item.GodownId)
            });
        }
    });
    $('#UnloadedDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='UnloadedDate']").html('');
        },
        onSelect: function (date) {
            if ($('#SacDate').val() != '') {
                var varsac = $('#SacDate').val();
                var varday = varsac.substring(0, 2);
                var varmm = varsac.substring(5, 3);
                var varyy = varsac.substring(10, 6);
                var mmk = '' + varyy + '-' + varmm + '-' + varday + '';
                var vardate = new Date(mmk);

                //var varsac = $('#SacDate').val();
                var Svarday = date.substring(0, 2);
                var Svarmm = date.substring(5, 3);
                var Svaryy = date.substring(10, 6);
                var Smmk = '' + Svaryy + '-' + Svarmm + '-' + Svarday + '';
                var Svardate = new Date(Smmk);



                var sdate = new Date(Svardate);


                if (vardate > sdate) {
                    alert('Unloading Date should be greater than or equal to SAC Date');
                    $('#UnloadedDate').val('');

                }
            }

        }
    });
    //$('#WRDate').datepicker({
    //    dateFormat: "dd/mm/yy",
    //    showOn: "button",
    //    buttonImage: "/Content/images/calendar.png",
    //    buttonImageOnly: true,
    //    buttonText: "Select date",
    //    changeMonth: true,
    //    changeYear: true,
    //    showAnima: "fadein",
    //    onClose: function () {
    //        $("[data-valmsg-for='WRDate']").html('');
    //    }
    //});
    function CheckBoxChange(GodownId) {
        var locationName = '', locationId = '';
        $('#lstGodown input[type="checkbox"]:checked').each(function () {
            if (locationName == '')
                locationName = $('label[for="' + $(this).prop('id') + '"]').text();
            else
                locationName += ',' + $('label[for="' + $(this).prop('id') + '"]').text();
            if (locationId == '')
                locationId = $(this).prop('id').split("-")[1];
            else
                locationId += ',' + $(this).prop('id').split("-")[1];
        });
        $('#LocationId_' + GodownId).val(locationId);
        $('#LocationName_' + GodownId).val(locationName);
    }
    function UnloadingOnSuccess(data)
    {
        if (data.Status == 1 || data.Status == 2)
        {
            $('#DivMsg').html(data.Message);
            setTimeout(function () {
                $('#DivMsg').html('');
                LoadPage();

            }, 5000);


        }
        else {
            $('#DivMsgErr').html(data.Message);
        }
    }
    function UnloadingOnFailure() {

    }
    function FillBalancedUnits(GodownId) {
        $('#BalancedUnits_' + GodownId).val(parseInt(Number($('#Units_' + GodownId).text()) - Number($('#UnloadedUnits_' + GodownId).val())));
    }
    function FillBalancedWeights(GodownId) {
        debugger;
        $('#BalancedWeights_' + GodownId).val(Number(parseFloat(Number($('#Weight_' + GodownId).text()) - Number($('#UnloadedWeights_' + GodownId).val()))).toFixed(2));
    }
    function LoadPage() {
        $('#DivBody').load('/Bond/DSRBond/CreateWOUnloading');
    }
    $(function () {
        $('#HandlingChargeManual').rules("remove", "required");
        $('#HandlingChargeMechanical').rules("remove", "required");
        $('#DepositNo').focus();
    });
    $('#BtnSave').on('click', function () {

        var Manual = 0;
        var Mechanical = 0;
        if ($('#HandlingChargeManual').val() == "") {
            Manual = 0;
        }
        else {
            Manual = $('#HandlingChargeManual').val();
            $('[data-valmsg-for="HandlingChargeMechanical"]').html('');
        }
        if ($('#HandlingChargeMechanical').val() == "") {
            Mechanical = 0;
        }
        else {
            Mechanical = $('#HandlingChargeMechanical').val();
            $('[data-valmsg-for="HandlingChargeManual"]').html('');
        }
        if ((Number(Manual) + Number(Mechanical)) <= 0) {
            alert('Manual or Mechanical Handling Charge will be greater than zero');
            return false;
        }
        var flag = 0;
        $.each(ArrayLst, function (i, item) {
            var gId = item.GodownId;
            if ($('#LocationId_' + gId).val() == "") {
                flag = 1;
            }
        });
        if (flag == 1) {
            $('#DivGodownWiseEntryTblMsg').html('Please Add Location Name');
            return false;
        }
    });

    function SaveGodownWiseDtl() {
        debugger;
        $('#DivGodownWiseEntryTblMsg').html('');
        if ($('#SpaceUnreserved').val() == '') {
            $('[data-valmsg-for="SpaceUnreserved"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#SpaceReserved').val() == '') {
            $('[data-valmsg-for="SpaceReserved"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#CHAName').val() == '') {
            $('#DivGodownWiseEntryTblMsg').html('Please Select CHA Name To Add Details');
            return false;
        }
        if ($('#ImporterName').val() == '') {
            $('#DivGodownWiseEntryTblMsg').html('Please Select Importer Name To Add Details');
            return false;
        }
        if ($('#GodownName').val() != "") {
            debugger;
            var GodownEntryDtl = {
                "ResvSpaceId": $('#ResvSpaceId').val(),
                "GodownId": $('#GodownId').val(),
                "GodownName": $('#GodownName').val(),
                "SpaceUnreserved": $('#SpaceUnreserved').val(),
                "SpaceReserved": $('#SpaceReserved').val(),
            }
        };
        ArrayLst.push(GodownEntryDtl);

        $('#BtnAddGodownWiseEntry').prop("disabled", true);
        $('#btnReset').prop("disabled", false);
        ResetGodownDet();
        GenerateGodownWiseEntryTable();

    }

    function GenerateGodownWiseEntryTable() {
        debugger;
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        $("#SpaceReq").val('');
        $("#SpaceReqReserved").val('');
        var Html = '';
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                Html += '<tr>';
                //Html += '<td width="2px" class="text-center">' + (i + 1) + '</td>';
                Html += '<td width="30px" class="txt_wrp">' + item.GodownName + '</td>';
                Html += '<td width="6%" class="txt_wrp">' + item.SpaceUnreserved + '<input type="hidden" value="' + item.SpaceUnreserved + '" id="SpaceUnreserved_' + item.GodownId + '"/></td>';
                Html += '<td width="20%" class="txt_wrp">' + item.SpaceReserved + '</td>';
                Html += '<td width="20%" class="txt_wrp" id="Units_' + item.GodownId + '">' + item.Units + '</td>';
                Html += '<td width="20%" class="txt_wrp" id="Weight_' + item.GodownId + '">' + item.Weight + '</td>';
                Html += '<td width="10%" class="rel_pos"><input type="hidden" id="LocationId_' + item.GodownId + '"/><input type="text" id="LocationName_' + item.GodownId + '" class="form-control input-sm" name="LocationName" readonly />';
                Html += '<span class="search" onclick="GetGodownWiseLocation(' + item.GodownId + ')"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#LocationModal"></i></span></td>';
                Html += '<td><input type="text" class="form-control input-sm" id="UnloadedUnits_' + item.GodownId + '"  onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedUnits(' + item.GodownId + ')" /></td>';
                Html += '<td><input type="text" class="form-control input-sm" id="BalancedUnits_' + item.GodownId + '" readonly /></td>';
                Html += '<td><input type="text" class="form-control input-sm" id="UnloadedWeights_' + item.GodownId + '"  onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedWeights(' + item.GodownId + ')" /></td>';
                Html += '<td><input type="text" class="form-control input-sm" id="BalancedWeights_' + item.GodownId + '" readonly /></td>';
                Html += '</tr>';
            });
            $('#TblGodownWiseEntryDet>tbody').html(Html);
            $('#TblGodownWiseEntryDet').show();
           // Sum();
        }
    }
    function ResetGodownDet() {
        debugger;
        $('#GodownId').val('');
        $('#GodownName').val('');
        $('#SpaceUnreserved').val('');
        $('#SpaceReserved').val('');

        $('#GodownName').prop("disabled", false);
        $('#SpaceUnreserved').prop('readonly', false);
        $('#SpaceReserved').prop('readonly', false);
        $('#BtnAddGodownWiseEntry').prop("disabled", true);

    }

    function EditGodownWiseEntry(Index) {
        $('#ResvSpaceId').val(ArrayLst[Index].ResvSpaceId);
        $('#GodownId').val(ArrayLst[Index].GodownId);
        $('#GodownName').val(ArrayLst[Index].GodownName);
        $('#SpaceUnreserved').val(ArrayLst[Index].SpaceUnreserved);
        $('#SpaceReserved').val(ArrayLst[Index].SpaceReserved);
        $('#BtnAddGodownWiseEntry').prop("disabled", false);
        ArrayLst.splice(Index, 1);
        GenerateGodownWiseEntryTable();
    }

    function Sum() {
        debugger;
        var TotalSpUnreserved = 0;
        var TotalSpReserved = 0;
        $("#SpaceReq").val('');
        $("#SpaceReqReserved").val('');
        for (var i = 0; i < ArrayLst.length; i++) {
            TotalSpUnreserved += ArrayLst[i].SpaceUnreserved << 0;
            TotalSpReserved += ArrayLst[i].SpaceReserved << 0;
        }
        $("#SpaceReq").val(TotalSpUnreserved);
        $("#SpaceReqReserved").val(TotalSpReserved);
    }
    $('#BtnSave').on('click', function () {
        debugger;
        if ($('#CHAName').val() != '') {

            if (ArrayLst.length != 0) {
                ArrayLst2=[];
                $.each(ArrayLst, function (i, item) {
                    var GodownEntryDtl = {
                        "UnloadedUnit": $('#UnloadedUnits_' + item.GodownId).val(),
                        "BalancedUnit": $('#BalancedUnits_' + item.GodownId).val(),
                        "UnloadedWeight": $('#UnloadedWeights_' + item.GodownId).val(),
                        "BalancedWeight": $('#BalancedWeights_' + item.GodownId).val(),
                        "LocationId": $('#LocationId_' + item.GodownId).val(),
                        "LocationName": $('#LocationName_' + item.GodownId).val(),
                        "SpaceUnreserved": $('#SpaceUnreserved_' + item.GodownId).val(),
                        "GodownId": item.GodownId,
                    }
                    ArrayLst2.push(GodownEntryDtl);
                    $('#LocationId').val(0);
                    $('#LocationName').val('Test');
                    $('#GodownId').val(0);
                    $('#GodownName').val('Test');
                });

                $('#GodownWiseLocXml').val(JSON.stringify(ArrayLst2));
                SumOfGodownDetails();
                return true;
            } else {
                $('#DivGodownWiseEntryTblMsg').html('Please Add The Above Records');
                return false;
            }
        }
    });
    function GetGodownWiseLocation(GodownId) {
        debugger;
        $.ajax({
            url: '/Bond/DSRBond/GetGodownWiseLocation',
            type: 'GET',
            data: { GodownId: GodownId },
            dataType: 'JSON',
            success: function (data) {
                debugger;
                var html = '';
                $.each(data.Data.lstGodown, function (i, item) {

                    html = html + '<div class="col-md-4"><div class="boolean-container"><input type="checkbox" onclick="CheckBoxChange(' + GodownId + ')" id="g-' + item.LocationId + '"/><label for="g-' + item.LocationId + '">' + item.LocationName + '<i class="square" style="margin-left:10px;"></i></label></div></div>';
                });
                $('#lstGodown').html(html);
            }
        });
    }
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function SumOfGodownDetails() {
        debugger;
        var TotalUnloadedUnits = 0;
        var TotalBalancedUnits = 0;
        var TotalUnloadedWeights = 0;
        var TotalBalancedWeights = 0;

        $("#UnloadedUnits").val('');
        $("#BalancedUnits").val('');
        $("#UnloadedWeights").val('');
        $("#BalancedWeights").val('');

        if (ArrayLst2.length != 0) {
            for (var i = 0; i < ArrayLst2.length; i++) {
                TotalUnloadedUnits += ArrayLst2[i].UnloadedUnit << 0;
                TotalBalancedUnits += ArrayLst2[i].BalancedUnit << 0;
                TotalUnloadedWeights += ArrayLst2[i].UnloadedWeight << 0;
                TotalBalancedWeights += ArrayLst2[i].BalancedWeight << 0;
            }
        }
        $("#UnloadedUnits").val(TotalUnloadedUnits);
        $("#BalancedUnits").val(TotalBalancedUnits);
        $("#UnloadedWeights").val(TotalUnloadedWeights);
        $("#BalancedWeights").val(TotalBalancedWeights);
    }
</script>

