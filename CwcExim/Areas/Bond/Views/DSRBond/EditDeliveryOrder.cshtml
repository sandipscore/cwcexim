@model CwcExim.Areas.Bond.Models.DSRDeliveryOrder
<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            @using (Ajax.BeginForm("AddEditDeliveryOrder", "DSRBond", new AjaxOptions { Confirm = "Are you sure you want to Save?", HttpMethod = "POST", OnBegin = "$('#BtnSaveDelvOrder').prop('disabled', true);", OnSuccess = "DeliveryOnSuccess", OnFailure = "DeliveryOnFailure" }))
            {
                <div id="DivBondApp">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Edit Delivery Order</h4>
                        </div>
                    </div>
                    @Html.Hidden("GodownId")
                    @Html.Hidden("DepositAppId")
                    @Html.Hidden("DeliveryOrderXml")
                    @Html.Hidden("GodownWiseStockXml")

                    @Html.HiddenFor(m => m.SpaceAppId)
                    @Html.HiddenFor(m => m.CHAId)
                    @Html.HiddenFor(m => m.DeliveryOrderId)
                    @Html.Hidden("DeliveryOrderDtlId")
                    @Html.HiddenFor(m => m.TotalValue)
                    @Html.HiddenFor(m => m.TotalDuty)
                    @Html.HiddenFor(m => m.TotalUnits)
                    @Html.HiddenFor(m => m.GodownWiseLocXml)
                    @Html.AntiForgeryToken()
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Delivery Order No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DeliveryOrderNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DeliveryOrderNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Delivery Order Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DeliveryOrderDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DeliveryOrderDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Bond Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Importer, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.Importer, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Last Delivery Date:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.LastDeliveryDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div id="DivDeliveryOrderDetails" class="Head_h5">
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Deposit No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBox("DepositNo", "", new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessage("DepositNo", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                    <label>Deposit Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("DepositDate", "", new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessage("DepositDate")
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>WR No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("WRNo", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>WR Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("WRDate", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Ex-BOE No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ExBoeNo", "", new { @class = "form-control input-sm" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Ex-BOE Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("ExBoeDate", "", new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <div style="margin-top:20px; margin-bottom:20px;">

                            <table class="table table-striped table-bordered dataTable slim_tble" id="TblGodownWiseEntryDet" style="width:100%;">
                                <thead>
                                    <tr>
                                        <th rowspan="2" width="10%" class="text-center">@Html.DisplayName("Godown Name")</th>
                                        <th rowspan="2" width="7%" class="text-center"><span class="ReQSimbol">*</span> @Html.DisplayName("Units")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Closing Units")</th>
                                        <th rowspan="2" width="7%" class="text-center"><span class="ReQSimbol">*</span> @Html.DisplayName("Weight")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Closing Weight")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Area")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Closing Area")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Value")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Closing Value")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Duty")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Closing Duty")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Reserved Area")</th>
                                        <th rowspan="2" width="7%" class="text-center">@Html.DisplayName("Closing Reserved Area")</th>
                                    </tr>
                                </thead>
                                <tbody align="center"></tbody>
                            </table>
                        </div>
                        <div id="DivGodownWiseEntryTblMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>

                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Units:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Units", "", new { @class = "form-control input-sm", @onchange = "FillBalancedUnits()", @onkeypress = "return AllowOnlyInteger(event)" })
                                    @Html.ValidationMessage("Units", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Units:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingUnits", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Area:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBox("Areas", "", new { @class = "form-control input-sm", @onchange = "FillBalancedAreas()", @onkeypress = "return AllowOnlyInteger(event)" })
                                    @*@Html.ValidationMessage("Areas", "", new { @class = "Error_Msg" })*@
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Area:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingAreas", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Weight:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Weight", "", new { @class = "form-control input-sm", @onchange = "FillBalancedWeights()", @onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" })
                                    @Html.ValidationMessage("Weight", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Weight:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingWeight", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Value:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Value", "", new { @class = "form-control input-sm", @onchange = "FillBalancedValue()", maxlength = "11", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("Value", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Value:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingValue", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Duty:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Duty", "", new { @class = "form-control input-sm", @onchange = "FillBalancedDuty()", @onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" })
                                    @Html.ValidationMessage("Duty", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Duty:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingDuty", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Delivery Manual Weight(QTL) Handling :</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("DeliveryHandlingChrManual", "", new { @class = "form-control input-sm" })
                                    @Html.ValidationMessage("DeliveryHandlingChrManual", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-3 col_cus_offset_2 col_cus_3 col-md-2">
                                    <label>Delivery Mechanical Weight(QTL) Handling :</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("DeliveryHandlingChrMechanical", "", new { @class = "form-control input-sm" })
                                    @Html.ValidationMessage("DeliveryHandlingChrMechanical", "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="button" id="BtnAddDeliveryOrder" class="btn log_Btn_sm" value="Add" onclick="SaveDeliveryOrderDtl()" disabled />
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Reset" id="ResetDeliveryOrderDet" onclick="ResetDeliveryOrderDet()" />
                            </div>
                        </div>
                        <div id="DivDeliveryOrderTblErrMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                        <table class="table table-striped table-bordered dataTable" id="TblDeliveryOrderDtl" style="width:100%;">
                            <thead>
                                <tr>
                                    <th class="text-center">@Html.DisplayName("SL No")</th>
                                    <th>@Html.DisplayName("Deposit No")</th>
                                    <th>@Html.DisplayName("Deposit Date")</th>
                                    <th>@Html.DisplayName("Edit")</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSaveDelvOrder" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Cancel" onclick="LoadDeliveryOrder()" />
                        </div>
                    </div>
                    <div id="DivDeliveryMsg" class="logSuccMsg" style="background-color:transparent"></div>
                    <div id="DivDeliveryErrMsg" class="logErrMsg SignUp_space_bottom2" style="background-color:transparent"></div>
                </div>
            }
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var ArrayLst = [];
    var ArrayLst2 = [];
    var ClosingWeight = 0;
    var ClosingUnits = 0;
    var ClosingAreas = 0;
    var UnloadedUnits = 0;
    var TotalValue =0;
    var TotalDuty = 0;
    var ArrayOfDeliveryOrder = [];
    $('#DeliveryOrderDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='DeliveryOrderDate']").html('');
        }
    });
    $('#ExBoeDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ExBoeDate']").html('');
        }
    });


    $(function () {
        ArrayOfDeliveryOrder=@Html.Raw(Json.Encode(Model.LstDeliveryOrderhdb));
        GenerateDeliveryOrderTable();
        ArrayLst=@Html.Raw(Json.Encode(Model.lstGodownWiseDtl));
        LoadArrayLstDtl();
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        @*ClosingWeight = (Number(@Model.ClosingWeight) + Number(@Model.Weight)).toFixed(3);
        ClosingUnits = Number(@Model.ClosingUnits) + Number(@Model.Units);*@
        $('#DeliveryHandlingChrManual').rules("remove", "required");
        $('#DeliveryHandlingChrMechanical').rules("remove", "required");
        $('#DeliveryOrderNo').focus();
    });
    function LoadArrayLstDtl() {
        debugger;
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                var GodownEntryDtl2 = {
                    "Units": item.Units,
                    "ClosingUnits": item.ClosingUnits,
                    "Weights": item.Weights,
                    "ClosingWeight": item.ClosingWeight,
                    "Area": item.Area,
                    "ClosingArea": item.ClosingArea,
                    "ReservedArea": item.ReservedArea,
                    "ClosingReservedArea": item.ClosingReservedArea,
                    "Value": item.Value,
                    "ClosingValue": item.ClosingValue,
                    "Duty": item.Duty,
                    "ClosingDuty": item.ClosingDuty,
                    "GodownId": item.GodownId,
                    "GodownName": item.GodownName,
                    "LocationId": item.LocationId,
                    "LocationName": item.LocationName,
                    "DepositNo":item.DepositNo,
                    "ReservedUpto": $('#hndReservedUpto_' + item.GodownId).val()
                }
                ArrayLst2.push(GodownEntryDtl2);
            });
        }

    }




    function SaveDeliveryOrderDtl() {
        debugger;
        var Manual = 0;
        var Mechanical = 0;
        if ($('#DeliveryHandlingChrManual').val() == "") {
            Manual = 0;
            $('#DeliveryHandlingChrManual').val('0');
        }
        else {
            Manual = $('#DeliveryHandlingChrManual').val();
        }
        if ($('#DeliveryHandlingChrMechanical').val() == "") {
            Mechanical = 0;
            $('#DeliveryHandlingChrMechanical').val('0')
        }
        else {
            Mechanical = $('#DeliveryHandlingChrMechanical').val();
        }
        if ((Number(Manual) + Number(Mechanical)) <= 0) {
            alert('Manual or Mechanical Delivery Handling Charge will be greater than zero');
            return false;
        }

        //if ($('#Units').val() == ''|| $('#Units').val() == 0) {
        //    $('[data-valmsg-for="Units"]').html('<span>Fill Out This Field</span>');
        //    return false;
        //}
        //if ($('#Weight').val() == ''|| $('#Weight').val() == 0) {
        //    $('[data-valmsg-for="Weight"]').html('<span>Fill Out This Field</span>');
        //    return false;
        //}
        //if ($('#Areas').val() == ''|| $('#Areas').val() == 0) {
        //    //$('[data-valmsg-for="Areas"]').html('<span>Fill Out This Field</span>');
        //    //return false;
        //    $('#Areas').val('0');
        //}
        //if (Number($('#Units').val()) > Number(ClosingUnits)) {
        //    alert('Units Should Be Less Than Closing Units');
        //    //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
        //    return false;
        //}
        //if (Number($('#Weight').val()) > Number(ClosingWeight)) {
        //    alert('Weight Should Be Less Than Closing Weight');
        //    // $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
        //    return false;
        //}
        //if (Number($('#Areas').val()) > Number(ClosingAreas)) {
        //    alert('Area Should Be Less Than Closing Area');
        //    // $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
        //    return false;
        //}
        //if (Number($('#Value').val()) > Number($('#TotalValue').val())) {
        //    alert('Value Should Be Less Than Closing Value');
        //    return false;
        //}
        //if (Number($('#Duty').val()) > Number($('#TotalDuty').val())) {
        //    alert('Duty Should Be Less Than Closing Duty');
        //    return false;
        //}
        $('#DivDeliveryOrderTblErrMsg').html('');

        var flag = 0;
        var count = 0;
        $.each(ArrayLst, function (i, item) {
            if ($('#Units_' + item.GodownId).val() == "" || $('#Units_' + item.GodownId).val() == "0") {
                flag = 1;
            }
            else {
                count = 1;
            }
        });
        if (count == 0) {
            $('#DivGodownWiseEntryTblMsg').html('Please Add Units');
            return false;
        } else {
            $('#DivGodownWiseEntryTblMsg').html('');
        }

        var flag2 = 0;
        var count2 = 0;
        $.each(ArrayLst, function (i, item) {
            if ($('#Weights_' + item.GodownId).val() == "" || $('#Weights_' + item.GodownId).val() == "0") {
                flag2 = 1;
            }
            else {
                count2 = 1;
            }
        });
        if (count2 == 0) {
            $('#DivGodownWiseEntryTblMsg').html('Please Add Weights');
            return false;
        } else {
            $('#DivGodownWiseEntryTblMsg').html('');
        }

        if ($('#DepositNo').val() != "") {
            var DeliveryOrderDtl = {
                "DeliveryOrderDtlId": $('#DeliveryOrderDtlId').val(),
                "DepositNo": $('#DepositNo').val(),
                "DepositAppId": $('#DepositAppId').val(),
                "DepositDate": $('#DepositDate').val(),
                "WRNo": $('#WRNo').val(),
                "WRDate": $('#WRDate').val(),
                "Units": $('#Units').val() == "" ? 0 : $('#Units').val(),
                "Weight": $('#Weight').val() == "" ? 0 : $('#Weight').val(),
                "ClosingUnits": $('#ClosingUnits').val(),
                "ClosingWeight": $('#ClosingWeight').val(),
                "Areas":$("#Areas").val(),
                "ReservedArea": 0,
                "ClosingAreas": $('#ClosingAreas').val(),
                "ClosingReservedArea": 0,
                "Value": $('#Value').val() == "" ? 0 : $('#Value').val(),
                "Duty": $('#Duty').val() == "" ? 0 : $('#Duty').val(),
                "ClosingValue": $('#ClosingValue').val(),
                "ClosingDuty": $('#ClosingDuty').val(),
                "GodownId": $('#GodownId').val(),
                "ExBoeNo": $('#ExBoeNo').val(),
                "ExBoeDate": $('#ExBoeDate').val(),
                "DeliveryHandlingChrManual": $('#DeliveryHandlingChrManual').val(),
                "DeliveryHandlingChrMechanical": $('#DeliveryHandlingChrMechanical').val(),
            }
            if (ArrayLst2.length != 0) {
                $.each(ArrayLst2, function (i, item) {
                    if (item.DepositNo==$('#DepositNo').val()) {
                        item.Units= $('#Units_' + item.GodownId).val()== "" ? 0 : $('#Units_' + item.GodownId).val(),
                        item.ClosingUnits= $('#ClosingUnits_' + item.GodownId).val()== "" ? 0 : $('#ClosingUnits_' + item.GodownId).val(),
                        item.Weights= $('#Weights_' + item.GodownId).val()== "" ? 0 : $('#Weights_' + item.GodownId).val(),
                        item.ClosingWeight= $('#ClosingWeight_' + item.GodownId).val()== "" ? 0 : $('#ClosingWeight_' + item.GodownId).val(),
                        item.Area= $('#Area_' + item.GodownId).val()== "" ? 0 : $('#Area_' + item.GodownId).val(),
                        item.ClosingArea= $('#ClosingArea_' + item.GodownId).val() == "" ? 0 : $('#ClosingArea_' + item.GodownId).val(),
                        item.ReservedArea= $('#ReservedArea_' + item.GodownId).val() == "" ? 0 : $('#ReservedArea_' + item.GodownId).val(),
                        item.ClosingReservedArea= $('#ClosingReservedArea_' + item.GodownId).val() == "" ? 0 : $('#ClosingReservedArea_' + item.GodownId).val(),
                        item.Value= $('#Value_' + item.GodownId).val() == "" ? 0 : $('#Value_' + item.GodownId).val(),
                        item.ClosingValue= $('#ClosingValue_' + item.GodownId).val() == "" ? 0 : $('#ClosingValue_' + item.GodownId).val(),
                        item.Duty= $('#Duty_' + item.GodownId).val() == "" ? 0 : $('#Duty_' + item.GodownId).val(),
                        item.ClosingDuty= $('#ClosingDuty_' + item.GodownId).val() == "" ? 0 : $('#ClosingDuty_' + item.GodownId).val(),
                        item.GodownId= item.GodownId,
                        item.GodownName= item.GodownName,
                        item.LocationName= item.LocationName,
                        item.LocationId= item.LocationId,
                        item.DepositNo= $('#DepositNo').val(),
                        item.ReservedUpto= $('#hndReservedUpto_' + item.GodownId).val()
                    }
                    //var GodownEntryDtl = {
                    //    "Units": $('#Units_' + item.GodownId).val()== "" ? 0 : $('#Units_' + item.GodownId).val(),
                    //    "ClosingUnits": $('#ClosingUnits_' + item.GodownId).val()== "" ? 0 : $('#ClosingUnits_' + item.GodownId).val(),
                    //    "Weights": $('#Weights_' + item.GodownId).val()== "" ? 0 : $('#Weights_' + item.GodownId).val(),
                    //    "ClosingWeight": $('#ClosingWeight_' + item.GodownId).val()== "" ? 0 : $('#ClosingWeight_' + item.GodownId).val(),
                    //    "Area": $('#Area_' + item.GodownId).val()== "" ? 0 : $('#Area_' + item.GodownId).val(),
                    //    "ClosingArea": $('#ClosingArea_' + item.GodownId).val() == "" ? 0 : $('#ClosingArea_' + item.GodownId).val(),
                    //    "Value": $('#Value_' + item.GodownId).val() == "" ? 0 : $('#Value_' + item.GodownId).val(),
                    //    "ClosingValue": $('#ClosingValue_' + item.GodownId).val() == "" ? 0 : $('#ClosingValue_' + item.GodownId).val(),
                    //    "Duty": $('#Duty_' + item.GodownId).val() == "" ? 0 : $('#Duty_' + item.GodownId).val(),
                    //    "ClosingDuty": $('#ClosingDuty_' + item.GodownId).val() == "" ? 0 : $('#ClosingDuty_' + item.GodownId).val(),
                    //    "GodownId": item.GodownId,
                    //    "GodownName": item.GodownName,
                    //    "DepositNo": $('#DepositNo').val(),
                    //    "ReservedUpto": $('#hndReservedUpto_' + item.GodownId).val()
                    //}
                    //ArrayLst2.push(GodownEntryDtl);
                });
            }

            ArrayOfDeliveryOrder.push(DeliveryOrderDtl);
            SumOfGodownDetails();
            $('#DepositList #' + $('#DepositNo').val()).remove();
            ResetDeliveryOrderDet();
            GenerateDeliveryOrderTable();
            $('#BtnAddDeliveryOrder').prop("disabled", true);
            $('#TblGodownWiseEntryDet').hide();
            $('#TblGodownWiseEntryDet>tbody').html('');
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Select A Deposit No In Order To Add Details');
            // $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
        }
    }


    function SumOfGodownDetails() {
        debugger;
        var TotalUnits = 0;
        var TotalClosingUnits = 0;
        var TotalWeights = 0;
        var TotalClosingWeights = 0;
        var TotalArea = 0;
        var TotalClosingArea = 0;
        var TotalValue = 0;
        var TotalClosingValue = 0;
        var TotalDuty = 0;
        var TotalClosingDuty = 0;
        var TotalReservedArea = 0;
        var TotalClosingReservedArea = 0;

        var depositNo = $('#DepositNo').val();
        if (ArrayLst2.length != 0) {
            for (var i = 0; i < ArrayLst2.length; i++) {
                if (ArrayLst2[i].DepositNo == depositNo) {
                    TotalUnits += ArrayLst2[i].Units << 0;
                    TotalClosingUnits += ArrayLst2[i].ClosingUnits << 0;
                    TotalWeights += ArrayLst2[i].Weights << 0;
                    TotalClosingWeights += ArrayLst2[i].ClosingWeight << 0;
                    TotalArea += ArrayLst2[i].Area << 0;
                    TotalClosingArea += ArrayLst2[i].ClosingArea << 0;
                    TotalReservedArea += ArrayLst2[i].ReservedArea << 0;
                    TotalClosingReservedArea += ArrayLst2[i].ClosingReservedArea << 0;
                    TotalValue += ArrayLst2[i].Value << 0;
                    TotalClosingValue += ArrayLst2[i].ClosingValue << 0;
                    TotalDuty += ArrayLst2[i].Duty << 0;
                    TotalClosingDuty += ArrayLst2[i].ClosingDuty << 0;
                }
            }
        }

        if (ArrayOfDeliveryOrder.length != 0) {
            for (var i = 0; i < ArrayOfDeliveryOrder.length; i++) {
                if (ArrayOfDeliveryOrder[i].DepositNo == depositNo) {
                    ArrayOfDeliveryOrder[i].Units=TotalUnits,
                    ArrayOfDeliveryOrder[i].ClosingUnits = TotalClosingUnits,
                    ArrayOfDeliveryOrder[i].Weight = TotalWeights,
                    ArrayOfDeliveryOrder[i].ClosingWeight = TotalClosingWeights,
                    ArrayOfDeliveryOrder[i].Areas = TotalArea,
                    ArrayOfDeliveryOrder[i].ClosingAreas = TotalClosingArea,
                    ArrayOfDeliveryOrder[i].ReservedArea = TotalReservedArea,
                    ArrayOfDeliveryOrder[i].ClosingReservedArea = TotalClosingReservedArea,
                    ArrayOfDeliveryOrder[i].Value = TotalValue,
                    ArrayOfDeliveryOrder[i].ClosingValue = TotalClosingValue,
                    ArrayOfDeliveryOrder[i].Duty = TotalDuty,
                    ArrayOfDeliveryOrder[i].ClosingDuty = TotalClosingDuty
                };
            };
        };
    }


    function ResetDeliveryOrderDet() {

        $('#DivDeliveryOrderDetails').find('input:text,textarea').val('');
        $('#DepositAppId').val('');
        $('#GodownId').val('');
        $('#SearchDepositNo').css("display", "block");
        $('#TblGodownWiseEntryDet>tbody').html('');
    }

    function GenerateDeliveryOrderTable() {

        $('#TblDeliveryOrderDtl').hide();
        var Html = '';
        if (ArrayOfDeliveryOrder.length != 0) {
            $.each(ArrayOfDeliveryOrder, function (i, item) {

                Html += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + item.DepositNo + '</td><td>' + item.DepositDate + '</td><td class="text-center"><a href="#" onclick="EditDeliveryOrderDtl(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td></tr>';
            });
            $('#TblDeliveryOrderDtl>tbody').html(Html);
            $('#TblDeliveryOrderDtl').show();
        }
    }

    function EditDeliveryOrderDtl(Index) {
        debugger;
        if ($('#BtnAddDeliveryOrder').prop("disabled") == true) {
            $('#SearchDepositNo').css("display", "block");
            $('#BtnAddDeliveryOrder').prop("disabled", false);
            $('#DeliveryOrderDtlId').val(ArrayOfDeliveryOrder[Index].DeliveryOrderDtlId);
            $('#DepositNo').val(ArrayOfDeliveryOrder[Index].DepositNo);
            $('#DepositAppId').val(ArrayOfDeliveryOrder[Index].DepositAppId);
            $('#DepositDate').val(ArrayOfDeliveryOrder[Index].DepositDate);
            $('#WRNo').val(ArrayOfDeliveryOrder[Index].WRNo);
            $('#WRDate').val(ArrayOfDeliveryOrder[Index].WRDate);
            $('#Units').val(ArrayOfDeliveryOrder[Index].Units);
            $('#ClosingUnits').val(ArrayOfDeliveryOrder[Index].ClosingUnits);
            $('#ClosingWeight').val(ArrayOfDeliveryOrder[Index].ClosingWeight);
            $('#Weight').val(ArrayOfDeliveryOrder[Index].Weight);
            $('#Value').val(ArrayOfDeliveryOrder[Index].Value);
            $('#Duty').val(ArrayOfDeliveryOrder[Index].Duty);
            $('#ClosingValue').val(ArrayOfDeliveryOrder[Index].ClosingValue);
            $('#ClosingDuty').val(ArrayOfDeliveryOrder[Index].ClosingDuty);
            $('#GodownId').val(ArrayOfDeliveryOrder[Index].GodownId);
            $('#Areas').val(ArrayOfDeliveryOrder[Index].Areas);
            $('#ClosingAreas').val(ArrayOfDeliveryOrder[Index].ClosingAreas);
            $('#ExBoeNo').val(ArrayOfDeliveryOrder[Index].ExBoeNo);
            $('#DeliveryHandlingChrManual').val(ArrayOfDeliveryOrder[Index].DeliveryHandlingChrManual);
            $('#DeliveryHandlingChrMechanical').val(ArrayOfDeliveryOrder[Index].DeliveryHandlingChrMechanical);
            if (ArrayOfDeliveryOrder[Index].ExBoeDate != null && ArrayOfDeliveryOrder[Index].ExBoeDate != '' && ArrayOfDeliveryOrder[Index].ExBoeDate != '00/00/0000') {
                $('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            }
            //$('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            ClosingUnits = Number(ArrayOfDeliveryOrder[Index].ClosingUnits) + Number(ArrayOfDeliveryOrder[Index].Units);
            ClosingWeight = Number(ArrayOfDeliveryOrder[Index].ClosingWeight) + Number(ArrayOfDeliveryOrder[Index].Weight);
            ClosingAreas = Number(ArrayOfDeliveryOrder[Index].ClosingAreas) + Number(ArrayOfDeliveryOrder[Index].Areas);
            GenerateGodownWiseEntryTable(ArrayOfDeliveryOrder[Index].DepositNo);

            var depositNo2 = ArrayOfDeliveryOrder[Index].DepositNo;
            if (ArrayLst.length != 0) {
                $.each(ArrayLst, function (i, item) {
                    if (item.DepositNo == depositNo2) {
                        $('#hndClosingUnits_' + item.GodownId).val(item.HndClosingUnits);
                        $('#hndClosingWeight_' + item.GodownId).val(item.HndClosingWeight);
                        $('#hndClosingArea_' + item.GodownId).val(item.HndClosingArea);
                        $('#hndClosingReservedArea_' + item.GodownId).val(item.HndClosingReservedArea);
                        $('#hndClosingValue_' + item.GodownId).val(item.HndClosingValue);
                        $('#hndClosingDuty_' + item.GodownId).val(item.HndClosingDuty);
                    }
                });
            }
            if (ArrayLst2.length != 0) {
                $.each(ArrayLst2, function (i, item) {
                    if (item.DepositNo == depositNo2) {
                        $('#ClosingUnits_' + item.GodownId).val(item.ClosingUnits);
                        $('#ClosingWeight_' + item.GodownId).val(item.ClosingWeight);
                        $('#ClosingArea_' + item.GodownId).val(item.ClosingArea);
                        $('#ClosingReservedArea_' + item.GodownId).val(item.ClosingReservedArea);
                        $('#Units_' + item.GodownId).val(item.Units);
                        $('#Weights_' + item.GodownId).val(item.Weights);
                        $('#Area_' + item.GodownId).val(item.Area);
                        $('#ReservedArea_' + item.GodownId).val(item.ReservedArea);
                        $('#Value_' + item.GodownId).val(item.Value);
                        $('#ClosingValue_' + item.GodownId).val(item.ClosingValue);
                        $('#Duty_' + item.GodownId).val(item.Duty);
                        $('#ClosingDuty_' + item.GodownId).val(item.ClosingDuty);
                        $('#hndReservedUpto_' + item.GodownId).val(item.ReservedUpto)

                    };
                });
            }

            ArrayOfDeliveryOrder.splice(Index, 1);
            // GenerateDeliveryOrderTable();
            $("#ResetDeliveryOrderDet").prop("disabled",true)
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
        }
    }

    function ViewDeliveryOrderDtlf(Index) {

        if ($('#BtnAddDeliveryOrder').prop("disabled") == true) {
            $('#BtnAddDeliveryOrder').prop("disabled", true);
            $('#SearchDepositNo').css("display", "none");
            $('#DeliveryOrderDtlId').val(ArrayOfDeliveryOrder[Index].DeliveryOrderDtlId);
            $('#DepositNo').val(ArrayOfDeliveryOrder[Index].DepositNo);
            $('#DepositAppId').val(ArrayOfDeliveryOrder[Index].DepositAppId);
            $('#DepositDate').val(ArrayOfDeliveryOrder[Index].DepositDate);
            $('#WRNo').val(ArrayOfDeliveryOrder[Index].WRNo);
            $('#WRDate').val(ArrayOfDeliveryOrder[Index].WRDate);
            $('#Units').val(ArrayOfDeliveryOrder[Index].Units);
            $('#ClosingUnits').val(ArrayOfDeliveryOrder[Index].ClosingUnits);
            $('#ClosingWeight').val(ArrayOfDeliveryOrder[Index].ClosingWeight);
            $('#Weight').val(ArrayOfDeliveryOrder[Index].Weight);
            $('#Value').val(ArrayOfDeliveryOrder[Index].Value);
            $('#Duty').val(ArrayOfDeliveryOrder[Index].Duty);
            $('#GodownId').val(ArrayOfDeliveryOrder[Index].GodownId);
            $('#Areas').val(ArrayOfDeliveryOrder[Index].Areas);
            $('#ClosingAreas').val(ArrayOfDeliveryOrder[Index].ClosingAreas);
            $('#ClosingValue').val(ArrayOfDeliveryOrder[Index].ClosingValue);
            $('#ClosingDuty').val(ArrayOfDeliveryOrder[Index].ClosingDuty);
            $('#ExBoeNo').val(ArrayOfDeliveryOrder[Index].ExBoeNo);
            $('#DeliveryHandlingChrManual').val(ArrayOfDeliveryOrder[Index].DeliveryHandlingChrManual);
            $('#DeliveryHandlingChrMechanical').val(ArrayOfDeliveryOrder[Index].DeliveryHandlingChrMechanical);
            //$('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            if (ArrayOfDeliveryOrder[Index].ExBoeDate != null && ArrayOfDeliveryOrder[Index].ExBoeDate != '' && ArrayOfDeliveryOrder[Index].ExBoeDate != '00/00/0000') {
                $('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            }
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
        }

    }



    function LoadDeliveryOrder() {
        $('#DivBody').load('/Bond/DSRBond/CreateDeliveryOrder');
    }
    function LoadDeliveryOrderApp() {
        $('#DivBody').load('/Bond/DSRBond/CreateDeliveryOrder');
    }
    function DeliveryOnSuccess(data) {
        if (data.Status == 2 || data.Status == 3) {
            $('#DivDeliveryMsg').html(data.Message);
            setTimeout(LoadDeliveryOrder,5000);
        }
        else {
            $('#DivDeliveryErrMsg').html(data.Message);
        }
    }
    function DeliveryOnFailure() {

    }
    function FillBalancedUnits() {

        $('[data-valmsg-for="Units"]').html('<span></span>');
        if (Number($('#Units').val()) > Number(ClosingUnits)) {
            alert('Units Should Be Less Than Closing Units');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            // $('[data-valmsg-for="Units"]').html('<span>Units Should Be Less Than Closing Units</span>');
            // return false;
        }
        else {
            TotalValue=$('#TotalValue').val();
            TotalDuty=$('#TotalDuty').val();
            UnloadedUnits=$('#TotalUnits').val();
            $('#ClosingUnits').val(parseInt(ClosingUnits - Number($('#Units').val())));
            $('#Value').val(Math.ceil(TotalValue * Number($('#Units').val()) / UnloadedUnits));
            $('#ClosingValue').val((TotalValue - Number(parseFloat(Number($('#Value').val())))).toFixed(3));
            $('#Duty').val(Math.ceil(TotalDuty * Number($('#Units').val()) / UnloadedUnits));
            $('#ClosingDuty').val((TotalDuty - Number(parseFloat(Number($('#Duty').val())))).toFixed(3));

        }

    }
    function FillBalancedWeights() {
        $('[data-valmsg-for="Weight"]').html('<span></span>');
        if (Number($('#Weight').val()) > Number(ClosingWeight)) {
            alert('Weight Should Be Less Than Closing Weight');
        }
        else {
            $('#ClosingWeight').val((ClosingWeight - Number(parseFloat(Number($('#Weight').val())))).toFixed(3));
        }

    }

    function FillBalancedAreas() {
        $('[data-valmsg-for="Areas"]').html('<span></span>');
        if (Number($('#Areas').val()) > Number(ClosingAreas)) {
            alert('Area Should Be Less Than Closing Area');
        }
        else {
            $('#ClosingAreas').val((ClosingAreas - Number(parseFloat(Number($('#Areas').val())))).toFixed(3));
        }

    }

    function FillBalancedValue() {
        $('[data-valmsg-for="Value"]').html('<span></span>');
        if (Number($('#Value').val()) > Number(TotalValue)) {
            alert('Value Should Be Less Than Closing Value');
            //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
            // return false;
        }
        else {
            $('#ClosingValue').val((TotalValue - Number(parseFloat(Number($('#Value').val())))).toFixed(3));
        }

    }

    function FillBalancedDuty() {
        $('[data-valmsg-for="Duty"]').html('<span></span>');
        if (Number($('#Duty').val()) > Number(TotalDuty)) {
            alert('Duty Should Be Less Than Closing Duty');
            //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
            // return false;
        }
        else {
            $('#ClosingDuty').val((TotalValue - Number(parseFloat(Number($('#Duty').val())))).toFixed(3));
        }

    }

    $('#BtnSaveDelvOrder').on("click", function () {
        $('#DivDeliveryOrderTblErrMsg').html('');
        var arrayListAll = [];
        if ($('#DepositNo').val() == "" && $('#TblDeliveryOrderDtl >tbody').html() != "") {
            if (ArrayOfDeliveryOrder.length != 0) {
                $('#DeliveryOrderXml').val(JSON.stringify(ArrayOfDeliveryOrder));
                $('#GodownWiseLocXml').val(JSON.stringify(ArrayLst2));
                arrayListAll = ArrayLst2;
                if (arrayListAll.length > 0) {
                    var arrayFinal = arrayListAll.filter(function (finaldata) {
                        return finaldata.Units > 0;
                    });

                    $('#GodownWiseStockXml').val(JSON.stringify(arrayFinal));
                }
                else {
                    $('#GodownWiseStockXml').val('');
                }   
            }
        }
        else if ($('#DepositNo').val() != "" && $('#BtnAddDeliveryOrder').prop("disabled") == true) {
            if (ArrayOfDeliveryOrder.length != 0) {
                $('#DeliveryOrderXml').val(JSON.stringify(ArrayOfDeliveryOrder));
                $('#GodownWiseLocXml').val(JSON.stringify(ArrayLst2));
            }
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
            return false;
        }
    });
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function GenerateGodownWiseEntryTable(depositNo2) {
        debugger;
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        $("#SpaceReq").val('');
        $("#SpaceReqReserved").val('');
        var Html = '';
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                if (item.DepositNo == depositNo2) {
                    Html += '<tr>';
                    Html += '<td width="30px" class="txt_wrp">' + item.GodownName + '</td>';
                    Html += '<td><input type="text" class="form-control input-sm" value="0" id="Units_' + item.GodownId + '" onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedUnits(' + item.GodownId + ')" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" id="ClosingUnits_' + item.GodownId + '" readonly /><input type="hidden" id="hndClosingUnits_' + item.GodownId + '" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" value="0" id="Weights_' + item.GodownId + '"onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedWeights(' + item.GodownId + ')" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" id="ClosingWeight_' + item.GodownId + '" readonly /><input type="hidden" id="hndClosingWeight_' + item.GodownId + '" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" value="0" id="Area_' + item.GodownId + '"onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedAreas(' + item.GodownId + ')" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" id="ClosingArea_' + item.GodownId + '" readonly /><input type="hidden" id="hndClosingArea_' + item.GodownId + '" /></td>';

                    Html += '<td><input type="text" class="form-control input-sm" value="0" id="Value_' + item.GodownId + '"onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedValue(' + item.GodownId + ')" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" id="ClosingValue_' + item.GodownId + '" readonly /><input type="hidden" id="hndClosingValue_' + item.GodownId + '" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" value="0" id="Duty_' + item.GodownId + '"onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedDuty(' + item.GodownId + ')" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" id="ClosingDuty_' + item.GodownId + '" readonly /><input type="hidden" id="hndClosingDuty_' + item.GodownId + '" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" value="0" id="ReservedArea_' + item.GodownId + '"onkeypress = "return AllowOnlyDecimal(event)" onkeyup="FillBalancedReservedArea(' + item.GodownId + ')" /></td>';
                    Html += '<td><input type="text" class="form-control input-sm" id="ClosingReservedArea_' + item.GodownId + '" readonly /><input type="hidden" id="hndClosingReservedArea_' + item.GodownId + '" /></td>';
                    Html += '</tr>';
                }
            });
            $('#TblGodownWiseEntryDet>tbody').html(Html);
            $('#TblGodownWiseEntryDet').show();

        }
    }
    function FillBalancedUnits(GodownId) {
        debugger;
        if (Number($('#Units_' + GodownId).val()) > Number($('#hndClosingUnits_' + GodownId).val())) {
            alert('Units Should Be Less Than Closing Units');
            $('#Units_' + GodownId).val(0);
            $('#ClosingUnits_' + GodownId).val(parseInt($('#hndClosingUnits_' + GodownId).val()));
        }
        else {
            $('#ClosingUnits_' + GodownId).val(Number($('#hndClosingUnits_' + GodownId).val()) - Number($('#Units_' + GodownId).val()));
            $('#Value_' + GodownId).val(Math.ceil(Number($('#hndClosingValue_' + GodownId).val()) * Number($('#Units_' + GodownId).val()) / Number($('#hndClosingUnits_' + GodownId).val())));
            $('#ClosingValue_' + GodownId).val((Number($('#hndClosingValue_' + GodownId).val()) - Number($('#Value_' + GodownId).val())));
            $('#Duty_' + GodownId).val(Math.ceil($('#hndClosingDuty_' + GodownId).val() * Number($('#Units_' + GodownId).val()) / $('#hndClosingUnits_' + GodownId).val()));
            $('#ClosingDuty_' + GodownId).val((Number($('#hndClosingDuty_' + GodownId).val()) - Number($('#Duty_' + GodownId).val())));

        }

    }

    function FillBalancedWeights(GodownId) {
        debugger;
        if (Number($('#Weights_' + GodownId).val()) > Number($('#hndClosingWeight_' + GodownId).val())) {
            alert('Weight Should Be Less Than Closing Weight');
            $('#Weights_' + GodownId).val(0);
            $('#ClosingWeight_' + GodownId).val(parseInt($('#hndClosingWeight_' + GodownId).val()));
        }
        else {
            $('#ClosingWeight_' + GodownId).val(parseInt(Number($('#hndClosingWeight_' + GodownId).val()) - Number($('#Weights_' + GodownId).val())));
        }

    }

    function FillBalancedAreas(GodownId) {
        debugger;
        if (Number($('#Area_' + GodownId).val()) > Number($('#hndClosingArea_' + GodownId).val())) {
            alert('Area Should Be Less Than Closing Area');
            $('#Area_' + GodownId).val(0);
            $('#ClosingArea_' + GodownId).val(parseInt($('#hndClosingArea_' + GodownId).val()));
        }
        else {
            $('#ClosingArea_' + GodownId).val(Number($('#hndClosingArea_' + GodownId).val()) - Number($('#Area_' + GodownId).val()));
        }

    }

    function FillBalancedValue(GodownId) {
        debugger;
        if (Number($('#Value_' + GodownId).val()) > Number($('#hndClosingValue_' + GodownId).val())) {
            alert('Value Should Be Less Than Closing Value');
            $('#Value_' + GodownId).val(0);
        }
        else {
            debugger;
            $('#ClosingValue_' + GodownId).val(Number($('#hndClosingValue_' + GodownId).val()) - Number($('#Value_' + GodownId).val()));
        }
        //var diffValue = Number($('#hndClosingValue_' + GodownId).val()) - Number($('#Value_' + GodownId).val());
        //if(parseFloat(diffValue)>0)
        //{
        //    $('#ClosingValue_' + GodownId).val(Number($('#hndClosingValue_' + GodownId).val()) - Number($('#Value_' + GodownId).val()));
        //}
        //else {
        //    $('#ClosingValue_' + GodownId).val('0.00');
        //}
    }

    function FillBalancedDuty(GodownId) {
        debugger;
        //$('[data-valmsg-for="Duty"]').html('<span></span>');
        //if (Number($('#Duty_' + GodownId).val()) > Number($('#hndClosingDuty_' + GodownId).val())) {
        //    alert('Duty Should Be Less Than Closing Duty');
        //    $('#Duty_' + GodownId).val(0);
        //}
        //else {
        //    debugger;
        //    $('#ClosingDuty_' + GodownId).val(Number($('#hndClosingDuty_' + GodownId).val()) - Number($('#Duty_' + GodownId).val()));
        //}
        var diffDuty = Number($('#hndClosingDuty_' + GodownId).val()) - Number($('#Duty_' + GodownId).val());

        if (parseFloat(diffDuty) > 0) {
            $('#ClosingDuty_' + GodownId).val(Number($('#hndClosingDuty_' + GodownId).val()) - Number($('#Duty_' + GodownId).val()));
        }
        else {
            $('#ClosingDuty_' + GodownId).val('0.00');
        }
    }

    function FillBalancedReservedArea(GodownId) {
        debugger;
        if (Number($('#ReservedArea_' + GodownId).val()) > Number($('#hndClosingReservedArea_' + GodownId).val())) {
            alert('Reserved Area Should Be Less Than Closing Reserved Area');
            $('#ReservedArea_' + GodownId).val(0);
            $('#ClosingReservedArea_' + GodownId).val(parseInt($('#hndClosingReservedArea_' + GodownId).val()));
        }
        else {
            $('#ClosingReservedArea_' + GodownId).val(Number($('#hndClosingReservedArea_' + GodownId).val()) - Number($('#ReservedArea_' + GodownId).val()));
        }

    }
</script>