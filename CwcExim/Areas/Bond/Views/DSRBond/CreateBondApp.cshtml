@model CwcExim.Areas.Bond.Models.DSRBondApp

<style>
    .encls_chk .boolean-container {
        width: auto;
        display: inline-block;
    }
</style>

<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            <div id="DivBondApp">
                @using (Ajax.BeginForm("AddEditBondApp", "DSRBond", new AjaxOptions
                {
                    Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "BondOnSuccess",
                    OnFailure = "BondOnFailure"
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.GodownWiseDtlXml)
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Application For Availability Of Space</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.ApplicationDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.ApplicationDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.ApplicationNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ApplicationNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.CHAId)
                                <span class="ReQSimbol">*</span>
                                @*@Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                                @if (Convert.ToBoolean(ViewData["cha"]) == false)
                                {
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>
                                }*@
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true, @onkeydown = "PopupActivate('ModalTrader','CHA');", @tabindex = 8 })
                                <span class="search" id="ModalCHASearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ModalTraderSearch('CHA')" data-target="#ModalTrader"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.ImporterName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.ImporterId)
                                <span class="ReQSimbol">*</span>
                                @*@Html.TextBoxFor(m => m.ImporterName, new { @class = "form-control input-sm", @readonly = true })
                                @if (Convert.ToBoolean(ViewData["importer"]) == false)
                                {
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ImporterModal"></i></span>
                                }*@
                                @Html.TextBoxFor(m => m.ImporterName, new { @class = "form-control input_sm", @readonly = true, @onkeydown = "PopupActivate('ModalTrader','IMP');", @tabindex = 7 })
                                <span class="search" id="ModalImporterSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="ModalTraderSearch('IMP')" data-target="#ModalTrader"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Importer License No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ImporterLicenseNo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">

                            </div>
                            <div class="col-md-2-5 ">

                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @*<label>BOL / AWB No:</label>*@
                                <label>BOL No.</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BOLAWBNo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                @*<label>BOL / AWB Date:</label>*@
                                <label>BOL Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.BolAwbDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>AWB No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.AWBNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.AWBNo)
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>AWB Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.AWBDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.BOENo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BOENo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                @Html.LabelFor(m => m.BOEDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.BOEDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.BOEDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>IGM No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.IGMNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.IGMNo)
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>IGM Date:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.IGMDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Commodity:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                <span class="ReQSimbol">*</span>
                                @Html.HiddenFor(m => m.CommodityId)
                                @Html.TextBoxFor(m => m.CommodityName, new { @class = "form-control input_sm", tabindex = 12, @readonly = true, onkeydown = "PopupActivate('CommodityModal')" })
                                <span class="search" id="CommoditySerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="CommoditySerach();" data-target="#CommodityModal"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                               
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:30px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Nature Of Packages:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.DropDownListFor(m => m.NatureOfPackages, new List<SelectListItem>
                        {
                         new SelectListItem { Text = "Pallet", Value = "Pallet" },
                        new SelectListItem { Text = "Cartoon", Value = "Cartoon" },
                         new SelectListItem { Text = "Drum", Value = "Drum" },
                         new SelectListItem { Text = "Metal", Value = "Metal" },
                         new SelectListItem { Text = "Fibre", Value = "Fibre" },
                         new SelectListItem { Text = "Wooden", Value = "Wooden Crate" },
                         new SelectListItem { Text = "Others", Value = "Others" },
                        }, "----Select----")
                                <div id="DivOthers" style="margin-top:5px;">
                                    <div class="Date_Img">
                                        @Html.TextBoxFor(m => m.Others, new { @class = "form-control input-sm", @id = "Others" })
                                        @Html.ValidationMessageFor(m => m.Others, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.NoOfUnits, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.NoOfUnits, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.NoOfUnits, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5">
                                @Html.TextBoxFor(m => m.DimensionUOM, new { @class = "form-control input-sm", @placeholder = "UOM" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_3 col-md-offset-1 col_cus_2 padding_rt">

                            </div>
                            @*<div class="col-md-2-5">
                                <label>Nature Of Material:</label>
                            </div>*@
                            <div class="col-md-1-5" style="display:none">
                                @Html.DropDownListFor(m => m.NatureOfMaterial, new List<SelectListItem> {
                               new SelectListItem { Text="Non Haz",Value="2"},
                               new SelectListItem { Text="Haz",Value="1"},
                               new SelectListItem { Text="Extra Haz",Value="3"},
                               new SelectListItem { Text="ODC",Value="4"},
                                })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Dimension Per Unit:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DimensionPerUnit, new { @class = "form-control input-sm" })
                            </div>
                            @*<div class="col-md-1-5">
                                    @Html.TextBoxFor(m => m.DimensionUOM, new { @class = "form-control input-sm", @placeholder = "UOM" })
                                </div>*@
                            <div class="col-md-1-5">

                            </div>
                            <div class="col-md-1-5 col_cus_offset_3 col-md-offset-1 col_cus_2 padding_rt">
                                <label>Weight:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5">
                                @Html.DropDownListFor(m => m.WeightUOM, new List<SelectListItem> {
                               new SelectListItem { Text="KG",Value="KG"},
                               new SelectListItem { Text="QTL",Value="QTL"},
                               new SelectListItem { Text="MT",Value="MT"},
                           })
                            </div>
                        </div>
                    </div>
                    <div class="Head_h5" style="margin-top:20px;margin-bottom:20px;padding:10px;">

                        @*<div class="row ">
                                <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                            </div>*@
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Godown:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                                    @Html.ValidationMessageFor(m => m.GodownName)
                                    @Html.HiddenFor(m => m.GodownId)

                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top" style="display:none">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    <label>Space Unreserved (sq. mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("SpaceUnreserved", "", new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("SpaceUnreserved", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 col-md-offset-2">
                                    <label>Space Reserved (sq. mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("SpaceReserved", "", new { @class = "form -control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" }) 
                                    @Html.ValidationMessage("SpaceReserved", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="button" id="BtnAddGodownWiseEntry" class="btn log_Btn_sm" value="Add" onclick="SaveGodownWiseDtl()" disabled />
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Reset" id="btnReset" onclick="ResetGodownDet()" />
                            </div>
                        </div>
                        <div id="DivGodownWiseEntryTblMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                        <table class="table table-striped table-bordered dataTable slim_tble" id="TblGodownWiseEntryDet" style="width:100%;">
                            <thead>
                                <tr>
                                    <th width="2%" class="text-center">@Html.DisplayName("SL No")</th>
                                    <th rowspan="2" width="15%" class="text-center">@Html.DisplayName("Godown Name")</th>
                                    @*<th rowspan="2" width="15%" class="text-center">@Html.DisplayName("Space Unreserved")</th>
                                    <th rowspan="2" width="6%" class="text-center">@Html.DisplayName("Space Reserved")</th>*@
                                    <th rowspan="2" width="5%" class="text-center">@Html.DisplayName("Edit")</th>
                                    @*<th rowspan="2" width="5%" class="text-center">@Html.DisplayName("View")</th>*@
                                </tr>
                            </thead>
                            <tbody align="center"></tbody>
                        </table>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2-5 col-md-offset-1-5 padding_rt"> 
                            <div class="boolean-container">
                                @Html.CheckBoxFor(m => m.OnlyForReserved, new { @id = "OnlyForReserved" })
                                <label for="OnlyForReserved"><i class="square"></i><span>Only For Reserved</span></label>
                            </div>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Requirement Of Space Unreserved (sq. mts.):</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.SpaceReq, new { @class = "form-control input-sm" })

                                @Html.ValidationMessageFor(m => m.SpaceReq, "", new { @class = "Error_Msg" })
                            </div>
                            <div style="display:none">
                            <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                                <label>Requirement Of Space Reserved (sq. mts.):</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SpaceReqReserved, new { @class = "form-control input-sm" })

                                @Html.ValidationMessageFor(m => m.SpaceReqReserved, "", new { @class = "Error_Msg" })
                            </div>
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Assessable / CIF Value:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.AssessCIFvalue, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.DutyAmt, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DutyAmt, new { @class = "form-control input-sm" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Custom Seal No.:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                                <label>Expected Date of Warehouse:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2_5 Date_Img">
                                @*<span class="ReQSimbol">*</span>*@
                                @Html.TextBoxFor(m => m.ExpDateofWarehouse, new { @class = "form-control input-sm", @readonly = true })
                                @*@Html.ValidationMessageFor(m => m.ExpDateofWarehouse, "", new { @class = "Error_Msg" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top" style="display:none">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Godown No.:</label>
                            </div>
                            <div class="col-md-4-5">
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                                @Html.HiddenFor(m => m.GodownId)
                            </div>

                        </div>
                    </div>

                    <div class="Head_h4">
                        <div class="row">
                            <div class="col-md-12">
                                <h4>Dimension</h4>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5">
                                    @*@Html.LabelFor(m => m.Length+ "(in mts.)", new { @class = "InputLabel" })<span class="LabelColon">:</span>*@
                                    <label>Length (mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.Length, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Length)
                                </div>
                                <div class="col-md-1-5">
                                    @*@Html.LabelFor(m => m.Width, new { @class = "InputLabel" })<span class="LabelColon">(in mts.):</span>*@
                                    <label>Width (mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.Width, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Width)
                                </div>
                                <div class="col-md-1-5">
                                    @*@Html.LabelFor(m => m.Height, new { @class = "InputLabel" })<span class="LabelColon">(in mts.):</span>*@
                                    <label>Height (mts.):</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBoxFor(m => m.Height, new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(m => m.Height)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 padding_rt">
                                <label>Encls:</label>
                            </div>
                            <div class="col-md-4 encls_chk">
                                <div class="boolean-container">
                                    @*<input type="checkbox" id="IsInvoiceCopy" />*@
                                    @Html.CheckBoxFor(m => m.IsInvoiceCopy, new { @id = "IsInvoiceCopy" })
                                    <label for="IsInvoiceCopy"><i class="square"></i><span>Invoice Copy</span></label>
                                </div>
                                <div class="boolean-container">
                                    @*<input type="checkbox" id="IsPackingList" />*@
                                    @Html.CheckBoxFor(m => m.IsPackingList, new { @id = "IsPackingList" })
                                    <label for="IsPackingList"><i class="square"></i><span>Packing List</span></label>
                                </div>
                                <div class="boolean-container">
                                    @*<input type="checkbox" id="IsBOLAWB" />*@
                                    @Html.CheckBoxFor(m => m.IsBOLAWB, new { @id = "IsBOLAWB" })
                                    <label for="IsBOLAWB"><i class="square"></i><span>BOL/AWB</span></label>
                                </div>
                                <div class="boolean-container">
                                    @*@*<input type="checkbox" id="IsBOE" />*@
                                    @Html.CheckBoxFor(m => m.IsBOE, new { @id = "IsBOE" })
                                    <label for="IsBOE"><i class="square"></i><span>BOE</span></label>
                                </div>
                            </div>
                            <div class="col-md-offset-2-5 col-md-1-5 padding_rt">
                                <label>Storage Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.StorageType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="Covered",Value="C"},
                                       new SelectListItem { Text="Open",Value="O"},
                                   })
                                @Html.ValidationMessageFor(m => m.StorageType, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-2-5 col-md-1-5 padding_rt">
                                <label>Area Type:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.AreaType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="Gross",Value="Gross"},
                                       new SelectListItem { Text="Net",Value="Net",Selected=true},
                                   })
                                @Html.ValidationMessageFor(m => m.AreaType, "", new { @class = "Error_Msg" })
                            </div>
                            <div style="display:none">
                                <div class="col-md-offset-2-5 col-md-1-5 padding_rt">
                                    <label>Space Type:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.DropDownListFor(m => m.SpaceType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="Normal",Value="N"},
                                       new SelectListItem { Text="High Secured",Value="HS"},
                                       new SelectListItem { Text="Air Conditioned",Value="AC"},
                                   })
                                    @Html.ValidationMessageFor(m => m.SpaceType, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" />
                        </div>
                    </div>
                        <div id="DivMsg" class="logErrMsg" style="background-color:transparent"></div>
                }
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-2">
                        <input type="button" value="Show List" onclick="LoadBondAppList()" class="btn log_Btn_sm" />
                    </div>
                    <div class="col-md-offset-5 col-md-3">
                        <input type="text" placeholder="Search by Application No" id="SearchApplicationNo" />
                    </div>
                   
                    <div class="col-md-2">
                        <input type="button" value="Search" onclick="SearchApplication()" class="btn log_Btn_sm" />
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="DivBondAppList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade mTabindex" id="ModalTrader" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseTrader()"><i class="fa fa-times" aria-hidden="true"></i></button>
                
                <h4 class="modal-title" id="hImporter" style="display:none">List of Importer Name</h4>
                <h4 class="modal-title" id="hCHA" style="display:none">List of CHA Name</h4>
                
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search By Name Or Code" id="Traderbox" type="text" tabindex="401" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchByTraderCode()"></i></span>

                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Name</th>
                            <th colspan="4" width="20%">Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scrollHdr">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tblTrader"></table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        <input type="hidden" id="hdnTraderCode" value="" />
                        <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreTrader()" class="btn log_Btn_sm" id="btnLoadMoreTrader" disabled>Load More Data</button>

                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseTrader()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*<div id="CHAModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of CHA</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="CHAbox" type="text" />
                <ul class="navList" id="lstCHA">
                    @{
                        if (ViewBag.ListOfCHA != null)
                        {
                            foreach (var item in ViewBag.ListOfCHA)
                            {
                                <li id="@item.CHAId">@item.CHAName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ImporterModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Importer Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Importerbox" type="text" />
                <ul class="navList" id="lstImporter">
                    @{
                        if (ViewBag.ListOfImporter != null)
                        {
                            foreach (var item in ViewBag.ListOfImporter)
                            {
                                <li id="@item.ImporterId">@item.ImporterName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>*@
<div id="GodownModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Godownbox" type="text" />
                <ul class="navList" id="lstGodown">
                    
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade mTabindex" id="CommodityModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal" style="width:80%;">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseCommodity()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Commodity</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Commodity Name" id="CommodityBox" type="text" tabindex="502" autofocus />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchCommodityByPartyCode()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="8" width="80%">Commodity Name</th>

                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll_2">
                    <table class="table dataTable table-bordered table-striped" id="tbleCommodity">
                        <tbody></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-4">
                        @if (ViewBag.CommodityState != null && Convert.ToBoolean(ViewBag.CommodityState) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCommodity()" class="btn log_Btn_sm" id="btnLoadMoreCommodity">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreCommodity()" class="btn log_Btn_sm" id="btnLoadMoreCommodity" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-offset-5 col-md-3">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseCommodity()">Close</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script>
    $('#CommodityModal').on('shown.bs.modal', function () {
        $('#CommodityBox').focus();

    });
    var ArrayLst = [];
    $(function () {
       // $(":input:visible").each(function (i) { $(this).attr('tabindex', i + 1); });
        //LoadBondAppList();
        $("#Weight").val('');
        $("#NoOfUnits").val('');
        $('#TblGodownWiseEntryDet').hide();
        // $("#BtnSave").attr("disabled", "disabled");
        $(":input:not(:hidden)").each(function (i) { $(this).attr('tabindex', i + 1); });
        $('#ApplicationDate').focus();
    });

    //---------------------------------------
    $(function () {
        $('#slim_scrollHdr').slimScroll({
            allowPageScroll: true
        });
    });
    $(function () {
        $('#slim_scroll_2').slimScroll({
            allowPageScroll: true
        });
    });
    function SelectTrader(TraderId, TraderName) {
        debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if ($('#hdnTraderCode').val() == 'IMP') {
            $('#ImporterName').val(TraderName);
            $('#ImporterId').val(TraderId);
            $('#ImporterLicenseNo').focus();
            PartyWiseListOfGodown($('#ImporterId').val());
        }
        else if ($('#hdnTraderCode').val() == 'CHA') {
            $('#CHAName').val(TraderName);
            $('#CHAId').val(TraderId);
            $('#ImporterName').focus();
        }
        $('#Traderbox').val('');
        $("#ModalTrader").modal("hide");
        $('#hdnTraderCode').val('');
        $('#tblTrader').html('');

    }

    function CloseTrader() {
        debugger;
        if ($('#hdnTraderCode').val() == 'IMP') {
            $('#ImporterLicenseNo').focus();
        }
        else if ($('#hdnTraderCode').val() == 'CHA') {          
            $('#ImporterName').focus();
        }        
        $('#Traderbox').val('');
        $("#ModalTrader").modal("hide");
        $('#hdnTraderCode').val('');
        $('#tblTrader').html('');

    }

    function ModalTraderSearch(TFlag) {
        debugger;
         if (TFlag == 'IMP') {           
            $('#hImporter').css("display", "");
            $('#hCHA').css("display", "none");          
        }
        else if (TFlag == 'CHA') {           
            $('#hImporter').css("display", "none");
            $('#hCHA').css("display", "");           
        }
        
        LoadTrader(TFlag);
        $('#Traderbox').focus();
        $('#hdnTraderCode').val(TFlag);
    }


    var Page = 0;
    function LoadMoreTrader() {
        debugger;
        $.ajax({
            url: '/Bond/DSRBond/LoadTraderList',
            type: 'GET',
            data: { PartyCode: "", TFlag: $('#hdnTraderCode').val(), Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab = 401;
                    $.each(data.Data.lstTrader, function (item, elem) {
                        //debugger;
                        html += '<tr tabindex=' + tab + ' onclick="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)" onkeypress="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.TraderName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.TraderCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tblTrader').html(html);
                    else
                        $('#tblTrader').append(html);
                    Page++;

                    if (data.Data.State == true)
                        $('#btnLoadMoreTrader').prop('disabled', false);
                    else $('#btnLoadMoreTrader').prop('disabled', true);
                }
            }
        });
    }

    function LoadTrader(TFlag) {
        Page = 0;
        $.ajax({
            url: '/Bond/DSRBond/LoadTraderList',
            type: 'GET',
            data: { PartyCode: "", TFlag: TFlag, Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    debugger;
                    var html = '';
                    var tab = 401;
                    $.each(data.Data.lstTrader, function (item, elem) {
                        debugger;
                        html += '<tr tabindex=' + tab + ' onclick="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)" onkeypress="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.TraderName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.TraderCode + '</td></tr>';
                    });
                    $('#tblTrader').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadMoreTrader').prop('disabled', false);
                    else $('#btnLoadMoreTrader').prop('disabled', true);
                }
            }
        });
    }
    function SearchByTraderCode() {
        debugger;
        Page = 0;
        if ($('#Traderbox').val() != '') {
            $.ajax({
                url: '/Bond/DSRBond/SearchByTraderCode',
                type: 'GET',
                data: { PartyCode: $('#Traderbox').val(), TFlag: $('#hdnTraderCode').val(), Page: Page },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        var tab = 401;
                        $.each(data.Data.lstTrader, function (item, elem) {
                            html += '<tr tabindex=' + tab + ' onclick="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)" onkeypress="SelectTrader(' + elem.TraderId + ',&quot;' + elem.TraderName + '&quot;)"><td colspan="8" width="80%" class="txt_wrp">' + elem.TraderName + '</td><td colspan="4" width="20%" class="txt_wrp">' + elem.TraderCode + '</td></tr>';
                        });
                        $('#tblTrader').html('');
                        $('#tblTrader').html(html);
                        $('#btnLoadMoreTrader').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tblTrader').html('');
                        Page = -1;
                        $('#btnLoadMoreTrader').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadTrader($('#hdnTraderCode').val());
    }

    $('#Traderbox').keyup(function () {
        SearchByTraderCode();
    });


    $('#ModalTrader').on('shown.bs.modal', function () {
        $('#Traderbox').focus();
    });

    //-------------------------------------
    //$('#CHAModal').on('shown.bs.modal', function () {
    //    $('#CHAbox').focus();
    //});
    //$('#ImporterModal').on('shown.bs.modal', function () {
    //    $('#Importerbox').focus();
    //});
    $('#GodownModal').on('shown.bs.modal', function () {
        $('#Godownbox').focus();
    });
   

    function PopupActivate(Id, TFlag) {
        debugger;
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        if (CharCode == 32) {

            $('#' + Id).modal('show');

            if (Id == "ModalTrader") {
                ModalTraderSearch(TFlag);               
            }            

        }
        if (Id == "CommodityModal") {
            CommoditySerach();
        }
    }




    $('#OnlyForReserved').on('click', function () {
        if ($('#OnlyForReserved').is(":checked") == true) {
            $('#SpaceReq').prop('readonly', true).val(0);
        } else {
            $('#SpaceReq').prop('readonly', false).val(0);
        }
    });

    $('#ApplicationDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ApplicationDate']").html('');
        }
    });
    $('#BOEDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BOEDate']").html('');
        }
    });
    $('#IGMDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='IGMDate']").html('');
        }
    });
    $('#ExpDateofWarehouse').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ExpDateofWarehouse']").html('');
        }
    });

    $('#BolAwbDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BolAwbDate']").html('');
        }
    });
    $('#AWBDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BolAwbDate']").html('');
        }
    });
    function LoadBondAppList() {
        $('#SearchApplicationNo').val('');
        $('#DivBondAppList').load('/Bond/DSRBond/ListOfBondApp');
    }

    function SearchApplication() {
        var SearchValue = $('#SearchApplicationNo').val().trim();
        $('#DivBondAppList').load('/Bond/DSRBond/ListOfBondApp/?SearchValue=' + SearchValue);
    }
    function ResetAll() {

        $('#CHAName,#ImporterName,#ImporterLicenseNo,#BOLAWBNo,#BOENo,#BOEDate,#IGMDate,#IGMNo,#CargoDescription,#NatureOfPackages,#ExpDateofWarehouse,#BolAwbDate,#Others,#GodownName,#GodownId').val('');
        $('#AWBNo,#AWBDate,#DimensionUOM,#GodownName,#CustomSealNo').val('');
        $('#WeightUOM').val("KG");
        $('#ImporterId,#CHAId,#NoOfUnits,#DimensionPerUnit,#DutyAmt,#Weight,#AssessCIFvalue,#GodownId,#SpaceReq').val('0');
        $('#Length,#Width,#Height').val('');
        $('#IsInvoiceCopy,#IsBOLAWB, #IsPackingList, #IsBOE').attr('checked', false);
        $("#BtnSave").attr("enable", "enable");
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        LoadBondApp();
    }
    function LoadBondApp() {
        $('#DivBody').load('/Bond/DSRBond/CreateBondApp');
    }
    function BondOnSuccess(data) {
        if (data.Status == 1) {
            if ($('#DivMsg').hasClass('logErrMsg'))
                $('#DivMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivMsg').html(data.Message);
            ResetAll();
            LoadBondAppList();
        }
        else {
            if ($('#DivMsg').hasClass('logSuccMsg'))
                $('#DivMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMsg').html(data.Message);
        }
        setTimeout(function () { $('#DivMsg').html(''); }, 5000);
    }
    function BondOnFailure() {
        $("#BtnSave").prop('disabled', false)
    }
    //$('#CHAbox').keyup(function () {
    //    var valThis = $(this).val().toLowerCase();
    //    if (valThis == "") {
    //        $('#lstCHA > li').show();
    //    } else {
    //        $('#lstCHA > li').each(function () {
    //            var text = $(this).text().toLowerCase();
    //            (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
    //        });
    //    };
    //});
    //$('#lstCHA li').on("click", function () {
    //    $('#CHAName').val($(this).text());
    //    $('#CHAId').val($(this).attr('id'));
    //    $("#CHAModal").modal("hide");
    //    $('#ImporterName').focus();
    //});
    //$('#Importerbox').keyup(function () {
    //    var valThis = $(this).val().toLowerCase();
    //    if (valThis == "") {
    //        $('#lstImporter > li').show();
    //    } else {
    //        $('#lstImporter > li').each(function () {
    //            var text = $(this).text().toLowerCase();
    //            (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
    //        });
    //    };
    //});
    //$('#lstImporter li').on("click", function () {
    //    $('#ImporterName').val($(this).text());
    //    $('#ImporterId').val($(this).attr('id'));
    //    $("#ImporterModal").modal("hide");
    //    PartyWiseListOfGodown($('#ImporterId').val());
    //    $('#ImporterLicenseNo').focus();
    //});
    $('#Godownbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstGodown > li').show();
        } else {
            $('#lstGodown > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstGodown li').on("click", function () {
        debugger;
        $('#GodownName').val($(this).text());
        $('#GodownId').val($(this).attr('id'));
        $("#GodownModal").modal("hide");
        $('#BtnAddGodownWiseEntry').prop("disabled", false);
        $('#btnReset').prop("disabled", false);

    });
    $("#DivOthers").hide();
    $('#NatureOfPackages').change(function () {
        var val = $(this).find(":selected").text();
        if (val == 'Others') {
            $('#DivOthers').show();

        }
        else {
            $('#DivOthers').hide();
        }
    })

    $("#BtnSave").submit(function () {

        $("#BtnSave").prop('disabled', true);

    });


    function SaveGodownWiseDtl() {
        debugger;
        var IsValidGodown = $('#GodownId').val();
        var reVal = 0;
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                if (IsValidGodown==item.GodownId) {
                    $('#DivGodownWiseEntryTblMsg').html('Already Added Godown Name');
                    reVal = 1;
                }
            });
        }
        if (reVal==1) {
            return false;
        }
        $('#DivGodownWiseEntryTblMsg').html('');
        //if ($('#SpaceUnreserved').val() == '') {
        //    $('[data-valmsg-for="SpaceUnreserved"]').html('<span>Fill Out This Field</span>');
        //    return false;
        //}
        //if ($('#SpaceReserved').val() == '') {
        //    $('[data-valmsg-for="SpaceReserved"]').html('<span>Fill Out This Field</span>');
        //    return false;
        //}
        if ($('#CHAName').val() == '') {
            $('#DivGodownWiseEntryTblMsg').html('Please Select CHA Name To Add Details');
            return false;
        }
        if ($('#ImporterName').val() == '') {
            $('#DivGodownWiseEntryTblMsg').html('Please Select Importer Name To Add Details');
            return false;
        }
        if ($('#GodownName').val() != "") {
            debugger;
            var GodownEntryDtl = {
                "GodownId": $('#GodownId').val(),
                "GodownName": $('#GodownName').val(),
                "SpaceUnreserved":0.00, //$('#SpaceUnreserved').val('Test'),
                "SpaceReserved":0.00 //$('#SpaceReserved').val('Test'),
            }
        };
        ArrayLst.push(GodownEntryDtl);

        $('#BtnAddGodownWiseEntry').prop("disabled", true);
        $('#btnReset').prop("disabled", false);
        ResetGodownDet();
        GenerateGodownWiseEntryTable();

    }

    function GenerateGodownWiseEntryTable() {
        debugger;
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
       // $("#SpaceReq").val('');
       // $("#SpaceReqReserved").val('');
        var Html = '';
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                Html += '<tr>';
                Html += '<td class="text-center">' + (i + 1) + '</td>';
                Html += '<td width="50px" class="txt_wrp">' + item.GodownName + '</td>';
               // Html += '<td width="6%" class="txt_wrp">' + item.SpaceUnreserved + '</td>';
                //Html += '<td width="20%" class="txt_wrp">' + item.SpaceReserved + '</td>';
                Html += '<td width="5%" class="text-center"><a href="#" onclick="EditGodownWiseEntry(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td>';
                //Html += '<td width="5%" class="text-center"><a href="#" onclick="ViewGodownWiseEntry(' + i + ')"><i class="fa fa-search-plus" aria-hidden="true"></i></a></td>';
                Html += '</tr>';
            });
            $('#TblGodownWiseEntryDet>tbody').html(Html);
            $('#TblGodownWiseEntryDet').show();
           // Sum();
        }
    }
    function ResetGodownDet() {
        debugger;
        $('#GodownId').val('');
        $('#GodownName').val('');
        $('#SpaceUnreserved').val('');
        $('#SpaceReserved').val('');

        $('#GodownName').prop("disabled", false);
        $('#SpaceUnreserved').prop('readonly', false);
        $('#SpaceReserved').prop('readonly', false);
        $('#BtnAddGodownWiseEntry').prop("disabled", true);
        $('#DivGodownWiseEntryTblMsg').html('');
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');

    }

    function EditGodownWiseEntry(Index) {
        $('#GodownId').val(ArrayLst[Index].GodownId);
        $('#GodownName').val(ArrayLst[Index].GodownName);
        $('#SpaceUnreserved').val(ArrayLst[Index].SpaceUnreserved);
        $('#SpaceReserved').val(ArrayLst[Index].SpaceReserved);
        $('#BtnAddGodownWiseEntry').prop("disabled", false);
        ArrayLst.splice(Index, 1);
        GenerateGodownWiseEntryTable();
    }

    function Sum() {
        debugger;
        var TotalSpUnreserved = 0;
        var TotalSpReserved = 0;
        $("#SpaceReq").val('');
        $("#SpaceReqReserved").val('');
        for (var i = 0; i < ArrayLst.length; i++) {
            TotalSpUnreserved += ArrayLst[i].SpaceUnreserved << 0;
            TotalSpReserved += ArrayLst[i].SpaceReserved << 0;
        }
        $("#SpaceReq").val(TotalSpUnreserved);
        $("#SpaceReqReserved").val(TotalSpReserved);
    }
    $('#BtnSave').on('click', function () {
        debugger;
        if ($('#OnlyForReserved').is(":checked") == true) {
            $('#SpaceReq').prop('readonly', true).val(0);
        } else {
            if ($('#SpaceReq').val() != '') {
                var spaceUReq = $('#SpaceReq').val();
                if (spaceUReq < 5) {
                    alert("Requirement Of Space Unreserved Value Minimum 5 SQM");
                    return false;
                }
            };
        }

        if ($('#CHAName').val() != '') {
            if (ArrayLst.length != 0) {
                $('#GodownWiseDtlXml').val(JSON.stringify(ArrayLst));
                $('#GodownId').val(0);
                $('#GodownName').val('Test');
                return true;
            } else {
                $('#DivGodownWiseEntryTblMsg').html('Please Add The Above Records');
                return false;
            }
        };

        

    });
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function PartyWiseListOfGodown(PartyId) {
        debugger;
        $.ajax({
            url: '/Bond/DSRBond/PartyWiseListOfGodown',
            type: 'GET',
            data: { PartyId: PartyId },
            dataType: 'JSON',
            success: function (data) {
                debugger;
                var Html = '';
                if (data.length != 0) {
                    $.each(data, function (i, item) {
                        Html += '<li id=' + item.GodownId + ' onclick="hideGodownmodal(' + item.GodownId + ',&quot;' + item.GodownName + '&quot;)">' + item.GodownName + '</li>';
                    });
                    $('#lstGodown').html(Html);
                }
            }
        });
    }

    function hideGodownmodal(GodownId, GodownName) {
        debugger;
        $('#GodownName').val(GodownName);
        $('#GodownId').val(GodownId);
        $("#GodownModal").modal("hide");
        $('#BtnAddGodownWiseEntry').prop("disabled", false);
        $('#btnReset').prop("disabled", false);
    }

    $('.mTabindex').keydown(function (e) {
        //debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });

    function CommoditySerach() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetCommodity',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                //debugger;
                if (data != '') {
                    //$('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    var html = '';
                    tabvalue = 502;
                    $.each(EcJson.LstCommodity, function (i, item) {
                        html += '<tr tabindex=' + tabvalue + ' id="' + item.CommodityId + '" onkeypress="SelectCommodity(' + item.CommodityId + ',&quot;' + item.CommodityName + '&quot;,&quot;' + item.CommodityType + '&quot;);" onclick="SelectCommodity(' + item.CommodityId + ',&quot;' + item.CommodityName + '&quot;,&quot;' + item.CommodityType + '&quot;);"><td colspan="8" width="80%">' + item.CommodityName + '</td></tr>';
                        tabvalue++;
                    });
                    $('#tbleCommodity tbody').html(html);

                }
            }
        });
    }
    function SelectCommodity(CommodityId, CommodityName, CommodityType) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }

        $('#CommodityName').val(CommodityName);
        $('#CommodityId').val(CommodityId);
        $('#CommodityModal').modal('hide');
        $('#CommodityBox').val('');
        $('#CargoType').focus();
        LoadCommodity();

    }

    function LoadMoreCommodity() {
        //debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/LoadCommodityList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    tabvalue = 503;
                    $.each(data.Data.LstCommodity, function (item, elem) {
                        //debugger;
                        html += '<tr tabindex=' + tabvalue + ' onclick="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;);" onkeypress="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;)"><td colspan="8" width="80%">' + elem.CommodityName + '</td></tr>';
                        tabvalue++;
                    });
                    if (Page == -1)
                        $('#tbleCommodity tbody').html(html);
                    else
                        $('#tbleCommodity tbody').append(html);
                    Page++;

                    if (data.Data.State == true)
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                    else $('#btnLoadMoreCommodity').prop('disabled', true);
                }
            }
        });
    }

    var Page = 0;
    function LoadCommodity() {
        Page = 0;
        $.ajax({
            url: '/Bond/DSRBond/LoadCommodityList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {
                    //debugger;
                    var html = '';
                    tabvalue = 502;
                    $.each(data.Data.LstCommodity, function (item, elem) {
                        //debugger;
                        html += '<tr tabindex=' + tabvalue + '="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;)"><td colspan="8" width="80%">' + elem.CommodityName + '</td></tr>';
                        tabvalue++;
                    });
                    $('#tbleCommodity tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                    else $('#btnLoadMoreCommodity').prop('disabled', true);
                }
            }
        });
    }

    function SearchCommodityByPartyCode() {
        if ($('#CommodityBox').val() != '') {
            $.ajax({
                url: '/Bond/DSRBond/SearchCommodityByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#CommodityBox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        tabvalue = 502;
                        $.each(data.Data.LstCommodity, function (item, elem) {
                            html += '<tr tabindex=' + tabvalue + ' onclick="SelectCommodity(' + elem.CommodityId + ',&quot;' + elem.CommodityName + '&quot;,&quot;' + elem.CommodityType + '&quot;)"><td colspan="8" width="80%">' + elem.CommodityName + '</td></tr>';
                            tabvalue++;
                        });
                        $('#tbleCommodity tbody').html('');
                        $('#tbleCommodity tbody').html(html);
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                        Page = -1;
                    }
                    else {
                        $('#tbleCommodity tbody').html('');
                        Page = -1;
                        $('#btnLoadMoreCommodity').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadCommodity();
    }

    function CloseCommodity() {
        $('#CommodityBox').val('');
        $("#CommodityModal").modal("hide");
        LoadCommodity();
    }
</script>