@model CwcExim.Areas.Bond.Models.DSRSpaceAvailableCert

<div class="col-md-12">
    <div id="DivBondApp">
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    @Html.LabelFor(m => m.ApplicationDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-2-5 col_cus_3 Date_Img">
                    @Html.TextBoxFor(m => m.ApplicationDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Application No:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.ApplicationNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    @Html.LabelFor(m => m.CHAName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-10 col_cus_9_5">
                    @Html.TextBoxFor(m => m.CHAName, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Importer Name:</label>
                </div>
                <div class="col-md-10 col_cus_9_5">
                    @Html.TextBoxFor(m => m.ImporterName, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Importer License No:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.ImporterLicenseNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>

        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>BOL No:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.BOLAWBNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                    <label>BOL Date:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.BolAwbDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>AWB No:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.AWBNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                    <label>AWB Date:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.AWBDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    @Html.LabelFor(m => m.BOENo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.BOENo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2">
                    @Html.LabelFor(m => m.BOEDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-3 col_cus_3">
                    @Html.TextBoxFor(m => m.BOEDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    <label>IGM No:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.IGMNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2">
                    <label>IGM Date:</label>
                </div>
                <div class="col-md-3 col_cus_3">
                    @Html.TextBoxFor(m => m.IGMDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    <label>Description of Cargo:</label>
                </div>
                <div class="col-md-10 col_cus_9_5">
                    @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;", @disabled = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Nature Of Packages:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.NatureOfPackages, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    @Html.LabelFor(m => m.NoOfUnits, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.NoOfUnits, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-1-5">
                    @Html.TextBoxFor(m => m.DimensionUOM, new { @class = "form-control input-sm", placeholder = "UOM", @readonly = true })
                </div>
                <div class="col-md-2">
                    <label>Nature Of Material:</label>
                </div>
                <div class="col-md-3">
                    @Html.DropDownListFor(m => m.NatureOfMaterial, new List<SelectListItem> {
                               new SelectListItem { Text="Non Haz",Value="2"},
                               new SelectListItem { Text="Haz",Value="1"},
                               new SelectListItem { Text="Extra Haz",Value="3"},
                               new SelectListItem { Text="ODC",Value="4"},
                                }, new { @disabled = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2 padding_rt">
                    <label>Dimension Per Unit:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.TextBoxFor(m => m.DimensionPerUnit, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-1-5">
                    @*@Html.TextBoxFor(m => m.DimensionUOM, new { @class = "form-control input-sm", placeholder = "UOM", @readonly = true })*@
                </div>
                <div class="col-md-2 col_cus_offset_3 col_cus_2 padding_rt">
                    <label>Weight:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-1-5">
                    @Html.DropDownListFor(m => m.WeightUOM, new List<SelectListItem> {
                               new SelectListItem { Text="KG",Value="KG"},
                               new SelectListItem { Text="QTL",Value="QTL"},
                               new SelectListItem { Text="MT",Value="MT"},
                           }, new { @disabled = true })
                </div>
            </div>
        </div>

        <div>

            <table class="table table-striped table-bordered dataTable slim_tble" id="TblGodownWiseEntryDet" style="width:100%;">
                <thead>
                    <tr>
                        <th width="4%" class="text-center">@Html.DisplayName("SL No")</th>
                        <th rowspan="2" width="15%" class="text-center">@Html.DisplayName("Godown Name")</th>
                        @*<th rowspan="2" width="8%" class="text-center">@Html.DisplayName("Space Unreserved")</th>
                        <th rowspan="2" width="8%" class="text-center">@Html.DisplayName("Space Reserved")</th>*@
                        @*<th rowspan="2" width="5%" class="text-center">@Html.DisplayName("Edit")</th>*@
                        @*<th rowspan="2" width="5%" class="text-center">@Html.DisplayName("View")</th>*@
                    </tr>
                </thead>
                <tbody align="center"></tbody>
            </table>
        </div>

        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-3-5 col-md-offset-1-5 padding_rt">
                    <div class="boolean-container">
                        @Html.CheckBoxFor(m => m.OnlyForReserved, new { @id = "OnlyForReserved", @disabled = true })
                        <label for="OnlyForReserved"><i class="square"></i><span>Only For Reserved</span></label>
                    </div>
                </div>
            </div>
        </div>

        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5 padding_rt">
                    <label>Requirement Of Space Unreserved (sq. mts.):</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.SpaceReq, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div style="display:none">
                    <div class="col-md-1-5 col_cus_offset_4 col-md-offset-4 col_cus_2 padding_rt">
                        <label>Requirement Of Space Reserved (sq. mts.):</label>
                    </div>
                    <div class="col-md-2-5 col_cus_2_5">
                        @Html.TextBoxFor(m => m.SpaceReqReserved, new { @class = "form-control input-sm" })

                        @Html.ValidationMessageFor(m => m.SpaceReqReserved, "", new { @class = "Error_Msg" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2_5">
                    <label>Assessable / CIF Value:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(m => m.AssessCIFvalue, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2 padding_rt">
                    <label>Duty Amount:</label>
                </div>
                <div class="col-md-3 col_cus_3">
                    @Html.TextBoxFor(m => m.DutyAmt, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2 padding_rt">
                    <label>Custom Seal No.:</label>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-2 col-md-offset-1 col_cus_offset_4  col_cus_2 padding_rt">
                    <label>Expected Date of Warehouse:</label>
                </div>
                <div class="col-md-3 col_cus_2_5">
                    @Html.TextBoxFor(m => m.ExpDateofWarehouse, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top" style="display:none">
            <div class="form-group Form_Input">
                <div class="col-md-2 col_cus_2 padding_rt">
                    <label>Godown No.:</label>
                </div>
                <div class="col-md-4">
                    @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                </div>

            </div>
        </div>
        <div class="Head_h4">
            <div class="row">
                <div class="col-md-12">
                    <h4>Dimension</h4>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5">
                        @*@Html.LabelFor(m => m.Length, new { @class = "InputLabel" })<span class="LabelColon">:</span>*@
                        <label>Length (mts.):</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.Length, new { @class = "form-control input-sm", @readonly = true })
                    </div>
                    <div class="col-md-1-5">
                        @*@Html.LabelFor(m => m.Width, new { @class = "InputLabel" })<span class="LabelColon">:</span>*@
                        <label>Width (mts.):</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.Width, new { @class = "form-control input-sm", @readonly = true })
                    </div>
                    <div class="col-md-1-5">
                        @*@Html.LabelFor(m => m.Height, new { @class = "InputLabel" })<span class="LabelColon">:</span>*@
                        <label>Height (mts.):</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.Height, new { @class = "form-control input-sm", @readonly = true })
                    </div>
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 padding_rt">
                    <label>Encls:</label>
                </div>
                <div class="col-md-4 encls_chk">
                    <div class="boolean-container">
                        @Html.CheckBoxFor(m => m.IsInvoiceCopy, new { @id = "IsInvoiceCopy", @disabled = true })
                        <label for="IsInvoiceCopy"><i class="square"></i><span>Invoice Copy</span></label>
                    </div>
                    <div class="boolean-container">
                        @Html.CheckBoxFor(m => m.IsPackingList, new { @id = "IsPackingList", @disabled = true })
                        <label for="IsPackingList"><i class="square"></i><span>Packing List</span></label>
                    </div>
                    <div class="boolean-container">
                        @Html.CheckBoxFor(m => m.IsBOLAWB, new { @id = "IsBOLAWB", @disabled = true })
                        <label for="IsBOLAWB"><i class="square"></i><span>BOL/AWB</span></label>
                    </div>
                    <div class="boolean-container">
                        @Html.CheckBoxFor(m => m.IsBOE, new { @id = "IsBOE", @disabled = true })
                        <label for="IsBOE"><i class="square"></i><span>BOE</span></label>
                    </div>
                </div>
                <div class="col-md-offset-2-5 col-md-1-5 padding_rt">
                    <label>Storage Type:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.DropDownListFor(m => m.StorageType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="Covered",Value="C"},
                                       new SelectListItem { Text="Open",Value="O"},
                                   }, new { @disabled = true })
                </div>
                <div class="col-md-offset-2-5 col-md-1-5 padding_rt">
                    <label>Area Type:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.DropDownListFor(m => m.AreaType, new List<SelectListItem>
                                   {
                                        new SelectListItem { Text="Gross",Value="Gross"},
                                       new SelectListItem { Text="Net",Value="Net"},
                                   }, new { @disabled = true })
                </div>
                <div style="display:none">
                <div class="col-md-offset-2-5 col-md-1-5 padding_rt">
                    <label>Space Type:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.DropDownListFor(m => m.SpaceType, new List<SelectListItem>
                                   {
                                       new SelectListItem { Text="Normal",Value="N"},
                                       new SelectListItem { Text="High Secured",Value="HS"},
                                       new SelectListItem { Text="Air Conditioned",Value="AC"},
                                   }, new { @disabled = true })
                </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
        </div>
    </div>
    @using (Ajax.BeginForm("AddEditSpaceAvailCert", "DSRBond", new AjaxOptions { Confirm = "Are You Sure You Want To Save?", HttpMethod = "POST", OnSuccess = "SpaceAvailCertOnSuccess", OnFailure = "SpaceAvailCertOnFailure" }))
    {
        @Html.AntiForgeryToken()
        <div class="row" id="DivSpaceAvailCert">
            @Html.HiddenFor(m => m.IsApproved)
            @Html.HiddenFor(m => m.IsSubmitted)
            @Html.HiddenFor(m => m.SpaceappId)
            <div class="col-md-12">
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-2 col-md-offset-2 col_cus_3 col_cus_offset_2_5">
                            <div class="boolean-container">
                                @Html.RadioButtonFor(m => m.IsApproved, 1, new { @id = "Approved", @checked = "true" })
                                <label for="Approved"><i class="circle"></i><span>Approved</span></label>
                            </div>
                        </div>
                        <div class="col-md-2 col_cus_3">
                            <div class="boolean-container">
                                @Html.RadioButtonFor(m => m.IsApproved, 2, new { @id = "Rejected" })
                                <label for="Rejected"><i class="circle"></i><span>Rejected</span></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-2 col_cus_2_5">
                            <label>SAC No:</label>
                        </div>
                        <div class="col-md-3">
                            @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                            @Html.ValidationMessageFor(m => m.SacNo, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2">
                            <label>SAC Date:</label>
                        </div>
                        <div class="col-md-2-5 col_cus_3 Date_Img">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true, @onchange = "ChangeValidDate()" })
                            @Html.ValidationMessageFor(m => m.SacDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-2 col_cus_2_5 padding_rt">
                            <label>Area reserved (in Sq meters):</label>
                        </div>
                        <div class="col-md-3">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.AreaReserved, new { @class = "form-control input-sm" })
                            @Html.ValidationMessageFor(m => m.AreaReserved, "", new { @class = "Error_Msg" })
                        </div>
                        <div class="col-md-2 col_cus_2_5 col_cus_offset_1 col-md-offset-2">
                            <label>Valid Upto:</label>
                        </div>
                        <div class="col-md-2-5 col_cus_3 Date_Img">
                            @Html.TextBoxFor(m => m.ValidUpto, new { @class = "form-control input-sm", @readonly = true })
                            @Html.ValidationMessageFor(m => m.ValidUpto, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-2 col_cus_2_5 padding_rt">
                            <label>Next Approval Date:</label>
                        </div>
                        <div class="col-md-3 Date_Img">
                            @Html.TextBoxFor(m => m.NextApprovalDate, new { @class = "form-control input-sm", @readonly = true })
                            @Html.ValidationMessageFor(m => m.NextApprovalDate, "", new { @class = "Error_Msg" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                </div>
                <div class="row">
                    <div class="col-md-2-5 col-md-offset-1">
                        <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSpaceSave" @*onclick="SaveSpaceAvailCert(0)"*@ />
                    </div>
                    <div class="col-md-2-5">
                        <input type="submit" class="btn log_Btn_sm" value="Submit" id="BtnSpaceSubmit" @*onclick="SaveSpaceAvailCert(1)"*@ />
                    </div>
                    <div class="col-md-2-5">
                        <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" id="BtnSpaceReset" />
                    </div>
                    <div class="col-md-2-5">
                        <input type="button" class="btn log_Btn_sm" value="Print" onclick="PrintSpaceAvailCert(@Model.SpaceappId)" id="BtnPrintSpace" disabled />
                    </div>
                </div>
                <div id="DivSpaceAvailErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                <div id="DivSpaceAvailMsg" class="logSuccMsg" style="background-color:transparent"></div>
            </div>
        </div>
    }
</div>


@Scripts.Render("~/bundles/jqueryval")
<script>
    var ArrayLst = [];
    $(function () {
        debugger;
        ArrayLst=@Html.Raw(Json.Encode(Model.LstGodownWiseDtl));
        GenerateGodownWiseEntryTable();
        if ($('#OnlyForReserved').is(":checked")==true) {
            $('#AreaReserved').prop('readonly',true).val(0);
        }
        if ($('#IsSubmitted').val() == 1) {
            $('#DivSpaceAvailCert').find('input:text').prop("disabled", true);
            $('#BtnSpaceSave').prop("disabled", true);
            $('#BtnSpaceSubmit').prop("disabled", true);
            $('#BtnSpaceReset').prop("disabled", true);
            $('#Approved').prop("disabled", true);
            $('#Rejected').prop("disabled", true);
            if ($('#Approved').prop("checked") == true) {
                $('#BtnPrintSpace').prop("disabled", false);
            }
            else {
                $('#BtnPrintSpace').prop("disabled", true);
            }




        }

        else
        {
            if ($('#Approved').prop("checked") == true) {
                $('#BtnPrintSpace').prop("disabled", true);
            }
            else {
                $('#BtnPrintSpace').prop("disabled", true);
            }
        }





        if($('#IsApproved').val()==2)
        {
            $('#BtnPrintSpace').prop("disabled", false);
        }

        $("#Approved").focus();
    });

    //function ChangeValidDate(){
    //    var sacdt= new Date($('#SacDate').val());
    //    days = parseInt($("#SacDate").val(), 13);

    //    if(!isNaN(sacdt.getTime())){
    //        sacdt.setDate(sacdt.getDate() + days);

    //        $("#ValidUpto").val(date.ToNewValiddate());
    //    } else {
    //        alert("Invalid Date");
    //    }
    //}

    function ChangeValidDate(){
        debugger;
        var now=new Date();
        var Sacdate=$('#SacDate').val().split('/');
        var dd=Sacdate[0];
        var mm=Sacdate[1];
        var yy=Sacdate[2];

        var SacDt=mm+"/"+dd+"/"+yy;

        var SacDate=new Date(SacDt);
        // var dt=new Date(SacDate);

        // var numberOfDaysToAdd = $(this).val();
        SacDate.setDate(SacDate.getDate() + 13);
        var date = ("0" + SacDate.getDate()).slice(-2) + '/' +("0" + (SacDate.getMonth() + 1)).slice(-2) + '/' +  SacDate.getFullYear();
        $('#ValidUpto').val(date);

    }



    function PrintSpaceAvailCert(SpaceappId) {
        if ($('#Approved').prop("checked") == true)
        {
            $.ajax({
                url:"/Bond/DSRBond/PrintSpaceAvailCertApprove",
                type:"GET",
                data:{SpaceappId:SpaceappId},
                dataType:"JSON",
                async:false,
                success:function(data){
                    debugger;
                    if(data.Status==1){
                        window.open(data.Message+"?_t="+(new Date().getTime()),"_blank");
                    }

                }
            })
        }
        if ($('#Rejected').prop("checked") == true)
        {
            $.ajax({
                url:"/Bond/DSRBond/PrintSpaceAvailCertReject",
                type:"GET",
                data:{SpaceappId:SpaceappId},
                dataType:"JSON",
                async:false,
                success:function(data){
                    debugger;
                    if(data.Status==1){
                        window.open(data.Message+"?_t="+(new Date().getTime()),"_blank");
                    }

                }
            })
        }
    }
    $('#ValidUpto').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        // maxDate:'0',
        onClose: function () {
            $("[data-valmsg-for='ValidUpto']").html('');
        }
    });
    $('#SacDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='SacDate']").html('');
        }
    });

    $('#NextApprovalDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='SacDate']").html('');
        }
    });

    function LoadSpaceAvailCertList() {
        $('#DivBody').load('/Bond/DSRBond/GetSpaceAvailList');
    }
    function ResetAll() {
        $('#AreaReserved').val('');
        $('#SacDate').val('');
        $('#ValidUpto').val('');
        // $('#DivSpaceAvailCert').find('input:text').val('');
        $('[data-valmsg-for]').html('<span></span>');
    }
    function SpaceAvailCertOnSuccess(data) {
        if (data.Status = 1) {
            $('#DivSpaceAvailMsg').html(data.Message);
            setTimeout(LoadSpaceAvailCertList,5000);
        }
        else {
            $('#DivSpaceAvailErrMsg').html(data.Message);
        }
    }
    function SpaceAvailCertOnFailure() { }

    $('#BtnSpaceSave').on("click", function () {
        debugger;
        $('[data-valmsg-for]').html('<span></span>');

        if($('#Rejected').is(":checked"))
        {
            if($('#NextApprovalDate').val()=='')
            {
                $('[data-valmsg-for="NextApprovalDate"]').html('<span>Select Approval Date</span>');
                return false;
            }
            $('#IsApproved').val(2);
            $('#IsSubmitted').val(0);
            $('#BtnPrintSpace').prop("disabled", true);

        }
        else
        {
            if ($('#OnlyForReserved').is(":checked")==false) {      
                if($('#AreaReserved').val()==0)
                {
                    $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than 0</span>');
                    return false;
                }
                if ($('#AreaType').val().trim().toLowerCase()=='gross') 
                {
                    if($('#AreaReserved').val() < 1 )
                    {
                        $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than Or Equal 1 SQM</span>');
                        return false;
                    }
                }
                if ($('#AreaType').val().trim().toLowerCase()=='net') 
                {
                    if($('#AreaReserved').val() < 5 )
                    {
                        $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than Or Equal 5 SQM</span>');
                        return false;
                    }
                }
            }
            if($('#SacDate').val()=="")
            {
                $('[data-valmsg-for="AreaReserved"]').html('<span>Select SAC Date</span>');
                return false;
            }
            if($('#Rejected').is(":checked"))
            {
                $('#IsApproved').val(2);
            }
            if($('#Approved').is(":checked"))
            {
                $('#IsApproved').val(1);
            }

            var SacDate = $('#SacDate').val();
            var ApplicationDate = $('#ApplicationDate').val();
            var SplitSacDate = SacDate.split('/');
            var SplitAppDate = ApplicationDate.split('/');
            var SacDt = new Date(SplitSacDate[2], (Number(SplitSacDate[1]) - 1), SplitSacDate[0]);
            var AppDt = new Date(SplitAppDate[2], (Number(SplitAppDate[1]) - 1), SplitAppDate[0]);
            if (SacDt < AppDt) {
                $('[data-valmsg-for="SacDate"]').html('<span>Sac Date Must Be Greater Than Or Eqal to Application Date</span>');
                return false;
            }
            $('#IsSubmitted').val(0);
        }
    });

    $('#BtnSpaceSubmit').on("click", function () {
        debugger;
        /*if($('#AreaReserved').val()==0){
            $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than 0</span>');
            return false;
        }


        if($('#Rejected').is(":checked"))
        {
            $('#IsApproved').val(2);
        }

        if($('#Approved').is(":checked"))
        {
            $('#IsApproved').val(1);
        }
        var SacDate = $('#SacDate').val();
        var ApplicationDate = $('#ApplicationDate').val();
        var SplitSacDate = SacDate.split('/');
        var SplitAppDate = ApplicationDate.split('/');
        var SacDt = new Date(SplitSacDate[2], (Number(SplitSacDate[1]) - 1), SplitSacDate[0]);
        var AppDt = new Date(SplitAppDate[2], (Number(SplitAppDate[1]) - 1), SplitAppDate[0]);
        if (SacDt > AppDt) {
            $('[data-valmsg-for="SacDate"]').html('<span>Sac Date Must Be Less Than Application Date</span>');
            return false;
        }
        $('#IsSubmitted').val(1);*/
        debugger;
        $('[data-valmsg-for]').html('<span></span>');
        if($('#Rejected').is(":checked"))
        {
            if($('#NextApprovalDate').val()=='')
            {
                $('[data-valmsg-for="NextApprovalDate"]').html('<span>Select Approval Date</span>');
                return false;
            }
            $('#IsApproved').val(2);
            $('#IsSubmitted').val(1);
        }
        else
        {
            if ($('#OnlyForReserved').is(":checked")==false) {
                if($('#AreaReserved').val()==0)
                {
                    $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than 0</span>');
                    return false;
                }
                if ($('#AreaType').val().trim().toLowerCase()=='gross') 
                {
                    if($('#AreaReserved').val() < 1 )
                    {
                        $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than Or Equal 1 SQM</span>');
                        return false;
                    }
                }
                if ($('#AreaType').val().trim().toLowerCase()=='net') 
                {
                    if($('#AreaReserved').val() < 5 )
                    {
                        $('[data-valmsg-for="AreaReserved"]').html('<span>Area Reserved Should Be Greater Than Or Equal 5 SQM</span>');
                        return false;
                    }
                }
            }
            if($('#SacDate').val()=="")
            {
                $('[data-valmsg-for="AreaReserved"]').html('<span>Select SAC Date</span>');
                return false;
            }
            if($('#Rejected').is(":checked"))
            {
                $('#IsApproved').val(2);
            }
            if($('#Approved').is(":checked"))
            {
                $('#IsApproved').val(1);
            }

            var SacDate = $('#SacDate').val();
            var ApplicationDate = $('#ApplicationDate').val();
            var SplitSacDate = SacDate.split('/');
            var SplitAppDate = ApplicationDate.split('/');
            var SacDt = new Date(SplitSacDate[2], (Number(SplitSacDate[1]) - 1), SplitSacDate[0]);
            var AppDt = new Date(SplitAppDate[2], (Number(SplitAppDate[1]) - 1), SplitAppDate[0]);
            if (SacDt > AppDt) {
                $('[data-valmsg-for="SacDate"]').html('<span>Sac Date Must Be Less Than Application Date</span>');
                return false;
            }
            $('#IsSubmitted').val(1);
        }
    });

    function SaveGodownWiseDtl() {
        debugger;
        $('#DivGodownWiseEntryTblMsg').html('');
        if ($('#SpaceUnreserved').val() == '') {
            $('[data-valmsg-for="SpaceUnreserved"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#SpaceReserved').val() == '') {
            $('[data-valmsg-for="SpaceReserved"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#CHAName').val() == '') {
            $('#DivGodownWiseEntryTblMsg').html('Please Select CHA Name To Add Details');
            return false;
        }
        if ($('#ImporterName').val() == '') {
            $('#DivGodownWiseEntryTblMsg').html('Please Select Importer Name To Add Details');
            return false;
        }
        if ($('#GodownName').val() != "") {
            debugger;
            var GodownEntryDtl = {
                "ResvSpaceId": $('#ResvSpaceId').val(),
                "GodownId": $('#GodownId').val(),
                "GodownName": $('#GodownName').val(),
                "SpaceUnreserved": $('#SpaceUnreserved').val(),
                "SpaceReserved": $('#SpaceReserved').val(),
            }
        };
        ArrayLst.push(GodownEntryDtl);

        $('#BtnAddGodownWiseEntry').prop("disabled", true);
        $('#btnReset').prop("disabled", false);
        ResetGodownDet();
        GenerateGodownWiseEntryTable();

    }

    function GenerateGodownWiseEntryTable() {
        debugger;
        $('#TblGodownWiseEntryDet').hide();
        $('#TblGodownWiseEntryDet>tbody').html('');
        //$("#SpaceReq").val('');
        //$("#SpaceReqReserved").val('');
        var Html = '';
        if (ArrayLst.length != 0) {
            $.each(ArrayLst, function (i, item) {
                Html += '<tr>';
                Html += '<td class="text-center">' + (i + 1) + '</td>';
                Html += '<td width="50px" class="txt_wrp">' + item.GodownName + '</td>';
                //Html += '<td width="6%" class="txt_wrp">' + item.SpaceUnreserved + '</td>';
                //Html += '<td width="20%" class="txt_wrp">' + item.SpaceReserved + '</td>';
                // Html += '<td width="5%" class="text-center"><a href="#" onclick="EditGodownWiseEntry(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td>';
                //Html += '<td width="5%" class="text-center"><a href="#" onclick="ViewGodownWiseEntry(' + i + ')"><i class="fa fa-search-plus" aria-hidden="true"></i></a></td>';
                Html += '</tr>';
            });
            $('#TblGodownWiseEntryDet>tbody').html(Html);
            $('#TblGodownWiseEntryDet').show();
           // Sum();
        }
    }
    function ResetGodownDet() {
        debugger;
        $('#GodownId').val('');
        $('#GodownName').val('');
        $('#SpaceUnreserved').val('');
        $('#SpaceReserved').val('');

        $('#GodownName').prop("disabled", false);
        $('#SpaceUnreserved').prop('readonly', false);
        $('#SpaceReserved').prop('readonly', false);
        $('#BtnAddGodownWiseEntry').prop("disabled", true);

    }

    function EditGodownWiseEntry(Index) {
        $('#ResvSpaceId').val(ArrayLst[Index].ResvSpaceId);
        $('#GodownId').val(ArrayLst[Index].GodownId);
        $('#GodownName').val(ArrayLst[Index].GodownName);
        $('#SpaceUnreserved').val(ArrayLst[Index].SpaceUnreserved);
        $('#SpaceReserved').val(ArrayLst[Index].SpaceReserved);
        $('#BtnAddGodownWiseEntry').prop("disabled", false);
        ArrayLst.splice(Index, 1);
        GenerateGodownWiseEntryTable();
    }

    function Sum() {
        debugger;
        var TotalSpUnreserved = 0;
        var TotalSpReserved = 0;
       // $("#SpaceReq").val('');
        //$("#SpaceReqReserved").val('');
        for (var i = 0; i < ArrayLst.length; i++) {
            TotalSpUnreserved += ArrayLst[i].SpaceUnreserved << 0;
            TotalSpReserved += ArrayLst[i].SpaceReserved << 0;
        }
        $("#SpaceReq").val(TotalSpUnreserved);
        $("#SpaceReqReserved").val(TotalSpReserved);
    }
    $('#BtnSave').on('click', function () {
        if ($('#CHAName').val() != '') {
            if (ArrayLst.length != 0) {
                $('#GodownWiseDtlXml').val(JSON.stringify(ArrayLst));
                return true;
            } else {
                $('#DivGodownWiseEntryTblMsg').html('Please Add The Above Records');
                return false;
            }
        };
    });
</script>
