@model CwcExim.Areas.Bond.Models.WFLDDeliveryOrder

<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            @using (Ajax.BeginForm("AddEditDeliveryOrder", "VLDABond", new AjaxOptions { Confirm = "Are you sure you want to Save?", HttpMethod = "POST", OnBegin = "$('#BtnSaveDelvOrder').prop('disabled', true);", OnSuccess = "DeliveryOnSuccess", OnFailure = "DeliveryOnFailure" }))
            {
                <div id="DivBondApp">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Edit Delivery Order</h4>
                        </div>
                    </div>
                    @Html.Hidden("GodownId")
                    @Html.Hidden("DepositAppId")
                    @Html.Hidden("DeliveryOrderXml")
                    @Html.HiddenFor(m => m.SpaceAppId)
                    @Html.HiddenFor(m => m.CHAId)
                    @Html.HiddenFor(m => m.DeliveryOrderId)
                    @Html.Hidden("DeliveryOrderDtlId")
                    @Html.HiddenFor(m => m.TotalValue)
                    @Html.HiddenFor(m => m.TotalDuty)
                    @Html.HiddenFor(m => m.TotalUnits)
                    @Html.AntiForgeryToken()
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Delivery Order No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DeliveryOrderNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DeliveryOrderNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Delivery Order Datetime:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DeliveryOrderDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DeliveryOrderDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Bond Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Importer, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.Importer, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Last Delivery Date:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.LastDeliveryDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    @*<div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>*@
                    <div id="DivDeliveryOrderDetails" class="Head_h5">
                        <div class="row Form_Space_top hidden">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Deposit No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("DepositNo", "", new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessage("DepositNo", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                    <label>Deposit Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("DepositDate", "", new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessage("DepositDate")
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top hidden">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>WR No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("WRNo", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>WR Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("WRDate", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Ex-BOE No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ExBoeNo", "", new { @class = "form-control input-sm" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Ex-BOE Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("ExBoeDate", "", new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Units:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Units", "", new { @class = "form-control input-sm", @onchange = "FillBalancedUnits()", @onkeypress = "return AllowOnlyInteger(event)" })
                                    @Html.ValidationMessage("Units", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Units:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingUnits", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Area Unreserved:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBox("Areas", "", new { @class = "form-control input-sm", @onchange = "FillBalancedAreas()", @onkeypress = "return AllowOnlyInteger(event)" })
                                    @*@Html.ValidationMessage("Areas", "", new { @class = "Error_Msg" })*@
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Area Unreserved:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingAreas", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Area Reserved:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @*<span class="ReQSimbol">*</span>*@
                                    @Html.TextBox("AreasReserved", "", new { @class = "form-control input-sm", @onchange = "FillBalancedAreasReserved()", @onkeypress = "return AllowOnlyInteger(event)" })
                                    @*@Html.ValidationMessage("Areas", "", new { @class = "Error_Msg" })*@
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Area Reserved:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingAreasReserved", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Weight:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Weight", "", new { @class = "form-control input-sm", @onchange = "FillBalancedWeights()", @onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" })
                                    @Html.ValidationMessage("Weight", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Weight:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingWeight", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Value:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Value", "", new { @class = "form-control input-sm", @onchange = "FillBalancedValue()", maxlength = "11", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("Value", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Value:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingValue", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Duty:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Duty", "", new { @class = "form-control input-sm", @onchange = "FillBalancedDuty()", @onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" })
                                    @Html.ValidationMessage("Duty", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Duty:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingDuty", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row hidden">
                            <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                        </div>
                        <div class="row hidden">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="button" id="BtnAddDeliveryOrder" class="btn log_Btn_sm" value="Add" onclick="SaveDeliveryOrderDtl()" disabled />
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetDeliveryOrderDet()" />
                            </div>
                        </div>
                        <div id="DivDeliveryOrderTblErrMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                        <table class="table table-striped table-bordered dataTable" id="TblDeliveryOrderDtl" style="width:100%;">
                            <thead>
                                <tr>
                                    <th class="text-center">@Html.DisplayName("SL No")</th>
                                    <th>@Html.DisplayName("Deposit No")</th>
                                    <th>@Html.DisplayName("Deposit Date")</th>
                                    <th>@Html.DisplayName("Edit")</th>
                                    <th class="text-center">@Html.DisplayName("View")</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSaveDelvOrder" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Cancel" onclick="LoadDeliveryOrder()" />
                        </div>
                    </div>
                    <div id="DivDeliveryMsg" class="logSuccMsg" style="background-color:transparent"></div>
                    <div id="DivDeliveryErrMsg" class="logErrMsg SignUp_space_bottom2" style="background-color:transparent"></div>
                </div>
            }
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var ClosingWeight = 0;
    var ClosingUnits = 0;
    var ClosingAreas = 0;
    var UnloadedUnits = 0;
    var TotalValue =0;
    var TotalDuty = 0;
    var ClosingAreasReserved = 0;
    var ArrayOfDeliveryOrder = [];
    $('#DeliveryOrderDate').datetimepicker({
        dateFormat: "dd/mm/yy",
        timeFormat: "HH:mm",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select datetime",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='DeliveryOrderDate']").html('');
        }
    });
    $('#ExBoeDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ExBoeDate']").html('');
        }
    });


    $(function () {
        ArrayOfDeliveryOrder=@Html.Raw(Json.Encode(Model.LstDeliveryOrderhdb));
        //GenerateDeliveryOrderTable();
        EditDeliveryOrderDtl(0);
        @*ClosingWeight = (Number(@Model.ClosingWeight) + Number(@Model.Weight)).toFixed(3);
        ClosingUnits = Number(@Model.ClosingUnits) + Number(@Model.Units);*@
    });



    function SaveDeliveryOrderDtl() {
        
        if ($('#Units').val() == ''|| $('#Units').val() == 0) {
            $('[data-valmsg-for="Units"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#Weight').val() == ''|| $('#Weight').val() == 0) {
            $('[data-valmsg-for="Weight"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#Areas').val() == ''|| $('#Areas').val() == 0) {
            //$('[data-valmsg-for="Areas"]').html('<span>Fill Out This Field</span>');
            //return false;
            $('#Areas').val('0');
        }
        if ($('#AreasReserved').val() == ''|| $('#AreasReserved').val() == 0) {
            //$('[data-valmsg-for="Areas"]').html('<span>Fill Out This Field</span>');
            //return false;
            $('#AreasReserved').val('0');
        }
        if (Number($('#Units').val()) > Number(ClosingUnits)) {
            alert('Units Should Be Less Than Closing Units');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }
        if (Number($('#Weight').val()) > Number(ClosingWeight)) {
            alert('Weight Should Be Less Than Closing Weight');
            // $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            return false;
        }
        if (Number($('#Areas').val()) > Number(ClosingAreas)) {
            alert('Area Should Be Less Than Closing Area');
            // $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            return false;
        }
        if (Number($('#AreasReserved').val()) > Number(ClosingAreasAreasReserved)) {
            alert('Reserved Area Should Be Less Than Reserved Closing Area');
            // $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            return false;
        }
        if (Number($('#Value').val()) > Number($('#TotalValue').val())) {
            alert('Value Should Be Less Than Closing Value');
            return false;
        }
        if (Number($('#Duty').val()) > Number($('#TotalDuty').val())) {
            alert('Duty Should Be Less Than Closing Duty');
            return false;
        }
        $('#DivDeliveryOrderTblErrMsg').html('');
        if ($('#DepositNo').val() != "") {
            var DeliveryOrderDtl = {
                "DeliveryOrderDtlId": $('#DeliveryOrderDtlId').val(),
                "DepositNo": $('#DepositNo').val(),
                "DepositAppId": $('#DepositAppId').val(),
                "DepositDate": $('#DepositDate').val(),
                "WRNo": $('#WRNo').val(),
                "WRDate": $('#WRDate').val(),
                "Units": $('#Units').val() == "" ? 0 : $('#Units').val(),
                "Weight": $('#Weight').val() == "" ? 0 : $('#Weight').val(),
                "ClosingUnits": $('#ClosingUnits').val(),
                "ClosingWeight": $('#ClosingWeight').val(),
                "Areas":$("#Areas").val(),
                "ClosingAreas": $('#ClosingAreas').val(),
                "Value": $('#Value').val() == "" ? 0 : $('#Value').val(),
                "Duty": $('#Duty').val() == "" ? 0 : $('#Duty').val(),
                "ClosingValue": $('#ClosingValue').val(),
                "ClosingDuty": $('#ClosingDuty').val(),
                "GodownId": $('#GodownId').val(),
                "ExBoeNo": $('#ExBoeNo').val(),
                "ExBoeDate": $('#ExBoeDate').val(),
                "AreasReserved":$("#AreasReserved").val(),
                "ClosingAreasReserved": $('#ClosingAreasReserved').val(),
            }
            ArrayOfDeliveryOrder.push(DeliveryOrderDtl);
            $('#DepositList #' + $('#DepositNo').val()).remove();
            //ResetDeliveryOrderDet();
            //GenerateDeliveryOrderTable();
            $('#BtnAddDeliveryOrder').prop("disabled", true);
            return true;
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Select A Deposit No In Order To Add Details');
            return false;
            // $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
        }
    }

    function ResetDeliveryOrderDet() {
        
        $('#DivDeliveryOrderDetails').find('input:text,textarea').val('');
        $('#DepositAppId').val('');
        $('#GodownId').val('');
        $('#SearchDepositNo').css("display", "block");
    }

    function GenerateDeliveryOrderTable() {
        
        $('#TblDeliveryOrderDtl').hide();
        var Html = '';
        if (ArrayOfDeliveryOrder.length != 0) {
            $.each(ArrayOfDeliveryOrder, function (i, item) {
                
                Html += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + item.DepositNo + '</td><td>' + item.DepositDate + '</td><td class="text-center"><a href="#" onclick="EditDeliveryOrderDtl(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td><td class="text-center"><a href="#" onclick="ViewDeliveryOrderDtlf(' + i + ')"><i class="fa fa-search-plus" aria-hidden="true"></i></a></td></tr>';
            });
            $('#TblDeliveryOrderDtl>tbody').html(Html);
            $('#TblDeliveryOrderDtl').show();
        }
    }

    function EditDeliveryOrderDtl(Index) {
        
        if ($('#BtnAddDeliveryOrder').prop("disabled") == true) {
            $('#SearchDepositNo').css("display", "block");
            $('#BtnAddDeliveryOrder').prop("disabled", false);
            $('#DeliveryOrderDtlId').val(ArrayOfDeliveryOrder[Index].DeliveryOrderDtlId);
            $('#DepositNo').val(ArrayOfDeliveryOrder[Index].DepositNo);
            $('#DepositAppId').val(ArrayOfDeliveryOrder[Index].DepositAppId);
            $('#DepositDate').val(ArrayOfDeliveryOrder[Index].DepositDate);
            $('#WRNo').val(ArrayOfDeliveryOrder[Index].WRNo);
            $('#WRDate').val(ArrayOfDeliveryOrder[Index].WRDate);
            $('#Units').val(ArrayOfDeliveryOrder[Index].Units);
            $('#ClosingUnits').val(ArrayOfDeliveryOrder[Index].ClosingUnits);
            $('#ClosingWeight').val(ArrayOfDeliveryOrder[Index].ClosingWeight);
            $('#Weight').val(ArrayOfDeliveryOrder[Index].Weight);
            $('#Value').val(ArrayOfDeliveryOrder[Index].Value);
            $('#Duty').val(ArrayOfDeliveryOrder[Index].Duty);
            $('#ClosingValue').val(ArrayOfDeliveryOrder[Index].ClosingValue);
            $('#ClosingDuty').val(ArrayOfDeliveryOrder[Index].ClosingDuty);
            $('#GodownId').val(ArrayOfDeliveryOrder[Index].GodownId);
            $('#Areas').val(ArrayOfDeliveryOrder[Index].Areas);
            $('#ClosingAreas').val(ArrayOfDeliveryOrder[Index].ClosingAreas);
            $('#AreasReserved').val(ArrayOfDeliveryOrder[Index].AreasReserved);
            $('#ClosingAreasReserved').val(ArrayOfDeliveryOrder[Index].ClosingAreasReserved);
            $('#ExBoeNo').val(ArrayOfDeliveryOrder[Index].ExBoeNo);
            if (ArrayOfDeliveryOrder[Index].ExBoeDate != null && ArrayOfDeliveryOrder[Index].ExBoeDate != '' && ArrayOfDeliveryOrder[Index].ExBoeDate != '00/00/0000') {
                $('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            }
            //$('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            ClosingUnits = Number(ArrayOfDeliveryOrder[Index].ClosingUnits) + Number(ArrayOfDeliveryOrder[Index].Units);
            ClosingWeight = Number(ArrayOfDeliveryOrder[Index].ClosingWeight) + Number(ArrayOfDeliveryOrder[Index].Weight);
            ClosingValue = Number(ArrayOfDeliveryOrder[Index].ClosingValue) + Number(ArrayOfDeliveryOrder[Index].Value);
            ClosingDuty = Number(ArrayOfDeliveryOrder[Index].ClosingDuty) + Number(ArrayOfDeliveryOrder[Index].Duty);
            ClosingAreas = Number(ArrayOfDeliveryOrder[Index].ClosingAreas) + Number(ArrayOfDeliveryOrder[Index].Areas);
            ClosingAreasReserved = Number(ArrayOfDeliveryOrder[Index].ClosingAreasReserved) + Number(ArrayOfDeliveryOrder[Index].AreasReserved);
            ArrayOfDeliveryOrder.splice(Index, 1);
            GenerateDeliveryOrderTable();
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
        }
    }

    function ViewDeliveryOrderDtlf(Index) {
        
        if ($('#BtnAddDeliveryOrder').prop("disabled") == true) {
            $('#BtnAddDeliveryOrder').prop("disabled", true);
            $('#SearchDepositNo').css("display", "none");
            $('#DeliveryOrderDtlId').val(ArrayOfDeliveryOrder[Index].DeliveryOrderDtlId);
            $('#DepositNo').val(ArrayOfDeliveryOrder[Index].DepositNo);
            $('#DepositAppId').val(ArrayOfDeliveryOrder[Index].DepositAppId);
            $('#DepositDate').val(ArrayOfDeliveryOrder[Index].DepositDate);
            $('#WRNo').val(ArrayOfDeliveryOrder[Index].WRNo);
            $('#WRDate').val(ArrayOfDeliveryOrder[Index].WRDate);
            $('#Units').val(ArrayOfDeliveryOrder[Index].Units);
            $('#ClosingUnits').val(ArrayOfDeliveryOrder[Index].ClosingUnits);
            $('#ClosingWeight').val(ArrayOfDeliveryOrder[Index].ClosingWeight);
            $('#Weight').val(ArrayOfDeliveryOrder[Index].Weight);
            $('#Value').val(ArrayOfDeliveryOrder[Index].Value);
            $('#Duty').val(ArrayOfDeliveryOrder[Index].Duty);
            $('#GodownId').val(ArrayOfDeliveryOrder[Index].GodownId);
            $('#Areas').val(ArrayOfDeliveryOrder[Index].Areas);
            $('#ClosingAreas').val(ArrayOfDeliveryOrder[Index].ClosingAreas);
            $('#AreasReserved').val(ArrayOfDeliveryOrder[Index].AreasReserved);
            $('#ClosingAreasReserved').val(ArrayOfDeliveryOrder[Index].ClosingAreasReserved);
            $('#ClosingValue').val(ArrayOfDeliveryOrder[Index].ClosingValue);
            $('#ClosingDuty').val(ArrayOfDeliveryOrder[Index].ClosingDuty);
            $('#ExBoeNo').val(ArrayOfDeliveryOrder[Index].ExBoeNo);
            //$('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            if (ArrayOfDeliveryOrder[Index].ExBoeDate != null && ArrayOfDeliveryOrder[Index].ExBoeDate != '' && ArrayOfDeliveryOrder[Index].ExBoeDate != '00/00/0000') {
                $('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            }
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
        }

    }



    function LoadDeliveryOrder() {
        $('#DivBody').load('/Bond/VLDABond/CreateDeliveryOrder');
    }
    function DeliveryOnSuccess(data) {
        if (data.Status == 2 || data.Status == 3) {
            $('#DivDeliveryMsg').html(data.Message);
            setTimeout(LoadDeliveryOrder,5000);
        }
        else {
            $('#DivDeliveryErrMsg').html(data.Message);
        }
    }
    function DeliveryOnFailure() {

    }
    function FillBalancedUnits() {
        
        $('[data-valmsg-for="Units"]').html('<span></span>');
        if (Number($('#Units').val()) > Number(ClosingUnits)) {
            alert('Units Should Be Less Than Closing Units');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            // $('[data-valmsg-for="Units"]').html('<span>Units Should Be Less Than Closing Units</span>');
            // return false;
        }
        else {
            //TotalValue=$('#TotalValue').val();
            //TotalDuty=$('#TotalDuty').val();
            debugger;            
            //UnloadedUnits=Number(parseFloat(Number($('#TotalUnits').val()))) + Number(parseFloat(Number($('#Units').val())));
            UnloadedUnits=$('#TotalUnits').val();
            $('#ClosingUnits').val(parseInt(ClosingUnits - Number($('#Units').val())));
            $('#Value').val(Math.ceil((ClosingValue/ClosingUnits) * Number($('#Units').val())));
            $('#ClosingValue').val((ClosingValue - Number(parseFloat(Number($('#Value').val())))).toFixed(3));
            $('#Duty').val(Math.ceil((ClosingDuty/ClosingUnits) * Number($('#Units').val())));
            $('#ClosingDuty').val((ClosingDuty - Number(parseFloat(Number($('#Duty').val())))).toFixed(3));

        }

    }
    function FillBalancedWeights() {
        $('[data-valmsg-for="Weight"]').html('<span></span>');
        if (Number($('#Weight').val()) > Number(ClosingWeight)) {
            alert('Weight Should Be Less Than Closing Weight');
        }
        else {
            $('#ClosingWeight').val((ClosingWeight - Number(parseFloat(Number($('#Weight').val())))).toFixed(3));
        }

    }

    function FillBalancedAreas() {
        $('[data-valmsg-for="Areas"]').html('<span></span>');
        if (Number($('#Areas').val()) > Number(ClosingAreas)) {
            alert('Area Should Be Less Than Closing Area');          
        }
        else {
            $('#ClosingAreas').val((ClosingAreas - Number(parseFloat(Number($('#Areas').val())))).toFixed(3));
        }

    }

    function FillBalancedAreasReserved() {
        $('[data-valmsg-for="AreasReserved"]').html('<span></span>');
        if (Number($('#AreasReserved').val()) > Number(ClosingAreasReserved)) {
            alert('Reserved Area Should Be Less Than Reserved Closing Area');          
        }
        else {
            $('#ClosingAreasReserved').val((ClosingAreasReserved - Number(parseFloat(Number($('#AreasReserved').val())))).toFixed(3));
        }

    }

    function FillBalancedValue() {
        $('[data-valmsg-for="Value"]').html('<span></span>');
        if (Number($('#Value').val()) > Number(TotalValue)) {
            alert('Value Should Be Less Than Closing Value');
            //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
            // return false;
        }
        else {
            $('#ClosingValue').val((TotalValue - Number(parseFloat(Number($('#Value').val())))).toFixed(3));
        }

    }

    function FillBalancedDuty() {
        $('[data-valmsg-for="Duty"]').html('<span></span>');
        if (Number($('#Duty').val()) > Number(TotalDuty)) {
            alert('Duty Should Be Less Than Closing Duty');
            //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
            // return false;
        }
        else {
            $('#ClosingDuty').val((TotalValue - Number(parseFloat(Number($('#Duty').val())))).toFixed(3));
        }

    }

    $('#BtnSaveDelvOrder').on("click", function () {
        $('#DivDeliveryOrderTblErrMsg').html('');
        ArrayOfDeliveryOrder=[];
        var ret=SaveDeliveryOrderDtl();
        if(ret==false) return false;
        if ($('#DepositNo').val() == "" && $('#TblDeliveryOrderDtl >tbody').html() != "") {
            if (ArrayOfDeliveryOrder.length != 0) {
                $('#DeliveryOrderXml').val(JSON.stringify(ArrayOfDeliveryOrder));
            }
        }
        else if ($('#DepositNo').val() != "" && $('#BtnAddDeliveryOrder').prop("disabled") == true) {
            if (ArrayOfDeliveryOrder.length != 0) {
                $('#DeliveryOrderXml').val(JSON.stringify(ArrayOfDeliveryOrder));
            }
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
            return false;
        }
    });
    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
</script>