@model CwcExim.Areas.Bond.Models.WFLDBondWODeli

@{ 
<input type="hidden" id="hdnWoType" value="@ViewBag.WoType" />
<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            <div id="DivBondApp">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Work Order For Unloading & Delivery</h4>
                    </div>
                </div>
               @* <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-offset-1-5 col_cus_offset_2 col-md-1-5">
                            <div class="boolean-container">
                                @Html.RadioButton("WorkOrderFor", "U", true, new { @id = "rbUnloading" })
                                <label for="rbUnloading"><i class="circle"></i><span>Unloading</span></label>
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="boolean-container">
                                @Html.RadioButton("WorkOrderFor", "D", false, new { @id = "rbDelivery" })
                                <label for="rbDelivery"><i class="circle"></i><span>Delivery</span></label>
                            </div>
                        </div>
                    </div>
                </div>*@
                @Html.HiddenFor(m => m.DepositAppId)
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.WorkOrderNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.WorkOrderNo, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                        <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                            <label>Work Order Date:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBoxFor(m => m.WorkOrderDate, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.BondNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            <span class="ReQSimbol">*</span>
                            @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm", @readonly = true })
                            <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#BondModal"></i></span>
                        </div>
                        <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                            @Html.LabelFor(m => m.BondDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.WRNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.WRNo, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                        <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                            @Html.LabelFor(m => m.WRDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.WRDate, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2" id="DivDeliveryNo">
                            @Html.LabelFor(m => m.DeliveryNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.DeliveryNo, new { @class = "form-control input-sm" })
                        </div>
                        <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                            @Html.LabelFor(m => m.GodownName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Cargo Description:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;", @disabled = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>SAC No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                        <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                            <label>SAC Date:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            @Html.LabelFor(m => m.Units, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.Units, new { @class = "form-control input-sm" @*, @readonly = true*@ })
                        </div>
                        <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                            @Html.LabelFor(m => m.Weight, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input-sm" @*, @readonly = true*@ })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                </div>
                <div class="row">
                    <div class="col-md-offset-4 col-md-2">
                        <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" onclick="SaveDetails()" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" />
                    </div>
                </div>
                <div id="DivMsg" class="logSuccMsg" style="background-color:transparent"></div>
                <div id="DivMsgErr" class="logErrMsg" style="background-color:transparent"></div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="DivBondWOList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="BondModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Bond No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Bondbox" type="text" />
                <ul class="navList" id="lstBond">
                    @{
                        if (ViewBag.BondNo != null)
                        {
                            foreach (var item in ViewBag.BondNo)
                            {

                                <li id="@item.DepositAppId">@item.BondBOENo</li>

                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
                        }

@Scripts.Render("~/bundles/jqueryval")
<script>
    $('#WorkOrderDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='WorkOrderDate']").html('');
        }
    });
    $(function () {
        $('#WorkOrderDate').val('@ViewBag.CurrentDate');
        var WoType = $('#hdnWoType').val();
        if (WoType == "U")
        {
            $('#DivDeliveryNo').css("visibility", "hidden");
            $('#DeliveryNo').css("visibility", "hidden");
        }
        LoadBondWOList();
    });
    function LoadBondWOList() {
        var WoType = $('#hdnWoType').val();
        $('#DivBondWOList').load('/Bond/VLDABond/ListOfWODeli?WoType=' + WoType);
    }
    function ResetAll() {
        $('#WorkOrderDate,#WRNo,#WRDate,#GodownName,#CargoDescription,#SacNo,#SacDate,#Units,#Weight,#DeliveryNo,#DepositAppId,#BondNo,#BondDate').val('');
        setTimeout(function () { $('#DivMsg,#DivMsgErr').html(''); }, 5000);
        $('#WorkOrderDate').val('@ViewBag.CurrentDate');
    }
    $('#Bondbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstBond > li').show();
        } else {
            $('#lstBond > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstBond li').on("click", function () {
        var bond = $(this).text();
        var arr = bond.split('_');
        $('#BondNo').val(arr[0]);
        $('#DepositAppId').val($(this).attr('id'));
        $("#BondModal").modal("hide");
        $('#BondDate,#WRNo,#WRDate,#GodownName,#CargoDescription,#SacNo,#SacDate,#Units,#Weight').val('');
        FillDetails();
    });
    function FillDetails() {
        var DepositAppId = $('#DepositAppId').val();
        if (DepositAppId > 0) {
            $.ajax({
                url: '/Bond/VLDABond/GetDetailsAgainstBondNo',
                type: 'GET',
                data: { DepositAppId: DepositAppId },
                dataType: 'JSON',
                success: function (data) {
                    if (data.Status == 1) {
                        $('#BondDate').val(data.Data.BondDate);
                        $('#WRNo').val(data.Data.WRNo);
                        $('#WRDate').val(data.Data.WRDate);
                        $('#GodownName').val(data.Data.GodownName);
                        $('#CargoDescription').val(data.Data.CargoDescription);
                        $('#SacNo').val(data.Data.SacNo);
                        $('#SacDate').val(data.Data.SacDate);

                        $('#Units').val(data.Data.Units);
                        $('#Weight').val(data.Data.Weight);


                    }
                }
            });
        }
    }

    function SaveDetails() {
        var DepositAppId = Number($('#DepositAppId').val());
        var Units = $('#Units').val();
        var Weight = $('#Weight').val();
        var WOType = $('#hdnWoType').val();

        if (DepositAppId > 0) {
            if ($('#Units').val() == '') {
                alert('Enter Cargo Units');
                return false;
            }
            if ($('#Weight').val() == '') {
                alert('Enter Cargo Weight');
                return false;
            }
            var DeliveryNo = $.trim($('#DeliveryNo').val());
            if (DeliveryNo == '' & $('#rbUnloading').prop("checked") == false) {
                alert('Enter Delivery No');
                return false;
            }
            var Confirm = confirm("Are you sure you want to Save?");
            var Val = $('input[name="__RequestVerificationToken"]').val();
            if (Confirm == true) {
                //var WorkOrderFor = $('#rbUnloading').is(':checked') ? 'U' : 'D';
                var PD = new FormData();
                PD.append("DepositAppId", DepositAppId);
                PD.append("DeliveryNo", DeliveryNo);
                PD.append("WorkOrderDate", $('#WorkOrderDate').val());
                //PD.append("WorkOrderFor", WorkOrderFor);
                PD.append("CargoUnits", Units);
                PD.append("CargoWeight", Weight);
                PD.append("WOType", WOType);
                $.ajax({
                    url: '/Bond/VLDABond/AddEditWODeli',
                    type: 'POST',
                    data: PD,
                    dataType: 'JSON',
                    processData: false,
                    contentType: false,
                    headers: { "__RequestVerificationToken": Val },
                    success: function (data) {
                        if (data.Status == 1) {
                            $('#DivMsg').html(data.Message);
                            ResetAll();
                            LoadBondWOList();
                        }
                        else
                            $('#DivMsgErr').html(data.Message);
                    }
                });
            }
            //else
            //    alert('Enter Delivery No');
        }
        else
            alert('Select Bond No.');
    }

    function ClearUnitWeight() {
        $('#Units').val('');
        $('#Weight').val('');
    }
</script>