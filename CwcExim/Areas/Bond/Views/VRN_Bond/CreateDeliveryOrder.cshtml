@model CwcExim.Areas.Bond.Models.VRN_DeliveryOrder

<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            @using (Ajax.BeginForm("AddEditDeliveryOrder", "VRN_Bond", new AjaxOptions { Confirm = "Are you sure you want to Save?", HttpMethod = "POST", OnSuccess = "DeliveryOnSuccess", OnFailure = "DeliveryOnFailure" }))
            {
                <div id="DivBondApp">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Delivery Order</h4>                            
                        </div>
                    </div>
                    @Html.Hidden("GodownId")
                    @Html.Hidden("DepositAppId")
                    @Html.Hidden("DeliveryOrderXml")
                    @Html.HiddenFor(m => m.SpaceAppId)
                    @Html.HiddenFor(m => m.CHAId)
                    @Html.HiddenFor(m => m.CargoDescription)
                    @Html.AntiForgeryToken()
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Delivery Order No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DeliveryOrderNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DeliveryOrderNo)
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                <label>Delivery Order Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DeliveryOrderDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DeliveryOrderDate)
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SacNo, "", new { @class = "Error_Msg" })
                        
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.BondNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="SacSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#BondModal"></i></span>
                            </div>
                            <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                <label>Bond Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                 
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Importer, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.Importer, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Last Delivery Date:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m=>m.LastDeliveryDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div id="DivDeliveryOrderDetails" class="Head_h5">
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Deposit No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBox("DepositNo", "", new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search" id="SearchDepositNo"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#DepositNoModal"></i></span>
                                    @Html.ValidationMessage("DepositNo", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5 padding_rt">
                                    <label>Deposit Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("DepositDate", "", new { @class = "form-control input-sm", @readonly = true })
                                    @Html.ValidationMessage("DepositDate")
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>WR No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("WRNo", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>WR Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("WRDate", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Ex-BOE No:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ExBoeNo", "", new { @class = "form-control input-sm" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Ex-BOE Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBox("ExBoeDate", "", new { @class = "form-control input-sm" })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Units:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBox("Units", "", new { @class = "form-control input-sm", @onchange = "FillBalancedUnits()", @onkeypress = "return AllowOnlyInteger(event)" })
                                    @Html.ValidationMessage("Units", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Units:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingUnits", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Area:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBox("Areas", "", new { @class = "form-control input-sm", @onchange = "FillBalancedAreas()", @onkeypress = "return AllowOnlyInteger(event)" })
                                    @Html.ValidationMessage("Areas", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Area:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingAreas", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2">
                                    <label>Weight:</label>
                                </div>
                                <div class="col-md-2-5">
                                    <span class="ReQSimbol">*</span>
                                    @Html.TextBox("Weight", "", new { @class = "form-control input-sm", @onchange = "FillBalancedWeights()", @onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" })
                                    @Html.ValidationMessage("Weight", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Weight:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingWeight", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Value:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Value", "", new { @class = "form-control input-sm", @onchange = "FillBalancedValue()", maxlength = "11", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    @Html.ValidationMessage("Value", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Value:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingValue", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 col_cus_2 padding_rt">
                                    <label>Duty:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("Duty", "", new { @class = "form-control input-sm",@onchange= "FillBalancedDuty()", @onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11" })
                                    @Html.ValidationMessage("Duty", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-4 col_cus_offset_3 col_cus_2 col-md-1-5">
                                    <label>Closing Duty:</label>
                                </div>
                                <div class="col-md-2-5">
                                    @Html.TextBox("ClosingDuty", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="stoke SignUp_space_top SignUp_space_bottom"></div>
                        </div>
                        <div class="row">
                            <div class="col-md-offset-4 col-md-2">
                                <input type="button" id="BtnAddDeliveryOrder" class="btn log_Btn_sm" value="Add" onclick="SaveDeliveryOrderDtl()" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetDeliveryOrderDet()" />
                            </div>
                        </div>
                        <div id="DivDeliveryOrderTblErrMsg" class="logErrMsg Form_Space_top Form_Space_bottom" style="background-color:transparent"></div>
                        <table class="table table-striped table-bordered dataTable" id="TblDeliveryOrderDtl" style="width:100%;">
                            <thead>
                                <tr>
                                    <th class="text-center">@Html.DisplayName("SL No")</th>
                                    <th>@Html.DisplayName("Deposit No")</th>
                                    <th>@Html.DisplayName("Deposit Date")</th>
                                    <th>@Html.DisplayName("Edit")</th>
                                    <th class="text-center">@Html.DisplayName("View")</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSaveDelvOrder" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" />
                        </div>
                    </div>
                    <div id="DivDeliveryMsg" class="logSuccMsg" style="background-color:transparent"></div>
                    <div id="DivDeliveryErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                </div>
            }
            <div class="row">
                <div class="col-md-12">
                    <div id="DivDeliveryOrderList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="BondModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Bond No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Bondbox" type="text" />
                <ul class="navList" id="lstBond">
                   @{
                       if (ViewBag.lstBond != null)
                       {
                           foreach (var item in ViewBag.lstBond)
                           {
                    <li id="@item.SpaceappId">@item.BondNo</li>
                    }
                    }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="DepositNoModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Deposit No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="DepositNobox" type="text" />
                <ul class="navList" id="DepositList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var ClosingWeight = 0;
    var ClosingUnits = 0;
    var UnloadedUnits = 0;
    var ClosingAreas = 0;
    var TotalValue = 0;
    var TotalDuty = 0;
    var TotalArea = 0;
    var TotalWeight = 0;
    var UnloadedValue = 0;
    var UnloadedDuty = 0;
    var ArrayOfDeliveryOrder = [];
    $('#DeliveryOrderDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='DeliveryOrderDate']").html('');
        }
    });
    $('#ExBoeDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='ExBoeDate']").html('');
        }
    });

    $(function () {
        $('#SearchDepositNo').css("display", "none");
        $('#TblDeliveryOrderDtl').hide();
        $('#DeliveryOrderDate').val('@ViewBag.CurrentDate');
        LoadDeliveryOrderList();
        @*ClosingWeight = Number(@Model.ClosingWeight);
        ClosingUnits = Number(@Model.ClosingUnits);*@
    });
    function LoadDeliveryOrderList() {
        $('#DivDeliveryOrderList').load('/Bond/VRN_Bond/ListOfDeliveryOrder');
    }
    function ResetAll() {
        $('[data-valmsg-for]').html('<span><span>');
        ClosingWeight = 0;
        ClosingUnits = 0;
        $('#DeliveryOrderNo,#Value,#Duty,#CHAId,#Importer,#WorkOrderNo,#WorkOrderDate,#BondBOENo,#BondBOEDate,#BondNo,#BondDate,#WRNo,#WRDate,#GodownName,#CargoDescription,#SacNo,#SacDate,#Units,#Weight,#GodownId,#SpaceAppId,#ClosingUnits,#ClosingWeight,#Remarks,#ExBoeNo,#ExBoeDate').val('');
        setTimeout(function () { $('#DivDeliveryMsg,#DivDeliveryErrMsg').html(''); }, 5000);
    }
    $('#Bondbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstBond > li').show();
        } else {
            $('#lstBond > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstBond li').on("click", function () {
        debugger;
        ResetDeliveryOrderDet();
        ArrayOfDeliveryOrder = [];
        $('#TblDeliveryOrderDtl').hide();
        $('#TblDeliveryOrderDtl>tbody').html('');
        var bond = $(this).text();
        var arr = bond.split('_');
        $('#BondNo').val(arr[0]);
        $('#SpaceAppId').val($(this).attr('id'));
        $("#BondModal").modal("hide");
        $('#BondBOEDate,#DepositNo,#DepositDate,#BondBOENo,#WRNo,#WRDate,#Importer,#CargoDescription,#SacDate,#ClosingUnits,#ClosingWeight').val('');
       // $('#GodownId').val(0);
       // $('#lstGodown').html('');
        FillDetails();
    });
    function FillDetails() {
        var SpaceAppId = $('#SpaceAppId').val();
        if (SpaceAppId > 0) {
            $.ajax({
                url: '/Bond/VRN_Bond/GetDetForDeliveryOrder',
                type: 'GET',
                data: { SpaceAppId: SpaceAppId },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                     //   $('#GodownId').val(data.Data.GodownId);
                      //  $('#SpaceAppId').val(data.Data.SpaceAppId);
                       // $('#BondBOENo').val(data.Data.BondNo);
                        // $('#BondBOEDate').val(data.Data.BondDate);
                        $('#SacNo').val(data.Data.SacNo);
                        $('#BondNo').val(data.Data.BondNo);
                        $('#BondDate').val(data.Data.BondDate);
                        //$('#WRNo').val(data.Data.WRNo);
                        //$('#WRDate').val(data.Data.WRDate);
                        //  $('#GodownName').val(data.Data.BOE.GodownName);
                      //  $('#CargoDescription').val(data.Data.CargoDescription);
                     // $('#SacNo').val(data.Data.SacNo);
                        $('#SacDate').val(data.Data.SacDate);
                        $('#CHAId').val(data.Data.CHAId);
                        $('#Importer').val(data.Data.Importer);
                        $('#Remarks').val(data.Data.Remarks);
                        $('#LastDeliveryDate').val(data.Data.LastDeliveryDate);
                        GetDepositNo(SpaceAppId);
                        //ClosingUnits = data.Data.ClosingUnits;
                        //ClosingWeight = data.Data.ClosingWeight;
                        //$('#ClosingUnits').val(data.Data.ClosingUnits);
                        //$('#ClosingWeight').val(data.Data.ClosingWeight);

                    //  $('#WorkOrderDate').val(data.Data.WorkOrderDate);
                    }
                }
            });
        }
    }


    function GetDepositNo(SpaceAppId) {
        if (SpaceAppId > 0) {
            $.ajax({
                url: '/Bond/VRN_Bond/GetDepositNoForDelvOrder',
                type: 'GET',
                data: { SpaceAppId: SpaceAppId },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    $('#SearchDepositNo').css("display", "block");
                    if (data.Status == 1) {
                        var Html = '';
                        $.each(data.Data, function (i, item) {
                            debugger;
                            // Html += '<li onclick="FillContainerTxtBox(\'' + item.ContainerNo + '\')">' + item.ContainerNo + '</li>'
                            Html += '<li onclick="FillDepositTxtBox(' + item.DepositAppId + ',&quot;' + item.DepositNo + '&quot;)">' + item.DepositNo + '</li>';
                        });
                        $('#DepositList').html(Html);
                        //$('#GodownId').val(data.Data.GodownId);
                        //ClosingUnits = data.Data.ClosingUnits;
                        //ClosingWeight = data.Data.ClosingWeight;
                        //$('#ClosingUnits').val(data.Data.ClosingUnits);
                        //$('#ClosingWeight').val(data.Data.ClosingWeight);
                        //$('#CHAId').val(data.Data.CHAId);
                    }
                }
            });
        }
    }

    function FillDepositTxtBox(DepositAppId, DepositNo) {
        debugger;
        $('#BtnAddDeliveryOrder').prop("disabled", false);
        $('#DepositNo').val(DepositNo);
        $('#DepositAppId').val(DepositAppId);
        $("#DepositNoModal").modal("hide");
        $('[data-valmsg-for="Units"]').html('<span></span>');
        $('[data-valmsg-for="Weight"]').html('<span></span>');
        $('[data-valmsg-for="Areas"]').html('<span></span>');
        GetDepositNoDet(DepositAppId);
    }

    function GetDepositNoDet(DepositAppId) {
        debugger;
        if (DepositAppId > 0) {
            $.ajax({
                url: '/Bond/VRN_Bond/GetDepositNoDetForDelvOrder',
                type: 'GET',
                data: { DepositAppId: DepositAppId },
                dataType: 'JSON',
                success: function (data) {
                    debugger;
                    if (data.Status == 1) {
                        $('#GodownId').val(data.Data.GodownId);
                        ClosingAreas = data.Data.ClosingAreas;
                        ClosingUnits = data.Data.ClosingUnits;
                        ClosingWeight = data.Data.ClosingWeight;                                                
                        UnloadedUnits = data.Data.UnloadedUnits;
                        TotalValue = data.Data.Value;
                        TotalDuty = data.Data.Duty;
                        TotalArea = data.Data.UnloadedArea;
                        TotalWeight = data.Data.UnloadedWeight;
                        UnloadedValue = data.Data.UnloadedValue;
                        UnloadedDuty = data.Data.UnloadedDuty;
                        $('#ClosingAreas').val(data.Data.ClosingAreas);
                        $('#ClosingUnits').val(data.Data.ClosingUnits);
                        $('#ClosingWeight').val(data.Data.ClosingWeight);
                        $('#WRNo').val(data.Data.WRNo);
                        $('#WRDate').val(data.Data.WRDate);
                        $('#ClosingValue').val(data.Data.Value);
                        $('#ClosingDuty').val(data.Data.Duty);
                        $('#DepositDate').val(data.Data.DepositDate);
                    }
                }
            });
        }
    }

    function SaveDeliveryOrderDtl() {
        debugger;
        if ($('#Units').val() == '' || $('#Units').val() == 0) {
            $('[data-valmsg-for="Units"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        if ($('#Weight').val() == '' || $('#Weight').val() == 0) {
            $('[data-valmsg-for="Weight"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        //if ($('#Areas').val() == '' || $('#Areas').val() == 0) {
        //    $('[data-valmsg-for="Areas"]').html('<span>Fill Out This Field</span>');
        //    return false;
        //}
        if (Number($('#Units').val()) > Number(ClosingUnits)) {
            alert('Units Should Be Less Than Closing Units');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }
        if (Number($('#Weight').val()) > Number(ClosingWeight)) {
            alert('Weight Should Be Less Than Closing Weight');
            // $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            return false;
        }
        if (Number($('#Areas').val()) > Number(ClosingAreas)) {
            alert('Area Should Be Less Than Closing Area');
            // $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            return false;
        }
        if (Number($('#Value').val()) > Number(TotalValue)) {
            alert('Value Should Be Less Than Closing Value');
            return false;
        }
        if (Number($('#Duty').val()) > Number(TotalDuty)) {
            alert('Duty Should Be Less Than Closing Duty');
            return false;
        }
        if ((Number($('#ClosingUnits').val()) > 0) && (Number($('#ClosingAreas').val() <= 0))) {
            alert('Total Area Cannot Be Delivered, While Quantity Remaining.');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }

        if ((Number($('#ClosingUnits').val()) > 0) && (Number($('#ClosingWeight').val() <= 0))) {
            alert('Total Weight Cannot Be Delivered, While Quantity Remaining.');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }

        if ((Number($('#ClosingUnits').val()) > 0) && (Number($('#ClosingValue').val() <= 0))) {
            alert('Total Value Cannot Be Delivered, While Quantity Remaining.');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }

        if ((Number($('#ClosingUnits').val()) > 0) && (Number($('#ClosingDuty').val() <= 0))) {
            alert('Total Duty Cannot Be Delivered, While Quantity Remaining.');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }

        if ((Number($('#ClosingAreas').val()) > 0) && (Number($('#ClosingUnits').val() <= 0))) {
            alert('Total Quantity Cannot Be Delivered, While Area Remaining.');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }

        if ((Number($('#ClosingWeight').val()) > 0) && (Number($('#ClosingUnits').val() <= 0))) {
            alert('Total Quantity Cannot Be Delivered, While Weight Remaining.');
            //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
            return false;
        }

        $('#DivDeliveryOrderTblErrMsg').html('');
        if ($('#DepositNo').val() != "") {
            debugger;
            var DeliveryOrderDtl = {
               
                "DepositNo": $('#DepositNo').val(),
                "DepositAppId": $('#DepositAppId').val(),
                "DepositDate": $('#DepositDate').val(),
                "WRNo": $('#WRNo').val(),
                "WRDate": $('#WRDate').val(),
                "Units": $('#Units').val() == "" ? 0 : $('#Units').val(),
                "Weight": $('#Weight').val() == "" ? 0 : $('#Weight').val(),
                "Areas": $('#Areas').val() == "" ? 0 : $('#Areas').val(),
                "ClosingUnits": $('#ClosingUnits').val(),
                "ClosingWeight": $('#ClosingWeight').val(),
                "ClosingAreas": $('#ClosingAreas').val(),
                "Value": $('#Value').val() == "" ? 0 : $('#Value').val(),
                "Duty": $('#Duty').val() == "" ? 0 : $('#Duty').val(),
                "ClosingValue": $('#ClosingValue').val(),
                "ClosingDuty": $('#ClosingDuty').val(),
                "GodownId": $('#GodownId').val(),
                "ExBoeNo": $('#ExBoeNo').val(),
                "ExBoeDate": $('#ExBoeDate').val(),
            }
            var flg = 0;
            $.each(ArrayOfDeliveryOrder, function (i, item) {
                debugger;
                if(item.DepositNo==$('#DepositNo').val())
                {
                    flg = 1;
                }
            });
            if (flg == 1)
            {
                ResetDeliveryOrderDet();
                $('#BtnAddDeliveryOrder').prop("disabled", true);
                alert('DepositNo already added');
                item.DepositNo.remove();
                return false;
             

            }

            ArrayOfDeliveryOrder.push(DeliveryOrderDtl);
            $('#DepositList #' + $('#DepositNo').val()).remove();
            ResetDeliveryOrderDet();
            GenerateDeliveryOrderTable();
            $('#BtnAddDeliveryOrder').prop("disabled", true);
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Select A Deposit No In Order To Add Details');
            // $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
        }
    }

    function ResetDeliveryOrderDet() {
        debugger;
        $('#DivDeliveryOrderDetails').find('input:text,textarea').val('');
        $('#DepositAppId').val('');
        $('#GodownId').val('');
        $('#SearchDepositNo').css("display", "block");
    }

    function GenerateDeliveryOrderTable() {
        debugger;
        $('#TblDeliveryOrderDtl').hide();
        var Html = '';
        if (ArrayOfDeliveryOrder.length != 0) {
            $.each(ArrayOfDeliveryOrder, function (i, item) {
                debugger;
                Html += '<tr><td class="text-center">' + (i + 1) + '</td><td>' + item.DepositNo + '</td><td>' + item.DepositDate + '</td><td class="text-center"><a href="#" onclick="EditDeliveryOrderDtl(' + i + ')"><i class="fa fa fa-pencil-square Edit" aria-hidden="true"></i></a></td><td class="text-center"><a href="#" onclick="ViewDeliveryOrderDtlf(' + i + ')"><i class="fa fa-search-plus" aria-hidden="true"></i></a></td></tr>';
            });
            $('#TblDeliveryOrderDtl>tbody').html(Html);
            $('#TblDeliveryOrderDtl').show();
        }
    }

    function EditDeliveryOrderDtl(Index) {
        debugger;
        if ($('#BtnAddDeliveryOrder').prop("disabled") == true) {
            $('#SearchDepositNo').css("display", "block");
            $('#BtnAddDeliveryOrder').prop("disabled", false);
            $('#DepositNo').val(ArrayOfDeliveryOrder[Index].DepositNo);
            $('#DepositAppId').val(ArrayOfDeliveryOrder[Index].DepositAppId);
            $('#DepositDate').val(ArrayOfDeliveryOrder[Index].DepositDate);
            $('#WRNo').val(ArrayOfDeliveryOrder[Index].WRNo);
            $('#WRDate').val(ArrayOfDeliveryOrder[Index].WRDate);
            $('#Units').val(ArrayOfDeliveryOrder[Index].Units);
            $('#ClosingUnits').val(ArrayOfDeliveryOrder[Index].ClosingUnits);
            $('#ClosingWeight').val(ArrayOfDeliveryOrder[Index].ClosingWeight);
            $('#Areas').val(ArrayOfDeliveryOrder[Index].Areas);
            $('#ClosingAreas').val(ArrayOfDeliveryOrder[Index].ClosingAreas);
            $('#Weight').val(ArrayOfDeliveryOrder[Index].Weight);
            $('#Value').val(ArrayOfDeliveryOrder[Index].Value);
            $('#Duty').val(ArrayOfDeliveryOrder[Index].Duty);
            $('#ClosingValue').val(ArrayOfDeliveryOrder[Index].ClosingValue);
            $('#ClosingDuty').val(ArrayOfDeliveryOrder[Index].ClosingDuty);
            $('#GodownId').val(ArrayOfDeliveryOrder[Index].GodownId);
            $('#ExBoeNo').val(ArrayOfDeliveryOrder[Index].ExBoeNo);
            $('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
            ClosingUnits = Number(ArrayOfDeliveryOrder[Index].ClosingUnits) + Number(ArrayOfDeliveryOrder[Index].Units);
            ClosingWeight = Number(ArrayOfDeliveryOrder[Index].ClosingWeight) + Number(ArrayOfDeliveryOrder[Index].Weight);
            ClosingAreas = Number(ArrayOfDeliveryOrder[Index].ClosingAreas) + Number(ArrayOfDeliveryOrder[Index].Areas);
            ArrayOfDeliveryOrder.splice(Index, 1);
            GenerateDeliveryOrderTable();
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
        }
    }

    //function DeleteDeliveryOrderDtl(Index) {
    //    debugger;
    //    ArrayOfDeliveryOrder.splice(Index, 1);
    //    GenerateDeliveryOrderTable();
    //}

    function ViewDeliveryOrderDtlf(Index) {
        debugger;
        if ($('#BtnAddDeliveryOrder').prop("disabled") == true) {
            $('#BtnAddDeliveryOrder').prop("disabled", true);
            $('#SearchDepositNo').css("display", "none");
            $('#DepositNo').val(ArrayOfDeliveryOrder[Index].DepositNo);
            $('#DepositAppId').val(ArrayOfDeliveryOrder[Index].DepositAppId);
            $('#DepositDate').val(ArrayOfDeliveryOrder[Index].DepositDate);
            $('#WRNo').val(ArrayOfDeliveryOrder[Index].WRNo);
            $('#WRDate').val(ArrayOfDeliveryOrder[Index].WRDate);
            $('#Units').val(ArrayOfDeliveryOrder[Index].Units);
            $('#ClosingUnits').val(ArrayOfDeliveryOrder[Index].ClosingUnits);
            $('#ClosingWeight').val(ArrayOfDeliveryOrder[Index].ClosingWeight);
            $('#Weight').val(ArrayOfDeliveryOrder[Index].Weight);
            $('#Areas').val(ArrayOfDeliveryOrder[Index].Areas);
            $('#ClosingAreas').val(ArrayOfDeliveryOrder[Index].ClosingAreas);
            $('#ClosingValue').val(ArrayOfDeliveryOrder[Index].ClosingValue);
            $('#ClosingDuty').val(ArrayOfDeliveryOrder[Index].ClosingDuty);
            $('#Value').val(ArrayOfDeliveryOrder[Index].Value);
            $('#Duty').val(ArrayOfDeliveryOrder[Index].Duty);
            $('#GodownId').val(ArrayOfDeliveryOrder[Index].GodownId);
            $('#ExBoeNo').val(ArrayOfDeliveryOrder[Index].ExBoeNo);
            $('#ExBoeDate').val(ArrayOfDeliveryOrder[Index].ExBoeDate);
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
        }

    }

    function DeliveryOnSuccess(data) {
        if (data.Status == 1) {
            $('#DivDeliveryMsg').html(data.Message);
            setTimeout(function () {
                $('#DivBody').load('/Bond/VRN_Bond/CreateDeliveryOrder');
            },5000)
           // LoadDeliveryOrderList();
           // ResetAll();
        }
        else {
            $('#DivDeliveryErrMsg').html(data.Message);
        }
    }

    function DeliveryOnFailure() {

    }

    function FillBalancedUnits() {
        debugger;
        $('[data-valmsg-for="Units"]').html('<span></span>');
        if (Number($('#Units').val()) > Number(ClosingUnits)) {
            alert('Units Should Be Less Than Closing Units');
          //  $('#DivDeliveryErrMsg').html('<span>Units Should Be Less Than Closing Units</span>');
           // $('[data-valmsg-for="Units"]').html('<span>Units Should Be Less Than Closing Units</span>');
           // return false;
        }
        else {
            $('#ClosingUnits').val(parseInt(ClosingUnits - Number($('#Units').val())));
            // Added by Vineet Dated 13/07/2020
            $('#Areas').val(Math.ceil(TotalArea * Number($('#Units').val()) / UnloadedUnits));
            $('#ClosingAreas').val((ClosingAreas - Number(parseFloat(Number($('#Areas').val())))).toFixed(3));
            $('#Weight').val((TotalWeight * Number($('#Units').val()) / UnloadedUnits).toFixed(3));
            $('#ClosingWeight').val((ClosingWeight - Number(parseFloat(Number($('#Weight').val())))).toFixed(3));          

            $('#Value').val(Math.ceil(UnloadedValue * Number($('#Units').val()) / UnloadedUnits));
            $('#ClosingValue').val((TotalValue - Number(parseFloat(Number($('#Value').val())))).toFixed(3));
            $('#Duty').val(Math.ceil(UnloadedDuty * Number($('#Units').val()) / UnloadedUnits));
            $('#ClosingDuty').val((TotalDuty - Number(parseFloat(Number($('#Duty').val())))).toFixed(3));


            if ($('#Areas').val() > ClosingAreas) {
                $('#Areas').val(ClosingAreas);
                $('#ClosingAreas').val(0);
            }
            if ($('#Weight').val() > ClosingWeight) {
                $('#Weight').val(ClosingWeight);
                $('#ClosingWeight').val(0);
            }

            if ($('#Value').val() > TotalValue) {
                $('#Value').val(TotalValue);
                $('#ClosingValue').val(0);
            }
            if ($('#Duty').val() > TotalDuty) {
                $('#Duty').val(TotalDuty);
                $('#ClosingDuty').val(0);

            }
        }

    }

    function FillBalancedWeights() {
        debugger;
        $('[data-valmsg-for="Weight"]').html('<span></span>');
        if (Number($('#Weight').val()) > Number(ClosingWeight)) {
            alert('Weight Should Be Less Than Closing Weight');
          //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
          //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
           // return false;
        }
        else {
            $('#ClosingWeight').val((ClosingWeight - Number(parseFloat(Number($('#Weight').val())))).toFixed(3));
        }

    }

    function FillBalancedAreas() {
        debugger;
        $('[data-valmsg-for="Areas"]').html('<span></span>');
        if (Number($('#Areas').val()) > Number(ClosingAreas)) {
            alert('Area Should Be Less Than Closing Area');
            //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
            // return false;
        }
        else {
            $('#ClosingAreas').val((ClosingAreas - Number(parseFloat(Number($('#Areas').val())))).toFixed(3));
        }

    }

    function FillBalancedValue() {
        debugger;
        $('[data-valmsg-for="Value"]').html('<span></span>');
        if (Number($('#Value').val()) > Number(TotalValue)) {
            alert('Value Should Be Less Than Closing Value');
            //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
            // return false;
        }
        else {
            $('#ClosingValue').val((TotalValue - Number(parseFloat(Number($('#Value').val())))).toFixed(3));
        }

    }

    function FillBalancedDuty() {
        debugger;
        $('[data-valmsg-for="Duty"]').html('<span></span>');
        if (Number($('#Duty').val()) > Number(TotalDuty)) {
            alert('Duty Should Be Less Than Closing Duty');
            //  $('#DivDeliveryErrMsg').html('<span>Weight Should Be Less Than Closing Weight</span>');
            //  $('[data-valmsg-for="Weight"]').html('<span>Weight Should Be Less Than Closing Weight</span>');
            // return false;
        }
        else {
            $('#ClosingDuty').val((TotalDuty - Number(parseFloat(Number($('#Duty').val())))).toFixed(3));
        }

    }

    $('#BtnSaveDelvOrder').on("click", function () {
        debugger;
        $('#DivDeliveryOrderTblErrMsg').html('');
        if ($('#DepositNo').val() == "" && $('#TblDeliveryOrderDtl >tbody').html() != "") {
            if (ArrayOfDeliveryOrder.length != 0) {
                $('#DeliveryOrderXml').val(JSON.stringify(ArrayOfDeliveryOrder));
            }
        }
        else if ($('#DepositNo').val() != "" && $('#BtnAddDeliveryOrder').prop("disabled") == true) {
            if (ArrayOfDeliveryOrder.length != 0) {
                $('#DeliveryOrderXml').val(JSON.stringify(ArrayOfDeliveryOrder));
            }
        }
        else {
            $('#DivDeliveryOrderTblErrMsg').html('Please Add The Above Records');
            return false;
        }
    });

    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
</script>