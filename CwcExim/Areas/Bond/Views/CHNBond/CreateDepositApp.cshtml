@model CwcExim.Areas.Bond.Models.CHNDepositApp
<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div id="DivDepositApp" class="Head_h4">
            <div>
                @using (Ajax.BeginForm("AddEditDepositApp", "CHNBond", new AjaxOptions
                {
                    Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "DepositAppOnSuccess",
                    OnFailure = "DepositAppOnFailure"
                }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.SpaceappId)
                    @Html.HiddenFor(m => m.EntryId)
                    @Html.HiddenFor(m => m.EntryDate)
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Deposit Application</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Deposit No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.DepositNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Deposit Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.DepositDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.DepositDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>SAC No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.SacNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="SacSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#SacModal"></i></span>
                                @Html.ValidationMessageFor(m => m.SacNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>SAC Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.SacDate, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.SacDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Vehicle No:</label>
                            </div>
                            <span class="ReQSimbol">*</span>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.VehicleNo, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="VehicleSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#VehicleModal"></i></span>
                                @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })

                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Custom Seal No:</label>
                            </div>

                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.CustomSealNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomSealNo, "", new { @class = "Error_Msg" })
                                @*@Html.DropDownListFor(m => m.VehicleNo, new List<SelectListItem>
                                           {
                                           }, "----Select----", new { @class = "form-control input_sm dropdown" })
                                    @Html.ValidationMessageFor(m => m.VehicleNo, "", new { @class = "Error_Msg" })*@
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond BOE No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.BondBOENo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondBOENo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Bond BOE Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.BondBOEDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondBOEDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>WR No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.WRNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.WRNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>WR Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.WRDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.WRDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>


                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.BondNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Bond Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.BondDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.BondDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Custom Bond No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CustomBondNo, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomBondNo, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                <label>Custom Bond Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.CustomBondDate, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.CustomBondDate, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.HiddenFor(m => m.GodownId, new { Value = "0" })
                                <label>Godown:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                <span class="ReQSimbol">*</span>
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="GodownSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                                @Html.ValidationMessageFor(m => m.GodownName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.CHA, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @*@Html.HiddenFor(m => m.CHAId)*@
                                @Html.TextBoxFor(m => m.CHA, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.Importer, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.HiddenFor(m => m.ImporterId)
                                @Html.TextBoxFor(m => m.Importer, new { @class = "form-control input-sm", @readonly = true })
                                <span class="search" id="SacSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ImporterModal"></i></span>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Cargo Description:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.CargoDescription, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.CargoDescription, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Units:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Units, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Units, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>Weight:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Weight, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Value:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Value, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Value, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>Duty:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Duty, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.Duty, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Remarks:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control input-sm", @style = "width:100%;height:100px;" })
                                @Html.ValidationMessageFor(m => m.Remarks, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.IsInsured)
                            </div>
                            <div class="col-md-1 padding_rt">
                                <div class="boolean-container">
                                    @Html.CheckBoxFor(m => m.IsInsured)
                                    <label for="IsInsured"><i class="square"></i></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSave" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetDepositAppApp()" />
                        </div>
                    </div>
                    <div id="DivDepositAppErrMsg" class="logErrMsg" style="background-color:transparent"></div>
                    <div id="DivDepositAppMsg" class="logSuccMsg" style="background-color:transparent"></div>
                }
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="DivDepositAppList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="SacModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Sac No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="SacNobox" type="text" />
                <ul class="navList" id="SacNoList">
                    @{
                        if (ViewBag.SacNoList != null)
                        {
                            foreach (var item in ViewBag.SacNoList)
                            {
                                <li id="@item.SpaceappId" onclick="onSacNoClick(@item.EntryId,@item.SpaceappId,'@item.SacNo')">@item.SacNo</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="VehicleModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Vehicle No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="VehicleNobox" type="text" />
                <ul class="navList" id="VehicleNoList">
                    @*  @{
                            if (ViewBag.SacNoList != null)
                            {
                                foreach (var item in ViewBag.SacNoList)
                                {
                                    <li id="@item.SpaceappId" onclick="onSacNoClick(@item.EntryId,@item.SpaceappId,'@item.SacNo')">@item.SacNo</li>
                                }
                            }
                        }*@
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ImporterModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Importer Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Importerbox" type="text" />
                <ul class="navList" id="lstImporter">
                    @{
                        if (ViewBag.ListOfImporter != null)
                        {
                            foreach (var item in ViewBag.ListOfImporter)
                            {
                                <li id="@item.ImporterId">@item.ImporterName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="GodownModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Godownbox" type="text" />
                <ul class="navList" id="GodownList">
                    @{
                        if (ViewBag.GodownList != null)
                        {
                            foreach (var item in ViewBag.GodownList)
                            {
                                <li id="@item.Value">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
   // var dateString ;
   // var myDate = new Date(dateString);

    $(function () {
        debugger;
        GetDepositAppList();
         $('#VehicleSearch').hide();


    });

    $('#DepositDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onSelect: function (dateText) {
            var From = $('#EntryDate').val();
            var To = $('#DepositDate').val();
            var SF = From.split('/');
            var ST = To.split('/');
            var STyear = ST[2].split(" "); //Split Time and Year From InvoiceDate;
            //var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
            //var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
            var FromDate = SF[1] + '/' + SF[0] + '/' + SF[2]; // Createing Date In DD/MM/YYYY;
            var ToDate = ST[1] + '/' + ST[0] + '/' + STyear[0]; // Createing Date In DD/MM/YYYY;
            var dt1 = new Date(FromDate);
            var dt2 = new Date(ToDate);
            if (dt1 > dt2) {
                alert("Deposit Date Must be Greater Than or Equal To Gate Entry Date !!");
                return false;
            }
            else
                return true;
        },
        onClose: function () {
            $("[data-valmsg-for='DepositDate']").html('');
        }
    });

    $('#BOEDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BOEDate']").html('');
        }
    });

    $('#BondBOEDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='BondBOEDate']").html('');
        }
    });

    $('#WRDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='WRDate']").html('');
        }
    });



    $('#BondDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='WRDate']").html('');
        }
    });

    $('#CustomBondDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $("[data-valmsg-for='CustomBondDate']").html('');
        }
    });


    function GetDepositAppList() {
        debugger;
        $('#DivDepositAppList').load('/Bond/CHNBond/GetDepositAppList');
    }



    function ResetDepositAppApp() {
        debugger;
        var DepositDate=$('#DepositDate').val();
       // $("#SacModal ul li:contains(" + $("#SacNo").val() + ")").remove();
        $('#DivDepositApp').find('input:text,textarea').val('');
        $('#DivDepositApp #SpaceappId,#GodownId,#ImporterId').val('0');
        $('#DivDepositAppMsg').html('');
        $('#DivDepositAppErrMsg').html('');
        $('#DepositDate').val(DepositDate);
        $('#WRDate').val(DepositDate);
        $('#IsInsured').prop("checked", false);
        $('[data-valmsg-for]').html('<span></span>');
      // GetDepositAppList();
       // $('#CHAName,#ImporterName,#ImporterLicenseNo,#BOLAWBNo,#BOENo,#BOEDate,#CargoDescription,#NatureOfPackages,#ExpDateofWarehouse').val('');
      //  $('#ImporterId,#CHAId,#NoOfUnits,#DimensionPerUnit,#SpaceReq,#DutyAmt,#Weight,#AssessCIFvalue').val('0');
    }

    function LoadDepositApp() {
        debugger;
        $('#DivBody').load('/Bond/CHNBond/CreateDepositApp');
    }

    function DepositAppOnSuccess(data) {
        debugger;
        if (data.Status == 1) {
            $('#DivDepositAppMsg').html(data.Message);
            setTimeout(LoadDepositApp, 5000);
           // ResetAll();
           // GetDepositAppList();
        }
        else {
            $('#DivDepositAppErrMsg').html(data.Message);
        }
    }
    function DepositAppOnFailure() {

    }
    $('#Importerbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstImporter > li').show();
        } else {
            $('#lstImporter > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstImporter li').on("click", function () {
        $('#Importer').val($(this).text());
        $('#ImporterId').val($(this).attr('id'));
        $("#ImporterModal").modal("hide");
    });

    $('#Godownbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#GodownList > li').show();
        else {
            $('#GodownList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#GodownList > li').on("click", function () {
        $('#GodownName').val($(this).text());
        $('#GodownId').val($(this).attr('id'));
        $("#GodownModal").modal("hide");
    });

    $('#SacNobox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#SacNoList > li').show();
        else {
            $('#SacNoList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    //$('#SacNoList > li').on("click", function () {
    function onSacNoClick(EntryId, SpaceappId,SacNo) {
        debugger;
        ResetDepositAppApp();
        var arr = SacNo.split('_');
        var Sac = arr[0];
        $('#SacNo').val(Sac);
        $("#SacModal").modal("hide");
        //GetSacNoDet(SpaceappId,EntryId);
        $('#VehicleSearch').show();
        GetAllVehicle(Sac);
    }
        //});


    function GetAllVehicle(Sac) {
        debugger;
        $.ajax({
            url: '/Bond/CHNBond/GetAllVehicle',
            type: 'GET',
            dataType: 'JSON',
            data: { SacNo: Sac },
            success: function (data) {
                if (data.Status == 1) {
                    var Html = '';
                    $.each(data.Data, function (i, item) {
                        Html += '<li onclick="FillVehicleNoBox(' + item.EntryId + ',' + item.SpaceappId + ',&quot;' + item.VehicleNo + '&quot;)">' + item.VehicleNo + '</li>';
                    });
                    $('#VehicleNoList').html(Html);
                }
            }
        });
    }


    $('#VehicleNoBox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#VehicleModal .navList > li').show();
        } else {
            $('#VehicleModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    function FillVehicleNoBox(EntryId, SpaceappId, VehicleNo) {
        debugger;
        $('#VehicleNo').val(VehicleNo);
        $('#EntryId').val(EntryId);
        $('#SpaceappId').val(SpaceappId);
        $("#VehicleModal").modal("hide");
        GetSacNoDet(SpaceappId, EntryId);
    }

    function GetSacNoDet(SpaceappId, EntryId) {
        $.ajax({
            url: "/Bond/CHNBond/GetSacNoDepositDetails",
            type: "Get",
            dataType: "JSON",
            data: { SpaceappId: SpaceappId, EntryId: EntryId },
            async: false,
            success: function (data) {
                debugger;
                if (data.Status == 1) {
                    $('#SacDate').val(data.Data.SacDate);
                    $('#CHA').val(data.Data.CHA);
                    $('#CustomSealNo').val(data.Data.CustomSealNo);
                    $('#VehicleNo').val(data.Data.VehicleNo);
                    $('#GodownName').val(data.Data.GodownName);
                    $('#GodownId').val(data.Data.GodownId);
                    $('#Importer').val(data.Data.Importer);
                    $('#ImporterId').val(data.Data.ImporterId);
                    $('#BondBOENo').val(data.Data.BondBOENo);
                    $('#BondBOEDate').val(data.Data.BondBOEDate);
                    $('#CargoDescription').val(data.Data.CargoDescription);
                    $('#EntryDate').val(data.Data.EntryDate);
                    $('#WRNo').val(data.Data.WRNo);
                    $('#Units').val(data.Data.Units);
                    $('#Weight').val(data.Data.Weight);
                    $('#Value').val(data.Data.Value);
                    $('#Duty').val(data.Data.Duty);
                    //set Deposite date not less than SAC date. mks
                    if (data.Data.SacDate != "")
                    {
                        var from = data.Data.SacDate.split("/");
                        var date = new Date(from[2], from[1] - 1, from[0])
                        var currentMonth = date.getMonth();
                        var currentDate = date.getDate();
                        var currentYear = date.getFullYear();
                        $('#DepositDate').datepicker("option", "minDate", data.Data.SacDate);
                    }


                }
            }
        });
    }

    $('#BtnSave').on("click", function () {
        debugger;
        var From = $('#EntryDate').val();
        var To = $('#DepositDate').val();
        var SF = From.split('/');
        var ST = To.split('/');
        var STyear = ST[2].split(" "); //Split Time and Year From InvoiceDate;
       
        var FromDate = SF[1] + '/' + SF[0] + '/' + SF[2]; // Createing Date In DD/MM/YYYY;
        var ToDate = ST[1] + '/' + ST[0] + '/' + STyear[0]; // Createing Date In DD/MM/YYYY;
        var dt1 = new Date(FromDate);
        var dt2 = new Date(ToDate);
        if (dt1 > dt2) {
            alert("Deposit Date Must be Greater Than or Equal To Gate Entry Date !!");
            return false;
        }
        else
            return true;

    });

</script>