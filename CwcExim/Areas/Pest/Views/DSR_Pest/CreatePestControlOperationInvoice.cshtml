@model CwcExim.Areas.Pest.Models.DSRPestControl
@*@if (ViewBag.PaymentParty != null)
    {
        <input type="hidden" id="hdnPartyPayee" value="@ViewBag.PaymentParty" />
    }
    else
    {
        <input type="hidden" id="hdnPartyPayee" value="" />
    }*@

@if (ViewBag.ChemicalLst != null)
{
    <input type="hidden" id="hdnChemical" value="@ViewBag.ChemicalLst" />
}
else
{
    <input type="hidden" id="hdnChemical" value="" />
}
<style>
    .slimScrollDiv {
        height: 300px !important;
    }

    #slim_scroll {
        height: 300px !important;
    }

    #slim_scroll_1 {
        height: 300px !important;
    }

    #tbleCommodity.dataTable tbody > tr > td {
        cursor: pointer;
    }

    #tbleImp.dataTable tbody > tr > td {
        cursor: pointer;
    }

    .table.tblhd {
        border-bottom: 0;
    }

    .table.tblhd1 {
        border-bottom: 0;
    }

    .modal {
        padding-top: 70px;
    }
</style>

<div id="DivCreateStuffingReq" class="container-fluid">
    @using (Ajax.BeginForm("AddEditPestControl", "DSR_Pest", new AjaxOptions { HttpMethod = "POST", InsertionMode = InsertionMode.InsertAfter, OnSuccess = "PaymentOnSuccess", OnFailure = "PaymentOnFailure" }, new { @Id = "FumiInvoice" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ChemicalXML)
        @Html.HiddenFor(m => m.ChemicalDetails)

        @Html.Hidden("FumigationInvModelJson")
        @Html.HiddenFor(m => m.QuantityChemical)
        @Html.HiddenFor(m => m.HandlingCGST)
        @Html.HiddenFor(m => m.HandlingIGST)
        @Html.HiddenFor(m => m.HandlingSGST)
        @Html.HiddenFor(m => m.PestControlCGST)
        @Html.HiddenFor(m => m.PestControlSGST)
        @Html.HiddenFor(m => m.PestControlIGST)
        @Html.HiddenFor(m => m.Totaltaxable)
        @Html.HiddenFor(m => m.Total)
        @Html.HiddenFor(m => m.IGSTPer)
        @Html.HiddenFor(m => m.CGSTPer)
        @Html.HiddenFor(m => m.SGSTPer)
        @Html.HiddenFor(m => m.ChemicalInvXML)
        @Html.HiddenFor(m => m.SacCode)
        @Html.Hidden("hdnSupplyType")
        @Html.Hidden("hdnModule")

        <div class="row">
            <div class="col-md-offset-0-5 col-md-11">
                <div class="Head_h4">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Pest Control Operation Invoice</h4>
                        </div>
                    </div>



                    <div class="Head_h4" style="margin:5px -8px;">


                        <div class="row Form_Space_top">
                            <div class="Form_Input form-group">
                                <div class="col-md-2">

                                    <label>Fumigation Type</label>
                                </div>
                                <div class="col-md-2">

                                    @Html.DropDownListFor(m => m.FumiType, new List<SelectListItem> { new SelectListItem { Text = "Inside", Value = "Inside" },
                                   new SelectListItem { Text = "Outside", Value = "Outside" },
                                   new SelectListItem { Text = "Pallets", Value = "Pallets" }
                               }, "----Select----", new { @class = "form-control input-sm", @onchange = "ChangeFumi()" })


                                </div>
                                <div class="col-md-2">
                                    <label>Fumigation Date</label>
                                </div>
                                <div class="col-md-2 Date_Img">
                                    @Html.TextBoxFor(m => m.FumigationDate, new { @class = "form-control input-sm", @readonly = true, Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm") })


                                </div>
                                <div class="col-md-2">
                                    <label>Issue Date</label>
                                </div>
                                <div class="col-md-2 Date_Img">
                                    @Html.TextBoxFor(m => m.IssueDate, new { @class = "form-control input-sm", @readonly = true, Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm") })


                                </div>

                            </div>
                        </div>

                        <div class="Head_h5" style="margin:5px -8px;">
                            <div class="row">
                                <div class="col-md-12">
                                    @Html.HiddenFor(m => m.OutsideContainerXml)

                                    <h5>Out Side Container</h5>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-1-5">

                                        <label>Container No.</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBox("OutsideContainer", "", new { @class = "form-control input-sm" })

                                    </div>
                                    <div class="col-md-1-5">
                                        <label>Size</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownList("OutsideSize", new List<SelectListItem> { new SelectListItem { Text = "20", Value = "20" },
                                   new SelectListItem { Text = "40", Value = "40" }
                               }, "----Select----", new { @class = "form-control input-sm" })


                                    </div>

                                    <div class="col-md-1-5">

                                        <label>Amount</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBox("OutsideAmount", "0", new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" })

                                    </div>

                                    <div class="row">
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                            </div>

                            <div class="row">
                                <div class="col-md-offset-4 col-md-2  SignUp_space_bottom">
                                    <input type="button" id="btnAddOutsideDet" class="btn log_Btn_sm" value="Add" onclick="AddOutsideCont()" disabled />
                                </div>
                                <div class="col-md-2">
                                    <input type="button" id="btnResetOutsideDet" class="btn log_Btn_sm" value="Reset" onclick="ResetOutsideCont()" />
                                </div>
                            </div>
                            <div class="logErrMsg" id="DivTblOutsideErrMsg" style="background-color:transparent"></div>

                            <div class="row Form_Space_top">
                                <div class="col-md-12">
                                    <table class="table table-striped table-bordered dataTable" id="tblOutsideDet" style="width:100%;"></table>
                                </div>
                            </div>
                        </div>
                        <div class="Head_h5" style="margin:5px -8px;">
                            <div class="row">
                                <div class="col-md-12">
                                    <h5>In Side Container</h5>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-1-5">
                                        @Html.HiddenFor(m => m.InsideContainerXml)
                                        <label>Container No.</label>
                                    </div>
                                    <div class="col-md-2 padding_lt">
                                        @Html.TextBox("InsideContainer", "", new { @class = "form-control input-sm" })
                                        <span class="search" onclick="SearchContainerWise()"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                                        @Html.ValidationMessage("InsideContainer", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="col-md-0-5">
                                        <label>Size</label>
                                    </div>
                                    <div class="col-md-1-5 padding_lt">
                                        @Html.DropDownList("InsideSize", new List<SelectListItem> { new SelectListItem { Text = "20", Value = "20" },
                                   new SelectListItem { Text = "40", Value = "40" }
                               }, "----Select----", new { @class = "form-control input-sm" })
                                    </div>

                                    <div class="col-md-1">
                                        <label>CFSCode</label>
                                    </div>
                                    <div class="col-md-1-5 padding_lt">
                                        @Html.TextBox("InsideCFSCode", "", new { @class = "form-control input-sm" })
                                    </div>

                                    <div class="col-md-1">
                                        <label>SLA CD</label>
                                    </div>
                                    <div class="col-md-1 padding_lt">
                                        @Html.TextBox("InsideSLACD", "", new { @class = "form-control input-sm" })
                                    </div>

                                    <div class="col-md-1">
                                        <label>Amount</label>
                                    </div>
                                    <div class="col-md-1 padding_lt">
                                        @Html.TextBox("InsideAmount", "0", new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>

                            <div class="row SignUp_space_bottom SignUp_space_top"></div>

                            <div class="row">
                                <div class="col-md-offset-4 col-md-2  SignUp_space_bottom">
                                    <input type="button" id="btnAddInsideDet" class="btn log_Btn_sm" value="Add" onclick="AddInsideCont()" disabled />
                                </div>
                                <div class="col-md-2">
                                    <input type="button" id="btnResetInsideDet" class="btn log_Btn_sm" value="Reset" onclick="ResetInsideCont()" />
                                </div>
                            </div>
                            <div class="logErrMsg" id="DivTblInsideContErrMsg" style="background-color:transparent"></div>

                            <div class="row Form_Space_top">
                                <div class="col-md-12">
                                    <table class="table table-striped table-bordered dataTable" id="tblInsideDet" style="width:100%;"></table>
                                </div>
                            </div>
                        </div>
                        <div class="Head_h5" style="margin:5px -8px;">
                            <div class="row">
                                <div class="col-md-12">
                                    <h5>Pallets</h5>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-1-5">
                                       
                                        <label>No of Pallets</label>
                                    </div>
                                    <div class="col-md-2 padding_lt">
                                        @Html.TextBox("Pallets", "", new {@onblur="PalletsCanCount()", @class = "form-control input-sm",@onkeypress = "return AllowOnlyInteger(event)" })                                       
                                    </div>
                                    
                                </div>
                                <div class="clearfix"></div>
                            </div>

                            <div class="row SignUp_space_bottom SignUp_space_top"></div>

                           
                        </div>

                        <div class="Head_h5" style="margin:5px -8px;">

                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Place Of Fumigation</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(m => m.Place, new { @class = "form-control input-sm" })

                                    </div>
                                    <div class="col-md-1-5">
                                        <label>Container Type</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(m => m.CType, new List<SelectListItem> { new SelectListItem { Text = "Loaded", Value = "Loaded" },
                                   new SelectListItem { Text = "Empty", Value = "Empty" }
                               }, "----Select----", new { @class = "form-control input-sm" })


                                    </div>

                                    <div class="col-md-1-5">

                                        <label>No. Of Pkg.</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(m => m.Pkg, new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyInteger(event)" })

                                    </div>


                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Inv Spl No.</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(m => m.InvSplNo, new { @class = "form-control input-sm" })

                                    </div>
                                    <div class="col-md-1-5">
                                        <label>via/Vessel No.</label>
                                    </div>
                                    <div class="col-md-2">
                               
                                        @Html.TextBoxFor(m => m.VesselNo, new { @class = "form-control input-sm" })


                                        

                                    </div>

                                    <div class="col-md-1-5">

                                        <label>Dosages</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(m => m.Dosages, new List<SelectListItem> { new SelectListItem { Text = "72GMS/CM", Value = "72GMS/CM" },
                                   new SelectListItem { Text = "64GMS/CM", Value = "64GMS/CM" },
                                   new SelectListItem { Text = "56GMS/CM", Value = "56GMS/CM" },
                                   new SelectListItem { Text = "48GMS/CM", Value = "48GMS/CM" },
                                   new SelectListItem { Text = "40GMS/CM", Value = "40GMS/CM" }
                               }, "----Select----", new { @class = "form-control input-sm" })



                                    </div>


                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Port Of Loading</label>
                                    </div>
                                    <div class="col-md-2">
                                        <span class="ReQSimbol">*</span>
                                        @Html.HiddenFor(m => m.PortOfLoadingId)
                                        @Html.TextBoxFor(m => m.PortOfLoadingName, new { @class = "form-control input_sm", @readonly = true })
                                        <span class="search" id="PortOfLoadingSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="PortOfLoadingSerach();" data-target="#PortModal"></i></span>


                                    </div>
                                    <div class="col-md-1-5">
                                        <label>Chemical</label>
                                    </div>
                                    <div class="col-md-2">
                                        <span class="ReQSimbol">*</span>
                                        @Html.DropDownListFor(m => m.ChemicalFumigation, new List<SelectListItem> { new SelectListItem { Text = "MBR666.4", Value = "MBR666.4" },
                                   new SelectListItem { Text = "ALP", Value = "ALP" },
                                    new SelectListItem { Text = "MBR445.09", Value = "MBR445.09" }
                               }, "----Select----", new { @class = "form-control input-sm" })


                                    </div>

                                    <div class="col-md-1-5">

                                        <label>Temperature</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(m => m.Temperature, new { @class = "form-control input-sm" })

                                    </div>


                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Country Name</label>
                                    </div>
                                    <div class="col-md-2">
                                        <span class="ReQSimbol">*</span>
                                        @if (ViewBag.Country != null)
                                        {
                                            @Html.DropDownListFor(m => m.CountryId, new SelectList(ViewBag.Country, "CountryId", "CountryName"), "---Select---", new { @class = "form-control input-sm" })
                                        }
                                        else
                                        {
                                            @Html.DropDownListFor(m => m.CountryId, new SelectList("", "Value", "Text"), "---Select---", new { @class = "form-control input-sm dropdown" })
                                        }


                                    </div>
                                    <div class="col-md-1-5">
                                        <label>Exposure</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(m => m.Exposure, new List<SelectListItem> { new SelectListItem { Text = "24 hrs", Value = "24" },
                                   new SelectListItem { Text = "48 hrs", Value = "48" },
                                    new SelectListItem { Text = "72 hrs", Value = "72" }
                               }, "----Select----", new { @class = "form-control input-sm" })


                                    </div>

                                    <div class="col-md-1-5">

                                        <label>Distance </label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(m => m.Distance, new { @class = "form-control input-sm", @onkeypress = "return AllowOnlyInteger(event)" })

                                    </div>


                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Port Of Discharge</label>
                                    </div>
                                    <div class="col-md-2">
                                        <span class="ReQSimbol">*</span>
                                        @Html.HiddenFor(m => m.PortOfDestId)
                                        @Html.TextBoxFor(m => m.PortOfDestName, new { @class = "form-control input_sm", @readonly = true })
                                        <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="PortOfDestSerach();" data-target="#PortDestModal"></i></span>



                                    </div>
                                    <div class="col-md-1-5">
                                        <label>Gas Tight</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(m => m.GasTight, new List<SelectListItem> { new SelectListItem { Text = "Yes", Value = "Yes" },
                                   new SelectListItem { Text = "No", Value = "No" }
                               }, "----Select----", new { @class = "form-control input-sm" })


                                    </div>

                                    <div class="col-md-1-5">

                                        <label>Pressor Decay</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(m => m.Pressor, new List<SelectListItem> { new SelectListItem { Text = "Yes", Value = "Yes" },
                                   new SelectListItem { Text = "No", Value = "No" }
                               }, "----Select----", new { @class = "form-control input-sm" })


                                    </div>


                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Package Type</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(m => m.PackageType, new { @class = "form-control input_sm" })
                                    </div>
                                    <div class="col-md-1-5">
                                        <label>No Canes</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.TextBoxFor(m => m.Canes, new { @class = "form-control input_sm", @onkeypress = "return AllowOnlyInteger(event)" })




                                    </div>




                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Cargo Description</label>
                                    </div>
                                    <div class="col-md-9">

                                        @Html.TextBoxFor(m => m.CargoDesc, new { @class = "form-control input_sm" })



                                    </div>





                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Exporter Name</label>
                                    </div>
                                    <div class="col-md-9">
                                        <span class="ReQSimbol">*</span>
                                        @Html.HiddenFor(m => m.ExporterId)
                                        @Html.TextBoxFor(m => m.ExporterName, new { @class = "form-control input_sm", @readonly = true })

                                        <span class="search" id="ExporterSerach"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ExporterModal"></i></span>




                                    </div>





                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Consignee</label>
                                    </div>
                                    <div class="col-md-9">

                                        @Html.TextBoxFor(m => m.Consignee, new { @class = "form-control input_sm" })



                                    </div>





                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Remarks</label>
                                    </div>
                                    <div class="col-md-9">

                                        @Html.TextBoxFor(m => m.Remarks, new { @class = "form-control input_sm" })



                                    </div>





                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="Form_Input form-group">
                                    <div class="col-md-2-5">

                                        <label>Asm Type</label>
                                    </div>
                                    <div class="col-md-2">

                                        @Html.DropDownListFor(m => m.AsmType, new List<SelectListItem> { new SelectListItem { Text = "Cash", Value = "Cash" },
                                   new SelectListItem { Text = "Cheque", Value = "Cheque" },
                                    new SelectListItem { Text = "Bank Draft", Value = "Bank Draft" }
                               }, "----Select----", new { @class = "form-control input-sm" })








                                    </div>





                                </div>
                            </div>
                        </div>

                    </div>






                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2 col-md-offset-1-5 col_cus_offset_2 col_cus_2_5">
                                <div class="boolean-container">
                                    @*@Html.RadioButtonFor(m => m.InvoiceType, "Tax", new { id = "Tax", @checked = true, @onclick = "IVType('Tax')" })*@
                                    @Html.RadioButtonFor(m => m.InvoiceType, "Tax", new { id = "Tax", @checked = true, @onclick = "IVType('Tax')" })
                                    <label for="Tax"><i class="circle"></i><span>Tax Invoice</span></label>
                                </div>
                            </div>
                            <div class="col-md-2 col_cus_3">
                                <div class="boolean-container">
                                    @*@Html.RadioButtonFor(m => m.InvoiceType, "Bill", new { id = "Bill", @onclick = "IVType('Bill')" })*@
                                    @Html.RadioButtonFor(m => m.InvoiceType, "Bill", new { id = "Bill", @onclick = "IVType('Bill')" })
                                    <label for="Bill"><i class="circle"></i><span>Bill Of Supply</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Invoice No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @*@Html.TextBoxFor(m => m.InvoiceNo, new { @readonly = true })*@
                                @Html.TextBoxFor(m => m.InvoiceNo, new { @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2">
                                <label>Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @*@Html.TextBox("DeliveryDate","", new { @class = "form -control input-sm", @readonly = true })*@
                                @*@Html.TextBoxFor(m => m.InvoiceDate, new { @readonly = true, Value = DateTime.Today.ToString("dd/MM/yyyy") })*@
                                @Html.TextBoxFor(m => m.DeliveryDate, new { @readonly = true, Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm") })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Party Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                <span class="ReQSimbol">*</span>
                                @*@Html.HiddenFor(m => m.PartyId)*@
                                @Html.HiddenFor(m => m.PartyId)
                                @*@Html.TextBoxFor(m => m.PartyName, new { @readonly = true })*@
                                @Html.TextBoxFor(m => m.PartyName, new { @class = "form-control input-sm", @readonly = true, @onfocus = "hideMsg(this)" })

                                <span class="search" id="PartySearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PartyModal"></i></span>
                                @Html.ValidationMessageFor(m => m.PartyName, "", new { @class = "Error_Msg" })
                                <span style="color:red" id="ErrPartyName"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Payer Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                <span class="ReQSimbol">*</span>
                                @*@Html.HiddenFor(m => m.PayeeId)*@
                                @Html.HiddenFor(m => m.PayeeId)
                                @*@Html.TextBoxFor(m => m.PayeeName, new { @readonly = true })*@
                                @Html.TextBoxFor(m => m.PayeeName, new { @class = "form-control input-sm", @readonly = true, @onfocus = "hideMsg(this)" })

                                <span class="search" id="PayerSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PayerModal"></i></span>

                                @Html.ValidationMessageFor(m => m.PayeeName, "", new { @class = "Error_Msg" })
                                <span style="color:red" id="ErrPayeeName"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label> GST No:</label>
                            </div>
                            <div class="col-md-4">
                                @*@Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })*@
                                @Html.TextBoxFor(m => m.GSTNo, new { @readonly = true })
                            </div>
                            <div class="col-md-offset-2-5 col-md-1-5 col_cus_2">
                                <label>Under:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.HiddenFor(m => m.ExportUnder)
                                @Html.DropDownList("SEZ", new List<SelectListItem>
                                        {
                                        new SelectListItem { Text="SEZWP",Value="SEZWP"},
                                        new SelectListItem {Text="SEZWOP",Value="SEZWOP" }

                                        }, "---Select---", new { @class = "form-control input-sm dropdown" })
                                @Html.ValidationMessage("SEZ", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>

                   

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Naration:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">                               
                                @Html.TextAreaFor(m => m.Naration, new { @style = "height:75px;", @maxlength = "500" })
                            </div>
                        </div>
                    </div>
                    <div class="Head_h4" style="margin:5px -8px;display:none;">

                        <div class="row Form_Space_top">
                            <div class="Form_Input form-group">
                                <div class="col-md-1-5">
                                    <input type="hidden" id="ReceiptNo" />
                                    <label>Chemical Name</label>
                                </div>
                                <div class="col-md-4">
                                    @Html.Hidden("ChemicalId")
                                    @Html.TextBox("ChemicalName", "", new { @class = "form-control input-sm", @readonly = true })
                                    <span class="search" id="PayeeSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ChemicalModal"></i></span>
                                    <span style="color:red" id="ErrChemicalName"></span>

                                    @Html.ValidationMessage("m => m.ChemicalName", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-offset-3 col-md-1-5">
                                    <label>Quantity</label>
                                </div>
                                <div class="col-md-2 Date_Img">
                                    @Html.TextBox("Quantity", "", new { @class = "form-control input-sm", onkeypress = "return AllowOnlyDecimal(event)" })
                                    <span style="color:red" id="ErrQuantity"></span>
                                    @Html.ValidationMessage("Quantity", "", new { @class = "Error_Msg" })
                                </div>
                                <div class="row">
                                </div>
                            </div>

                            <div class="Form_Input form-group">
                                <div class="col-md-1-5">
                                    <input type="hidden" id="ReceiptNo" />
                                    <label>Batch No</label>
                                </div>
                                <div class="col-md-4">

                                    @Html.TextBox("BatchNo", "", new { @class = "form-control input-sm", @readonly = true })
                                </div>
                                <div class="col-md-offset-3 col-md-1-5">
                                    <label>Expiry Date</label>
                                </div>
                                <div class="col-md-2 Date_Img">
                                    @Html.TextBox("ExpiryDate", "", new { @class = "form-control input-sm" })

                                </div>
                                <div class="row">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                        </div>

                        <div class="row">
                            <div class="col-md-offset-4 col-md-2  SignUp_space_bottom">
                                <input type="button" id="btnAddFormOneDet" class="btn log_Btn_sm" value="Add" onclick="AddChemical()" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" id="btnResetFormOneDet" class="btn log_Btn_sm" value="Reset" onclick="ResetChemical()" />
                            </div>
                          
                        </div>
                        <div class="logErrMsg" id="DivTblStuffingErrMsg" style="background-color:transparent"></div>

                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <table class="table table-striped table-bordered dataTable" id="tblCheDet" style="width:100%;"></table>
                            </div>
                        </div>
                    </div>
                   
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label> Handling Amount:</label>
                            </div>
                            <div class="col-md-4">
                               

                                @Html.TextBoxFor(m => m.HandlingAmount, "", new
                            { onkeypress = "return AllowOnlyDecimal(event)",
                                maxlength = "11"
                            })
                                @Html.ValidationMessageFor(m => m.HandlingAmount, "", new { @class = "Error_Msg" })

                            </div>
                            <div class="col-md-3">
                                <input type="button" value="Get Charge" class="btn log_Btn_sm" id="btnGet" />
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label> Amount:</label>
                            </div>
                            <div class="col-md-4">
                                <span class="ReQSimbol">*</span>
                              
                                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control input-sm", onkeypress = "return AllowOnlyDecimal(event)", maxlength = "11"})                              
                                @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "Error_Msg" })

                                <span style="color:red" id="Erramount"></span>
                            </div>
                           
                        </div>
                    </div>
                    
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label> CGST:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.CGST, "", new
                           { @*@onblur = "return caltax();",*@ onkeypress = "return AllowOnlyDecimal(event)",
                               maxlength = "11",
                               @readonly = "true"
                           })
                            </div>
                            <div class="col-md-1-5 col_cus_2">
                                <label> SGST:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.SGST, "", new
                           { @*@onblur = "return caltax();",*@ onkeypress = "return AllowOnlyDecimal(event)",
                               maxlength = "11",
                               @readonly = "true"
                           })
                            </div>

                            <div class="col-md-1-5 col_cus_2">
                                <label> IGST:</label>
                            </div>
                            <div class="col-md-2">
                                @Html.TextBoxFor(m => m.IGST, "", new
                           { @*@onblur = "return caltax();",*@ onkeypress = "return AllowOnlyDecimal(event)",
                               maxlength = "11",
                               @readonly = "true"
                           })
                            </div>
                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label> Round Up:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.Round_up, "", new { @readonly = true })
                            </div>

                        </div>
                    </div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label> Total:</label>
                            </div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(m => m.NetAmt, "", new { @readonly = true })
                            </div>

                        </div>
                    </div>

                    <div class="row SignUp_space_bottom SignUp_space_top">
                        <div class="stoke"></div>
                    </div>
                    <div class="logSuccMsg Form_Space_bottom" id="DivMiscInvMsg" style="background-color:transparent"></div>
                    <div class="row SignUp_space_bottom2">
                        <div class="col-md-2">
                            <input type="submit" value="Save" class="btn log_Btn_sm" id="btnSave" disabled="disabled" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" value="Reset" class="btn log_Btn_sm" onclick="ResetField()" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" value="Print" class="btn log_Btn_sm" onclick="Print()" id="btnPrint" disabled />
                        </div>
                        <div class="col-md-3">
                            <input type="button" id="BtnCertificate" class="btn log_Btn_sm" value="Certificate Print" onclick="PreviewCertificate()" disabled />
                        </div>
                        <div class="col-md-3">
                            <input type="button" id="BtnGenerateIRN" class="btn log_Btn_sm" value="Generate IRN" onclick="GenerateIRN()" disabled="disabled" />
                        </div>

                    </div>


                    <div><br /></div>

                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-2">
                                <input type="button" value="Show List" onclick="ShowList()" class="btn log_Btn_sm" />
                            </div>
                            <div class="col-md-offset-4 col-md-2">
                                <input type="text" placeholder="Search by Invoice No" id="SearchInvoiceNo" />
                            </div>
                            <div class="col-md-2">
                                <input type="text" placeholder="Date (dd/mm/yyyy)" id="SearchInvoiceDate" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Search" onclick="SearchInvoice()" class="btn log_Btn_sm" />
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-12" id="DivListOfInvoice">
                                <table class="table table-bordered table-striped dataTable">
                                    <thead>
                                        <tr>
                                            <td>Sl No</td>
                                            <td>Invoice No</td>
                                            <td>Invoice Date</td>
                                            <td>Party Name</td>
                                            <td>Invoice Print</td>
                                            <td>Certificate Print</td>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


<div id="ChemicalModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Chemical</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Chemicalbox" type="text" />
                <ul class="navList" id="lstChemical">
                    @*@{
                        foreach (var item in Model.lstGodownList)
                        {
                        <li id="@item.GodownId">@item.GodownName</li>
                        }
                        }*@
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="PartyModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal" style="width:100%;">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="CloseParty()" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Party</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Party Name Or Party Address" id="Partybox" type="text" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchPartyByPartyCode()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="4" width="40%">Party Name</th>
                            <th colspan="8" width="60%">Party Address</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tbleParty">
                        <tbody>
                            @{
                                if (ViewBag.lstParty != null)
                                {
                                    foreach (var item in ViewBag.lstParty)
                                    {
                                        <tr onclick="SelectParty(@item.PartyId,'@item.PartyName','@item.Address','@item.StateName','@item.StateCode','@item.GSTNo')">
                                            <td colspan="4" width="40%" class="txt_wrp">@item.PartyName</td>
                                            <td colspan="8" width="60%" class="txt_wrp">@item.PartyCode</td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.State != null && Convert.ToBoolean(ViewBag.State) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreParty()" class="btn log_Btn_sm" id="btnLoadMore">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMoreParty()" class="btn log_Btn_sm" id="btnLoadMore" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseParty()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="PayerModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal" style="width:100%;">
            <div class="modal-header popup_header">
                <button type="button" class="close" onclick="ClosePayer()" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Payer</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Payer Name Or Payer Address" id="Payerbox" type="text" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="SearchPayerByPayerCode()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd1" style="width:100%; margin:0 !important; border-bottom:0; padding:0;">
                    <thead>
                        <tr>
                            <th colspan="4" width="40%">Payer Name</th>
                            <th colspan="8" width="60%">Payer Address</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll_1">
                    <table class="table dataTable table-bordered table-striped slim_tble" id="tblePayer">
                        <tbody>
                            @{
                                if (ViewBag.lstPayer != null)
                                {
                                    foreach (var item in ViewBag.lstPayer)
                                    {
                                        <tr onclick="SelectPayer(@item.PartyId,'@item.PartyName')">
                                            <td colspan="4" width="40%" class="txt_wrp">@item.PartyName</td>
                                            <td colspan="8" width="60%" class="txt_wrp">@item.PartyCode</td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        @if (ViewBag.StatePayer != null && Convert.ToBoolean(ViewBag.StatePayer) == true)
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePayer()" class="btn log_Btn_sm" id="btnPayerLoadMore">Load More Data</button>
                        }
                        else
                        {
                            <button type="button" style="width:100%; margin-left:0;" onclick="LoadMorePayer()" class="btn log_Btn_sm" id="btnPayerLoadMore" disabled>Load More Data</button>
                        }
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="ClosePayer()">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="PortModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Portbox" type="text" />
                <ul class="navList" id="lstPort"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="PortDestModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Port Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="PortDestbox" type="text" />
                <ul class="navList" id="lstDestPort"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="ContainerModal" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Container No.</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="ContainerBox" type="text" />
                <ul class="navList" id="ContainerList">
                    @*@{
                            if (ViewBag.ContainerList != null)
                            {
                                foreach (var item in ViewBag.ContainerList)
                                {
                                    <li id="@item.Value">@item.Text</li>
                                }
                            }
                        }*@
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ExporterModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Exporter Name</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Exporterbox" type="text" />
                <ul class="navList" id="lstExporter">
                    @{
                        if (ViewBag.ListOfExporter != null)
                        {
                            foreach (var item in ViewBag.ListOfExporter)
                            {
                                <li id="@item.EXPEximTraderId">@item.ExporterName</li>
                            }
                        }
                        else
                        {
                            <li></li>
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>

<script>


    $(function () {
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });

    $(function () {
        $('#slim_scroll_1').slimScroll({
            allowPageScroll: true
        });
    });


    var Page = 0;
    var Page1 = 0;
    var TimeInSeconds;
    $(document).ready(function () {
        TimeInSeconds = 5000;
        $('#DeliveryDate').datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
            }
        });


        $('#IssueDate').datetimepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
            }
        });


        $('#FumigationDate').datetimepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
            }
        });


        
        $('#HandlingAmount').val('0');
        //PartyBinding();
        //PayeeBinding();
        ChemicalBinding();
        document.getElementById("Pallets").disabled = true;
    });
    function hideMsg(elem) {
        $(elem).parent().find(".field-validation-error").html(" ");
    }
    //function PartyBinding() {
    //    var PartyJson = JSON.parse($('#hdnPartyPayee').val());
    //    var html = '';
    //    $.each(PartyJson, function (i, item) {
    //        html += '<li id="' + item.PartyId + '" onclick="selectParty(' + item.PartyId + ');">' + item.PartyName + '</li>';
    //    });
    //    $('#lstParty').html(html);
    //}
    $('#btnSave').on("click", function () {
        debugger;

        if (Number($('#Amount').val()) ==0) {
            alert("Please put Amount or should be greater than 0");
            return false;
        }
        if ($('#ChemicalFumigation').val() == '') {
            alert("Please put Chemical");
            return false;
        }
        //if ($('#FumiType').val() == "Inside" || $('#FumiType').val() == "Outside" || $('#FumiType').val() == "Pallets") {
        //    if (ArrayOfOutSideCont.length <= 0 && ArrayOfInsideDetails.length <= 0 && $('#Pallets').val()=='') {
        //        alert("Please add Outside or Inside Container");
        //        return false;
        //    }
        //}
        setTimeout(function () { $('#DivTblStuffingErrMsg').html(''); }, 5000);

    });
    function ChemicalBinding() {
        debugger;
        if ($('#hdnChemical').val() != "") {
            var ChemicalJson = JSON.parse($('#hdnChemical').val());
            var html = '';
            $.each(ChemicalJson, function (i, item) {
                html += '<li id="' + item.ChemicalId + '" onclick="selectChemical(' + item.ChemicalId + ');">' + item.ChemicalName + '</li>';
            });
            $('#lstChemical').html(html);
        }
    }


    $('#Chemicalbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstChemical > li').show();
        else {
            $('#lstChemical > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#Quantity').keyup(function () {
        var val = $(this).val().trimLeft();
        if (val == "") {
            $('#ErrQuantity').html('Fill Out This Field');
        }
        else {
            $('#ErrQuantity').html('');
        }
    });


    function selectChemical(id) {
        debugger;
        var ChemicalJson = JSON.parse($('#hdnChemical').val());

        var Chemical = $.grep(ChemicalJson, function (item) { return item.ChemicalId == id; })[0];
        $('#ChemicalId').val(Chemical.ChemicalId);
        $('#ChemicalName').val(Chemical.ChemicalName);
        $('#QuantityChemical').val(Chemical.Quantity);
        $('#Quantity').val(Chemical.Quantity);
        $("#ChemicalModal").modal("hide");
        $('#ErrChemicalName').html('');
        $('#ErrQuantity').html('');

        var chname = Chemical.ChemicalName.split("#");

        $('#ChemicalName').val(chname[0].trim());
        //  $('#ChemicalId').val($(this).prop('id'));
        $('#BatchNo').val(chname[1].trim());
        $('#ExpiryDate').val(chname[2].trim());

    }


    function SelectParty(PartyId, PartyName, Address, StateName, StateCode, GSTNo) {
        $('#PartyId').val(PartyId);
        $('#PartyName').val(PartyName);
        $('#GSTNo').val(GSTNo);
        $('#hdnAddress').val(Address);
        $('#hdnState').val(StateName);
        $('#hdnStateCode').val(StateCode);
        if ($('#PaymentSheetModelJson').val() != null && $('#PaymentSheetModelJson').val() != '' && $('#PaymentSheetModelJson').val() != 'undefined') {
            var rawJson = JSON.parse($('#PaymentSheetModelJson').val());
            rawJson.PartyId = $('#PartyId').val();
            rawJson.PartyName = $('#PartyName').val();
            rawJson.PartyGST = $('#GSTNo').val();
            rawJson.PartyAddress = $('#hdnAddress').val();
            rawJson.PartyState = $('#hdnState').val();
            rawJson.PartyStateCode = $('#hdnStateCode').val();
            rawJson.ROAddress = (rawJson.ROAddress).replace(new RegExp('<br/>', "gi"), '|_br_|');
            $('#PaymentSheetModelJson').val(JSON.stringify(rawJson));
        }
        $("#PartyModal").modal("hide");
        LoadParty();
    }


    function LoadParty() {

        Page = 0;
        $.ajax({
            url: '/Pest/DSR_Pest/LoadPartyList',
            type: 'GET',
            data: { PartyCode: "", Page: Page },
            success: function (data) {
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data.lstParty, function (item, elem) {

                        html += '<tr onclick="SelectParty(' + elem.PartyId + ',&quot;' + elem.PartyName + '&quot;,&quot;' + elem.Address + '&quot;,&quot;' + elem.State + '&quot;,&quot;' + elem.StateCode + '&quot;,&quot;' + elem.GSTNo + '&quot;)"><td colspan="4" width="40%" class="txt_wrp">' + elem.PartyName + '</td><td colspan="8" width="60%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });

                    $('#tbleParty tbody').html(html);

                    if (data.Data.State == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function LoadMoreParty() {

        $.ajax({
            url: '/Pest/DSR_Pest/LoadPartyList',
            type: 'GET',
            data: { PartyCode: "", Page: Page + 1 },
            success: function (data) {
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data.lstParty, function (item, elem) {

                        html += '<tr onclick="SelectParty(' + elem.PartyId + ',&quot;' + elem.PartyName + '&quot;,&quot;' + elem.Address + '&quot;,&quot;' + elem.State + '&quot;,&quot;' + elem.StateCode + '&quot;,&quot;' + elem.GSTNo + '&quot;)"><td colspan="4" width="40%" class="txt_wrp">' + elem.PartyName + '</td><td colspan="8" width="60%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tbleParty tbody').html(html);
                    else
                        $('#tbleParty tbody').append(html);
                    Page++;


                    if (data.Data.State == true)
                        $('#btnLoadMore').prop('disabled', false);
                    else $('#btnLoadMore').prop('disabled', true);
                }
            }
        });
    }
    function SearchPartyByPartyCode() {

        if ($('#Partybox').val() != '') {
            $.ajax({
                url: '/Pest/DSR_Pest/SearchPartyNameByPartyCode',
                type: 'GET',
                data: { PartyCode: $('#Partybox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        $.each(data.Data.lstParty, function (item, elem) {
                            html += '<tr onclick="SelectParty(' + elem.PartyId + ',&quot;' + elem.PartyName + '&quot;,&quot;' + elem.Address + '&quot;,&quot;' + elem.State + '&quot;,&quot;' + elem.StateCode + '&quot;,&quot;' + elem.GSTNo + '&quot;)"><td colspan="8" width="40%" class="txt_wrp">' + elem.PartyName + '</td><td colspan="4" width="60%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tbleParty tbody').html('');
                        $('#tbleParty tbody').html(html);
                        $('#btnLoadMore').prop('disabled', true);
                        Page = -1;
                    }
                    else {
                        $('#tbleParty tbody').html('');
                        Page = -1;
                        $('#btnLoadMore').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadParty();
    }

    function CloseParty() {
        $('#Partybox').val('');
        $("#PartyModal").modal("hide");
        LoadParty();
    }

    function SelectPayer(PartyId, PartyName) {
        $('#PayeeId').val(PartyId);
        $('#PayeeName').val(PartyName);
       
        if ($('#PaymentSheetModelJson').val() != null && $('#PaymentSheetModelJson').val() != '' && $('#PaymentSheetModelJson').val() != 'undefined') {
            var rawJson = JSON.parse($('#PaymentSheetModelJson').val());
            rawJson.PartyId = $('#PayeeId').val();
            rawJson.PartyName = $('#PayeeName').val();
           
            $('#PaymentSheetModelJson').val(JSON.stringify(rawJson));
        }
        $("#PayerModal").modal("hide");
        LoadPayer();
    }

    function LoadPayer() {
        Page1 = 0;
        $.ajax({
            url: '/Pest/DSR_Pest/LoadPayerList',
            type: 'GET',
            data: { PartyCode: "", Page: Page1 },
            success: function (data) {
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data.lstPayer, function (item, elem) {
                        html += '<tr onclick="SelectPayer(' + elem.PartyId + ',&quot;' + elem.PartyName + '&quot;)"><td colspan="4" width="40%" class="txt_wrp">' + elem.PartyName + '</td><td colspan="8" width="60%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });

                    $('#tblePayer tbody').html(html);

                    if (data.Data.StatePayer == true)
                        $('#btnPayerLoadMore').prop('disabled', false);
                    else $('#btnPayerLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function LoadMorePayer() {

        $.ajax({
            url: '/Pest/DSR_Pest/LoadPayerList',
            type: 'GET',
            data: { PartyCode: "", Page: Page1 + 1 },
            success: function (data) {
                if (data.Status == 1) {

                    var html = '';
                    $.each(data.Data.lstPayer, function (item, elem) {

                        html += '<tr onclick="SelectPayer(' + elem.PartyId + ',&quot;' + elem.PartyName + '&quot;)"><td colspan="4" width="40%" class="txt_wrp">' + elem.PartyName + '</td><td colspan="8" width="60%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                    });
                    if (Page == -1)
                        $('#tblePayer tbody').html(html);
                    else
                        $('#tblePayer tbody').append(html);
                    Page++;


                    if (data.Data.StatePayer == true)
                        $('#btnPayerLoadMore').prop('disabled', false);
                    else $('#btnPayerLoadMore').prop('disabled', true);
                }
            }
        });
    }

    function SearchPayerByPayerCode() {

        if ($('#Payerbox').val() != '') {
            $.ajax({
                url: '/Pest/DSR_Pest/SearchPayerNameByPayeeCode',
                type: 'GET',
                data: { PartyCode: $('#Payerbox').val() },
                success: function (data) {
                    if (data.Status == 1) {
                        var html = '';
                        $.each(data.Data.lstPayer, function (item, elem) {
                            html += '<tr onclick="SelectPayer(' + elem.PartyId + ',&quot;' + elem.PartyName + '&quot;)"><td colspan="8" width="40%" class="txt_wrp">' + elem.PartyName + '</td><td colspan="4" width="60%" class="txt_wrp">' + elem.PartyCode + '</td></tr>';
                        });
                        $('#tblePayer tbody').html('');
                        $('#tblePayer tbody').html(html);
                        $('#btnPayerLoadMore').prop('disabled', true);
                        Page = -1;
                    }
                    else {
                        $('#tblePayer tbody').html('');
                        Page = -1;
                        $('#btnPayerLoadMore').prop('disabled', false);
                    }

                }
            });
        }
        else
            LoadPayer();
    }

    function ClosePayer() {
        $('#Payerbox').val('');
        $("#PayerModal").modal("hide");
        LoadPayer();
    }

    //function CalculateCharges()
    //{
    //    ChargesAmountCalculation();       
    //}

    var TaxType = '@ViewData["InvType"].ToString()';
    function IVType(Type) {

        TaxType = Type;
        $('#DivBody').load('/Pest/DSR_Pest/CreatePestControlOperationInvoice?type=' + Type);
    }
    if (TaxType == 'Tax')
        $('#Tax').prop('checked', true);
    else {
        $('#Bill').prop('checked', true);
        $('#CGST').val(0);
        $('#CGST').prop('readonly', true);
        $('#SGST').val(0);
        $('#SGST').prop('readonly', true);
        $('#IGST').val(0);
        $('#IGST').prop('readonly', true);
    }
    //calculate total amount
    function caltotal() {
        var amt = $('#Amount').val();
        var round = Math.ceil(amt) - amt;
        var rounduptot = Math.ceil(amt);

        $('#Round_up').val(round.toFixed(2));
        $('#Total').val(rounduptot);
        $('#CGST').val('0.00');
        $('#SGST').val('0.00');
        $('#IGST').val('0.00');
    }

    //calculate tax

    function caltax() {
        var cgst = $('#CGST').val();
        var sgst = $('#SGST').val();
        var igst = $('#IGST').val();
        var amt = $('#Amount').val();
        if (amt != '') {
            var totamt = 0;
            if (cgst == '')
                cgst = 0;


            if (sgst == '')
                sgst = 0;

            if (igst == '')
                igst = 0;


            totamt = parseFloat(amt) + parseFloat(cgst) + parseFloat(sgst) + parseFloat(igst);

            var round = Math.ceil(totamt) - totamt;
            var rounduptot = Math.ceil(totamt);

            $('#Round_up').val(round.toFixed(2));
            $('#Total').val(rounduptot);

            if (cgst > 0 || sgst > 0) {
                $('#IGST').prop('readonly', true);
            }

            if (igst > 0) {
                cgst = 0;
                sgst = 0;
                $('#CGST').prop('readonly', true);
                $('#SGST').prop('readonly', true);
            }
            $('#Amount').prop('readonly', true);
        }
    }
    var ArrayOfChemicalDetails = [];
    function AddChemical() {
        debugger;
        var Quantity = $('#Quantity').val();
        var QuantityChemical = $('#QuantityChemical').val()



        if (ValidateChemicalDet()) {

            if (Quantity <= QuantityChemical) {
                debugger;
                var ChemicalDetails = {
                    "ChemicalId": $('#ChemicalId').val(),
                    "ChemicalName": $('#ChemicalName').val(),
                    "BatchNo": $('#BatchNo').val(),
                    "ExpiryDate": $('#ExpiryDate').val(),
                    "Quantity": $('#Quantity').val()

                };
                /*if (EditIndex > -1)
                    ArrayOfContainerDetails.splice(EditIndex, 1, ContainerDetails);
                else*/

                var flag = 0;
                $.each(ArrayOfChemicalDetails, function (i, item) {
                    if (item.ChemicalId == ChemicalDetails.ChemicalId) {
                        flag = 1;

                    }

                });


                if (flag == 0)
                    ArrayOfChemicalDetails.push(ChemicalDetails);

                $('#tblCheDet').html('');
                $('#tblCheDet').html('');

                $('#ChemicalName, #Quantity,#BatchNo,#ExpiryDate').val('');
                GenerateTable();
                //ResetFormOneDet();
                // ResetFormOneDetPartial();
            }
            else {
                alert("quantity should be less than stockinamount")
            }
        }

    }


    var ArrayOfOutSideCont = [];
    function AddOutsideCont() {


        if (ValidateOutsideDet()) {


            var OutsideDetails = {
                "ContainerNo": $('#OutsideContainer').val(),
                "Size": $('#OutsideSize').val(),
                "Amount": $('#OutsideAmount').val()

            };
            /*if (EditIndex > -1)
                ArrayOfContainerDetails.splice(EditIndex, 1, ContainerDetails);
            else*/

            var flag = 0;
            $.each(ArrayOfOutSideCont, function (i, item) {
                if (item.ContainerNo == OutsideDetails.ContainerNo) {
                    flag = 1;

                }

            });

            var CCan = 0;
            if (flag == 0)
                ArrayOfOutSideCont.push(OutsideDetails);

            if (ArrayOfOutSideCont.length > 0) {
                for (var i = 0; i < ArrayOfOutSideCont.length; i++) {
                    var tCan = 0;
                    if (ArrayOfOutSideCont[i].Size == '20') {
                        tCan = 3;
                    }
                    else if (ArrayOfOutSideCont[i].Size == '40') {
                        tCan = 6;
                    }
                    CCan += tCan;
                }
                $('#Canes').val(CCan);
            }

            $('#tblOutsideDet').html('');
            $('#tblOutsideDet').html('');

            $('#OutsideContainer, #OutsideSize').val('');
            $('#OutsideAmount').val('0');

            GenerateTableOutside();
            //ResetFormOneDet();
            // ResetFormOneDetPartial();
        }


    }
    var ArrayOfInsideDetails = [];
    function AddInsideCont() {

        debugger;

        if (ValidateInsideDet()) {

            debugger;

            var InsideDetails = {
                "ContainerNo": $('#InsideContainer').val(),
                "Size": $('#InsideSize').val(),
                "Amount": $('#InsideAmount').val(),
                "CfsCode": $('#InsideCFSCode').val(),
                "Slacd": $('#InsideSLACD').val()

            };
            /*if (EditIndex > -1)
                ArrayOfContainerDetails.splice(EditIndex, 1, ContainerDetails);
            else*/

            var flag = 0;
            $.each(ArrayOfInsideDetails, function (i, item) {
                if (item.ContainerNo == InsideDetails.ContainerNo) {
                    flag = 1;

                }

            });

            var CCan = 0;
            if (flag == 0)
                ArrayOfInsideDetails.push(InsideDetails);

            if (ArrayOfInsideDetails.length > 0) {
                for (var i = 0; i < ArrayOfInsideDetails.length; i++) {
                    var tCan = 0;
                    if (ArrayOfInsideDetails[i].Size == '20') {
                        tCan = 3;
                    }
                    else if (ArrayOfInsideDetails[i].Size == '40')
                    {
                        tCan = 6;
                    }
                    CCan += tCan;                    
                }
                $('#Canes').val(CCan);
            }

            $('#tblInsideDet').html('');
            $('#tblInsideDet').html('');

            $('#InsideContainer, #InsideSize,#InsideCFSCode,#InsideSLACD').val('');
            $('#InsideAmount').val('0');

            GenerateTableInside();
            //ResetFormOneDet();
            // ResetFormOneDetPartial();
        }



    }
    function PalletsCanCount() {
        debugger;
        var ptCan = 0;
        var pt = $('#Pallets').val() == "" ? 0 : $('#Pallets').val();
        if (pt > 0) {
            ptCan = Math.ceil(pt / 50);
        }
        $('#Canes').val(ptCan);
    }
    function GenerateTable() {
        var tablehtml = '<table id="tblCheDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
            + '<thead><tr><th style="width:8%;text-align:center;">SL No</th><th>Chemical Name</th><th>Quantity</th><th>BatchNo</th><th>Expiry Date</th><th style="width:10%;text-align:center;">Edit</th></tr>'
            + '</thead><tbody>';
        $.each(ArrayOfChemicalDetails, function (i, data) {
            tablehtml += '<tr><td style="text-align:center;">' + (i + 1) + '</td><td>' + data.ChemicalName + '</td><td>' + data.Quantity + '</td><td>' + data.BatchNo + '</td><td>' + data.ExpiryDate + '</td>'
                + '<td style="text-align:center;"><a href="#" onclick="EditChemicalDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td>'
            //+ '<td style="text-align:center;"><a href="#" onclick="ViewChemicalDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblCheDet').html(tablehtml);

        if (ArrayOfChemicalDetails.length > 0) {
            $('#ChemicalInvXML').val(JSON.stringify(ArrayOfChemicalDetails));
        }
        else {
            $('#ChemicalInvXML').val('');
        }
    }
    function GenerateTableOutside() {
        var tablehtml = '<table id="tblOutsideDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
            + '<thead><tr><th style="width:8%;text-align:center;">SL No</th><th>Container No</th><th>Size</th><th>Amount</th><th style="width:10%;text-align:center;">Edit</th></tr>'
            + '</thead><tbody>';
        $.each(ArrayOfOutSideCont, function (i, data) {
            tablehtml += '<tr><td style="text-align:center;">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.Size + '</td><td>' + data.Amount + '</td>'
                + '<td style="text-align:center;"><a href="#" onclick="EditOutsideDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td>'
            //+ '<td style="text-align:center;"><a href="#" onclick="ViewChemicalDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblOutsideDet').html(tablehtml);

        if (ArrayOfOutSideCont.length > 0) {
            $('#OutsideContainerXml').val(JSON.stringify(ArrayOfOutSideCont));
        }
        else {
            $('#OutsideContainerXml').val('');
        }
    }
    function GenerateTableInside() {
        debugger;
        var tablehtml = '<table id="tblInsideDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
            + '<thead><tr><th style="width:8%;text-align:center;">SL No</th><th>ContainerNo</th><th>Size</th><th>CFSCode</th><th>SLACode</th><th>Amount</th><th style="width:10%;text-align:center;">Edit</th></tr>'
            + '</thead><tbody>';
        $.each(ArrayOfInsideDetails, function (i, data) {
            tablehtml += '<tr><td style="text-align:center;">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.Size + '</td><td>' + data.CfsCode + '</td><td>' + data.Slacd + '</td><td>' + data.Amount + '</td>'
                + '<td style="text-align:center;"><a href="#" onclick="EditInsideDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td>'
            //+ '<td style="text-align:center;"><a href="#" onclick="ViewChemicalDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblInsideDet').html(tablehtml);

        if (ArrayOfInsideDetails.length > 0) {
            $('#InsideContainerXml').val(JSON.stringify(ArrayOfInsideDetails));
        }
        else {
            $('#InsideContainerXml').val('');
        }
    }

    $('#btnGet').on("click", function () {
        debugger;
        if ($('#FumiType').val() != "")
        {
            if ($('#FumiType').val() == "Inside" || $('#FumiType').val() == "Outside" || $('#FumiType').val() == "Pallets") {
                if (ArrayOfOutSideCont.length <= 0 && ArrayOfInsideDetails.length <= 0 && $('#Pallets').val() == '') {
                    alert("Please add Outside, Inside Container or Pallets");
                    return false;
                }
            }

            ChargesAmountCalculation();                         
        }
        else
        {
            alert("Please select fumigation type");
            return false;
        }
       
    })

    

    function ChargesAmountCalculation() {
        debugger;
                   
        if ($('#PartyId').val() == "") {
            alert("please select Party");
        }
        else if ($('#PayeeId').val() == "") {
            alert("please select Payer");
        }
        else if (Number($('#Distance').val()) == 0) {
            alert("Distance No should not be blank");
        }
        else if (Number($('#Canes').val()) == 0) {
            alert("Canes No should not be blank");
        }
        
            //else if ($('#Amount').val() == "" || $('#Amount').val() == "0") {
            //    alert("Please put Amount>0");
            //}
            //else if(ArrayOfChemicalDetails.length<=0)
            //{
            //    alert("Please add Chemical details");
            //}
        else {
            Amount = $('#Amount').val() == "" ? "0" : $('#Amount').val();
            InvoiceType = $("input[name='InvoiceType']:checked").val();;
            PartyId = $('#PartyId').val();
            lstChemicalarr = ArrayOfChemicalDetails;
            var HandlingAmount = $('#HandlingAmount').val() == "" ? "0" : $('#HandlingAmount').val();
            $('#ExportUnder').val($('#SEZ').val());
            var ExportUnder = $('#ExportUnder').val();
            var Distance = $('#Distance').val();
            var Cane = $('#Canes').val();
            var DeliveryDate = $('#DeliveryDate').val();
            $.ajax({
                url: '/Pest/DSR_Pest/GetPestControlCharges',
                type: 'POST',
                async: false,
                datatype: JSON,
                data: { Amount: Amount, InvoiceType: InvoiceType, PartyId: PartyId, ChemicalDetails: lstChemicalarr, HandlingAmount: HandlingAmount, DeliveryDate: DeliveryDate, "ExportUnder": ExportUnder, Distance: Distance, Cane: Cane },
                success: function (data) {
                    if (data != undefined || data != null) {
                        $('#SEZ').prop("disabled", true);
                        $('#FumiType').attr("readonly", "readonly");                       
                        document.getElementById("Canes").readOnly = true;
                        document.getElementById("Distance").readOnly = true;
                        document.getElementById("Amount").readOnly = true;
                        document.getElementById("HandlingAmount").readOnly = true;
                        document.getElementById("Pallets").readOnly = true;
                        populateJsondata(data);
                    }
                    else {
                        alert("fail");
                    }

                }
            });
        }
    }

    function populateJsondata(data) {
        debugger;
        $("#Amount").val(data.Amount);
        $("#HandlingAmount").val(data.HandlingAmount);
        $("#HandlingIGST").val(data.HandlingIGST);
        $("#HandlingCGST").val(data.HandlingCGST);
        $("#HandlingSGST").val(data.HandlingSGST);
        $("#PestControlIGST").val(data.PestControlIGST);
        $("#PestControlCGST").val(data.PestControlCGST);
        $("#PestControlSGST").val(data.PestControlSGST);

        $("#CGST").val(data.CGST);
        $("#SGST").val(data.SGST);
        $("#IGST").val(data.IGST);

        $("#Round_up").val(data.Round_up);
        $("#Total").val(data.Total);
        $("#NetAmt").val(data.NetAmt);
        $("#Totaltaxable").val(data.Totaltaxable);
        $("#btnSave").prop("disabled", false);
        $("#IGSTPer").val(data.IGSTPer);
        $("#CGSTPer").val(data.CGSTPer);
        $("#SGSTPer").val(data.SGSTPer);
        $("#SacCode").val(data.SacCode);
    }

    function ResetChemical() {

        $('#ChemicalName, #Quantity').val('');
        $('#ErrChemicalName').html('');
        $('#ErrQuantity').html('');
        $('#btnAddFormOneDet').prop("disabled", false);
    }



    function ResetOutsideCont() {
        debugger;
        $('#OutsideContainer, #OutsideSize,#OutsideAmount').val('');

        var ContDetType = $('#FumiType').val();

        if (ContDetType == "Outside") {
            $('#btnAddOutsideDet').prop('disabled', false);
            $('#btnAddInsideDet').prop('disabled', true);
        }
       

        if (ContDetType == "") {
            $('#btnAddOutsideDet').prop('disabled', true);
            $('#btnAddInsideDet').prop("disabled", true);
        }
    }

    function ResetInsideCont() {

        $('#InsideContainer, #InsideSize,#InsideCFSCode,#InsideSLACD').val('');
        $('#InsideAmount').val('0');


        var ContDetType = $('#FumiType').val();

        if (ContDetType == "Inside") {
            $('#btnAddOutsideDet').prop('disabled', true);
            $('#btnAddInsideDet').prop("disabled", false);
        }
       

        if (ContDetType == "") {
            $('#btnAddOutsideDet').prop('disabled', true);
            $('#btnAddInsideDet').prop("disabled", true);
        }
    }

    function EditChemicalDet(i) {
        debugger;
        if ($('#ChemicalName').val() == '') {
            $('#btnAddFormOneDet').prop("disabled", false);
            $('#ChemicalName').val(ArrayOfChemicalDetails[i].ChemicalName);
            $('#ChemicalId').val(ArrayOfChemicalDetails[i].ChemicalId);
            $('#Quantity').val(ArrayOfChemicalDetails[i].Quantity);
            $('#BatchNo').val(ArrayOfChemicalDetails[i].BatchNo);
            $('#ExpiryDate').val(ArrayOfChemicalDetails[i].ExpiryDate);

            ArrayOfChemicalDetails.splice(i, 1);
            GenerateTable();
        }
        else
            alert('Please add the earlier record to edit');
    }


    function EditOutsideDet(i) {
        debugger;
        if ($('#OutsideContainer').val() == '') {
            $('#btnAddOutsideDet').prop("disabled", false);
            $('#OutsideContainer').val(ArrayOfOutSideCont[i].ContainerNo);
            $('#OutsideSize').val(ArrayOfOutSideCont[i].Size);
            $('#OutsideAmount').val(ArrayOfOutSideCont[i].Amount);

            ArrayOfOutSideCont.splice(i, 1);
            GenerateTableOutside();
        }
        else
            alert('Please add the earlier record to edit');
    }

    function EditInsideDet(i) {
        debugger;
        if ($('#InsideContainer').val() == '') {
            $('#btnAddInsideDet').prop("disabled", false);
            $('#InsideContainer').val(ArrayOfInsideDetails[i].ContainerNo);
            $('#InsideSize').val(ArrayOfInsideDetails[i].Size);
            $('#InsideCFSCode').val(ArrayOfInsideDetails[i].CfsCode);
            $('#InsideSLACD').val(ArrayOfInsideDetails[i].Slacd);
            $('#InsideAmount').val(ArrayOfInsideDetails[i].Amount);

            ArrayOfInsideDetails.splice(i, 1);
            GenerateTableInside();
        }
        else
            alert('Please add the earlier record to edit');
    }
    function ViewChemicalDet(i) {
        $('#ChemicalId').val(ArrayOfChemicalDetails[i].ChemicalId);
        $('#ChemicalName').val(ArrayOfChemicalDetails[i].ChemicalName);
        $('#Quantity').val(ArrayOfChemicalDetails[i].Quantity);
        $('#btnAddFormOneDet').prop("disabled", true);
    }

    function ValidateChemicalDet() {
        debugger;
        var Status = true;
        if ($('#ChemicalName').val() == "") {
            $('#ErrChemicalName').html('Fill Out This Field');
            Status = false;
        }

        if ($('#Quantity').val() == "") {
            $('#ErrQuantity').html('Fill Out This Field');
            Status = false;
        }

        if ($('#ExpiryDate').val() == "") {

            Status = false;
        }

        return Status;
    }

    function ValidateOutsideDet() {
        debugger;
        var Status = true;
        if ($('#OutsideContainer').val() == "") {
            alert("Please put Container No.");
            Status = false;
        }

        if ($('#OutsideSize').val() == "") {
            alert("Please put Size");
            Status = false;
        }
        if ($('#OutsideAmount').val() == "") {
            alert("Please put Amount");
            Status = false;
        }
        return Status;
    }

    function ValidateInsideDet() {
        debugger;
        var Status = true;
        if ($('#InsideContainer').val() == "") {
            alert("Please put Container No.");
            Status = false;
        }

        if ($('#InsideSize').val() == "") {
            alert("Please put Size");
            Status = false;
        }
        if ($('#InsideCFSCode').val() == "") {
            alert("Please put CfsCode");
            Status = false;
        }
        if ($('#InsideSLACD').val() == "") {
            alert("Please put SLACode");
            Status = false;
        }

        if ($('#InsideAmount').val() == "") {
            alert("Please put Amount");
            Status = false;
        }
        return Status;
    }
    function PaymentOnSuccess(data) {

        if (data.Status == 1 || data.Status == 2) {
            if ($('#DivMiscInvMsg').hasClass('logErrMsg'))
                $('#DivMiscInvMsg').removeClass('logErrMsg').addClass('logSuccMsg');
           // $('#InvoiceNo').val(data.Data.InvoiceNo);
            var AppNo = data.Data.InvoiceNo;
            var AppValues = AppNo.split("-")
            $('#InvoiceNo').val(AppValues[0]);
            $('#hdnSupplyType').val(AppValues[1]);

            $('#BtnGenerateIRN').removeAttr('disabled');
            $('#FumigationInvModelJson').val(JSON.stringify(data.Data));
            $('#DivMiscInvMsg').html(data.Message);
            $('#btnPrint').removeAttr('disabled');
            $('#BtnCertificate').removeAttr('disabled');

            $('#btnSave').attr('disabled', true);
            //setTimeout(ResetField, TimeInSeconds);
            setTimeout(function () { $('#DivMiscInvMsg').html(''); }, 5000);
        }
        else {
            if ($('#DivMiscInvMsg').hasClass('logSuccMsg'))
                $('#DivMiscInvMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMiscInvMsg').html(data.Message);
            
            $('#btnPrint').attr('disabled', true);
            $('#BtnCertificate').attr('disabled', true);
            setTimeout(function () { $('#DivMiscInvMsg').html(''); }, 5000);
        }
    }
    function PaymentOnFailure() {
        alert("Error");
    }
    function ResetField() {

        $('#DivBody').load('/Pest/DSR_Pest/CreatePestControlOperationInvoice');
    }

    function BindJson() {
        debugger;
        if ($('#PartyName').val() == '') {
            // $('[data-valmsg-for="PartyName"]').html('<span>Fill Out This Field</span>');
            $('#ErrPartyName').html('Fill Out This Field');
            return false;
        }
        else if ($('#PayeeName').val() == '') {
            //   $('[data-valmsg-for="PayeeName"]').html('<span>Fill Out This Field</span>');
            $('#ErrPayeeName').html('Fill Out This Field');
            return false;
        }
        else if ($('#Container').val() == '') {
            $('[data-valmsg-for="Container"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        else if ($('#amount').val() == '') {
            //   $('[data-valmsg-for="amount"]').html('<span>Fill Out This Field</span>');
            $('#Erramount').html('Fill Out This Field');
            return false;
        }
        else {


            var conf = confirm("Do you want to save ?");

            if (conf) {
                try {
                    $('#btnSave').attr('disabled', true);


                    var data = {
                        InvoiceId: 0,
                        DeliveryDate: $('#DeliveryDate').val(),
                        InvoiceType: TaxType,
                        PartyId: $('#PartyId').val(),
                        PartyName: $('#PartyName').val(),
                        PayeeId: $('#PayeeId').val(),
                        PayeeName: $('#PayeeName').val(),
                        PartyGST: $('#GSTNo').val(),
                        Container: $('#Container').val(),
                        Naration: $('#Naration').val(),
                        Amount: $('#amount').val(),
                        CGST: $('#cgst').val(),
                        SGST: $('#sgst').val(),
                        IGST: $('#IGST').val(),
                        Round_up: $('#round_up').val(),
                        Total: $('#total').val()


                    };


                    $('#FumigationInvModelJson').val(JSON.stringify(data));
                    var rawJson = JSON.parse($('#FumigationInvModelJson').val());

                    rawJson.InvoiceId = 0;
                    rawJson.InvoiceType = TaxType;
                    rawJson.DeliveryDate = $('#DeliveryDate').val();
                    rawJson.PartyId = $('#PartyId').val();
                    rawJson.PartyName = $('#PartyName').val();
                    rawJson.PayeeId = $('#PayeeId').val();
                    rawJson.PayeeName = $('#PayeeName').val();
                    rawJson.PartyGST = $('#GSTNo').val();
                    rawJson.Container = $('#Container').val();
                    rawJson.Amount = $('#amount').val();
                    rawJson.CGST = $('#cgst').val();
                    rawJson.SGST = $('#sgst').val();
                    rawJson.IGST = $('#IGST').val();
                    rawJson.Round_up = $('#round_up').val();
                    rawJson.Total = $('#total').val();
                    //  rawJson.RoundUp = Number(rawJson.Round_up.toFixed(2));
                    //  rawJson.Total = Number(rawJson.Total);
                    rawJson.Naration = $('#Naration').val();
                    rawJson.ExportUnder = $('#ExportUnder').val();
                    //var ChemicalData =
                    //    {
                    //        ChemicalId: $('#ChemicalId').val(),
                    //        ChemicalName: $('#ChemicalName').val(),
                    //        Quantity: $('#Quantity').val(),
                    //    }


                    $('#ChemicalDetails').val(JSON.stringify(ArrayOfChemicalDetails));


                    $('#ChemicalXML').val(JSON.stringify(ArrayOfChemicalDetails));
                    $('#FumigationInvModelJson').val(JSON.stringify(rawJson));

                    $('form#FumiInvoice').submit();

                }
                catch (e) {
                    $('#btnSave').removeAttr('disabled');
                }
            }
        }
    }





    //Printing Misc. Invoice

    function Print() {

        debugger;
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetBulkInvoiceReport", "DSR_ReportCWC", new { area = "Report" })',
            headers: { "__RequestVerificationToken": Token },
            data: {
                InvoiceNumber: $('#InvoiceNo').val(),
                InvoiceModule: 'PEST',
                PeriodFrom: '@DateTime.Now.ToString("dd/MM/yyyy")',
                PeriodTo: '@DateTime.Now.ToString("dd/MM/yyyy")',
                InvoiceModuleName: 'Pest',
            },
            dataType: 'JSON',
            success: function (data) {
                window.open(data.Data + '?t=' + (new Date().getTime()), "_blank", "fullscreen=yes");
            }
        });
    }

    function CurrentcyToWord(s) {
        var th = ['', 'thousand', 'million', 'billion', 'trillion'];
        var dg = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
        var tn = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen'];
        var tw = ['twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
        s = s.toString();
        s = s.replace(/[\, ]/g, '');
        if (s != parseFloat(s)) return 'not a number';
        var x = s.indexOf('.');
        if (x == -1) x = s.length;
        if (x > 15) return 'too big';
        var n = s.split('');
        var str = '';
        var sk = 0;
        for (var i = 0; i < x; i++) {
            if ((x - i) % 3 == 2) {
                if (n[i] == '1') {
                    str += tn[Number(n[i + 1])] + ' ';
                    i++;
                    sk = 1;
                } else if (n[i] != 0) {
                    str += tw[n[i] - 2] + ' ';
                    sk = 1;
                }
            } else if (n[i] != 0) {
                str += dg[n[i]] + ' ';
                if ((x - i) % 3 == 0) str += 'hundred ';
                sk = 1;
            }
            if ((x - i) % 3 == 1) {
                if (sk) str += th[(x - i - 1) / 3] + ' ';
                sk = 0;
            }
        }
        if (x != s.length) {
            var y = s.length;
            str += 'point ';
            for (var i = x + 1; i < y; i++) str += dg[n[i]] + ' ';
        }
        return str.replace(/\s+/g, ' ');
    }

    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }
    function ChangeUnder() {
        $('#ExportUnder').val($('#Under').val());
    }

    function ChangeFumi() {
        debugger;
        var ContDetType = $('#FumiType').val();

        if (ContDetType == "Outside") {
            $('#btnAddOutsideDet').prop('disabled', false);
            $('#btnAddInsideDet').prop('disabled', true);
            document.getElementById("Pallets").disabled = true;

            ArrayOfInsideDetails = [];

            $('#tblInsideDet').html('');
            $('#tblInsideDet').html('');

            $('#InsideContainer, #InsideSize,#InsideCFSCode,#InsideSLACD').val('');
            $('#InsideAmount').val('0');

            GenerateTableInside();
            $('#Canes').val('0');
        }
        else if (ContDetType == "Inside") {
            $('#btnAddOutsideDet').prop('disabled', true);
            $('#btnAddInsideDet').prop('disabled', false);
            document.getElementById("Pallets").disabled = true;
            ArrayOfOutSideCont = [];

            $('#tblOutsideDet').html('');
            $('#tblOutsideDet').html('');

            $('#OutsideContainer, #OutsideSize').val('');
            $('#OutsideAmount').val('0');

            GenerateTableOutside();
            $('#Canes').val('0');
        }
        else {
            $('#btnAddOutsideDet').prop('disabled', true);
            $('#btnAddInsideDet').prop('disabled', true);
            document.getElementById("Pallets").disabled = false;
        }

    }


    function PortOfLoadingSerach() {
        debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetPortOfLoading',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                debugger;
                if (data != '') {
                    //$('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    /*var html = '';
                    $.each(EcJson, function (i, item) {
                        html += '<li id="' + item.PortId + '" onclick="selectPortDest(' + item.PortId + ',&quot;' + item.PortName + '&quot;);">' + item.PortName + '</li>';
                    });
                    $('#lstDestPort').html(html);*/
                    var html = '';
                    $.each(EcJson, function (i, item) {
                        html += '<li id="' + item.PortId + '" onclick="selectPortLoad(' + item.PortId + ',&quot;' + item.PortName + '&quot;);">' + item.PortName + '</li>';
                    });

                    $('#lstPort').html(html);

                }
            }
        });
    }

    function PortOfDestSerach() {
        debugger;
        $.ajax({
            url: '/Export/DSR_CWCExport/GetPortOfDest',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                debugger;
                if (data != '') {
                    //$('#hdnShippingLineList').val(data);
                    var EcJson = JSON.parse(data);
                    var html = '';
                    $.each(EcJson, function (i, item) {
                        html += '<li id="' + item.PortId + '" onclick="selectPortDest(' + item.PortId + ',&quot;' + item.PortName + '&quot;);">' + item.PortName + '</li>';
                    });
                    $('#lstDestPort').html(html);
                    /*var html = '';
                    $.each(EcJson, function (i, item) {
                        html += '<li id="' + item.PortId + '" onclick="selectPortLoad(' + item.PortId + ',&quot;' + item.PortName + '&quot;);">' + item.PortName + '</li>';
                    });

                    $('#lstPort').html(html);*/

                }
            }
        });
    }



    function PreviewCertificate() {
        //  var IssueSlipId = $('#IssueNoPrint').val();
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            url: '/Report/DSR_ReportCWC/PrintCertificate',
            type: 'POST',
            data: {
                InvoiceNumber: $('#InvoiceNo').val()

            },
            headers: { "__RequestVerificationToken": Token },
            dataType: 'JSON',
            success: function (data) {
                //  if (data.Status == 1)
                window.open(data.Message + "?_t=" + (new Date().getTime()), "_blank");
                // else
                //    alert(data.Message);
            }
        });

    }

    function selectPortLoad(id, Name) {
        $('#PortOfLoadingName').val(Name);
        $('#PortOfLoadingId').val(id);
        $("#PortModal").modal("hide");
    }

    $('#Portbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstPort > li').show();
        } else {
            $('#lstPort > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });

    function selectPortDest(id, Name) {
        $('#PortOfDestName').val(Name);
        $('#PortOfDestId').val(id);
        $("#PortDestModal").modal("hide");
    }

    $('#PortDestbox').keyup(function () {
        debugger;
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstDestPort > li').show();
        } else {
            $('#lstDestPort > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });


    $('#Exporterbox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#lstExporter > li').show();
        } else {
            $('#lstExporter > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    $('#lstExporter li').on("click", function () {
        $('#ExporterName').val($(this).text());
        $('#ExporterId').val($(this).attr('id'));
        $("#ExporterModal").modal("hide");
        $('[data-valmsg-for="ExporterName"]').html('<span></span>');
    });

    function ShowList() {
        $('#SearchInvoiceNo').val("");
        $('#SearchInvoiceDate').val("");
        $('#hdnModule').val('PEST');
        $('#DivListOfInvoice').load('/Pest/DSR_Pest/ListOfExpInvoice?Module=PEST');
    }
    function SearchInvoice() {
        $('#hdnModule').val('PEST');
        var InvoiceNo = $('#SearchInvoiceNo').val().trim();
        var InvoiceDate = $('#SearchInvoiceDate').val().trim();
        if ($('#SearchInvoiceNo').val() == "" && $('#SearchInvoiceDate').val() == "")
            alert("Enter Invoice No. or Invoice Date to Search");
        else if ($('#SearchInvoiceNo').val() != "" && $('#SearchInvoiceDate').val() != "" && Validate() == true)
            $('#DivListOfInvoice').load('/Pest/DSR_Pest/ListOfExpInvoice?InvoiceNo=' + InvoiceNo + '&InvoiceDate=' + InvoiceDate + "&Module=PEST");
        else if ($('#SearchInvoiceNo').val() != "")
            $('#DivListOfInvoice').load('/Pest/DSR_Pest/ListOfExpInvoice?InvoiceNo=' + InvoiceNo + "&Module=PEST");
        else if (Validate() == true)
            $('#DivListOfInvoice').load('/Pest/DSR_Pest/ListOfExpInvoice?InvoiceDate=' + InvoiceDate + "&Module=PEST");
    }




    function Validate() {
        debugger;
        var date = document.getElementById("SearchInvoiceDate").value.split("/");
        var day = date[0];
        var month = date[1];
        var dateString = document.getElementById("SearchInvoiceDate").value;
        var regex = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
        //if (regex.test(dateString) || dateString.length == 0) {
        //    alert("Please enter correct date");
        //    return false;
        //}
        if (day > 31) {
            alert("Please enter correct date");
            return false;
        }
        else
            if (month > 12) {
                alert("Please enter correct Month");
                return false;
            }
        return true;
    }


    $('#ContainerBox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#ContainerModal .navList > li').show();
        } else {
            $('#ContainerModal .navList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });
    //$('#ContainerList li').on("click", function () {
    //    debugger;
    //    ResetCstmAppraiseDet();
    //    $('#ContainerNo').val($(this).text());
    //    $('#CFSCode').val($(this).attr('id'));
    //    var CFSCode = $('#CFSCode').val();
    //    $("#ContainerModal").modal("hide");
    //    GetContainerDet(CFSCode);
    //    GetContainerOBL(CFSCode);
    //});
    function SelectContainer(containerno, cfscode, size) {

        $('#InsideContainer').val(containerno);
        $('#InsideCFSCode').val(cfscode);
        $('#InsideSize').val(size);
        $("#ContainerModal").modal("hide");
        $('#InsideSLACD').focus();
        //   GetContainerDet(CFSCode);

    }

    function SearchContainerWise() {
        debugger;

        $.ajax({
            url: '/PEST/DSR_PEST/SearchContainerWise',
            type: 'GET',
            dataType: 'JSON',

            success: function (data) {

                var html = "";
                $.each(data, function (item, elem) {

                    html += '<li id="' + elem.CfsCode + '"  onclick="SelectContainer(&quot;' + elem.ContainerNo + '&quot;,&quot;' + elem.CfsCode + '&quot;,&quot;' + elem.Size + '&quot;)">' + elem.ContainerNo + '</li>';
                });

                $('#ContainerList').html(html);
                $('#ContainerModal').find('#ContainerBox').focus();

            }
        });
    }



    function GenerateIRN() {
        debugger;

        var InvoiceNo = $('#InvoiceNo').val();
        var SupplyType = $('#hdnSupplyType').val();
        $.ajax({
            /*url: 'Url.Action("YardInvoicePrint", "Ppg_CWCImport", new { Area = "Import" }) ',*/
            url: '@Url.Action("GetIRNForYardInvoice", "DSR_CWCImport", new { Area = "Import" }) ',
            type: 'POST',
            data: {
                InvoiceNo: InvoiceNo,
                SupplyType: SupplyType
            },
            success: function (data) {
                if (data.Status == 1) {
                    alert("IRN has been generated sucessfully");
                    $('#btnPrint').removeAttr("disabled");
                }
                else
                    alert(data.Message);
                $('#btnPrint').removeAttr("disabled");

            }
        });
    }
</script>

