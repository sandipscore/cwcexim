@model CwcExim.Areas.Import.Models.ImportJobOrder
<div class="container-fluid">
    <div class="row">
        <div class="col-md-offset-0-5 col-md-11">
            <div class="Head_h4">
                <div class="row">
                    <div class="col-md-12">
                        <h4>Job Order</h4>
                    </div>
                </div>


                @using (Ajax.BeginForm("AddEditJobOrder", "Kdl_CWCImport", new AjaxOptions
            {
                Confirm = "Are you sure you want to Save?",
                HttpMethod = "POST",
                OnSuccess = "impJOOnSuccess",
                OnFailure = "impJOOnFailure",
            }))
            {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.StringifyXML)
                    @Html.HiddenFor(m => m.ImpJobOrderId)
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Pickup Location:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.DropDownListFor(m => m.PickUpLocation, new List<SelectListItem>
                        {
                        new SelectListItem {Text="KICT",Value="KICT" },
                        new SelectListItem {Text="Others",Value="Others" }
                        }, "----Select----", new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(m => m.PickUpLocation, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 col_cus_2 col_cus_offset_3">
                                <label>Form 1 No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.HiddenFor(m => m.FormOneId)
                                @Html.Hidden("FormOneDetailId")
                                @Html.TextBoxFor(m => m.FormOneNo, new { @class = "form-control input-sm", @readonly = true })
                                @Html.ValidationMessageFor(m => m.FormOneNo, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Job Order For:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_4">
                                <div class="boolean-container">
                                    @Html.RadioButtonFor(m => m.JobOrderFor, "2", new { @id = "rbLC", @checked = true })
                                    <label for="rbLC"><i class="circle"></i><span>Loaded Container</span></label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>Job Order No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.JobOrderNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 col_cus_offset_3 col_cus_2">
                                <label>Job Order Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5 Date_Img">
                                @Html.TextBoxFor(m => m.JobOrderDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Form 1 Date:</label>
                            </div>
                            <div class="col-md-2 col_cus_2_5">
                                @Html.TextBoxFor(m => m.FormOneDate, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>Seal No:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("SealNo", "", new { @class = "form-control input-sm" })
                            </div>
                            <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                <input type="hidden" id="Branch" placeholder="ckh" value="@ViewBag.BranchId" />
                                @if (ViewBag.BranchId == 4)
                                {
                                    <label>Container No/CBT No.:</label>
                                }
                                else
                                {
                                    <label>Container No:</label>
                                }
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBox("ContainerNo", "", new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.HiddenFor(m => m.ShippingLineId)
                                <label>Shipping Line Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.ShippingLineName, new { @class = "InputLabel", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingModal"></i></span>
                                @Html.ValidationMessageFor(m => m.ShippingLineName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.HiddenFor(m => m.CHAId)
                                <label>CHA Name:</label>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextBoxFor(m => m.CHAName, new { @class = "InputLabel", @readonly = true })
                                <span class="search"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>
                                @Html.ValidationMessageFor(m => m.CHAName, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                <label>From Location:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.FromLocation, new { @class = "InputLabel" })
                                @Html.ValidationMessageFor(m => m.FromLocation, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1 col_cus_1_5 padding_rt">
                                <label>Yard Name:</label>
                            </div>
                            <div class="col-md-3 col_cus_2_5">
                                @Html.HiddenFor(m => m.ToYardId)
                                @Html.TextBoxFor(m => m.YardName, new { @class = "InputLabel", @readonly = true })
                                <span class="search" id="YardSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#YardModal"></i></span>
                                @Html.ValidationMessageFor(m => m.YardName, "", new { @class = "Error_Msg" })
                            </div>
                            <div class="col-md-1-5 padding_rt">
                                <label>Yard Location:</label>
                            </div>
                            <div class="col-md-2-5 col_cus_2">
                                @Html.HiddenFor(m => m.YardWiseLocationIds)
                                @Html.TextBoxFor(m => m.YardWiseLctnNames, new { @class = "InputLabel", @readonly = true })
                                <span class="search" id="YardWiseLctnSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#yardwiselocationmodal"></i></span>
                                @Html.ValidationMessageFor(m => m.YardWiseLctnNames, "", new { @class = "Error_Msg" })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2">
                                @Html.LabelFor(m => m.Remarks, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-10-5 col_cus_10">
                                @Html.TextAreaFor(m => m.Remarks, new { @class = "InputLabel", @style = "width:100%;height:100px;" })
                            </div>
                        </div>
                    </div>

                    <div class="row SignUp_space_bottom2 SignUp_space_top2">
                        <div class="col-md-offset-5 col-md-2">
                            <input type="button" id="btnUpdate" class="btn log_Btn_sm" value="Update" onclick="UpdateDetails()" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12" id="DivFormOneDet">
                        </div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                    </div>
                    <div class="row SignUp_space_bottom">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" onclick="SaveDetails()" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" id="btnCancel" class="btn log_Btn_sm" value="Cancel" onclick="LoadImpJO()" />
                        </div>
                    </div>
                    <div class="logErrMsg" id="DivErrMsg" style="color:transparent"></div>
                }
            </div>
        </div>
    </div>
</div>
<div id="YardModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Yard</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Yardbox" type="text" />
                <ul class="navList" id="lstYard">
                    @{
                        if (ViewBag.ListOfYard != null)
                        {
                            foreach (var item in ViewBag.ListOfYard)
                            {
                                <li id="@item.YardId" onclick="SelectYard(this)">@item.YardName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="yardwiselocationmodal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Yard wise Location</h4>
            </div>
            <div class="modal-body popup_body">
                <ul id="lstYardWiseLctn"></ul>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ShippingModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Shipping Line</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Shippingbox" type="text" />
                <ul class="navList" id="lstShipping">
                    @{
                        if (ViewBag.ListOfShippingLine != null)
                        {
                            foreach (var item in ViewBag.ListOfShippingLine)
                            {
                                <li id="@item.ShippingLineId">@item.ShippingLineName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="CHAModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of CHA</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="CHAbox" type="text" />
                <ul class="navList" id="lstCHA">
                    @{
                        if (ViewBag.ListOfCHA != null)
                        {
                            foreach (var item in ViewBag.ListOfCHA)
                            {
                                <li id="@item.CHAId">@item.CHAName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var FormOneDetails = [];
    $(function () {
        FormOneDetails = $.parseJSON(@Html.Raw(Json.Encode(Model.StringifyXML)));
        GenerateTable();
        GetYardLocation();
        CheckSelectedLocations();
    });
    $('#JobOrderDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
        }
    });
    function GetYardLocation()
    {
        var html='';
        var data=@Html.Raw(Json.Encode(ViewBag.ListOfYardWiseLctn));
        $.each(data, function (i, elem) {
            if (elem.IsOccupied)
                html += '<div class="col-md-2"><div class="boolean-container"><input type="checkbox" id="' + elem.LocationId + 'y" name="' + elem.LocationId + '" onclick="SelectLocation()" disabled/><label for="' + elem.LocationId + 'y"><i class="square">' + elem.Location + '</i></label></div></div>';
            else
                html += '<div class="col-md-2"><div class="boolean-container"><input type="checkbox" id="' + elem.LocationId + 'y" name="' + elem.LocationId + '" onclick="SelectLocation()" /><label for="' + elem.LocationId + 'y"><i class="square">' + elem.Location + '</i></label></div></div>';
        });
        $('#lstYardWiseLctn').html(html);
    }
    function CheckSelectedLocations()
    {
        var  items=('@Model.YardWiseLocationIds').split(',');
        $(items).each(function(i,item)
        {
            var id=item+'y';
            //$('#'+id).prop("disabled",false);
            $('#'+id).prop("checked",true);
        });
        $('#YardWiseLctnNames').val('@Model.YardWiseLctnNames');
    }
    function impJOOnSuccess(data)
    {
        if (data.Status == 2) {
            LoadImpJO();
        }
        else {
            $('#DivErrMsg').html(data.Message);
        }
        setTimeout(function () { $('#DivErrMsg,#DivSucMsg').html(''); }, 5000);
    }
    function LoadImpJO() {
        $('#DivBody').load('/Import/Kdl_CWCImport/CreateJobOrder');
    }
    function impJOOnFailure() { }
    $('#CHAbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCHA > li').show();
        else {
            $('#lstCHA > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstCHA > li').on("click", function () {
        $('#CHAName').val($(this).text());
        $('#CHAId').val($(this).attr('id'));
        $("#CHAModal").modal("hide");
    });
    $('#Shippingbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstShipping > li').show();
        else {
            $('#lstShipping > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstShipping > li').on("click", function () {
        $('#ShippingLineName').val($(this).text());
        $('#ShippingLineId').val($(this).attr('id'));
        $("#ShippingModal").modal("hide");
    });
    $('#Yardbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstYard > li').show();
        else {
            $('#lstYard > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    function SelectYard(data) {
        $('#ToYardId').val(data.id);
        $('#YardName').val(data.innerText);
        $("#YardModal").modal("hide");
        GetYardWiseLocation();
    }
    function GenerateTable() {
        var html = '';
        if ($("#Branch").val() == 4) {

            html = '<table class="table table-bordered table-striped dataTable"><thead><tr><th class="text-center" style="width:10%;">SL No</th><th>Container/CBT No.</th><th>Container/CBT Size</th><th>Reefer</th><th>Seal No</th><th class="text-center" style="width:10%;">Edit</th></tr></thead><tbody>';
        }
        else {
            html = '<table class="table table-bordered table-striped dataTable"><thead><tr><th class="text-center" style="width:10%;">SL No</th><th>Container No</th><th>Container Size</th><th>Reefer</th><th>Seal No</th><th class="text-center" style="width:10%;">Edit</th></tr></thead><tbody>';
        }
        $.each(FormOneDetails, function (i, elem) {
            html += '<tr><td class="text-center" style="width:10%;">' + (i + 1) + '</td><td>' + elem.ContainerNo + '</td><td>' + elem.ContainerSize + '</td><td>' + elem.Reefer + '</td><td>' + elem.SealNo + '</td><td class="text-center" style="width:10%;"><a href="#" onclick="EditContainerDet(' + elem.FormOneDetailId + ')"><i class="fa fa-pencil-square Edit"></i></a></td></tr>';
        });
        html += '</tbody></table>';
        $('#DivFormOneDet').html(html);
    }
    function GetYardWiseLocation() {
        var Yard = $('#ToYardId').val();
        $.ajax({
            url: '/Import/Kdl_CWCImport/GetYardWiseLocation',
            dataType: 'JSON',
            type: 'GET',
            data: { YardId: Yard },
            success: function (data) {
                if (data != null) {
                    var html = '';
                    $.each(data, function (i, elem) {
                        $('#YardWiseLctnNames').val('');
                        //if (elem.IsOccupied)
                        //    html += '<div class="col-md-2"><div class="boolean-container"><input type="checkbox" id="' + elem.LocationId + 'y" name="' + elem.LocationId + '" onclick="SelectLocation()" disabled/><label for="' + elem.LocationId + 'y"><i class="square">' + elem.Location + '</i></label></div></div>';
                        //else
                            html += '<div class="col-md-2"><div class="boolean-container"><input type="checkbox" id="' + elem.LocationId + 'y" name="' + elem.LocationId + '" onclick="SelectLocation()" /><label for="' + elem.LocationId + 'y"><i class="square">' + elem.Location + '</i></label></div></div>';
                    });
                    $('#lstYardWiseLctn').html(html);
                    if(Yard=='@Model.ToYardId')
                        CheckSelectedLocations();
                }
            }
        });
    }
    function SelectLocation() {
        var data = '';
        var inf = '';
        $('#lstYardWiseLctn').find('input:checked').each(function () {
            if (data == '')
                data = $(this).prop('name');
            else
                data = data + ',' + $(this).prop('name');
            if (inf == '')
                inf = $('label[for="' + $(this).prop('id') + '"]').text();
            else
                inf = inf + ',' + $('label[for="' + $(this).prop('id') + '"]').text();
        });
        $('#YardWiseLocationIds').val(data);
        $('#YardWiseLctnNames').val(inf);
    }
    function EditContainerDet(FormOneDetailId) {
        $.each(FormOneDetails, function (i, elem) {
            if (elem.FormOneDetailId == FormOneDetailId) {
                $('#FormOneDetailId').val(FormOneDetailId);
                $('#ContainerNo').val(elem.ContainerNo);
                $('#SealNo').val(elem.SealNo);
                //GenerateTable();
                return false;
            }
        });
    }
    function UpdateDetails() {
        var val = $('#FormOneDetailId').val();
        $.each(FormOneDetails, function (i, elem) {
            if (elem.FormOneDetailId == val) {
                $('#FormOneDetailId').val('');
                FormOneDetails[i].SealNo = $('#SealNo').val();
                $('#SealNo,#ContainerNo').val('');
                GenerateTable();
                return false;
            }
        });
    }
    function SaveDetails() {
        $('#StringifyXML').val(JSON.stringify(FormOneDetails));
    }
    function ResetImpJODetails() {
        $('#lstYard,#lstYardWiseLctn').html('');
        $('#lstBlNo #' + $('#FormOneId').val()).remove();
        $('#FormOneId,#FormOneDetailId').val('');
        $('#PickUpLocation,#Remarks,#FromLocation,#YardName,#YardWiseLctnNames,#CHAName,#ShippingLineName,#SealNo,#ContainerNo,#FormOneNo,#FormOneDate,#BlNo,#ToYardId,#YardWiseLocationIds').val('');
        $('#DivFormOneDet').html('');
        $('#JobOrderDate').val('@Model.JobOrderDate');
    }
</script>

