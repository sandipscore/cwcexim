@model CwcExim.Areas.Import.Models.Hdb_FormOneModel

@using (Ajax.BeginForm("AddEditFormOneFCL", "Hdb_CWCImport", new AjaxOptions { Confirm = "Are You Sure You Want To Save?", HttpMethod = "POST", OnBegin = "ValidateGrid", OnSuccess = "FormOneOnSuccess", OnFailure = "FormOneOnFailure" }))
{
    @Html.AntiForgeryToken();
    <div class="Head_h4">
        <div class="row">
            <div class="col-md-12">
                <h4>Edit Form - 1 FCL</h4>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    @Html.HiddenFor(m => m.FormOneId)
                    @Html.LabelFor(m => m.FormOneNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-2-5">
                    @Html.TextBoxFor(m => m.FormOneNo, new { @class = "form-control input-sm", @readonly = true })
                </div>
                <div class="col-md-offset-4-5 col-md-1-5 col_cus_2">
                    @Html.LabelFor(m => m.FormOneDate, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-2 col_cus_2_5 Date_Img">
                    @Html.TextBoxFor(m => m.FormOneDate, new { @class = "form-control input-sm", @readonly = true })
                </div>
            </div>
        </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    @Html.LabelFor(m => m.BLNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                </div>
                <div class="col-md-2-5">
                    @Html.TextBoxFor(m => m.BLNo, new { @class = "form-control input-sm", @onblur = "GetBL()" })
                    @*@Html.ValidationMessageFor(m => m.BLNo)*@
                </div>
                <div class="col-md-1-5 col_cus_2 col_cus_offset_4 col-md-offset-4-5">
                    <label>BL Date:</label>
                </div>
                <div class="col-md-2 col_cus_2_5 Date_Img">
                    @Html.TextBoxFor(m => m.BLDate, new { @class = "form-control input-sm", @ReadOnly = true })
                    @*@Html.ValidationMessageFor(m => m.RotationNo)*@
                </div>

            </div>
        </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2">
                        <label>IGM No:</label>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.IGMNo, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.IGMNo)
                        @*@Html.ValidationMessageFor(m => m.BLNo)*@
                    </div>
                    <div class="col-md-1-5 col_cus_2 col_cus_offset_4 col-md-offset-4-5">
                        <label>IGM Date:</label>
                    </div>
                    <div class="col-md-2 col_cus_2_5 Date_Img">
                        @Html.TextBoxFor(m => m.IGMDate, new { @class = "form-control input-sm" , @ReadOnly=true})
                        @*@Html.ValidationMessageFor(m => m.RotationNo)*@
                    </div>
                </div>
            </div>
        <div class="row Form_Space_top">
            <div class="form-group Form_Input">
                <div class="col-md-1-5 col_cus_2">
                    <label>TP No:</label>
                </div>
                <div class="col-md-2-5">
                    @Html.TextBoxFor(m => m.TPNo, new { @class = "form-control input-sm" })
                    @*@Html.ValidationMessageFor(m => m.BLNo)*@
                </div>
                <div class="col-md-1-5 col_cus_2 col_cus_offset_4 col-md-offset-4-5">
                    <label>TP Date:</label>
                </div>
                <div class="col-md-2 col_cus_2_5 Date_Img">
                    @Html.TextBoxFor(m => m.TPDate, new { @class = "form-control input-sm", @readonly = true })
                    @*@Html.ValidationMessageFor(m => m.RotationNo)*@
                </div>
            </div>
        </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        <label>Shipping Line Name:</label>
                    </div>
                    <div class="col-md-10-5 col_cus_10">
                        @Html.HiddenFor(m => m.ShippingLineId, new { @value = "0" })
                        @Html.TextBoxFor(m => m.ShippingLineName, new { @class = "form-control input-sm", @readonly = true })
                        <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ShippingLineModal"></i></span>
                        @Html.ValidationMessageFor(m => m.ShippingLineName)
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        @Html.LabelFor(m => m.VesselName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-10-5 col_cus_10">
                        @Html.TextBoxFor(m => m.VesselName, new { @class = "form-control input-sm" })

                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        @Html.LabelFor(m => m.VoyageNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.VoyageNo, new { @class = "form-control input-sm" })

                    </div>
                    <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                        @Html.LabelFor(m => m.RotationNo, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.RotationNo, new { @class = "form-control input-sm" })

                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt">
                        @Html.LabelFor(m => m.PortName, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-4 col_cus_3">
                        @Html.HiddenFor(m => m.PortOfDischargeId, new { @value = "0" })
                        @Html.TextBoxFor(m => m.PortName, new { @class = "form-control input-sm", @readonly = true })
                        <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#PODModal"></i></span>
                        <span class="cross_ico" id="PortCross"><i class="fa fa-times"></i></span>
                    </div>
                    <div class="col-md-1-5 col_cus_2 col-md-offset-2-5">
                        @Html.LabelFor(m => m.PortCharge, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.PortCharge, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.PortCharge)
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2 padding_rt" style="display:none">
                        <label>Port Charge Amount:</label>
                    </div>
                    <div class="col-md-2-5" style="display:none">
                        @Html.TextBoxFor(m => m.PortChargeAmt, new { @class = "form-control input-sm" })

                    </div>

                    <div class="col-md-2 padding_rt">
                        <div class="boolean-container">
                            @Html.RadioButtonFor(m => m.CBT, "CONT", new { @class = "", @id = "rbContainerNo", @checked = true })
                            <label for="rbContainerNo"><i class="circle"></i><span>ContainerNo</span></label>
                        </div>
                    </div>
                    <div class="col-md-1 padding_rt" style="display:none;">
                        <div class="boolean-container">
                            @Html.RadioButtonFor(m => m.CBT, "CBT", new { @class = "", @id = "rbCBT" })
                            <label for="rbCBT"><i class="circle"></i><span>CBT</span></label>
                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.ValidationMessageFor(m => m.CBT)
                    </div>
                </div>
            </div>
            <div class="row Form_Space_top">
                <div class="form-group Form_Input">
                    <div class="col-md-1-5 col_cus_2" style="display:none">
                        @Html.LabelFor(m => m.CargoType, new { @class = "InputLabel" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2-5" style="display:none">
                        @Html.DropDownListFor(m => m.CargoType, new List<SelectListItem>
                {
                new SelectListItem { Text="HAZ",Value="1"},
                new SelectListItem { Text="NonHAZ",Value="2"},
                }, "----Select----", new { @class = "form-control input-sm" })

                    </div>
                    <div class="col-md-1-5 padding_rt">
                        @*@Html.LabelFor(m => m.CBTFrom, new { @class = "InputLabel" })<span class="LabelColon">:</span>*@
                        @Html.Label("Container From", new { @class = "InputLabel", @for = "CBTFrom" })<span class="LabelColon">:</span>
                    </div>
                    <div class="col-md-2-5">
                        @Html.TextBoxFor(m => m.CBTFrom, new { @class = "form-control input-sm" })
                        @Html.ValidationMessageFor(m => m.CBTFrom)
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="SignUp_space_top SignUp_space_bottom"></div>
            </div>

            <div class="Head_h5">
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Container/CBT No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.Hidden("FormOneDetailId", 0)
                            @Html.TextBox("txtContainerNo", "", new { @class = "form-control input-sm", @onfocus = "hideMsg(this);" })
                            <span class="search" id="ContainerSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ContainerModal"></i></span>
                            <span class="field-validation-error" id="ErrContainerNo"></span>
                        </div>
                        <div class="col-md-2 col_cus_2 padding_rt">
                            <label>Container/CBT Size:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownList("ddlContainerSize", new List<SelectListItem>
                {
                new SelectListItem { Text="20",Value="20"},
                new SelectListItem { Text="40",Value="40"},

                }, "----Select----", new { @class = "form-control input-sm", @onfocus = "hideMsg(this);" })
                            <span class="field-validation-error" id="ErrContainerSize"></span>
                        </div>
                        <div class="col-md-2 padding_rt">
                            <div class="boolean-container">
                                @Html.CheckBox("IsODC")
                                <label for="IsODC"><span>Is ODC</span><i class="square"></i></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top" style="display:none">
                    <div class="form-group Form_Input">
                        <div class="col-md-3 col_cus_offset_3 col-md-offset-4-5">
                            <input type="button" class="btn log_Btn_sm" value="Get ICE Gate Data" onclick="GetICEGateData()" />
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Reefer:</label>
                        </div>
                        <div class="col-md-1 padding_rt">
                            <div class="boolean-container">
                                @Html.CheckBox("IsReefer")
                                <label for="IsReefer"><i class="square"></i></label>
                            </div>
                        </div>
                        <div class="col-md-1 col_cus_1_5 padding_rt">
                            <label>Flat Reck:</label>
                        </div>
                        <div class="col-md-1">
                            <div class="boolean-container">
                                @Html.CheckBox("IsFlatReck")
                                <label for="IsFlatReck"><i class="square"></i></label>
                            </div>
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_2 col-md-offset-3-5">
                            <label class="InputLabel">Seal No.</label><span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBox("txtSealNo", "", new { @class = "form-control input-sm", @onfocus = "hideMsg(this);" })
                            <span class="field-validation-error" id="ErrSealNo"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Line No.:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBox("txtLineNo", "", new
                   {
                       @class = "form-control input-sm",
                       @onfocus = "hideMsg(this);" @*, @readonly = true*@ })

                        </div>
                        <div class="col-md-2 padding_rt">
                            <div class="boolean-container">
                                @Html.RadioButton("LCLFCL", "FCL", new { @class = "", @id = "rbFCL", @checked = true })
                                <label for="rbFCL"><i class="circle"></i><span>FCL</span></label>
                            </div>
                        </div>
                        <div class="col-md-1 padding_rt" style="visibility:hidden;">
                            <div class="boolean-container">
                                @Html.RadioButton("LCLFCL", "LCL", new { @class = "", @id = "rbLCL" })
                                <label for="rbLCL"><i class="circle"></i><span>LCL</span></label>
                            </div>

                        </div>


                        <div class="col-md-offset-1 col-md-1-5 col_cus_2 ">
                            <label>Marks & No:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.TextBox("txtMarksNo", "", new { @class = "form-control input-sm" })
                            <span id="ErrMarksNo"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>CHA Name & Address:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.Hidden("CHAId", "0")
                            @Html.TextArea("txtCHAName", "", new { @class = "form-control input-sm", @readonly = true })
                            <span class="search" id="CHASearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CHAModal"></i></span>
                            <span class="cross_ico" id="CHACross"><i class="fa fa-times"></i></span>
                            <span id="ErrCHAName"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Importer Name & Address:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.Hidden("ImporterId", new { @value = "0" })
                            @Html.TextArea("txtImporterName", "", new { @class = "form-control input-sm", @readonly = true, @onfocus = "hideMsg(this);" })
                            <span class="search" id="ImporterSearch" onclick="hideMsg(this);"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ImporterModal"></i></span>
                            <span class="field-validation-error" id="ErrImporterName"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>IGM Importer Name & Address</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextArea("IgmImporter", "", new { @class = "form-control input-sm", @readonly = true })
                            @*@Html.ValidationMessageFor(m => m.VesselName)*@
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top" style="display:none;">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>TSA/ Forwarder:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.Hidden("TSAForwarderId", "0")
                            @Html.TextArea("txtTSAForwarderName", "", new { @class = "form-control input-sm", @readonly = true, @onfocus = "hideMsg(this);" })
                            <span class="search" id="TSAForwarderSearch" onclick="hideMsg(this);"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#TSAForwarderModal"></i></span>
                            <span class="field-validation-error" id="ErrTSAForwarderName"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Cargo Description:</label>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextArea("txtCargoDesc", "", new { @class = "form-control input-sm", @style = "height:75px;", @onfocus = "hideMsg(this);" })
                            <span class="field-validation-error" id="ErrCargoDesc"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Commodity:</label>
                        </div>
                        <div class="col-md-4 col_cus_3">
                            @Html.Hidden("CommodityId", new { @value = "0" })
                            @Html.TextBox("txtCommodity", "", new { @class = "form-control input-sm", @readonly = true, @onfocus = "hideMsg(this);" })
                            <span class="search" id="CommoditySearch" onclick="hideMsg(this);"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CommodityModal"></i></span>
                            <span class="field-validation-error" id="ErrCommodity"></span>
                        </div>
                        <div class="col-md-offset-1 col-md-1-5 col_cus_2" style="display:none">
                            <label>TSA:</label>
                        </div>
                        <div class="col-md-4 col_cus_3" style="display:none">
                            @Html.Hidden("TSAId", new { @value = "0" })
                            @Html.TextBox("txtTSA", "", new { @class = "form-control input-sm" })
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label>Cargo Type:</label>
                        </div>
                        <div class="col-md-2-5">
                            @Html.DropDownList("ddlCargoType", new List<SelectListItem>
                        {
                        new SelectListItem { Text="HAZ",Value="1"},
                        new SelectListItem { Text="NonHAZ",Value="2"},
                        }, "----Select----", new { @class = "form-control input-sm", @onfocus = "hideMsg(this);" })
                            <span class="field-validation-error" id="ErrCargoType"></span>
                        </div>
                        <div class="col-md-offset-2-5 col-md-1-5 col_cus_2">
                            <label>Vehicle No:</label>
                        </div>
                        <div class="col-md-4 col_cus_3">
                            @Html.Hidden("VehicleId", new { @value = "0" })
                            @Html.TextBox("txtVehicle", "", new { @class = "form-control input-sm" })
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Date of Landing:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBox("txtDateOfLanding", "", new { @class = "form-control input-sm", placeholder = "dd/mm/yyyy", @readonly = true, @onfocus = "hideMsg(this);" })
                            <span id="ErrDateOfLanding"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>No of Package:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBox("Noofpkg", "", new { @class = "form-control input-sm" })
                        </div>
                        <div class="col-md-offset-5 col-md-1-5 col_cus_1_5">
                            <label>Package Type:</label>
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownList("ddlPackageType", new List<SelectListItem>
                        {
                             new SelectListItem { Text = "Pallet", Value = "Pallet" },
                        new SelectListItem { Text = "Cartoon", Value = "Cartoon" },
                         new SelectListItem { Text = "Drum", Value = "Drum" },
                         new SelectListItem { Text = "Metal", Value = "Metal" },
                         new SelectListItem { Text = "Fibre", Value = "Fibre" },
                         new SelectListItem { Text = "Wooden", Value = "Wooden" },
                           new SelectListItem { Text = "Crate", Value = "Crate" },
                           new SelectListItem { Text = "Bags", Value = "Bags" },
                            new SelectListItem { Text = "Others", Value = "Others" },

                        }, "----Select----", new { @class = "form-control input-sm", @onfocus = "hideMsg(this);" })
                            <span class="field-validation-error" id="ErrPackageType"></span>
                            <div id="DivOthers" style="margin-top:5px;">
                                <div class="Date_Img">
                                    @Html.TextBox("Others", "", new { @class = "form-control input-sm", @id = "Others" })
                                    @Html.ValidationMessage("Others", "", new { @class = "Error_Msg" })
                                </div>
                            </div>



                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Gross Wt.(Kg):</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 ">
                            @Html.TextBox("GrossWeight", "", new { @class = "form-control input-sm" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-5 padding_rt">
                            <label>CIF Value:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBox("CIFValue", "", new { @class = "form-control input-sm" })
                            <span class="field-validation-error" id="ErrCIF"></span>
                        </div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>Gross Duty:</label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 ">
                            @Html.TextBox("GrossDuty", "", new { @class = "form-control input-sm" })
                        </div>
                        <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-5 padding_rt">
                            <label>OBL/HBL No.<span class="LabelColon">:</span></label>
                        </div>
                        <div class="col-md-2 col_cus_2_5">
                            @Html.TextBox("OBLNO", "", new { @class = "form-control input-sm" })
                            <span class="field-validation-error" id="ErrTOBLNO"></span>
                            @*@Html.ValidationMessageFor(m => m.BLNo)*@
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        
                        <div class="col-md-1-5 col_cus_2 padding_rt">
                            <label>OBL/HBL Date:<span class="LabelColon">:</span></label>
                        </div>
                        <div class="col-md-2 col_cus_2_5 Date_Img">
                            @Html.TextBox("OBLDate", "", new { @class = "form-control input-sm", @readonly = true })
                        </div>

                    </div>
                </div>
                <div class="row Form_Space_top">
                    <div class="form-group Form_Input">
                        <div class="col-md-1-5 col_cus_2">
                            <label class="InputLabel">Remarks</label><span class="LabelColon">:</span>
                        </div>
                        <div class="col-md-10-5 col_cus_10">
                            @Html.TextArea("txtRemarks", "", new { @class = "form-control input-sm", @style = "height:100px;" })
                            <span id="ErrRemarks"></span>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="stoke SignUp_space_bottom SignUp_space_top"></div>
                </div>
                <div class="row">
                    <div class="col-md-offset-4 col-md-2  SignUp_space_bottom">
                        <input type="button" id="btnAddFormOneDet" class="btn log_Btn_sm" value="Add" onclick="AddFormOneDet()" />
                    </div>
                    <div class="col-md-2">
                        <input type="button" id="btnResetFormOneDet" class="btn log_Btn_sm" value="Reset" onclick="ResetFormOneDet()" />
                    </div>
                    <div class="col-md-3">
                        <input type="button" id="addNewCont" class="btn log_Btn_sm" value="Add New" onclick="AddNewContainer()" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12" id="tblFormOneDet">
                    </div>
                </div>

                <div>
                    @Html.HiddenFor(m => m.FormOneDetailsJS)
                    @Html.ValidationMessageFor(m => m.FormOneDetailsJS)
                </div>
            </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
            </div>
            <div class="row">
                <div class="col-md-offset-4 col-md-2 SignUp_space_bottom">
                    <input type="submit" id="btnSave" class="btn log_Btn_sm" value="Save" />
                </div>
                <div class="col-md-2">
                    <input type="button" id="btnReset" class="btn log_Btn_sm" value="Cancel" onclick="ResetAllFields()" />
                </div>
            </div>
            <div class="logSuccMsg Form_Space_bottom" id="DivFormOneMsg" style="background-color:transparent"></div>
        </div>
    <div id="ShippingLineModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of Shipping Line</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="Shippingbox" type="text" />
                    <ul class="navList" id="lstShipping">
                        @{
                            foreach (var item in Model.lstShippingLine)
                            {
                                <li id="@item.ShippingLineId">@item.ShippingLineName</li>
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="ContainerModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">Container</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="Containerbox" type="text" />
                    <ul class="navList" id="lstContainer">
                        @{
                            if (@ViewBag.Lstcontainer != null)
                            {
                                foreach (var item in @ViewBag.Lstcontainer)
                                {
                                    <li id="@item.EntryId">@item.ContainerNo</li>
                                }


                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="TSAForwarderModal" role="dialog">
        <div class="modal-dialog">
            Modal content
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of TSA/Forwarder</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="TSAbox" type="text" />
                    <ul class="navList" id="lstTSAForwarder">
                        @{
                            foreach (var item in Model.lstTSAForwarder)
                            {
                                <li id="@item.TSAForwarderId">@item.TSAForwarderName</li>
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="PODModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of Port</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="PODbox" type="text" />
                    <ul class="navList" id="lstPOD">
                        @{
                            foreach (var item in Model.lstPOD)
                            {
                                <li id="@item.PODId">@item.PODName</li>
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="CHAModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of CHA</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="CHAbox" type="text" />
                    <ul class="navList" id="lstCHA">
                        @{
                            foreach (var item in Model.lstCHA)
                            {
                                <li id="@item.CHAId">@item.CHAName</li>
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="ImporterModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of Importer</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="Impbox" type="text" />
                    <ul class="navList" id="lstImp">
                        @{
                            foreach (var item in Model.lstImporter)
                            {
                                <li id="@item.ImporterId">@item.ImporterName</li>
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="ShippingLineDetModal" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of Shipping Line</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="ShippingboxDet" type="text" />
                    <ul class="navList" id="lstShippingDet">
                        @{
                            foreach (var item in Model.lstShippingLine)
                            {
                                <li id="@item.ShippingLineId">@item.ShippingLineName</li>
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="CommodityModal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content popup_modal">
                <div class="modal-header popup_header">
                    <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                    <h4 class="modal-title">List of Commodity</h4>
                </div>
                <div class="modal-body popup_body">
                    <input placeholder="Search Me" id="Commoditybox" type="text" />
                    <ul class="navList" id="lstCommodity">
                        @{
                            foreach (var item in Model.lstCommodity)
                            {
                                <li id="@item.CommodityId">@item.CommodityName</li>
                            }
                        }
                    </ul>
                </div>
                <div class="modal-footer">
                    <div class="row">
                        <div class="col-md-offset-6 col-md-6">
                            <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
                            }
@Scripts.Render("~/bundles/jqueryval")
<script>
    var TimeInSeconds;
    $(document).ready(function () {
        $("#txtContainerNo").prop("disabled", true);
        $('#ContainerSearch').css("display", "none");
       // $('#ContainerSearch').prop("disabled", true);
        $('#Others').css("visibility", "hidden");
        //GetFormOne();
        //GetFormOneList();
        TimeInSeconds = 5000;
        $("#txtDateOfLanding").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage:  "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });
        $("#FormOneDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

        $("#OBLDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }
        });

        $('#btnAddFormOneDet').prop("disabled", true);
    });
    $("#TPDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    var ContainerName = "";

    function GetBL() {
        var OBL = $('#BLNo').val();
        $('#OBLNO').val(OBL);
    }

    $('#lstContainer > li').on("click", function () {
        debugger;


        $('#txtContainerNo').val($(this).text());
        $('#GateId').val($(this).attr('id'));

        $("#ContainerModal").modal("hide");
        ContainerName = $('#txtContainerNo').val();
        // alert(ContainerName);
        if (ContainerName != null && ContainerName != "") {

            AutoPopulate(ContainerName);
        }


    });

    $('#Containerbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstContainer > li').show();
        else {
            $('#lstContainer > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    function FillListByContainer() {
        var ContainerName = $('#searchContainer').val();
        //alert(ContainerName);
        if (ContainerName == "") {
            GetFormOneList();

        }
        else {
            GetFormOneListByContainerNumber(ContainerName);
        }

    }
    function GetFormOneListByContainerNumber(ContainerName) {
        debugger;
        $('#divFormOneList').load('/Import/Hdb_CWCImport/Hdb_GetFormOneListFCL?ContainerName=' + ContainerName);
    }
    $('#Shippingbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstShipping > li').show();
        else {
            $('#lstShipping > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstShipping > li').on("click", function () {
        $('#ShippingLineName').val($(this).text());
        $('#ShippingLineId').val($(this).attr('id'));
        $("#ShippingLineModal").modal("hide");
    });
    $('#PODbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstPOD > li').show();
        else {
            $('#lstPOD > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstPOD > li').on("click", function () {
        $('#PortName').val($(this).text());
        $('#PortOfDischargeId').val($(this).attr('id'));
        $("#PODModal").modal("hide");
    });
    $('#CHAbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCHA > li').show();
        else {
            $('#lstCHA > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstCHA > li').on("click", function () {
        $('#txtCHAName').val($(this).text());
        $('#CHAId').val($(this).attr('id'));
        $("#CHAModal").modal("hide");
    });
    $('#Impbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstImp > li').show();
        else {
            $('#lstImp > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstImp > li').on("click", function () {
        $('#txtImporterName').val($(this).text());
        $('#ImporterId').val($(this).attr('id'));
        $("#ImporterModal").modal("hide");
    });


    $('#TSAbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstTSAForwarder > li').show();
        else {
            $('#lstTSAForwarder > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });

    $('#lstTSAForwarder > li').on("click", function () {
        $('#txtTSAForwarderName').val($(this).text());
        $('#TSAForwarderId').val($(this).attr('id'));
        $("#TSAForwarderModal").modal("hide");
    });
    $('#Commoditybox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstCommodity > li').show();
        else {
            $('#lstCommodity > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#ShippingboxDet').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstShipping > li').show();
        else {
            $('#lstShipping > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstShippingDet > li').on("click", function () {
        // $('#ShippingLineName').val($(this).text());
        $('#ShippingLineNameDet').val($(this).text());

        $('#ShippingLineId').val($(this).attr('id'));
        $("#ShippingLineDetModal").modal("hide");
    });
    $('#lstCommodity > li').on("click", function () {
        $('#txtCommodity').val($(this).text());
        $('#CommodityId').val($(this).attr('id'));
        $("#CommodityModal").modal("hide");
    });
</script>
<script>

    var EditIndex = -1;
    var ArrayOfContainerDetails = [];
    var obj;
    $(document).ready(function () {
        debugger;
        ArrayOfContainerDetails = $.parseJSON($('#FormOneDetailsJS').val());

        GenerateTable();
    });
    function AddFormOneDet() {
        debugger;
        var dateOfLanding = $('#txtDateOfLanding').val();
        if (dateOfLanding == "" || dateOfLanding == undefined) {
            dateOfLanding = "";
        }
        var lcl = "";
        if ($('#rbFCL')[0].checked) {

            lcl = "FCL";
        }
        if ($('#rbLCL')[0].checked) {

            lcl = "LCL";
        }

        if (ValidateFormOneDet(lcl)) {
            var ContainerDetails = {
                "FormOneDetailID": $('#FormOneDetailId').val(),
                "ContainerNo": $('#txtContainerNo').val(),
                "ContainerSize": $('#ddlContainerSize option:selected').val(),
                "Reefer": $('#IsReefer').is(':checked') ? 1 : 0,
                "FlatReck": $('#IsFlatReck').is(':checked') ? 1 : 0,
                "SealNo": $('#txtSealNo').val(),
                "LineNo": $('#txtLineNo').val(),
                "MarksNo": $('#txtMarksNo').val(),
                "CHAId": $('#CHAId').val() == null || $('#CHAId').val() == undefined ? 0 : $('#CHAId').val(),     //added.
                "CHAName": $('#txtCHAName').val(),
                "ImporterId": $('#ImporterId').val() == "" || $('#ImporterId').val() == undefined ? 0 : $('#ImporterId').val(),
                "ImporterName": $('#txtImporterName').val(),
                "ForwarderId": $('#TSAForwarderId').val() == "" || $('#TSAForwarderId').val() == undefined ? 0 : $('#TSAForwarderId').val(),
                "ForwarderName": $('#txtTSAForwarderName').val(),
                "CargoDesc": $('#txtCargoDesc').val(),
                "CommodityId": $('#CommodityId').val() == "" || $('#CommodityId').val() == undefined ? 0 : $('#CommodityId').val(),
                "CommodityName": $('#txtCommodity').val(),
                "CargoType": $('#ddlCargoType option:selected').val(),
                "DateOfLanding": dateOfLanding,
                "Remarks": $('#txtRemarks').val(),
                "LCLFCL": lcl,
                "VehicleNo": $('#txtVehicle').val(),
                "Noofpkg": $('#Noofpkg').val() == "" ? 0 : $('#Noofpkg').val(),
                "PackageType": $('#ddlPackageType option:selected').val(),
                "Others": $('#Others').val(),
                "GrossWeight": $('#GrossWeight').val() == "" ? 0 : $('#GrossWeight').val(),
                "CIFValue": $('#CIFValue').val() == "" ? 0 : $('#CIFValue').val(),
                "GrossDuty": $('#GrossDuty').val() == "" ? 0 : $('#GrossDuty').val(),
                "OBLNO": $('#OBLNO').val(),
                "IsODC": $('#IsODC').is(':checked') ? 1 : 0,
                "OBLDate": $('#OBLDate').val(),
                "ShippingLineNameDet": $('#ShippingLineNameDet').val(),
                "IgmImporter": $('#IgmImporter').val() == "" ? null : $('#IgmImporter').val()

            };

            //ArrayOfContainerDetails.splice(EditIndex, 1);
            var flag = 0;
            if (lcl == "FCL") {
                $.each(ArrayOfContainerDetails, function (i, elem) {
                    if (ContainerDetails.ContainerNo == elem.ContainerNo) {
                        flag = 1;

                    }

                });


                if (flag == 0) {
                    ArrayOfContainerDetails.push(ContainerDetails);
                }
                else {
                    alert("FCL Container can not add multiple line no. for same container");
                }
            }
            else {

                ArrayOfContainerDetails.push(ContainerDetails);
            }
            $('#tblFormOneDet').html('');
            GenerateTable();
            //ResetFormOneDet();
            ResetFormOneDetPartial();
            $('#btnAddFormOneDet').prop("disabled", true);
            $("#txtContainerNo").prop("disabled", true);
            $('#ContainerSearch').css("display", "none");
        }
    }
    function ValidateFormOneDet(ctype) {
        debugger;
        var Status = true;
        if ($('#txtContainerNo').val() == "") {
            $('#ErrContainerNo').html('Fill Out This Field');
            Status = false;
        }
        if ($('#ddlContainerSize option:selected').text() == "----Select----") {
            $('#ErrContainerSize').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtSealNo').val() == "") {
            $('#ErrSealNo').html('Fill Out This Field');
            Status = false;
        }
        //if ($('#txtLineNo').val() == "") {
        //    $('#ErrLineNo').html('Fill Out This Field');
        //    Status = false;
        //}
        if ($('#LCLFCL').val() == "") {
            $('#ErrLCLFCL').html('Fill Out This Field');
            Status = false;
        }
        //if ($('#txtMarksNo').val() == "") {
        //    $('#ErrMarksNo').html('Fill Out This Field');
        //    Status = false;
        //}
        //if ($('#txtCHAName').val() == "") {
        //    $('#ErrCHAName').html('Fill Out This Field');
        //    Status = false;
        //}

        if (ctype == "LCL") {
            if ($('#OBLNO').val() == "") {
                $('#ErrTOBLNO').html('Fill Out This Field');
                Status = false;
            }

        }
        if ($('#txtImporterName').val() == "") {
            $('#ErrImporterName').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtCargoDesc').val() == "") {
            $('#ErrCargoDesc').html('Fill Out This Field');
            Status = false;
        }
        if ($('#txtCommodity').val() == "") {
            $('#ErrCommodity').html('Fill Out This Field');
            Status = false;
        }
        if ($('#ddlCargoType option:selected').text() == "----Select----") {
            $('#ErrCargoType').html('Fill Out This Field');
            Status = false;
        }
        if ($('#ddlPackageType option:selected').text() == "----Select----") {
            $('#ErrPackageType').html('Fill Out This Field');
            Status = false;
        }
        if ($('#CIFValue').val() == 0) {
            $('#ErrCIF').html('Fill Out This Field');
            Status = false;
        }
        //if ($('#txtDateOfLanding').val() == "") {
        //    $('#ErrDateOfLanding').html('Fill Out This Field');
        //    Status = false;
        //}
        //if ($('#txtRemarks').val() == "") {
        //    $('#ErrRemarks').html('Fill Out This Field');
        //    Status = false;
        //}

        //setTimeout(function () { $('span[id*="Err"]').html(''); }, 2000);
        return Status;
    }

    function AddNewContainer() {
        debugger;
        $("#txtContainerNo").prop("disabled", false);
        $('#ContainerSearch').css("display", "block");
        $('#btnAddFormOneDet').prop("disabled", false);
    }

    function GetICEGateData() {
        debugger;
        if ($('#txtContainerNo').val() == "") {
            $('#ErrContainerNo').html('Fill Out This Field');
            return false;
        }
        if ($('#ddlContainerSize option:selected').text() == "----Select----") {
            $('#ErrContainerSize').html('Fill Out This Field');
            return false;
        }
        $.ajax({
            url: '/Import/Hdb_CWCImport/GetICEGateDataFCL',
            dataType: 'JSON',
            type: 'GET',
            data: { ContainerNo: $('#txtContainerNo').val(), Size: $("#ddlContainerSize").val() },
            success: function (response) {

                debugger;
                var flag = 0;
                if (response.length > 0) {
                    var ContainerDetails = {};
                    $.each(response, function (i, elem) {
                        debugger;
                        ContainerDetails = {
                            "FormOneDetailID": $('#FormOneDetailId').val(),
                            "ContainerNo": response[i].ContainerNo,
                            "ContainerSize": response[i].ContainerSize,
                            "Reefer": $('#IsReefer').is(':checked') ? 1 : 0,
                            "FlatReck": $('#IsFlatReck').is(':checked') ? 1 : 0,
                            "SealNo": response[i].SealNo,
                            "LineNo": response[i].LineNo,
                            "MarksNo": '',
                            "CHAId": 0,     //added.
                            "CHAName": '',
                            "ImporterId": 0,
                            "ImporterName": '',
                            "ForwarderId": 0,
                            "ForwarderName": '',
                            "CargoDesc": '',
                            "CommodityId": 0,
                            "CommodityName": '',
                            "CargoType": '',
                            "DateOfLanding": '',
                            "Remarks": '',
                            "LCLFCL": response[i].LCLFCL,
                            "VehicleNo": '',
                            "Noofpkg": response[i].Noofpkg,
                            "PackageType": '',
                            "Others": '',
                            "GrossWeight": response[i].GrossWeight,
                            "CIFValue": response[i].CIFValue,
                            "GrossDuty": response[i].GrossDuty,
                            "OBLNO": response[i].OBLNO,
                            "OBLDate": '',
                            "ShippingLineNameDet": '',
                            "IgmImporter": response[i].IgmImporter

                        };
                        ArrayOfContainerDetails.push(ContainerDetails);
                    });
                    $('#tblFormOneDet').html('');
                    GenerateTable();
                    $('#txtContainerNo').val('');
                    $('#ddlContainerSize').prop('selectedIndex', 0);
                }
                else {
                    alert('No Record Found From ICE Gate');
                }
            },
            error: function (response) { // 500 Status Header
                alert('No Record Found From ICE Gate');
            },
        })
    };
    function GenerateTable() {
        var tablehtml = '<table id="tblFormOneDet" class="table table-striped table-bordered dataTable" style="width:100%;">'
            + '<thead><tr><th style="width:8%;text-align:center;">SL No</th><th>Container No</th><th>Container Size</th><th>Line No</th><th>Date of Landing</th><th>OBL No.</th><th style="width:10%;text-align:center;">Edit</th><th style="width:10%;text-align:center;">View</th></tr>'
            + '</thead><tbody>';
        $.each(ArrayOfContainerDetails, function (i, data) {
            tablehtml += '<tr><td style="text-align:center;">' + (i + 1) + '</td><td>' + data.ContainerNo + '</td><td>' + data.ContainerSize + '</td><td>' + data.LineNo + '</td><td>' + data.DateOfLanding + '</td><td>' + data.OBLNO + '</td>'
                + '<td style="text-align:center;"><a href="#" onclick="EditFormOneDet(' + i + ')"><i class="fa fa-pencil-square Edit"></i></a></td>'
                + '<td style="text-align:center;"><a href="#" onclick="ViewFormOneDet(' + i + ')"><i class="fa fa-search-plus Edit"></i></a></td></tr>';
        });
        tablehtml += '</tbody></table>';
        $('#tblFormOneDet').html(tablehtml);

        if (ArrayOfContainerDetails.length > 0) {
            $('#FormOneDetailsJS').val(JSON.stringify(ArrayOfContainerDetails));
        }
        else {
            $('#FormOneDetailsJS').val('');
        }
    }
    function ResetFormOneDetPartial() {
        $('#FormOneDetailId, #CHAId').val('0');

        if ($('input[name=LCLFCL]:checked').val() == 'FCL') {
            $('#txtContainerNo, #txtSealNo, #txtMarksNo, #txtDateOfLanding, #txtRemarks').val('');
        }
        else {
            $('#txtContainerNo, #txtSealNo, #txtMarksNo, #txtCargoDesc, #txtDateOfLanding, #txtRemarks').val('');
        }
        $('#Noofpkg, #PackageType, #GrossWeight, #CIFValue, #GrossDuty,#ImporterId,#txtImporterName,#CommodityId,#txtCommodity,#ddlCargoType').val('');
        $('#IsReefer, #IsFlatReck,#IsODC').attr('checked', false)
        $('#ddlContainerSize').prop('selectedIndex', 0);

        //$('#btnAddFormOneDet').prop("disabled", true);
    }

    function ResetFormOneDet() {
        $('#FormOneDetailId, #CHAId, #ImporterId, #CommodityId,#TSAForwarderId').val('0');
        $('#txtContainerNo, #txtSealNo, #txtLineNo, #txtMarksNo, #txtCHAName, #txtImporterName, #txtCargoDesc, #txtCommodity, #txtDateOfLanding, #txtRemarks,#txtVehicle').val('');
        $('#Noofpkg, #PackageType, #GrossWeight, #CIFValue, #GrossDuty, #OBLNO,#txtTSAForwarderName').val('');
        $('#IsReefer, #IsFlatReck,#IsODC').attr('checked', false)
        $('#ddlContainerSize, #ddlCargoType,#ddlPackageType').prop('selectedIndex', 0);
        //$('#btnAddFormOneDet').prop("disabled", true);
    }

    function EditFormOneDet(i) {
        debugger;
        if ($('#txtContainerNo').val() == '') {
            $('#btnAddFormOneDet').prop("disabled", false);
            $("#txtContainerNo").prop("disabled", true);
            $('#ContainerSearch').css("display", "none");
            $('#FormOneDetailId').val(ArrayOfContainerDetails[i].FormOneDetailID);
            $('#txtContainerNo').val(ArrayOfContainerDetails[i].ContainerNo);
            $('#ddlContainerSize option[value="' + ArrayOfContainerDetails[i].ContainerSize + '"]').prop("selected", true);
            $('#IsReefer').prop('checked', (ArrayOfContainerDetails[i].Reefer == 1 ? true : false));
            $('#IsFlatReck').prop('checked', (ArrayOfContainerDetails[i].FlatReck == 1 ? true : false));
            $('#txtSealNo').val(ArrayOfContainerDetails[i].SealNo);
            $('#txtLineNo').val(ArrayOfContainerDetails[i].LineNo);
            $('#txtMarksNo').val(ArrayOfContainerDetails[i].MarksNo);
            $('#CHAId').val(ArrayOfContainerDetails[i].CHAId);
            $('#txtCHAName').val(ArrayOfContainerDetails[i].CHAName);
            $('#ImporterId').val(ArrayOfContainerDetails[i].ImporterId);
            $('#txtImporterName').val(ArrayOfContainerDetails[i].ImporterName);
            $('#TSAForwarderId').val(ArrayOfContainerDetails[i].ForwarderId);
            $('#txtTSAForwarderName').val(ArrayOfContainerDetails[i].ForwarderName);

            $('#txtCargoDesc').val(ArrayOfContainerDetails[i].CargoDesc);
            $('#CommodityId').val(ArrayOfContainerDetails[i].CommodityId);
            $('#txtCommodity').val(ArrayOfContainerDetails[i].CommodityName);
            $('#ddlCargoType option[value="' + ArrayOfContainerDetails[i].CargoType + '"]').prop("selected", true);
            $('#txtDateOfLanding').val(ArrayOfContainerDetails[i].DateOfLanding);
            $('#txtRemarks').val(ArrayOfContainerDetails[i].Remarks);
            //  $('#LCLFCL').prop('checked', (ArrayOfContainerDetails[i].LCLFCL == "FCL" ? true : false));

            if (ArrayOfContainerDetails[i].LCLFCL == "FCL") {
                $('#rbFCL').prop('checked', true);
                $('#rbLCL').prop('checked', false);
            }
            else {
                $('#rbLCL').prop('checked', true);
                $('#rbFCL').prop('checked', false);
            }
            $('#txtVehicle').val(ArrayOfContainerDetails[i].VehicleNo);
            $('#Noofpkg').val(ArrayOfContainerDetails[i].Noofpkg);
            $('#ddlPackageType option[value="' + ArrayOfContainerDetails[i].PackageType + '"]').prop("selected", true);
            if (ArrayOfContainerDetails[i].PackageType != 'Others') {
                $('#Others').css("visibility", "hidden");
            }
            else {
                $('#Others').css("visibility", "visible");
            }
            $('#Others').val(ArrayOfContainerDetails[i].Others);
            $('#GrossWeight').val(ArrayOfContainerDetails[i].GrossWeight);
            $('#CIFValue').val(ArrayOfContainerDetails[i].CIFValue);
            $('#GrossDuty').val(ArrayOfContainerDetails[i].GrossDuty);
            $('#OBLNO').val(ArrayOfContainerDetails[i].OBLNO);
            $('#IsODC').prop('checked', (ArrayOfContainerDetails[i].IsODC == 1 ? true : false));
            $('#OBLDate').val(ArrayOfContainerDetails[i].OBLDate);
            $('#ShippingLineNameDet').val(ArrayOfContainerDetails[i].ShippingLineNameDet);
            $('#IgmImporter').val(ArrayOfContainerDetails[i].IgmImporter);
            ArrayOfContainerDetails.splice(i, 1);

            EditIndex = i;
            GenerateTable();
            $('#btnAddFormOneDet').prop("disabled", false);
        }
        else {
            alert('Please add the earlier record to edit');
        }
    }
    function ViewFormOneDet(i) {
        debugger;
        $('#FormOneDetailId').val(ArrayOfContainerDetails[i].FormOneDetailID);
        $('#txtContainerNo').val(ArrayOfContainerDetails[i].ContainerNo);
        $('#ddlContainerSize option[value="' + ArrayOfContainerDetails[i].ContainerSize + '"]').prop("selected", true);
        $('#IsReefer').attr('checked', ArrayOfContainerDetails[i].Reefer == 1 ? true : false);
        $('#IsFlatReck').attr('checked', ArrayOfContainerDetails[i].FlatReck == 1 ? true : false);
        $('#txtSealNo').val(ArrayOfContainerDetails[i].SealNo);
        $('#txtLineNo').val(ArrayOfContainerDetails[i].LineNo);
        $('#txtMarksNo').val(ArrayOfContainerDetails[i].MarksNo);
        $('#CHAId').val(ArrayOfContainerDetails[i].CHAId);
        $('#txtCHAName').val(ArrayOfContainerDetails[i].CHAName);
        $('#ImporterId').val(ArrayOfContainerDetails[i].ImporterId);
        $('#txtImporterName').val(ArrayOfContainerDetails[i].ImporterName);
        $('#TSAForwarderId').val(ArrayOfContainerDetails[i].ForwarderId);
        $('#txtTSAForwarderName').val(ArrayOfContainerDetails[i].ForwarderName);

        $('#txtCargoDesc').val(ArrayOfContainerDetails[i].CargoDesc);
        $('#CommodityId').val(ArrayOfContainerDetails[i].CommodityId);
        $('#txtCommodity').val(ArrayOfContainerDetails[i].CommodityName);
        $('#ddlCargoType option[value="' + ArrayOfContainerDetails[i].CargoType + '"]').attr("selected", "selected");
        $('#txtDateOfLanding').val(ArrayOfContainerDetails[i].DateOfLanding);
        $('#txtRemarks').val(ArrayOfContainerDetails[i].Remarks);
        if (ArrayOfContainerDetails[i].LCLFCL == "FCL") {
            $('#rbFCL').prop('checked', true);
            $('#rbLCL').prop('checked', false);
        }
        else {
            $('#rbLCL').prop('checked', true);
            $('#rbFCL').prop('checked', false);
        }
        $('#txtVehicle').val(ArrayOfContainerDetails[i].VehicleNo)
        $('#Noofpkg').val(ArrayOfContainerDetails[i].Noofpkg);
        $('#ddlPackageType option[value="' + ArrayOfContainerDetails[i].PackageType + '"]').attr("selected", "selected");
        if (ArrayOfContainerDetails[i].PackageType != 'Others') {
            $('#Others').css("visibility", "hidden");
        }
        else {
            $('#Others').css("visibility", "visible");
        }
        $('#Others').val(ArrayOfContainerDetails[i].Others);
        $('#GrossWeight').val(ArrayOfContainerDetails[i].GrossWeight);
        $('#CIFValue').val(ArrayOfContainerDetails[i].CIFValue);
        $('#GrossDuty').val(ArrayOfContainerDetails[i].GrossDuty);
        $('#OBLNO').val(ArrayOfContainerDetails[i].OBLNO);
        $('#IsODC').attr('checked', ArrayOfContainerDetails[i].IsODC == 1 ? true : false);
        $('#OBLDate').val(ArrayOfContainerDetails[i].OBLDate);
        $('#ShippingLineNameDet').val(ArrayOfContainerDetails[i].ShippingLineNameDet);
        $('#IgmImporter').val(ArrayOfContainerDetails[i].IgmImporter);
        $('#btnAddFormOneDet').prop("disabled", true);
    }

    function ResetAllFields() {
        @*$('[data-valmsg-for]').html('');
        $('span [id*="Err"]').html('');
        $('input[type="text"],Select,textarea').val('');
        $('#FormOneId, #ShippingLineId, #PortOfDischargeId, #FormOneDetailId, #CHAId, #ImporterId, #CommodityId').val('0');
        $('input[type="checkbox"').prop('checked', false);
        $('#FormOneDate').val('@Model.FormOneDate');
        $('#tblFormOneDet').html('');
        ArrayOfContainerDetails = [];*@
        GetFormOne();
    }
    function FormOneOnSuccess(data) {
        debugger;
        if (data.Status == 1 || data.Status == 2) {
            if ($('#DivFormOneMsg').hasClass('logErrMsg'))
                $('#DivFormOneMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivFormOneMsg').html(data.Message);
            //GetFormOneList();
            setTimeout(GetFormOne, TimeInSeconds);
            //ResetAllFields();
        }
        else {
            if ($('#DivFormOneMsg').hasClass('logSuccMsg'))
                $('#DivFormOneMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivFormOneMsg').html(data.Message);
        }
    }
    function FormOneOnFailure() {
        alert("Error");
    }
    $("#BLDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onSelect: function (dateText) {
            $('#OBLDate').val(dateText);
        },
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    $("#IGMDate").datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
            $(".Date_Img .Error_Msg").text("");
            $('[data-valmsg-for="Data"]').html('<span></span>');
        }
    });
    function ValidateGrid() {
        if ($('#FormOneDetailsJS').val() == '') {
            alert('Container Details Must Have Data.');
            return false;
        }
        else {
            var flag = false;
            var ContainerJArray = JSON.parse($('#FormOneDetailsJS').val());
            $.each(ContainerJArray, function (i, item) {
                if (item.DateOfLanding == '') {
                    flag = true;
                    return false;
                }
            });
            //if (flag) {
            //    alert('Container Details Must Have Date Of Landing.');
            //    return false;
            //}
            //else {
            //    return true;
            //}
        }
    }

    function hideMsg(elem) {
        $(elem).parent().find(".field-validation-error").html(" ");
    }
    ////if ($('#ddlPackageType').find(":selected").text() == "Others") {
    ////    $("#Others").removeAttr("disabled");
    ////}
    ////else {
    ////    $("#Others").attr("disabled", "disabled");
    ////    $("#Others").val('');
    ////}


    $('#ddlPackageType').change(function () {
        var val = $(this).find(":selected").text();
        if (val == 'Others') {
            $('#Others').css("visibility", "visible");

        }
        else {
            $('#Others').css("visibility", "hidden");
        }
    })
    $('#PortCross').on('click', function () {
        $('#PortOfDischargeId').val('0');
        $('#PortName').val('');
    });
    $('#CHACross').on('click', function () {
        $('#CHAId').val('0');
        $('#txtCHAName').val('');
    });
    $('#ShippingCross').on('click', function () {
        /*$('#ShippingLineId').val('0');*/
        $('#ShippingLineNameDet').val('');
    });
</script>

