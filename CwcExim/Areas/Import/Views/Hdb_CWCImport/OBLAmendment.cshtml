@model CwcExim.Areas.Import.Models.Hdb_OblAmendment


<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            <div id="divOBLAmendment">

                <div class="row">
                    <div class="col-md-12">
                        <h4>OBL/HBL Amendment</h4>
                    </div>
                </div>
                @using (Ajax.BeginForm("AddEditOBLAmendment", "Hdb_CWCImport", new AjaxOptions
                {
                    //OnComplete = "SaveDisabled",
                    //OnBegin = "SaveEnabled",
                   // Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "OnSuccess",
                    OnFailure = "OnFailure"
                }, new { id = "frmOblAmendment" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="row">
                        <div class="SignUp_space_top"></div>
                    </div>
                    <div class="Head_h4">
                        <div class="row">
                            <div class="col-md-12">
                                <h4>Old OBL/HBL Display</h4>
                            </div>
                        </div>
                        <div id="DivOldOBL" class="Form_Space_bottom">
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>OBL/HBL No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.OOBLNo, new { @class = "form-control input_sm", @readonly = true })
                                        <span class="search" id="OBLSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#OBLModal" onclick="GetOBLDetails()"></i></span>
                                        @Html.ValidationMessageFor(m => m.OOBLNo, "", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="col-md-offset-0-5 col-md-2-5">
                                        @*<input type="button" id="btnShowDetails" class="btn log_Btn_sm" value="Show Details" onclick="GetOBLDetails()" />*@
                                    </div>
                                    <div class="col-md-offset-1 col-md-1-5 col_cus_2 padding_rt">
                                        <label>BL Date:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.OBLDate, new { @class = "form-control input_sm", @readonly = true })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Container / CBT No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input_sm", @readonly = true })
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>ICD Code:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input_sm", @readonly = true })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>IGM No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.IGMNo, new { @class = "form-control input_sm", @readonly = true })                                       
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>IGM Date:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.IGMDate, new { @class = "form-control input_sm", @readonly = true })
                                       
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>No Of Pkg.:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.ONoOfPkg, new { @class = "form-control input_sm", @readonly = "true" })                                      
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>Gross Wt(Kg).:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.OGRWT, new { @class = "form-control input_sm", @readonly = "true" })                                        
                                    </div>

                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>CIF Value:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.OCIFValue, new { @class = "form-control input_sm", @readonly = "true" })
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>Gross Duty).:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.OGRDuty, new { @class = "form-control input_sm", @readonly = "true" })
                                    </div>

                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Importer Name:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.HiddenFor(m => m.OImporterId)
                                        @Html.TextBoxFor(m => m.OImporterName, new { @class = "form-control input_sm", @readonly = true })    
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="SignUp_space_top"></div>
                    </div>

                    <div class="Head_h4">
                        <div class="row">
                            <div class="col-md-12">
                                <h4>New OBL/HBL No.</h4>
                            </div>
                        </div>
                        <div id="DivNewOBL" class="Form_Space_bottom">
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>New OBL/HBL No:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.NOBLNo, new { @class = "form-control input_sm" })
                                        @Html.ValidationMessageFor(m => m.NOBLNo, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>No Of Pkg.:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.NNoOfPkg, new { @class = "form-control input_sm", @onkeypress = "return AllowOnlyInteger(event)" })
                                        @Html.ValidationMessageFor(m => m.NNoOfPkg, "", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>Gross Wt(Kg).:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.NGRWT, new { @class = "form-control input_sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                        @Html.ValidationMessageFor(m => m.NGRWT, "", new { @class = "Error_Msg" })
                                    </div>
                                </div>
                            </div>
                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>CIF Value:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.NCIFValue, new { @class = "form-control input_sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    </div>
                                    <div class="col-md-1-5 col-md-offset-4 col_cus_offset_3 col_cus_2 padding_rt">
                                        <label>Gross Duty).:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.TextBoxFor(m => m.NGRDuty, new { @class = "form-control input_sm", @onkeypress = "return AllowOnlyDecimal(event)" })
                                    </div>

                                </div>
                            </div>

                            <div class="row Form_Space_top">
                                <div class="form-group Form_Input">
                                    <div class="col-md-1-5 col_cus_2">
                                        <label>Importer Name:</label>
                                    </div>
                                    <div class="col-md-2-5">
                                        @Html.HiddenFor(m=>m.NImporterId)
                                        @Html.TextBoxFor(m => m.NImporterName, new { @class = "form-control input_sm", @readonly = true })
                                        <span class="search" id="ImporterSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#ImporterModal" onclick="ImporterBinding()"></i></span>
                                       
                                    </div>
                                    
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>

                    <div id="divOBLAmendmentMsg" class="logSuccMsg" style="background-color:transparent"></div>
                    <div id="divOBLAmendmentErrMsg" class="logErrMsg" style="background-color:transparent"></div>

                    <div class="row">
                        <div class="col-md-offset-3-5 col-md-2">
                            <input type="button" class="btn log_Btn_sm" id="btnSave" value="Save" onclick="SaveOblAmendment()" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Reset" onclick="ResetAll()" />
                        </div>

                    </div>
                    <div class="row Form_Space_top">
                        </div>
                        <div class="row Form_Space_top">
                            <div class="col-md-2">
                                <input type="button" class="btn log_Btn_sm" value="Show List" onclick="ShowList()">
                            </div>

                            <div class="col-md-offset-5 col-md-2-5">
                                <input class="form-control input-sm" type="text" placeholder="Search by OBL No" id="SearchOBLNO" />
                            </div>
                            <div class="col-md-2">
                                <input type="button" value="Search" onclick="SearchOBLNo()" class="btn log_Btn_sm" />
                            </div>
                        </div>

                        }
                    </div>
            <div class="row">
                <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div id="divOblAmendmentList"></div>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="modal fade mTabindex" id="OBLModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of BL No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="OBLNobox" type="text" tabindex="401" />
                <ul class="navList" id="OBLNoList"></ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="ImporterModal" class="modal fade mTabindex" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal" onclick="CloseImporterModel()"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">Choose Importer Name</h4>
            </div>
            <div class="modal-body popup_body" style="position:relative;">
                <input placeholder="Search By Importer Name Or Importer Code" type="text" id="txtImporterCode" />
                <span class="search" style="top: 18px;"><i class="fa fa-search" aria-hidden="true" onclick="ImporterSearch()"></i></span>
                <table class="table table-striped table-bordered dataTable tblhd" style="width:100%; margin:0 !important; border-bottom:0; padding:0;text-align:left;">
                    <thead>
                        <tr>
                            <th colspan="8" style="text-align:left;" width="80%">Importer Name</th>
                            <th colspan="4" width="20%">Importer Code</th>
                        </tr>
                    </thead>
                </table>
                <div id="slim_scroll">
                    <table class="table dataTable table-bordered table-striped slim_tble">
                        <tbody id="tblImporter"></tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-6">
                        <button type="button" id="txtLoadMoreParty" style="width:100%; margin-left:0;" onclick="LoadImporterList()" class="btn log_Btn_sm">Load More Data</button>
                    </div>
                    <div class="col-md-6">
                        <button type="button" class="btn log_Btn_sm" onclick="CloseImporterModel()" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript" src="/scripts/jquery.nicescroll.min.js"></script>
<script>
    $(document).ready(function () {       
        $('#slim_scroll').slimScroll({
            allowPageScroll: true
        });
    });
    //function SaveEnabled() {
    //    $('#btnSave').attr('enabled', 'enabled');
    //};
    //function SaveDisabled() {
    //    $('#btnSave').attr('disabled', 'disabled');

    //}

    function ImporterBinding() {
        debugger;      
        $('#txtImporterCode').val('');
        $.ajax({
            url: '/Import/Hdb_CWCImport/GetImporterForAmendment',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 1, 'PartyCode': '' },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {                    
                    var EcJson = data.Data.LstPartyDetails;
                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="SelectImporter(' + item.ImporterId + ',&quot;' + item.ImporterName + '&quot;);"><td colspan="8" width="80%">' + item.ImporterName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.ImporterCode + '</td></tr>';
                    });
                    $('#tblImporter').html(html);
                    if (data.Data.State == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });

    }

    $('#txtImporterCode').keyup(function () {
        ImporterSearch();
    });


    function ImporterSearch() {
        debugger;
        $('#tblImporter').html('');
        $.ajax({
            url: '/Import/Hdb_CWCImport/GetImporterForAmendment',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': 0, 'PartyCode': $('#txtImporterCode').val() },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {                    
                    var EcJson = data.Data.LstPartyDetails;
                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="SelectImporter(' + item.ImporterId + ',&quot;' + item.ImporterName + '&quot;);"><td colspan="8" width="80%">' + item.ImporterName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.ImporterCode + '</td></tr>';
                    });
                    $('#tblImporter').html(html);
                    if (data.Data.State == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });




    }
    var pPage = 0;
    function LoadImporterList() {
        pPage += 1;
        $.ajax({
            url: '/Import/Hdb_CWCImport/GetImporterForAmendment',
            type: 'GET',
            dataType: 'JSON',
            data: { 'Page': pPage, 'PartyCode': '' },
            success: function (data) {
                debugger;
                if (data.Data != '' && data.Data != null) {
                   
                    var EcJson = data.Data.LstPartyDetails;
                    var html = '';
                    $.each(EcJson, function (i, item) {

                        html += ''
                        html += '<tr onclick="SelectImporter(' + item.ImporterId + ',&quot;' + item.ImporterName + '&quot;);"><td colspan="8" width="80%">' + item.ImporterName + '</td><td colspan="4" width="20%" class="txt_wrp">' + item.ImporterCode + '</td></tr>';
                    });
                    $('#tblImporter').append(html);
                    if (data.Data.State == true) {
                        $('#txtLoadMoreParty').prop("disabled", false);
                    }
                    else {
                        $('#txtLoadMoreParty').prop("disabled", true);
                    }

                }
            }
        });

    }

    function SelectImporter(ImporterId, ImporterName) {
        debugger;       
        $('#NImporterId').val(ImporterId);
        $('#NImporterName').val(ImporterName);
        $("#ImporterModal").modal("hide");

    }

    function CloseImporterModel() {        
        $("#PartyModal").modal("hide");
    }

    function SaveOblAmendment()
    {
        debugger;
        var Validation = true;
        if ($('#OOBLNo').val() == "") {

            $('[data-valmsg-for="OOBLNo"]').html('<span>Fill Out This Field</span>');
            Validation = false;
        }

        if ($('#NOBLNo').val() == "") {

            $('[data-valmsg-for="NOBLNo"]').html('<span>Fill Out This Field</span>');
            Validation = false;
        }

        if (Number($('#NNoOfPkg').val()) == 0) {

            $('[data-valmsg-for="NNoOfPkg"]').html('<span>Fill Out This Field</span>');
            Validation = false;
        }

        if (Number($('#NGRWT').val())==0) {

            $('[data-valmsg-for="NGRWT"]').html('<span>Fill Out This Field</span>');
            Validation = false;
        }

        if ($('#NCIFValue').val() == "") {

            $('#NCIFValue').val(0);
        }
        if ($('#NGRDuty').val() == "") {

            $('#NGRDuty').val(0);
        }

        if (Validation == true) {
            var conf = confirm("Do you want to save ?");
            if (conf) {
                $('#frmOblAmendment').submit();
                $('#btnSave').prop("disabled", true);
            }
        }
    }

    function OnSuccess(data) {
        debugger;
        if (data.Status == 1) {
            $('#divOBLAmendmentMsg').html(data.Message);
            setTimeout(ResetAll, 3000);
        }
        else {
            $('#divOBLAmendmentErrMsg').html(data.Message);
        }
    }

    function OnFailure() {
    }
    function ResetAll() {
        $('#DivBody').load('/Import/Hdb_CWCImport/OBLAmendment');
    }


    $('#OBLNobox').keyup(function () {
        var valThis = $(this).val().toLowerCase();
        if (valThis == "") {
            $('#OBLNoList > li').show();
        } else {
            $('#OBLNoList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(valThis) >= 0) ? $(this).show() : $(this).hide();
            });
        };
    });


    function GetOBLDetails() {
        $.ajax({

            url: '/Import/Hdb_CWCImport/OBLAmendmentDetail',
            type: 'GET',
            dataType: 'JSON',
            success: function (data) {
                debugger;
                $('#OBLNoList').html('');
                if (data.Status == 1) {
                    var html = '';
                    var tab = 401;
                    $.each(data.Data, function (i, item) {
                        html += '<li tabindex=' + tab + '_' + i + ' onclick="SelectOBLDetails(' + item.ONoOfPkg + ',' + item.OGRWT + ',' + item.OCIFValue + ',' + item.OGRDuty + ',' + item.OImporterId + ',&quot;' +item.OImporterName+ '&quot;,&quot;' + item.OOBLNo + '&quot;,&quot;' + item.OBLDate + '&quot;,&quot;' + item.IGMNo + '&quot;,&quot;' + item.IGMDate + '&quot;,&quot;' + item.ContainerNo + '&quot;,&quot;' + item.CFSCode + '&quot;)">' + item.OOBLNo + '(' + item.ContainerNo + ')' + '</li>'
                    });
                    $('#OBLNoList').html(html);
                }

            }
        });
    }

    var ArrayOfSBOldDetails = [];
    function SelectOBLDetails(OldNoOfPkg,OldGRWT,OldCIFValue, OldGRDuty,OImporterId,OImporterName, OldOBLNo, OBLDate, IGMNo, IGMDate, ContainerNo, CFSCode) {

        debugger;
        $('#OBLSearch').css('display', 'none');
        $('#OBLModal').modal('hide');
        
        var BLNo = OldOBLNo.split('(');

        $('#OOBLNo').val(BLNo[0]);
        $('#NOBLNo').val(BLNo[0]);
        $('#OBLDate').val(OBLDate);
        $('#ONoOfPkg').val(OldNoOfPkg);
        $('#OGRWT').val(OldGRWT);
        $('#ContainerNo').val(ContainerNo);
        $('#CFSCode').val(CFSCode);
        $('#IGMNo').val(IGMNo);
        $('#IGMDate').val(IGMDate);
        $('#NNoOfPkg').val(OldNoOfPkg);
        $('#NGRWT').val(OldGRWT);
        $('#OCIFValue').val(OldCIFValue);
        $('#OGRDuty').val(OldGRDuty);
        $('#NCIFValue').val(OldCIFValue);
        $('#NGRDuty').val(OldGRDuty);
        $('#OImporterId').val(OImporterId);
        $('#OImporterName').val(OImporterName);
        $('#NImporterId').val(OImporterId);
        $('#NImporterName').val(OImporterName);

    }

    $('.mTabindex').keydown(function (e) {
        //debugger;
        var $focusable = $(this).find("[tabindex]:not([tabindex='-1'])");
        if ($focusable.last().is(":focus") && !e.shiftKey && e.key == "Tab") {
            e.preventDefault();
            $focusable.first().focus();
        }
        else
            if ($focusable.first().is(":focus") && e.shiftKey && e.key == "Tab") {
                e.preventDefault();
                $focusable.last().focus();
            }
    });

 
    function ShowList() {

        $('#SearchOBLNO').val("");
        $('#divOblAmendmentList').load('/Import/Hdb_CWCImport/GetOBLAmendmentList');
    }
    function SearchOBLNo() {
        var SearchValue = $('#SearchOBLNO').val().trim();
        $('#divOblAmendmentList').load('/Import/Hdb_CWCImport/GetOBLAmendmentList?SearchValue=' + SearchValue);
    }

    function AllowOnlyDecimal(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || (CharCode == 46) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }

    function AllowOnlyInteger(evt) {
        var CharCode;
        if (window.event) {
            CharCode = window.event.keyCode;
        }
        else {
            CharCode = evt.which;
        }
        if ((CharCode > 47 & CharCode < 58) || CharCode == 8) {
            return true;
        }
        else {
            evt.preventDefault;
            return false;
        }
    }

</script>