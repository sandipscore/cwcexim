@model CwcExim.Areas.Import.Models.PPG_Internal_MovementV2
<style>
    #lstGdwnWiseLctn label i {
        color: #000;
        font-weight: normal;
        font-family: 'FontAwesome';
        font-size: 13px !important;
    }
</style>

<div class="row">
    <div class="col-md-12">
        <div class="Head_h4">
            <div class="row">
                <div class="col-md-12">
                    <h4>Internal Movement Approval-Import</h4>
                </div>
            </div>

            @using (Ajax.BeginForm("AddEditInternalMovement", "Ppg_CWCImportV2", new AjaxOptions { HttpMethod = "POST", OnSuccess = "MovementOnSuccess", OnFailure = "MovementOnFailure" }, new { @Id = "PaymentSheetForm" }))
            {
                @Html.HiddenFor(m => m.TransferId)
                @Html.Hidden("ContainerJson")
                @Html.Hidden("BOEJson")
                @Html.Hidden("hdnAddress")
                @Html.Hidden("hdnState")
                @Html.Hidden("hdnStateCode")
                @Html.Hidden("PaymentSheetModelJson")
                @Html.Hidden("Status")
                if (ViewBag.RightsList != null)
                {
                    <input type="hidden" id="hdnRights" value="@ViewBag.RightsList" />
                }
                else
                {
                    <input type="hidden" id="hdnRights" value="" />
                }
                @Html.AntiForgeryToken()

                <div class="content_wrp">
                    <div id="DivAddMovement">

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Movement No:</label>
                                    @Html.HiddenFor(m => m.DestuffingEntryId)
                                    @Html.HiddenFor(m => m.DestuffingEntryDtlId)
                                    @Html.TextBoxFor(m => m.MovementNo, new { @readonly = true })
                                </div>
                            </div>

                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>Movement Date:</label>
                                    <div class="position-relative Date_Img">
                                        @Html.TextBoxFor(m => m.MovementDate, new { @readonly = true })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Movement App No:</label>
                                    @Html.TextBoxFor(m => m.TransferNo, new { @readonly = true })
                                </div>
                            </div>

                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>Movement App Date:</label>
                                    <div class="position-relative Date_Img">
                                        @Html.TextBoxFor(m => m.TransferDate, new { @readonly = true })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>OBL No:</label>
                                    <div class="position-relative">
                                        @Html.TextBoxFor(m => m.BOENo, new { @readonly = true })
                                        <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" onclick="GetBOENo()" data-target="#BOENoModal"></i></span>
                                        @Html.ValidationMessageFor(m => m.BOENo, "", new { @class = "Error_Msg" })
                                        <span style="color:red" id="ErrBOE"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>OBL Date:</label>
                                    <div class="position-relative Date_Img">
                                        @Html.TextBoxFor(m => m.BOEDate, new { @readonly = true })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Cargo Description:</label>
                                    @Html.TextAreaFor(m => m.CargoDescription, new { @style = "height:100px;width:100%", @readonly = true })
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>No Of Packages:</label>
                                    @Html.TextBoxFor(m => m.NoOfPackages, new { @readonly = true })
                                </div>
                            </div>

                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>Gross Wt(Kg):</label>
                                    <div class="position-relative Date_Img">
                                        @Html.TextBoxFor(m => m.GrossWeight, new { @readonly = true })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>From Godown:</label>
                                    @Html.HiddenFor(m => m.FromGodownId)
                                    @Html.TextBoxFor(m => m.OldGodownName, new { @readonly = true })
                                </div>
                            </div>

                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>To Godown:</label>
                                    <div class="position-relative">
                                        @Html.HiddenFor(m => m.ToGodownId)
                                        @Html.TextBoxFor(m => m.NewGodownName, new { @readonly = true })
                                        <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#GodownModal"></i></span>
                                        @Html.ValidationMessageFor(m => m.NewGodownName)
                                        <span style="color:red" id="Errgod"></span>                                        
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Old Location:</label>
                                    @Html.HiddenFor(m => m.OldLocationIds)
                                    @Html.TextBoxFor(m => m.OldLctnNames, new { @class = "form-control input-sm", @readonly = true })
                                </div>
                            </div>

                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>New Location:</label>
                                    <div class="position-relative">
                                        @Html.HiddenFor(m => m.LocationId)
                                        @Html.HiddenFor(m => m.NewLctnNames)
                                        @Html.TextBoxFor(m => m.LocationName, new { @class = "form-control input-sm", @readonly = true })
                                        <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#gdwnwiselocationmodal"></i></span>
                                        @Html.ValidationMessageFor(m => m.LocationName)
                                        <span style="color:red" id="Errloc"></span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row Form_Space_top">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Old Location:</label>
                                    @Html.HiddenFor(m => m.OldLocationIds)
                                    @Html.TextBoxFor(m => m.OldLctnNames, new { @readonly = true })
                                </div>
                            </div>

                            <div class="col-md-3 col-md-offset-6">
                                <div class="form-group">
                                    <label>New Location:</label>
                                    <div class="position-relative">
                                        @Html.HiddenFor(m => m.LocationId)
                                        @Html.HiddenFor(m => m.NewLctnNames)
                                        @Html.TextBoxFor(m => m.LocationName, new { @readonly = true })
                                        <span class="input_icon"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#gdwnwiselocationmodal"></i></span>
                                        @Html.ValidationMessageFor(m => m.LocationName)
                                        <span style="color:red" id="Errloc"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="row Form_Space_top">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="Radiocontainer">
                                        Approved
                                        <input type="checkbox" id="Approved" name="Approved" onclick="SelectApprovedRejected('A')" />
                                        <span class="checkmark"></span>
                                    </label>
                                    <label class="Radiocontainer">
                                        Rejected
                                        <input type="checkbox" id="Rejected" name="Rejected" onclick="SelectApprovedRejected('R')" />
                                        <span class="checkmark"></span>
                                    </label>
                                    <span style="color:red" id="ErrSts"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row SignUp_space_bottom SignUp_space_top">
                            <div class="stoke"></div>
                        </div>

                        <div class="d-flex justify-content-left">
                            <input type="button" id="savbtn" class="btn btn-primary mr-1 btn-100px" value="Save"  onclick="BindJson()">
                            <input type="button" id="btnReset" class="btn btn-primary-border btn-100px" value="Reset" onclick="ResetMovement()">
                        </div>

                        <div class="row mt10 mb10">
                            <div class="col-md-12">
                                <input type="button" value="Show List" onclick="GetMovementList()" class="btn btn-primary btn-100px" />
                            </div>
                        </div>

                        <div class="logSuccMsg" id="DivSucMsg" style="background-color:transparent"></div>
                        <div class="logErrMsg Form_Space_top" id="DivErrMsg" style="background-color:transparent"></div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div id="DivMovementList"></div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div id="GodownModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Godownbox" type="text" />
                <ul class="navList" id="lstGodown">
                    @{
                        if (ViewBag.ListOfGodown != null)
                        {
                            foreach (var item in ViewBag.ListOfGodown)
                            {
                                <li id="@item.Value" onclick="SelectGodown(this)">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="gdwnwiselocationmodal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of Godown Wise Location</h4>
            </div>
            <div class="modal-body popup_body">
                <div id="lstGdwnWiseLctn">
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="BOENoModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of OBL No</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="BOENobox" type="text" />
                <ul class="navList" id="BOENoList">
                    @{
                        if (ViewBag.BOENoList != null)
                        {
                            foreach (var item in ViewBag.BOENoList)
                            {

                                <li id="@item.Value" onclick="SelectBOENo(this)">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="LocationModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">List of New Location</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="Locationbox" type="text" />
                <ul class="navList" id="LocationList">
                    @{
                        if (ViewBag.LocationNoList != null)
                        {
                            foreach (var item in ViewBag.LocationNoList)
                            {
                                <li id="@item.Value" onclick="SelectNewLocation(this)">@item.Text</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $('#MovementDate').val('@ViewBag.CurrentDate');

        // GetMovementList();
    });
    $('#MovementDate').datepicker({
        dateFormat: "dd/mm/yy",
        showOn: "button",
        buttonImage: "/Content/images/calendar.png",
        buttonImageOnly: true,
        buttonText: "Select date",
        changeMonth: true,
        changeYear: true,
        showAnima: "fadein",
        onClose: function () {
        }
    });
    function GetMovementList() {
        $('#DivMovementList').load('/Import/Ppg_CWCImportV2/GetInternalMovementList');
    }
    function MovementOnSuccess(data) {
        $('#DivErrMsg').html('');
        if (data.Status == 1) {
            $('#DivSucMsg').html(data.Message);
            $('#Invoice').val(data.Data.InvoiceNo);
            $('#PaymentSheetModelJson').val(JSON.stringify(data.Data));
            $('#DivPaySheetCargoMsg').html(data.Message);
            // $('#savbtn').attr('disabled', 'disabled');
            //   $('#btnPrint').removeAttr('disabled');
            //  setTimeout(ResetMovement, 5000);
            //  GetMovementList();
            setTimeout(function () { $('#DivBody').load('/Import/Ppg_CWCImportV2/CreateInternalMovement'); }, 5000);
        }
        else {
            $('#DivErrMsg').html(data.Message);
            // setTimeout(function () { $('#DivErrMsg').html(''); }, 5000);
        }
    }
    function MovementOnFailure() { }
    $('#Godownbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstGodown > li').show();
        else {
            $('#lstGodown > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#BOENobox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#BOENoList > li').show();
        else {
            $('#BOENoList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });



    $('#Locationbox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#LocationList > li').show();
        else {
            $('#LocationList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    function SelectGodown(data) {
        $('#ToGodownId').val(data.id);
        $('#NewGodownName').val(data.innerText);
        $("#GodownModal").modal("hide");
        $('#NewLctnNames,#NewLocationIds').val('');
        $('#LocationName,#LocationId').val('');
        GetGodownWiseLocation();
    }
    function SelectBOENo(id, BOENo, TransferId) {
        $('#DestuffingEntryDtlId').val(id);
        $('#BOENo').val(BOENo.split(' -')[1]);
        $('#BOENo').val(TransferId);
        $("#BOENoModal").modal("hide");
        GetBOENoDetails(TransferId);
    }


    function SelectNewLocation(data) {
        $('#LocationId').val(data.id);
        $('#LocationName').val(data.innerText);
        $('#NewLctnNames').val(data.innerText);
        $("#LocationModal").modal("hide");
        //  GetInternalInvoice();
    }
    function GetGodownWiseLocation() {
        debugger;
        var GodownId = $('#ToGodownId').val();
        $.ajax({
            url: '/Import/Ppg_CWCImportV2/GetGodownWiseLocation',
            dataType: 'JSON',
            type: 'GET',
            data: { GodownId: GodownId },
            success: function (data) {
                if (data != null) {
                    var html = '';
                    $.each(data, function (i, elem) {
                        //$('#NewLctnNames,#NewLocationIds').val('');
                        //$('#LocationName,#LocationId').val('');
                        html += '<div class="col-md-3"><div class="boolean-container"><input type="checkbox" groupname="gen" id="' + elem.LocationId + 'y" name="' + elem.LocationId + '" onclick="SelectLocation()" /><label for="' + elem.LocationId + 'y"><i class="square">' + elem.LocationName + '</i></label></div></div>';
                    });
                    $('#lstGdwnWiseLctn').html(html);
                }
            }
        });
    }
    function GetBOENoDetails(TransferId) {
        debugger;
        $.ajax({
            url: "/Import/Ppg_CWCImportV2/GetTransferNoDetails",
            type: "GET",
            dataType: "JSON",
            data: { TransferId: TransferId },
            async: false,
            success: function (data) {
                if (data.Status == 1) {
                    $('#TransferNo').val(data.Data.TransferNo);
                    $('#TransferDate').val(data.Data.TransferDate);
                    $('#TransferId').val(data.Data.TransferId);
                    $('#BOENo').val(data.Data.BOENo);
                    $('#BOEDate').val(data.Data.BOEDate);
                    $('#CargoDescription').val(data.Data.CargoDescription);
                    $('#NoOfPackages').val(data.Data.NoOfPackages);
                    $('#GrossWeight').val(data.Data.GrossWeight);
                    $('#FromGodownId').val(data.Data.FromGodownId);
                    $('#OldLocationIds').val(data.Data.OldLocationIds);
                    $('#OldLctnNames').val(data.Data.OldLctnNames);
                    $('#OldGodownName').val(data.Data.OldGodownName);
                    $('#ToGodownId').val(data.Data.ToGodownId);
                    $('#NewLocationIds').val(data.Data.NewLocationIds);
                    $('#NewLctnNames').val(data.Data.NewLctnNames);
                    $('#NewGodownName').val(data.Data.NewGodownName);
                    $('#DestuffingEntryId').val(data.Data.DestuffingEntryId);
                    $('#LocationName').val(data.Data.NewLctnNames);
                    $('#LocationId').val(data.Data.NewLocationIds);
                    GetGodownWiseLocation();
                }
            }
        });
    }
    function SelectLocation() {
        debugger;
        var data = '';
        var inf = '';
        $('#lstGdwnWiseLctn').find('input:checked').each(function () {
            if (data == '')
                data = $(this).prop('name');
            else
                data = data + ',' + $(this).prop('name');
            if (inf == '')
                inf = $('label[for="' + $(this).prop('id') + '"]').text();
            else
                inf = inf + ',' + $('label[for="' + $(this).prop('id') + '"]').text();
        });
        $('#NewLocationIds').val(data);
        $('#NewLctnNames').val(inf);
        $('#LocationName').val(inf);
        $('#LocationId').val(data);
        // alert(data);
    }
    function ResetMovement() {
        $('#DivBody').load('/Import/Ppg_CWCImportV2/CreateInternalMovement');
    }


    function BindJson() {
        $('#ErrBOE,#Errgod,#Errloc,#ErrSts').html('');
        if ($('#BOENo').val() == '') {
            // $('[data-valmsg-for="PartyName"]').html('<span>Fill Out This Field</span>');
            $('#ErrBOE').html('Fill Out This Field');
            return false;
        }
        else if ($('#NewGodownName').val() == '') {
            //   $('[data-valmsg-for="PayeeName"]').html('<span>Fill Out This Field</span>');
            $('#Errgod').html('Fill Out This Field');
            return false;
        }
        else if ($('#LocationName').val() == '') {
            //   $('[data-valmsg-for="PayeeName"]').html('<span>Fill Out This Field</span>');
            $('#Errloc').html('Fill Out This Field');
            return false;
        }
        else if ($('#Status').val() == '') {
            $('#ErrSts').html('Select Approved/Rejected');
            return false;
        }
        else {
            var conf = confirm("Do you want to save ?");
            if (conf) {
                try {
                    $('#savbtn').attr('disabled', true);
                    $('form#PaymentSheetForm').submit();
                }
                catch (e) {
                    $('#savbtn').removeAttr('disabled');
                }
            }
        }
    }
    function GetBOENo() {
        $.ajax({
            url: "/Import/Ppg_CWCImportV2/GetTransferNo",
            type: "GET",
            dataType: "JSON",
            async: false,
            success: function (data) {
                var $html = $('#BOENoList');
                $html.html('');
                if (data.Status == 1) {
                    $.each(data.Data, function (i, item) {
                        $html.append('<li onclick="SelectBOENo(' + item.DestuffingEntryDtlId + ',&quot;' + item.BOENo + '&quot;' + ',' + item.TransferId + ')" value=' + item.DestuffingEntryDtlId + '>' + item.BOENo + '</li>');
                    });
                }
            }
        });
    }
    function SelectApprovedRejected(status) {
        if (status == 'A') {
            $('#Approved').prop('checked', true);
            $('#Rejected').prop('checked', false);
        }
        else {
            $('#Approved').prop('checked', false);
            $('#Rejected').prop('checked', true);
        }
        $('#Status').val(status);
    }
</script>