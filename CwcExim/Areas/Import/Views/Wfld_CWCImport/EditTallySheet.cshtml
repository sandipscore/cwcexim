@model CwcExim.Areas.Import.Models.TallySheet
<div class="container-fluid">
    <div class="col-md-offset-0-5 col-md-11">
        <div class="Head_h4">
            @using (Ajax.BeginForm("AddEditTallySheet", "Wfld_CWCImport",
                new AjaxOptions
                {
                    Confirm = "Are you sure you want to Save?",
                    HttpMethod = "POST",
                    OnSuccess = "TallySheetOnSuccess",
                    OnFailure = "TallySheetOnFailure"
                }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.TallySheetId)
                @Html.HiddenFor(m => m.SealCuttingId)
                @Html.HiddenFor(m => m.ContainerId)
                @Html.HiddenFor(m => m.GodownId)
                @Html.HiddenFor(m => m.StringifyXML)
                {
                    if (ViewBag.RightsList != null)
                    {
                        <input type="hidden" id="hdnRights" value="@ViewBag.RightsList" />
                    }
                    else
                    {
                        <input type="hidden" id="hdnRights" value="" />
                    }
                }
                <div id="DivCreateDeliveryApp">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>Tally Sheet</h4>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.TallySheetNo)<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.TallySheetNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col-md-offset-4 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.TallySheetDate)<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5 Date_Img">
                                @Html.TextBoxFor(m => m.TallySheetDate, new { @class = "form-control input-sm", @readonly = true })
                                @*@Model.TallySheetDate=@ViewBag.Currentdate;*@
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label for="ContainerNo">Container / CBT No</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.ContainerNo, new { @class = "form-control input-sm", @readonly = true })
                                @*<span class="search" id="CFSCode"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#CFSCodeModal"></i></span>*@
                                @Html.ValidationMessageFor(m => m.ContainerNo)
                            </div>
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                <label>CFS Code:</label>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.CFSCode, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.Size)<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.Size, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="form-group Form_Input">
                            <div class="col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.GodownId)<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                            <div class="col-md-offset-4 col-md-1-5 col_cus_2 padding_rt">
                                @Html.LabelFor(m => m.GateInNo)<span class="LabelColon">:</span>
                            </div>
                            <div class="col-md-2-5">
                                @Html.TextBoxFor(m => m.GateInNo, new { @class = "form-control input-sm", @readonly = true })
                            </div>
                        </div>
                    </div>
                    <div class="row Form_Space_top">
                        <div class="col-md-12" id="tblData"></div>
                    </div>
                    <div class="row">
                        <div class="stoke SignUp_space_bottom2 SignUp_space_top2"></div>
                    </div>
                    <div class="row">
                        <div class="col-md-offset-4 col-md-2">
                            <input type="submit" class="btn log_Btn_sm" value="Save" id="BtnSaveApp" />
                        </div>
                        <div class="col-md-2">
                            <input type="button" class="btn log_Btn_sm" value="Back" onclick="ResetAll()" />
                        </div>
                    </div>
                    <div id="DivMsg" class="logSuccMsg" style="background-color:transparent"></div>
                </div>
            }
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    var JsonData = [];
    var r2;
    var data;
    $(function () {
        r2 = JSON.parse($("#hdnRights").val());
        if(r2.CanAdd==0)
        {
            $('#BtnSaveApp').prop('disabled', true);
        }
        data=@Html.Raw(Json.Encode(Model.lstDtl));
        BindData();
        $("#TallySheetDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $('[data-valmsg-for="Data"]').html('<span></span>');
            }

        });
        $("#TallySheetDate").datepicker("option", "minDate", '@Model.SealCuttingDt');
    });
    
    function LoadTallyList() {
        $('#DivTallyList').load('/Import/Wfld_CWCImport/GetTallySheetList');
    }
    function ResetAll() {
        $('#DivBody').load('/Import/Wfld_CWCImport/GetTallySheet');
    }
    function BindData() {
        var tablehtml = '<table class="table table-bordered table-striped dataTable Table_center"><thead><tr><th colspan="2">OBL / HBL</th><th rowspan="2">IGM No.</th><th rowspan="2">Line No.</th><th rowspan="2">Cargo</th>' +
            '<th rowspan="2">No Of Pkg</th><th rowspan="2">Wt</th><th rowspan="2">UOM</th>' +
            '<th rowspan="2">Area(Approx.)</th></tr>' +
            '<tr><th>No.</th><th style="border-right: 1px solid;">Date</th></tr></thead><tbody>';
        $.each(data, function (i, elem) {
            tablehtml += '<tr><td>' + elem.OblNo + '</td><td>' + elem.OblDate + '</td><td>' + elem.IGMNo + '</td><td>' + elem.LineNo + '</td>' +
                '<td>' + elem.Cargo + '</td><td>' + elem.Pkg + '</td><td>' + elem.Wt + '</td><td><select id="txtUOM' + elem.TallySheetDtlId +'"><option value="' +elem.UOM + '" selected=true>'+elem.UOM+'</option></select></td><td><input type="text" onkeypress="return numbersonly(this, event);" id="txtArea' + elem.TallySheetDtlId + '" value="' + elem.Area + '"/></td></tr>';
        });
        tablehtml += '</tbody></table>';

        $('#tblData').html(tablehtml);

    }
    function TallySheetOnSuccess(data) {
        if (data.Status == 2) {
            if ($('#DivMsg').hasClass('logErrMsg'))
                $('#DivMsg').removeClass('logErrMsg').addClass('logSuccMsg');
            $('#DivMsg').html(data.Message);
            setTimeout(ResetAll,5000);
        }
        else {
            if ($('#DivMsg').hasClass('logSuccMsg'))
                $('#DivMsg').removeClass('logSuccMsg').addClass('logErrMsg');
            $('#DivMsg').html(data.Message);
        }
        setTimeout(function () { $('#DivMsg').html(''); }, 5000);
    }
    function TallySheetOnFailure() {

    }
    $('#BtnSaveApp').on('click', function () {
        $.each(data, function (i, elem) {
            elem.Area = ($('#txtArea' + elem.TallySheetDtlId).val()==''?0:$('#txtArea' + elem.TallySheetDtlId).val());
            elem.UOM = $('#txtUOM' + elem.TallySheetDtlId).val();
        });
        $('#StringifyXML').val(JSON.stringify(data));
    });
    function numbersonly(myfield, e, dec) {
        var key;
        var keychar;

        if (window.event)
            key = window.event.keyCode;
        else if (e)
            key = e.which;
        else
            return true;
        keychar = String.fromCharCode(key);

        //control keys
        if ((key == null) || (key == 0) || (key == 8) || (key == 9) || (key == 13) || (key == 27))
            return true;

            //numbers
        else if ((("0123456789.").indexOf(keychar) > -1))
            return true;

            //decimal point jump
            /*else if (dec && (keychar == ".")) {
            myfield.form.elements[dec].focus();
            return false;
            }*/
        else
            return false;
    }
</script>