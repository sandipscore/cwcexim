
@model CwcExim.Areas.Report.Models.DSRPcsReportHeader


@using (Ajax.BeginForm("GetPCSReport", "DSR_ReportCWC", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "PVSuccess",
    OnFailure = "PVFailure"
}))
{
    @Html.AntiForgeryToken()

   <div class="container-fluid">
        <div class="row">
            <div class="col-md-11 col-md-offset-0-5">
                <div class="container-fluid">
                    <div class="Head_h4">
                        <div class="row">
                            <div class="col-md-12">
                                <h4>PCS Report</h4>
                            </div>
                        </div>
                        <div class="Form_Space_top" style="padding:5px;">
                            <div class="row">
                                <div class="form-group Form_Input">

                                    <div class="col-md-1-5 col_cus_2 padding_rt">
                                        <label>Period From:</label>
                                    </div>
                                    <div class="col-md-2 col_cus_2_5 Date_Img">
                                        @Html.TextBoxFor(m => m.PeriodFrom, new { @class = "form-control", @id = "PeriodFrom", placeholder = "dd/mm/yyyy", @readonly = true })
                                        @Html.ValidationMessageFor(m => m.PeriodFrom, "", new { @class = "Error_Msg" })
                                    </div>
                                    <div class="col-md-1-5 col_cus_2 col_cus_offset_3 col-md-offset-4">
                                        <label for="FromDate" class="InputLabel">Period To:</label>
                                    </div>
                                    <div class="col-md-2 col_cus_2_5 Date_Img">
                                        @Html.TextBoxFor(m => m.PeriodTo, new { @class = "form-control", @id = "PeriodTo", placeholder = "dd/mm/yyyy", @readonly = true })
                                        @Html.ValidationMessageFor(m => m.PeriodTo, "", new { @class = "Error_Msg" })
                                    </div>

                                </div>
                            </div>


                            <div class="row">
                                <div class="form-group Form_Input">

                                    <div class="col-md-1-5">
                                        <label for="FromDate" class="InputLabel">Chemical Type:</label>
                                    </div>
                                    <div class="col-md-2">
                                        @Html.DropDownListFor(m => m.MbrType, new List<SelectListItem> {new SelectListItem { Text = "All", Value = "All" ,Selected=true}, new SelectListItem { Text = "MBR", Value = "MBR" },
                                   new SelectListItem { Text = "ALP", Value = "ALP" }
                               }, new { @class = "form-control input-sm" })
                                        @Html.ValidationMessageFor(m => m.MbrType, "", new { @class = "Error_Msg" })




                                    </div>
                                </div>
                            </div>

                        </div>



                        <div class="row SignUp_space_top SignUp_space_bottom">
                            <div class="stoke"></div>
                        </div>
                        <div class="row SignUp_space_bottom">
                            <div class="col-md-offset-5 col-md-2">
                                <input type="submit" value="Print" name="Command" class="btn log_Btn_sm" id="BtnPreview" />
                            </div>
                        </div>
                        <div class="logSuccMsg Form_Space_bottom" id="DivDwnldWavMsg" style="background-color:transparent;"></div>
                        <div class="logErrMsg Form_Space_bottom" id="DiverrDwnldWavMsg" style="background-color:transparent;"></div>
                     </div>
                </div>
            </div>
        </div>
    </div>


}
@Scripts.Render("~/bundles/jqueryval")
    <script>
    $('#BtnPreview').on("click", function () {
        //alert("in");
        //ValidateExitDet();
        $('#DivDwnldWavMsg').html('');
        var From = $('#PeriodFrom').val();
        var To = $('#PeriodTo').val();
        var SF = From.split('/');
        var ST = To.split('/');
        var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
        var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
        if (FromDate > ToDate) {
            $('#DivDwnldWavMsg').removeClass('logSuccMsg').addClass('logErrMsg').html('To Date must be greater than From Date');
            return false;
        }
        return true;
    });
    function RptConsumerListDtlOnFailure() { }
    function RptInvoiceReportDetails(data) {
        $('#DivDwnldWavMsg').html('')
        //alert(data);
        debugger;
        if (data.Status == 1) {

            debugger;
            SaveReportPdf(data);

        }
        else {
            $('#DivDwnldWavMsg').html("No Data Found").removeClass('logSuccMsg').addClass('logErrMsg');
        }
    }


    function ValidateExitDet() {
        var Status = true;

        if ($('#PeriodFrom').val() == "") {
            $('[data-valmsg-for="ContainerNo"]').html('<span>Fill Out This Field</span>');
            Status = false;
        }

        if ($('#PeriodTo').val() == "") {
            $('[data-valmsg-for="txtGrossWeight"]').html('<span>Fill Out This Field</span>');
            Status = false;
        }


        return Status;
    }
    function SaveReportPdf(data) {
        debugger;
        var FormDate = $("#PeriodFrom").val();
        var ToDate = $("#PeriodTo").val();
        var PostData = new FormData();
        var Html = '<div style="text-align: center;border: 1px solid #000;">Daily SD Activity Report From ' + FormDate + ' To ' + ToDate + '</div>'
        Html += "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border: 1px solid #000;border-collapse: collapse;margin-top:10px;'><thead><tr><th style='text-align: center;border: 1px solid #000;font-weight: 600;width:6%;'>Sl. No.</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;width:10%;'>Party Code</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;width:30%;'>Party Name</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;width:8%;'>Opening Balance</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;width:8%;'>Dr.Amount</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;width:8%;'>Cr.Amount</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;width:8%;'>Closing Balance</th></tr></thead><tbody>";
        var totalopening = 0; var totaldeposit = 0; var totalwithdraw = 0; var totalclosing = 0;
        for (i = 0; i < data.Data.LstDailyPdaActivityReport.length; i++) {
            Html += '<tr><td style="text-align: center;border: 1px solid #000;">' + (i + 1).toString() + '</td><td style="text-align: center;border: 1px solid #000;">' + data.Data.LstDailyPdaActivityReport[i].partycode + '</td><td style="text-align: left;border: 1px solid #000;">' + data.Data.LstDailyPdaActivityReport[i].Party + '</td><td style="text-align: left;border: 1px solid #000;">' + data.Data.LstDailyPdaActivityReport[i].Opening + '</td><td style="text-align: right;border: 1px solid #000;">' + data.Data.LstDailyPdaActivityReport[i].Deposit + '</td><td style="text-align: right;border: 1px solid #000;">' + data.Data.LstDailyPdaActivityReport[i].Withdraw + '</td><td style="text-align: right;border: 1px solid #000;">' + data.Data.LstDailyPdaActivityReport[i].Closing + '</td></tr>'
            totalopening = totalopening + parseFloat(data.Data.LstDailyPdaActivityReport[i].Opening);
            totaldeposit = totaldeposit + parseFloat(data.Data.LstDailyPdaActivityReport[i].Deposit);
            totalwithdraw = totalwithdraw + parseFloat(data.Data.LstDailyPdaActivityReport[i].Withdraw);
            totalclosing = totalclosing + parseFloat(data.Data.LstDailyPdaActivityReport[i].Closing);
        }

        Html += '<tr><th colspan="3" style="border: 1px solid #000;font-size:8pt;">TOTAL</th><th style="text-align: left;border: 1px solid #000;font-size:8pt;">' + totalopening.toFixed(2) + '</th><th style="text-align: right;border: 1px solid #000;font-size:8pt;">' + totaldeposit.toFixed(2) + '</th><th style="text-align: right;border: 1px solid #000;font-size:8pt;">' + totalwithdraw.toFixed(2) + '</th><th style="text-align: right;border: 1px solid #000;font-size:8pt;">' + totalclosing.toFixed(2) + '</th></tr>'
        Html += "</tbody></table>"
        PostData.append("Page", Html);
       // alert("PostData=" + PostData);
        var Token = $('input[name="__RequestVerificationToken"]').val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GeneratePCSReportPDF", "DSR_ReportCWC", new { area = "Report" })',
            headers: { '__RequestVerificationToken': Token },
            data: PostData,
            processData: false,
            contentType: false,
            success: function (data) {

                if (data.Status == 1) {
                    debugger;
                    window.open(data.Message + "?_t=" + (new Date().getTime()), '_blank', 'fullscreen=yes,modal=yes')
                }

            }
        });
    }
    function PVSuccess(data) {
        debugger;
        $('#DivDwnldWavMsg').html('');
        $('#DiverrDwnldWavMsg').html('');
        if (data.Status==1) {
            window.open(data.Data + "?_t=" + new Date().getTime(), "_blank");
        }
        else $('#DiverrDwnldWavMsg').html('No Data');
    }
    function PVFailure() { }

   
    $(function () {

        $("#PeriodFrom").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });
        $("#PeriodTo").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });
    });

   
</script>




