@model CwcExim.Areas.Report.Models.Ppg_TdsDeductionReport
<script>


    $(function () {

        $("#PeriodFrom").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });
        $("#PeriodTo").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });
    });

</script>

@using (Html.BeginForm("GetTdsDeductionReport", "Ppg_ReportCWCV2", FormMethod.Post))
{
    @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-md-12">

                <div class="Head_h4">
                    <div class="row">
                        <div class="col-md-12">
                            <h4>TDS Deduction Report</h4>
                        </div>
                    </div>
                    <div class="content_wrp">
                        <div class="Form_Space_top" style="padding:5px;">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Period From:</label>
                                    </div>
                                    <div class="position-relative Date_Img">
                                        @Html.TextBoxFor(m => m.PeriodFrom, new { @id = "PeriodFrom", placeholder = "dd/mm/yyyy", @readonly = true })
                                        @Html.ValidationMessageFor(m => m.PeriodFrom, "", new { @class = "Error_Msg" })

                                    </div>
                                </div>
                                <div class="col-md-3 col-md-offset-6">
                                    <div class="form-group">
                                        <label>Period To:</label>
                                    </div>
                                    <div class="position-relative Date_Img">
                                        @Html.TextBoxFor(m => m.PeriodTo, new { @id = "PeriodTo", placeholder = "dd/mm/yyyy", @readonly = true })
                                        @Html.ValidationMessageFor(m => m.PeriodTo, "", new { @class = "Error_Msg" })
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="row SignUp_space_top SignUp_space_bottom">
                            <div class="stoke"></div>
                        </div>
                        <div class="SignUp_space_bottom">
                            <div class="d-flex justify-content-left">
                                <input type="submit" value="Download" name="Command" class="btn btn-primary mr-1 btn-100px" id="BtnPreview" />
                            </div>
                        </div>
                        <div class="logSuccMsg Form_Space_bottom" id="DivDwnldWavMsg" style="background-color:transparent;"></div>
                    </div>
                </div>

            </div>
        </div>

}

@Scripts.Render("~/bundles/jqueryval")

<script>
    $('#BtnPreview').on("click", function () {
        //alert("in");
        //ValidateExitDet();
        $('#DivDwnldWavMsg').html('');
        var From = $('#PeriodFrom').val();
        var To = $('#PeriodTo').val();
        var SF = From.split('/');
        var ST = To.split('/');
        var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
        var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
        if (FromDate > ToDate) {
            $('#DivDwnldWavMsg').removeClass('logSuccMsg').addClass('logErrMsg').html('To Date must be greater than From Date');
            return false;
        }
        return true;
    });
    function RptConsumerListDtlOnFailure() { }
    function RptInvoiceReportDetails(data) {
        $('#DivDwnldWavMsg').html('')
        //alert(data);
        debugger;
        if (data.Status == 1) {

            debugger;
            SaveReportPdf(data);

        }
        else {
            $('#DivDwnldWavMsg').html("No Data Found").removeClass('logSuccMsg').addClass('logErrMsg');
        }
    }



</script>