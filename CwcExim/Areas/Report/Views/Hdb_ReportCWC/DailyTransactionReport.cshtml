@model CwcExim.Areas.Report.Models.Hdb_DailyTransaction
@using (Html.BeginForm("GetDailyTransactionReport", "Hdb_ReportCWC",FormMethod.Post
))
{
    @Html.AntiForgeryToken()
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-11 col-md-offset-0-5">
                <div class="container-fluid">
                    <div class="Head_h4">
                        <div class="row">
                            <div class="col-md-12">
                                <h4>DAILY TRANSACTIN REPORT</h4>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 padding_rt">
                                    <label>From Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBoxFor(m => m.FromDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.FromDate, "", new { @class = "Error_Msg" })
                                </div>
                                <div class="col-md-1-5 padding_rt">
                                    <label>To Date:</label>
                                </div>
                                <div class="col-md-2 col_cus_2_5 Date_Img">
                                    @Html.TextBoxFor(m => m.ToDate, new { @class = "form-control", placeholder = "dd/mm/yyyy", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.ToDate, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 padding_rt">

                                </div>
                                <div class="col-md-1-5 col_cus_2">
                                    <div class="boolean-container">
                                        @Html.RadioButtonFor(m => m.Module, "Import", new { @class = "", @id = "Import", @checked = true })
                                        <label for="Import"><i class="circle"></i><span>Import</span></label>
                                    </div>
                                </div>
                                <div class="col-md-1-5 col_cus_2_5">
                                    <div class="boolean-container">
                                        @Html.RadioButtonFor(m => m.Module, "Export", new { @class = "", @id = "Export" })
                                        <label for="Export"><i class="circle"></i><span>Export</span></label>
                                    </div>
                                </div>
                                <div class="col-md-1-5 col_cus_2_5">
                                    <div class="boolean-container">
                                        @Html.RadioButtonFor(m => m.Module, "Bond", new { @class = "", @id = "Bond" })
                                        <label for="Bond"><i class="circle"></i><span>Bond</span></label>
                                    </div>

                                </div>
                                <div class="col-md-2">
                                    @Html.ValidationMessageFor(m => m.Module, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row Form_Space_top">
                            <div class="form-group Form_Input">
                                <div class="col-md-1-5 padding_rt">
                                    <label>Godown:</label>
                                </div>
                                <div class="col-md-10-5 col_cus_2_5">
                                    @Html.HiddenFor(m => m.GodownId)
                                    <span class="search" id="ShippingLineSearch"><i class="fa fa-search" aria-hidden="true" data-toggle="modal" data-target="#InvoiceModal"></i></span>
                                    @Html.TextBoxFor(m => m.GodownName, new { @class = "form-control", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.GodownName, "", new { @class = "Error_Msg" })
                                </div>
                            </div>
                        </div>
                        <div class="row SignUp_space_top SignUp_space_bottom">
                            <div class="stoke"></div>
                        </div>
                        <div class="row SignUp_space_bottom">
                            <div class="col-md-offset-5 col-md-2">
                                <input type="submit" value="Print" name="Command" class="btn log_Btn_sm" id="BtnPreview" />
                            </div>
                        </div>
                        <div class="logErrMsg Form_Space_bottom" id="DivDwnldWavMsg" style="background-color:transparent;"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="InvoiceModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content popup_modal">
            <div class="modal-header popup_header">
                <button type="button" class="close" data-dismiss="modal"><i class="fa fa-times" aria-hidden="true"></i></button>
                <h4 class="modal-title">Godown List</h4>
            </div>
            <div class="modal-body popup_body">
                <input placeholder="Search Me" id="InvoiceListBox" type="text" />
                <ul class="navList" id="lstInvoiceList">
                    @{
                        if (ViewBag.ListOfGodown != null)
                        {
                            foreach (var item in ViewBag.ListOfGodown)
                            {
                                <li id="@item.GodownId">@item.GodownName</li>
                            }
                        }
                    }
                </ul>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-md-offset-6 col-md-6">
                        <button type="button" class="btn log_Btn_sm" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jqueryval")
<script>
    $(function () {
        $("#FromDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });

        $("#FromDate").datepicker().datepicker("setDate", new Date());
        $("#ToDate").datepicker({
            dateFormat: "dd/mm/yy",
            showOn: "button",
            buttonImage: "/Content/images/calendar.png",
            buttonImageOnly: true,
            buttonText: "Select date",
            changeMonth: true,
            changeYear: true,
            showAnima: "fadein",
            onClose: function () {
                $(".Date_Img .Error_Msg").text("");
            }
        });

        $("#ToDate").datepicker().datepicker("setDate", new Date());
    });
    
    $('#InvoiceListBox').keyup(function () {
        var val = $(this).val().toLowerCase();
        if (val == "")
            $('#lstInvoiceList > li').show();
        else {
            $('#lstInvoiceList > li').each(function () {
                var text = $(this).text().toLowerCase();
                (text.indexOf(val) >= 0 ? $(this).show() : $(this).hide());
            });
        }
    });
    $('#lstInvoiceList li').on('click', function () {
        $('#GodownName').val($(this).text());
        $('#GodownId').val($(this).prop('id'));
        $('#InvoiceModal').modal('hide');
    });
    function DailyTransactionSuccess(data)
    {
        debugger;
        $('#DivDwnldWavMsg').html('');
        if (data.Data != '') {
            window.open(data.Data + "?_t=" + new Date().getTime(), "_blank");
        }
        else $('#DivDwnldWavMsg').html('No Data');
    }
    function DailyTransactionFailure() { }
    $('#BtnPreview').on("click", function () {
        if ($('#FromDate').val() == "") {
            $('[data-valmsg-for="FromDate"]').html('<span>Fill Out This Field</span>');
            return false;
        }

        if ($('#ToDate').val() == "") {
            $('[data-valmsg-for="ToDate"]').html('<span>Fill Out This Field</span>');
            return false;
        }
        $('#DivDwnldWavMsg').html('');
        var From = $('#FromDate').val();
        var To = $('#ToDate').val();
        var SF = From.split('/');
        var ST = To.split('/');
        var FromDate = new Date(SF[2], (Number(SF[1]) - 1), SF[0]);
        var ToDate = new Date(ST[2], (Number(ST[1]) - 1), ST[0]);
        if (FromDate > ToDate) {
            $('#DivDwnldWavMsg').removeClass('logSuccMsg').addClass('logErrMsg').html('To Date must be greater than From Date');
            return false;
        }
       
    });
</script>