using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CwcExim.Areas.Report.Models;
using CwcExim.Controllers;
using CwcExim.Models;
using CwcExim.Repositories;
using CwcExim.Filters;
using System.IO;
using CwcExim.UtilityClasses;
using System.Reflection;
using System.Text;
using CwcExim.Areas.Import.Models;
using System.Data;
using CwcExim.Areas.Export.Models;
using CwcExim.Areas.GateOperation.Models;
using System.Globalization;
using System.Drawing;
using EinvoiceLibrary;
using CwcExim.Areas.CashManagement.Models;
using System.Threading.Tasks;

namespace CwcExim.Areas.Report.Controllers
{
    public class Hdb_ReportCWCController : BaseController
    {
        private static readonly log4net.ILog log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

        private string HeadOffice { get; set; }
        private string HOAddress { get; set; }
        public string ZonalOffice { get; set; }
        public string ZOAddress { get; set; }
        public decimal EffectVersion { get; set; }

        public string EffectVersionLogoFile { get; set; }


        public Hdb_ReportCWCController()
        {
            /*
             * CALL PROCEDURE AND SET VALUE OF PROPERTIES
             */
            CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.getCompanyDetails();
            objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
            HeadOffice = ""; //objCompanyDetails.CompanyName;
            HOAddress = "";//objCompanyDetails.RoAddress;
            ZonalOffice = objCompanyDetails.CompanyName;
            ZOAddress = objCompanyDetails.CompanyAddress;
             EffectVersion =Convert.ToDecimal(objCompanyDetails.EffectVersion);
             EffectVersionLogoFile = objCompanyDetails.VersionLogoFile.ToString();
          



        }

        #region Invoice Containerwise


        [HttpGet]
        public ActionResult ContainerwiseInvoiceReport()
        {

            Ppg_ReportRepository objExport = new Ppg_ReportRepository();
            objExport.GetContainer();
            if (objExport.DBResponse.Status > 0)
                ViewBag.ContainerNo = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            else
                ViewBag.ContainerNo = null;
            return PartialView();
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetContainerReport(PPGContainerInvoiceReport ObjContaiunerReport)
        {
            if (ObjContaiunerReport.ContainerNo == null)
            {
                ObjContaiunerReport.ContainerNo = "";
            }
            Ppg_ReportRepository ObjRR = new Ppg_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            // List<PpgInvoiceGate> PpgInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
            ObjRR.ContainerInvoiceDetailsForPrint(ObjContaiunerReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                //string FilePath = GeneratingBulkPDF(PpgInvoiceGateList, ObjBulkInvoiceReport.InvoiceModuleName);
                string FilePath = "";


                FilePath = GeneratingContainerInvoice(ds);

                return Json(new { Status = 1, Data = FilePath });
            }
            else
                return Json(new { Status = -1, Data = "No Record Found." });

        }



        [NonAction]
        public string GeneratingContainerInvoice(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            // List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]); 
            List<string> lstSB = new List<string>();
            String CWC = "CWC";
            String GST = "";
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + ZonalOffice + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + ZOAddress + "</span>");
                html.Append("<br />");
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + GST + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Container wise Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                //html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    //     html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.FromDate + "</td>");
                    //    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Clause</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>");
                html.Append("*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            var FileName = "ContainerReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        #endregion
        #region IssueSlipReport




        [HttpGet]
        public ActionResult IssueSlipReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetIssueSlipReport(Hdb_IssueSlipReport ObjIssueSlipReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_IssueSlipReport> LstContainerOutReport = new List<Hdb_IssueSlipReport>();
            // Login objLogin = (Login)Session["LoginUser"];
            ObjRR.IssueSlipReport(ObjIssueSlipReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerOutReport = (List<Hdb_IssueSlipReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateIssueSlipReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "IssueSlipReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/IssueSlipReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 0f, 60f, 60f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/IssueSlipReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region CargoStuffingRegister



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult CargoStuffingRegister()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCargoStuffingRegister(Hdb_CargoStuffingRegister ObjCargoStuffingRegister)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_CargoStuffingRegister> LstCargoStuffingRegister = new List<Hdb_CargoStuffingRegister>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.CargoStuffingRegister(ObjCargoStuffingRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstCargoStuffingRegister = (List<Hdb_CargoStuffingRegister>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCargoStuffingRegisterPDF(FormCollection fc)
        {
            try
            {


                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "CargoStuffingRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CargoStuffingRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoStuffingRegister/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region Bulk Invoice

        [HttpGet]
        public ActionResult BulkInvoiceReport()
        {

            ExportRepository objExport = new ExportRepository();
            objExport.GetPaymentParty();
            if (objExport.DBResponse.Status > 0)
                ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            else
                ViewBag.PaymentParty = null;
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetInvoicePayeeList();
            if (objRR.DBResponse.Status > 0)
                ViewBag.PayeeList = JsonConvert.SerializeObject(objRR.DBResponse.Data);
            else
                ViewBag.PayeeList = null;
            return PartialView();
        }
        public string LoadImage(string img)
        {

            if (img != "")
            {

                string strm = img;

                //this is a simple white background image
                var myfilename = string.Format(@"{0}", Guid.NewGuid());

                //Generate unique filename
                string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                var bytess = Convert.FromBase64String(strm);
                using (var imageFile = new FileStream(filepath, FileMode.Create))
                {
                    imageFile.Write(bytess, 0, bytess.Length);
                    imageFile.Flush();
                }


                string targetpath = Server.MapPath("~/Docs/QRCode/") + myfilename + "crop" + ".jpeg";
                String newfilepath = Utility.ResizeImage(filepath, targetpath);
                return newfilepath;
            }
            else
            {
                return "";

            }
        }

        public string ResizeImage(String Source, String Target)
        {
            // string imgPath = @"D:\TESTPROJECT\Einvoice\CwcExim\CwcExim\Content\Images1\49dc6397-31bb-43d7-b4d0-2db8f04f57c8.png";
            // string imgPathTarget = @"D:\TESTPROJECT\Einvoice\CwcExim\CwcExim\Content\InvQrcode2.png";
            Bitmap source = new Bitmap(Source);
            Bitmap t = CropWhiteSpace(source);
            t.Save(Target);

            return (Target);
        }
        public Bitmap CropWhiteSpace(Bitmap bmp)
        {
            int w = bmp.Width;
            int h = bmp.Height;
            int white = 0xffffff;

            Func<int, bool> allWhiteRow = r =>
            {
                for (int i = 0; i < w; ++i)
                    if ((bmp.GetPixel(i, r).ToArgb() & white) != white)
                        return false;
                return true;
            };

            Func<int, bool> allWhiteColumn = c =>
            {
                for (int i = 0; i < h; ++i)
                    if ((bmp.GetPixel(c, i).ToArgb() & white) != white)
                        return false;
                return true;
            };

            int topmost = 0;
            for (int row = 0; row < h; ++row)
            {
                if (!allWhiteRow(row))
                    break;
                topmost = row;
            }

            int bottommost = 0;
            for (int row = h - 1; row >= 0; --row)
            {
                if (!allWhiteRow(row))
                    break;
                bottommost = row;
            }

            int leftmost = 0, rightmost = 0;
            for (int col = 0; col < w; ++col)
            {
                if (!allWhiteColumn(col))
                    break;
                leftmost = col;
            }

            for (int col = w - 1; col >= 0; --col)
            {
                if (!allWhiteColumn(col))
                    break;
                rightmost = col;
            }

            if (rightmost == 0) rightmost = w; // As reached left
            if (bottommost == 0) bottommost = h; // As reached top.

            int croppedWidth = rightmost - leftmost;
            int croppedHeight = bottommost - topmost;

            if (croppedWidth == 0) // No border on left or right
            {
                leftmost = 0;
                croppedWidth = w;
            }

            if (croppedHeight == 0) // No border on top or bottom
            {
                topmost = 0;
                croppedHeight = h;
            }

            try
            {
                var target = new Bitmap(croppedWidth, croppedHeight);
                using (Graphics g = Graphics.FromImage(target))
                {
                    g.DrawImage(bmp,
                    new RectangleF(0, 0, croppedWidth, croppedHeight),
                    new RectangleF(leftmost, topmost, croppedWidth, croppedHeight),
                    GraphicsUnit.Pixel);
                }
                return target;
            }
            catch (Exception ex)
            {
                throw new Exception(
                string.Format("Values are topmost={0} btm={1} left={2} right={3} croppedWidth={4} croppedHeight={5}", topmost, bottommost, leftmost, rightmost, croppedWidth, croppedHeight),
                ex);
            }
        }




        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkInvoiceReport(BulkInvoiceReport ObjBulkInvoiceReport)
        {
            // if (ObjBulkInvoiceReport.InvoiceNumber == null)
            // {
            //   ObjBulkInvoiceReport.InvoiceNumber = "";
            // }
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            // if (ObjBulkInvoiceReport.InvoiceNumber == null)
            //  {
            if (ObjBulkInvoiceReport.InvoiceModule == "All")
            {
                string ModuleName = "";
                //delete all the files in the folder before creating it
                if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
                    DeleteDirectory(deletelocation);
                }

                //get all the distinct invoice module and invoices list with respect to party and date range 
                ObjRR.ModuleListWithInvoice(ObjBulkInvoiceReport);
              //  ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
            //  }
            //  else
            //  {
            // List<PpgInvoiceGate> PpgInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
            //     ObjRR.InvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
            //  }
            if (ObjRR.DBResponse.Status == 1)
            {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    List<dynamic> lstModule = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                    IList lstDistModule = lstModule.Select(x => x.Module).Distinct().ToList();
                    string FilePath = "";


                    foreach (string Mod in lstDistModule)
                    {
                        //lstModule.Where(x => x.Module == Mod).ToList().ForEach(itemInv =>
                        //{
                        //    String ModuleName= itemInv.Module;
                        switch (Mod)
                        {
                            case "IMPYard":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                // ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                // FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                //  FilePath = GeneratingBulkPDFforHydYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                FilePath = GeneratingBulkPDFforHydYard((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "IMPDeli":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDF_GodownHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "Exp":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforExportHDB((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "EXPLod":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforLoadedHDB((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "EXPMovement":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "CCIN":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCCINEntry((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "BTT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "AUC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforAuction((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "EXPREF":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforReefer((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "BND":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBND((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;

                    case "BNDadv":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "FUM":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforFum((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "ECGodn":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforHydECGodn((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "BTTCONT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTCONT((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "BTTCONTStuff":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTStuffCONT((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "MISCINV":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforMisc((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "PEST":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforPest((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "EC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEC((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "INVDEBT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforDebitInv((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    case "BNDExtend":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondExtendHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                    default:
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforHydAll((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                        break;
                        }
                        //});

                    }
                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }

            else
            {
                // List<DSRInvoiceGate> DSRInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid

                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    //string FilePath = GeneratingBulkPDF(DSRInvoiceGateList, ObjBulkInvoiceReport.InvoiceModuleName);
                    string FilePath = "";
                    switch (ObjBulkInvoiceReport.InvoiceModule)
                    {
                        case "IMPYard":
                            
                            ObjBulkInvoiceReport.All = "";
                            // ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            // FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                            //  FilePath = GeneratingBulkPDFforHydYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                            FilePath = GeneratingBulkPDFforHydYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDeli":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDF_GodownHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXP":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforExportHDB(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPLod":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforLoadedHDB(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPMovement":
                            
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "CCIN":
                            
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCCINEntry(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTT":
                            
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTTHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "AUC":
                       
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforAuction(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPREF":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforReefer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BND":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                        case "BNDadv":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBondHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "FUM":
                     
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforFum(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "ECGodn":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforHydECGodn(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTTCONT":
                       
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTTCONT(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTTCONTStuff":
                         
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTTStuffCONT(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "MISCINV":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforMisc(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "PEST":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforPest(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EC":
                        
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEC(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "INVDEBT":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforDebitInv(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDExtend":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBondExtendHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        default:
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforHydAll(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                    }

                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }
        }
        [NonAction]
        public string GeneratingBulkPDFforFum(DataSet ds, string InvoiceModuleName,string All)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            var FileName = "";
            var location = "";
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='50'/></td>");
                html.Append("<td width='80%' valign='top' align='center'><h1 style='font-size: 16px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label>");
                html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>" + InvoiceModuleName + "</label>");
                html.Append("</td>");
                html.Append("<td valign='top'><img align='right' src='ISO' width='60'/></td>");
                html.Append("</tr>");
                html.Append("<tr><td colspan='3' style='text-align: right;'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");

                html.Append("<tr><td colspan='3'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%;' cellspacing='0'><tbody>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("<td colapan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Payer Name :</label> <span>" + item.PayeeName + "</span></td></tr>"); html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");


                html.Append("</tbody>");

                html.Append("</table></td></tr><tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container/Cargo Details :</b> </th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                //html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='5'>Shipping Line : " + item.ShippingLineName + " </td></tr>");
                //html.Append("<tr><td style='font-size: 12px;'>Shipping Line No.:  </td>");
                //html.Append("<td style='font-size: 12px;'>OBL No :  </td>");
                //html.Append("<td style='font-size: 12px;'>Item No. : " + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td>");
                //html.Append("<td style='font-size: 12px;'>BOE No : " + item.BOENo.ToString().TrimEnd(',') + " </td>");
                //html.Append("<td style='font-size: 12px;'>BOE Date : " + item.BOEDate.ToString().TrimEnd(',') + " </td>");
                //html.Append("</tr>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='3'>Importer : " + item.ExporterImporterName + " </td>");
                //html.Append("<td style='font-size: 12px;' colspan='2'>VALUE : " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='5'>CHA Name : " + item.CHAName + " </td></tr>");
                //html.Append("<tr><td style='font-size: 12px;'>No Of Pkg : " + item.TotalNoOfPackages.ToString() + " </td>");
                //html.Append("<td style='font-size: 12px;'>Total Gr.Wt (In Kg) : " + item.TotalGrossWt.ToString("0.000") + " </td>");
                //html.Append("<td style='font-size: 12px;'>Total Area (In Sqr Mtr) : " + item.TotalSpaceOccupied.ToString("0.000") + "</td>");
                //html.Append("<td></td>");
                //html.Append("<td></td>");
                //html.Append("</tr>");
                //html.Append("</table>");



                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container/Cargo Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");

                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>SR No.</th>");
                //html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + i.ToString() + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>Total :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 130px;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");


                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px; border-bottom:1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #333; border-top:0; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span> " + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody><tr><td style='font-size: 6pt; text-align: left;'colspan='2'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 6pt; text-align: left;' colspan='2'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/SIO <br/>(Signature)</td>");
                html.Append("</tr><tr><td colspan=4 style='font-size: 6pt; text-align: left;'>If any changes in INVOICE will be done within 15 days.After 15 days changes will not be done</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr></tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforPest(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();

            //Einvoice obj = new Einvoice(new HeaderParam(), "");
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                   objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                   // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";

                    //// Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br /><label style='font-size: 7pt; font-weight:bold;'>" + InvoiceModuleName + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container/Cargo Details :</b> </th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");

                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container/Cargo Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>"+item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
              if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              {
                  System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              }
              /*if (System.IO.File.Exists(location))
              {
                  System.IO.File.Delete(location);
              }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBondHdb(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            //Einvoice obj = new Einvoice(new HeaderParam(), "");
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                     objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                   // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";

                    //// Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br /><label style='font-size: 7pt; font-weight:bold;'>Bond Advance Paymentsheet</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice (SAC)</h2> </td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th colspan='6' width='50%'><b style='text-align: left; font-size: 7pt;'>SAC No :" + item.StuffingReqNo + "</b></th>");

                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<td colspan='6' width='50%' style='font-size:7pt;'><b>SAC validity :</b> From <u>" + elem.SacApprovedDate + "</u> to <u>" + elem.SacValidityDate + "</u></td>");
                });
                html.Append("</tr>");

                html.Append("<tr><td colspan='12'>");
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                    html.Append("<td colspan='6' width='50%'>");
                    html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><td colspan='6' width='30%'>BOL No.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOLNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOL Date</td><td>:</td><td colspan='6' width='70%'>" + elem.BOLDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOENo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOE Date.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOEDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>AWB No.</td><td>:</td><td colspan='6' width='70%'>" + elem.AWBNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>AWB Date</td><td>:</td><td colspan='6' width='70%'>" + elem.AWBDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>Godown No.</td><td>:</td><td colspan='6' width='70%'>" + elem.GodownName + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");

                    html.Append("<td colspan='6' width='50%'>");
                    html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><td colspan='6' width='40%'>CHA Name</td><td>:</td><td colspan='6' width='60%'>" + item.CHAName + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'></td><td>" + " " + "</td><td colspan='6' width='60%'></td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'></td><td>" + " " + "</td><td colspan='6' width='60%'></td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'></td><td>" + "" + "</td><td colspan='6' width='60%'></td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>No Of Pkg</td><td>:</td><td colspan='6' width='60%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");

                    html.Append("</tr></tbody></table>");
                    html.Append("</td></tr>");

                    //html.Append("<tr><td colspan='12'><table style='width:100%;'><tbody>");

                    html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container/Cargo Charges :</h3> </th></tr>");
                    html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                    html.Append("<thead><tr>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                    html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                    html.Append("<tbody>");
                    i = 1;
                    /*Charges Bind*/
                });
                i = 1;
                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBND(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstStorageDate = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();
            //Einvoice obj = new Einvoice(new HeaderParam(), "");

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                     objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                  //  objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);

                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br /><label style='font-size: 7pt; font-weight:bold;'>Bond Delivery Paymentsheet</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice (SAC)</h2> </td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th colspan='6' width='50%'><b style='text-align: left; font-size: 7pt;margin-top: 2px;'>Bond No :" + item.StuffingReqNo + "</b></th>");

                lstContainer.Where(p => p.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<td colspan='6' width='50%' style='font-size:7pt; text-align: right'><label width='15%'><b>SAC validity :</b></label> From <u>" + elem.SacApprovedDate + "</u> to <u>" + elem.SacValidityDate + "</u></td>");
                });
                html.Append("</tr>");

                html.Append("<tr><th colspan='2' width='20%' style='text-align: left; font-size: 7pt;margin-top: 4px;' valign='top'>Storage Period :</th>");
                html.Append("<td colspan='10' width='80%'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='0'><tbody>");
                
                var SacId = 0;
                var DeliId = 0;
                if (lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).Count() > 0)
                {
                    SacId = lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).ToList().Select(y => y.SacId).ToArray()[0];
                    DeliId = lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).ToList().Select(y => y.SacDelivryId).ToArray()[0];
                }

                lstStorageDate.Where(x => x.SacId == SacId && x.InvoiceId <= item.InvoiceId && x.SacDelivryId <= DeliId).ToList().ForEach(storage =>
                {
                    int j = 1;
                    html.Append("<tr><td colspan='12' cellpadding='5' valign='top'>From <u>" + storage.StorageFromDt + "</u> to <u>" + storage.StorageToDt + "</u></td></tr>");
                    j = j + 1;
                });
                html.Append("</tbody></table></td></tr>");


                html.Append("<tr><td colspan='12'>");
                int i = 1;
                Decimal totamt = 0;
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Bond No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BondNo.ToString().TrimEnd(',') + " </td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Bond Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BondDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOL No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOLNo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOL Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOLDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOENo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOEDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>AWB No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().AWBNo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>AWB Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().AWBDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Godown No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().GodownName.ToString().TrimEnd(',') + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='40%'>Ex-BOE No.</td><td>:</td><td colspan='6' width='60%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().ExBOENo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Ex-BOE Date.</td><td>:</td><td colspan='6' width='60%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().ExBOEDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Importer</td><td>:</td><td colspan='6' width='60%'>" + item.ExporterImporterName.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>CHA Name</td><td>:</td><td colspan='6' width='60%'>" + item.CHAName.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>CIF Value</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIF)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>DUTY</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIF) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>No Of Pkg</td><td>:</td><td colspan='6' width='60%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");
                
                html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container/Cargo Charges :</h3> </th></tr>");
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span> " + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());

            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
              if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              {
                  System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              }
              /*if (System.IO.File.Exists(location))
              {
                  System.IO.File.Delete(location);
              }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        [NonAction]
        public string GeneratingBulkPDFforExportHDB(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            //Einvoice obj = new Einvoice(new HeaderParam(), "");

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                  //  objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);


                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";


                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);

                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + "   " + "Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>ODC</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>To Date</th>");                
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                var lstDistinctCont = lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Select(x => new { InvoiceId = item.InvoiceId, CFSCode = x.CFSCode, ContainerNo = x.ContainerNo, Size = x.Size, ISODC = x.ISODC }).Distinct().ToList();                
                lstDistinctCont.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.StuffingReqDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });

                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>OBL No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Bill No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Bill Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Exporter</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>FOB Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>FOB Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total CBM</td><td>:</td><td colspan='6' width='70%'>" + item.TotalCBM.ToString("0.000") + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span> " + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
              if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              {
                  System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              }
              /*if (System.IO.File.Exists(location))
              {
                  System.IO.File.Delete(location);
              }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        [NonAction]
        public string GeneratingBulkPDFforLoadedHDB(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            //Einvoice obj = new Einvoice(new HeaderParam(), "");

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                   objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                  //  objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";

                   // Add Chranjit Das
                   var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);

                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th colspan='12'><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>ODC</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>To Date</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                var lstDistinctCont = lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Select(x => new { InvoiceId = item.InvoiceId, CFSCode = x.CFSCode, ContainerNo = x.ContainerNo, Size = x.Size, ISODC = x.ISODC, ArrivalDate = x.ArrivalDate }).Distinct().ToList();                
                lstDistinctCont.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });

                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>OBL No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Bill No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Bill Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Exporter</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>FOB Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>FOB Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
              if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              {
                  System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              }
              /*if (System.IO.File.Exists(location))
              {
                  System.IO.File.Delete(location);
              }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 10f, 10f, 10f, 10f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }



        [NonAction]
        public string GeneratingBulkPDFforBTTHdb(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            //Einvoice obj = new Einvoice(new HeaderParam(), "");

            
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);

            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                     objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                  // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);

                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                /***************/
                // html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>OBL No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Bill No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Bill Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Carting Date</td><td>:</td><td colspan='6' width='70%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BTT Date</td><td>:</td><td colspan='6' width='70%'>" + item.BTTDate + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Exporter</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>FOB Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>FOB Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.GrossWt)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Vehicle No.</td><td>:</td><td colspan='6' width='70%'>" + item.VehicleNo + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Cargo Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>"+item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span> " + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }



        [NonAction]
        public string GeneratingBulkPDF_GodownHdb(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            string GodownName = "";
            //Einvoice obj = new Einvoice(new HeaderParam(), "");
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);

            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                  // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + "   " + "Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; padding: 5px;'>Date of Carting</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Destuffing</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>No of Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>No of Week</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 7%'>ODC</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                int cc1 = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    cc1++;
                    if (cc1 == 1)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                        //   html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center;'>" + item.CartingDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (Convert.ToDateTime(item.DestuffingDate)).ToString("dd/MM/yy").ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + ((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.ArrivalDate)).TotalDays + 1).ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + Math.Ceiling(((((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.ArrivalDate)).TotalDays + 1)) / 7)).ToString() + "</td>");
                        GodownName = elem.GodownName.ToString();
                        html.Append("<td style='border-right: 1px solid #000;border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                        html.Append("</tr>");

                    }
                    i = i + 1;

                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Forwarder Name</td><td>:</td><td colspan='6' width='70%'>" + item.Forwarder + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOLNo + "</td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOLDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Godown Name</td><td>:</td><td colspan='6' width='70%'>" + GodownName + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");

                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>"+ item.PayeeCode+"</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
              if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              {
                  System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              }
              /*if (System.IO.File.Exists(location))
              {
                  System.IO.File.Delete(location);
              }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        [NonAction]
        public string GeneratingBulkPDFforHydYard(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            Decimal totamt = 0;
            //Einvoice obj = new Einvoice(new HeaderParam(), "");
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn=Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);



            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                   objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                 // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);

                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + "   " + "Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' valign='top'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>No of Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 7%;'>ODC</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GrossWt.ToString("0.000") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + ((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.ArrivalDate)).TotalDays + 1).ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOLNo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOLDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");

                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> "+item.PayeeCode+"</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo+" </ p > ");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
               
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        [NonAction]
        public string GeneratingBulkPDFforHydAll(DataSet ds, string InvoiceModuleName,string All)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            decimal totamt = 0;
            var FileName = "";
            var location = "";
            lstInvoice.ToList().ForEach(item =>
            {

                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='50'/></td>");
                html.Append("<td width='80%' valign='top' align='center'><h1 style='font-size: 16px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 12px;'>Email - cwccfs@gmail.com</label>");
                //html.Append("<br />" + InvoiceModuleName);
                html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label>");
                html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'></label>");
                html.Append("</td>");
                html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='60'/></td>");
                html.Append("</tr>");
                html.Append("<tr><td colspan='3' style='text-align: right;'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='3'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + "   " + "Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%;' cellspacing='0'><tbody>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%'style='font-size: 7pt;'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + "</span></td></tr>");
                html.Append("<tr><td colspan='12' width='100%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Payer Name : :</label> <span>" + item.PayeeName + "</span></td></tr>");

                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");



                html.Append("</tbody> ");
                html.Append("</table></td></tr><tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>ODC</th>");
                //   html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GrossWt.ToString("0.000") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");

                //html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='5'>Shipping Line : " + item.ShippingLineName + " </td></tr>");
                //html.Append("<tr><td style='font-size: 12px;'>Shipping Line No.:  </td>");
                //html.Append("<td style='font-size: 12px;'>OBL No :  </td>");
                //html.Append("<td style='font-size: 12px;'>Item No. : " + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td>");
                //html.Append("<td style='font-size: 12px;'>BOE No : " + item.BOENo + " </td>");
                //html.Append("<td style='font-size: 12px;'>BOE Date : " + item.BOEDate + " </td>");
                //html.Append("</tr>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='3'>Importer : " + item.ExporterImporterName + " </td>");
                //html.Append("<td style='font-size: 12px;' colspan='2'>VALUE : " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='5'>CHA Name : " + item.CHAName + " </td></tr>");
                //html.Append("<tr><td style='font-size: 12px;'>No Of Pkg : " + item.TotalNoOfPackages.ToString() + " </td>");
                //html.Append("<td style='font-size: 12px;'>Total Gr.Wt (In Kg) : " + item.TotalGrossWt.ToString("0.000") + " </td>");
                //html.Append("<td style='font-size: 12px;'>Total Area (In Sqr Mtr) :  </td>");
                //html.Append("<td></td>");
                //html.Append("<td></td>");
                //html.Append("</tr>");
                //html.Append("</table>");

                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>SR No.</th>");
                //html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th></tr></thead>");

                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + i.ToString() + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 130px;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 150px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 130px;'></th>");
                html.Append("<th colspan='2' style='font-size: 6pt; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='font-size: 6pt; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='font-size: 6pt; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Total(Rounded) :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #333; border-top:0; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='6'>");
                html.Append("<tbody><tr><td style='font-size: 6pt; text-align: left;'colspan='2'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 6pt; text-align: left;' colspan='2'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/SIO <br/>(Signature)</td>");

                html.Append("</tr><tr><td colspan=4 style='font-size: 6pt; text-align: left;'>If any changes in INVOICE will be done within 15 days.After 15 days changes will not be done</td></tr>");
                html.Append("</tbody></table>");

                html.Append("</td></tr></tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
              if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              {
                  System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              }
              /*if (System.IO.File.Exists(location))
              {
                  System.IO.File.Delete(location);
              }*/
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforDebitInv(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            StringBuilder html = new StringBuilder();
            decimal totamt = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                 //  objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='50'/></td>");
                html.Append("<td width='80%' valign='top' align='center'><h1 style='font-size: 16px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 12px;'>Email - cwccfs@gmail.com</label>");
                //html.Append("<br />" + InvoiceModuleName);
                html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label>");
                html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'></label>");
                html.Append("</td>");
                html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='60'/></td>");
                html.Append("</tr>");
                html.Append("<tr><td colspan='3' style='text-align: right;'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='3'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%;' cellspacing='0'><tbody>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%'style='font-size: 7pt;'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + "</span></td></tr>");
                html.Append("<tr><td colspan='12' width='100%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Payer Name : :</label> <span>" + item.PayeeName + "</span></td></tr>");

                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");



                html.Append("</tbody> ");
                html.Append("</table></td></tr><tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>ODC</th>");
                //   html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GrossWt.ToString("0.000") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                /*
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                
                //html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='5'>Shipping Line : " + item.ShippingLineName + " </td></tr>");
                //html.Append("<tr><td style='font-size: 12px;'>Shipping Line No.:  </td>");
                //html.Append("<td style='font-size: 12px;'>OBL No :  </td>");
                //html.Append("<td style='font-size: 12px;'>Item No. : " + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td>");
                //html.Append("<td style='font-size: 12px;'>BOE No : " + item.BOENo + " </td>");
                //html.Append("<td style='font-size: 12px;'>BOE Date : " + item.BOEDate + " </td>");
                //html.Append("</tr>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='3'>Importer : " + item.ExporterImporterName + " </td>");
                //html.Append("<td style='font-size: 12px;' colspan='2'>VALUE : " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                //html.Append("<tr><td style='font-size: 12px;' colspan='5'>CHA Name : " + item.CHAName + " </td></tr>");
                //html.Append("<tr><td style='font-size: 12px;'>No Of Pkg : " + item.TotalNoOfPackages.ToString() + " </td>");
                //html.Append("<td style='font-size: 12px;'>Total Gr.Wt (In Kg) : " + item.TotalGrossWt.ToString("0.000") + " </td>");
                //html.Append("<td style='font-size: 12px;'>Total Area (In Sqr Mtr) :  </td>");
                //html.Append("<td></td>");
                //html.Append("<td></td>");
                //html.Append("</tr>");
                //html.Append("</table>");

                html.Append("</td></tr>");
                */
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>SR No.</th>");
                //html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th></tr></thead>");

                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + i.ToString() + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 130px;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 150px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 130px;'></th>");
                html.Append("<th colspan='2' style='font-size: 6pt; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='font-size: 6pt; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='font-size: 6pt; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Total(Rounded) :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #333; border-top:0; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='6'>");
                html.Append("<tbody><tr><td style='font-size: 6pt; text-align: left;'colspan='2'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 6pt; text-align: left;' colspan='2'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/SIO <br/>(Signature)</td>");



                html.Append("</tr><tr><td colspan=4 style='font-size: 6pt; text-align: left;'>If any changes in INVOICE will be done within 15 days.After 15 days changes will not be done</td></tr>");
                html.Append("</tbody></table>");

                html.Append("</td></tr></tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforHydECGodn(DataSet ds, string InvoiceModuleName,string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            decimal totamt = 0;
            //Einvoice obj = new Einvoice(new HeaderParam(), "");
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                   objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                  //  objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);

                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>No of Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width:7%'>ODC</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GrossWt.ToString("0.000") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + ((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.ArrivalDate)).TotalDays + 1).ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");

                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                //html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>FOB Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforGE(DataSet ds, string InvoiceModuleName,string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br />" + InvoiceModuleName);
                html.Append("</td>");
                html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                html.Append("</tr>");
                html.Append("<tr><td colspan='3' style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='3'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; padding: 5px;'>To Date</th>");
                //  html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Destuffing</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Delivery</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Weight</th>");
                //  html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Delivery</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>No of Days</th>");
                //   html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>No of Week</th>");

                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    //  html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.ArrivalDate + "</td>");
                    // html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.CartingDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.DestuffingDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.DeliveryDate + "</td>");
                    //    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.GrossWt.ToString() + "</td>");
                    //     html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.DeliveryDate + "</td>");
                    //   html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + ((Convert.ToDateTime(objGP.DeliveryDate) - Convert.ToDateTime(objGP.ArrivalDate)).TotalDays + 1).ToString() + "</td>");
                    //  html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Math.Ceiling(((((Convert.ToDateTime(objGP.DeliveryDate) - Convert.ToDateTime(objGP.ArrivalDate)).TotalDays + 1)) / 7)).ToString() + "</td>");

                    // html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (container.CargoType == 1 ? "Haz" : "Non-Haz") + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });

                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tr><td style='font-size: 12px;' colspan='5'>Shipping Line : " + item.ShippingLineName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>Shipping Line No.:  </td>");
                html.Append("<td style='font-size: 12px;'>OBL No :  </td>");
                html.Append("<td style='font-size: 12px;'>Item No. : " + lstContainer.Where(x => x.InvoiceId == item.InvoiceId).Count().ToString() + "</td>");
                html.Append("<td style='font-size: 12px;'>BOE No : " + item.BOENo + " </td>");
                html.Append("<td style='font-size: 12px;'>BOE Date : " + item.BOEDate + " </td>");
                html.Append("</tr>");
                html.Append("<tr><td style='font-size: 12px;' colspan='3'>Importer : " + item.ExporterImporterName + " </td>");
                html.Append("<td style='font-size: 12px;' colspan='2'>VALUE : " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td style='font-size: 12px;' colspan='5'>CHA Name : " + item.CHAName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>No Of Pkg : " + item.TotalNoOfPackages.ToString() + " </td>");
                html.Append("<td style='font-size: 12px;'>Total Gr.Wt (In Kg) : " + item.TotalGrossWt.ToString("0.000") + " </td>");
                html.Append("<td style='font-size: 12px;'>Total Area (In Sqr Mtr) :  </td>");
                html.Append("<td></td>");
                html.Append("<td></td>");
                html.Append("</tr>");
                html.Append("</table>");
                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                //html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString() + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + totamt.ToString("0") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString() + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString() + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString() + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #333; border-top:0; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<span><br/></span>");
                html.Append("<p style='display: block; font-size: 11px; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 11px; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 11px; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 11px; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 11px; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 11px; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'colspan='2'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label>");
                html.Append("</td>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;' colspan='2'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>SAM/SIO <br/>(Signature)</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;

        }



        [NonAction]
        public string GeneratingBulkPDFforYard(DataSet ds, string InvoiceModuleName,string All)
        {
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            var distinctValues = ds.Tables[3].AsEnumerable()
                         .Select(row => new
                         {
                             SACCode = row.Field<string>("SACCode")

                         })
                         .Distinct();



            List<string> lstSB = new List<string>();

            lstInvoice.ToList().ForEach(item =>
            {
                System.Text.StringBuilder html = new System.Text.StringBuilder();
                /*Header Part*/

                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                  objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                 // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }
                Decimal CTax = 0;
                if (item.TotalIGST > 0)
                {
                    CTax = item.TotalIGST;
                }
                else
                {
                    CTax = item.TotalCGST;
                }
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");

                html.Append("<tr style='text-align: center;'><td colspan='2'><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + "   " + "Invoice</h2></td></tr>");

                html.Append("<tr cellspacing='0' cellpadding='0'>");
                html.Append("<td style='border:1px solid #333; border-bottom: none;'>");
                html.Append("<table cellspacing='0' style='width:100%;'><tbody>");
                html.Append("<tr>");
                html.Append("<td style='vertical-align: top;'><img style='width: 100%;' src='logo.png'/></td>");
                html.Append("<td style='padding: 0 10px;'>");
                html.Append("<h1 style='font-size: 16px; margin:0; padding: 0;'>Central Warehousing Corporation</h1>");
                html.Append("<label style='font-size: 13px; text-transform:uppercase;'>(A Govt. of India Undertaking) </label>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>Principle Place of Business-RO Hyderabad,</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>1st Floor Warehousing Sadan,</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>Nampally, Behind Gandhi Bhavan</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>GSTIN/UIN: 36AAACC1206D2ZG</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>State Name: Telangana, Code: 36</h6>");
                html.Append("<h6 style='font-size: 11px; margin:0; font-weight:normal;'>Contact: 040-23773751,8142456715,9966483827,7337516165</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>E-Mail: cfs.kukatpally@cewacor.nic.in</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>www.cewacor.nic.in</h6>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("<td valign='top' cellspacing='0' cellpadding='0' style='border:1px solid #333; border-left: none; padding:0; border-bottom: none;'>");
                html.Append("<table cellspacing='0' style='width:100%;'><tbody>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Invoice No.<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>" + item.InvoiceNo + "</h2></td>");
                html.Append("<td valign='top' style='width:50%; padding: 10px; font-size: 12px;'>Dated<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>" + item.InvoiceDate + "</h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Delivery Note<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Account</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Mode/Terms of Payment<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>15 Days</h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Supplier's Ref.<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Cfs Kukarpally</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Other Reference(s)<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase;margin: 0; padding: 0;'>Tn56h2594</h2></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");

                html.Append("<tr valign='top' cellpadding='0'>");
                html.Append("<td style='border:1px solid #333; border-bottom: none;'>");
                html.Append("<br/>");
                html.Append("<p style='display: block; font-size: 12px; margin:0; padding: 0 10px;'>Consignee</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; font-weight: bold; margin:0;'>" + item.PartyName + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'>" + item.PartyAddress + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'></p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>GSTIN/UIN:</span>" + item.PartyGSTNo + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>Pan/It No:</span> </p>");
                html.Append("<p style='display: block; font-size: 13px; margin:0; padding: 0 10px;'><span style='display: inline-block; width: 100px;'>State Name:</span> " + item.PartyState + "</p>");
                html.Append("</td>");
                int i = 1;
                String cfscd = "";
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    cfscd = cfscd + elem.CFSCode + ",";
                });

                html.Append("<td valign='top' cellspacing='0' cellpadding='0' style='border:1px solid #333; border-left: 0; border-top: 0;'>");
                html.Append("<table cellspacing='0' style='width:100%;'><tbody>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top: 0; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Buyer's Order No.<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>" + cfscd + "</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top: 0; padding: 10px; font-size: 12px;'>Dated<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'></h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Despatch Document No.<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Be No: " + item.BOENo + " ," + item.BOEDate + "</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Delivery Note Date<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>" + item.DeliveryDate + "</h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>despatched througn<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'></h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Destination<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase;margin: 0; padding: 0;'></h2></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<td style='border:1px solid #333; padding: 10px;'>");
                html.Append("<p style='display: block; font-size: 12px; margin:0;'>Buyer(if other than consignee)</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; font-weight: bold; margin:0;'> " + item.PayeeName + " </p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'>" + item.PartyAddress + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'></p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'>" + item.PartyState + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>GSTIN/UIN:</span> " + item.PartyGSTNo + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>Pan/It No:</span> </p>");
                html.Append("<p style='display: block; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>State Name:</span> " + item.PartyState + "</p>");
                html.Append("</td>");
                html.Append("<td style='border:1px solid #333; border-top: 0; border-left: none; padding:10px; vertical-align: top;'>");
                html.Append("<span style='display: block; font-size: 12px;'>Terms of Delivery</span>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>" + item.TotalNoOfPackages.ToString() + "</h2>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>" + item.TotalGrossWt.ToString("0.000") + "</h2>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Godown no: </h2>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>No of Grids: </h2>");
                html.Append("</td>");
                html.Append("</tr>");

                /***************/
                html.Append("<tr cellspacing='0' cellpadding='0'>");
                html.Append("<td colspan='2' style='padding:0;'>");
                html.Append("<table style='border: 1px solid #000; border-bottom: 0; border-top: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>SL No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 300px;'>Particulars</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 80px;'>HSN/SAC</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>GST Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Quantity</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>per</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width:100px;'>Amount</th>");
                html.Append("</tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                Decimal cgstamt = 0;
                Decimal sgstamt = 0;
                Decimal igstamt = 0;
                Decimal tot = 0;
                String[] Sac;
                Sac = new string[50];
                Decimal[] Taxa;
                Decimal[] CenPer;
                Decimal[] StatePer;
                CenPer = new Decimal[50];
                StatePer = new Decimal[50];
                Taxa = new decimal[50];
                Decimal[] StateTax;
                StateTax = new decimal[50];
                Decimal[] CentralTax;
                CentralTax = new decimal[50];
                Decimal[] TotTax;
                TotTax = new decimal[50];
                Decimal Tamt = 0;
                Decimal Tcen = 0;
                Decimal Tstate = 0;
                Decimal TTax = 0;
                int count = 0;
                distinctValues.ToList().ForEach(data1 =>
                {
                    Sac[count] = data1.SACCode;
                    count++;
                });

                for (int ii = 0; ii < count; ii++)
                {
                    Taxa[ii] = 0;
                    CentralTax[ii] = 0;
                    StateTax[ii] = 0;
                    TotTax[ii] = 0;
                    lstCharges.ToList().ForEach(data =>
                    {

                        cgstamt = cgstamt + data.CGSTAmt;
                        sgstamt = sgstamt + data.SGSTAmt;
                        igstamt = igstamt + data.IGSTAmt;
                        if (data.SACCode == Sac[ii])
                        {
                            Taxa[ii] = Taxa[ii] + data.Taxable;

                            if (data.IGSTAmt > 0)
                            {
                                CenPer[ii] = data.IGSTPer;
                                StatePer[ii] = data.SGSTPer;
                                CentralTax[ii] = CentralTax[ii] + data.IGSTAmt;
                                StateTax[ii] = StateTax[ii] + (data.SGSTAmt + data.CGSTAmt);
                                TotTax[ii] = TotTax[ii] + (CentralTax[ii] + StateTax[ii]);
                                Tamt = Tamt + Taxa[ii];
                                Tcen = Tcen + CentralTax[ii];
                                Tstate = Tstate + StateTax[ii];
                                TTax = TTax + TotTax[ii];
                            }

                            else
                            {
                                CenPer[ii] = data.SGSTPer;
                                StatePer[ii] = data.CGSTPer;
                                CentralTax[ii] = CentralTax[ii] + data.SGSTAmt;
                                StateTax[ii] = StateTax[ii] + (data.CGSTAmt);
                                TotTax[ii] = TotTax[ii] + (CentralTax[ii] + StateTax[ii]);
                                Tamt = Tamt + Taxa[ii];
                                Tcen = Tcen + CentralTax[ii];
                                Tstate = Tstate + StateTax[ii];
                                TTax = TTax + TotTax[ii];

                            }
                        }
                    });
                }

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    Decimal gstper = 0;
                    gstper = data.CGSTPer + data.SGSTPer;

                    tot = data.Total;
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left; padding:0 20px 0 60px; font-weight:bold;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + gstper + " %</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'></td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'></td>");
                        html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + data.Taxable.ToString("0") + "</td></tr>");
                        i = i + 1;
                    }
                });
                html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'> " + i.ToString() + " </td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right; padding:0 20px 0 60px; font-weight:bold; text-transform:uppercase;'>CGST</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'>9</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'>%</td>");
                html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + item.TotalCGST.ToString("0") + "</td></tr>");
                i = i + 1;
                html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + i.ToString() + "</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right; padding:0 20px 0 60px; font-weight:bold; text-transform:uppercase;'>SGST</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'>9</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'>%</td>");
                html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + item.TotalSGST.ToString("0") + "</td></tr>");
                i = i + 1;
                html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + i.ToString() + "</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right; padding:0 20px 0 60px; font-weight:bold; text-transform:uppercase;'>IGST</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'>9</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'>%</td>");
                html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + item.TotalIGST.ToString("0") + "</td></tr>");

                html.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: right; padding:0 20px 0 60px;'>Total</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: right;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: left;'></td>");
                html.Append("<td style=' border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 18px; text-align: right; font-weight: bold;'>" + item.InvoiceAmt.ToString("0") + " &#8377;</td></tr>");
                html.Append("</tbody>");
                html.Append("</table></td></tr>");

                html.Append("<tr cellspacing='0' cellpadding='0'><td colspan='2' style='padding:0;'>");
                html.Append("<table style='border: 1px solid #000; border-top:0; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; border-bottom: 1px solid #000; text-align: left;'>Amount Chargeable(in words)<br/><span style='font-size: 13px; font-weight:bold;'>" + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</span></td>");
                html.Append("<td style='font-size: 13px; border-bottom: 1px solid #000; text-align: right; vertical-align: top;'><em>E. & o.E</em></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //Group OF CHARGES SECTION START
                // distinctValues.ToList().ForEach(item => item.SACCode=
                // {

                html.Append("<tr cellspacing='0' cellpadding='0'>");
                html.Append("<td colspan='2' style='padding:0;'>");
                html.Append("<table style='border: 1px solid #000; border-top: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 160px;'>HSN/SAC</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Taxable Value</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Central Tax</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>State Tax</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Total Tax Amount</th>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                //int j = 1;
                /*Charges Bind*/
                // lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                //{

                for (int ii = 0; ii < count; ii++)
                {
                    if (Taxa[ii] > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; font-size: 12px; text-align: left;'>" + Sac[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + Taxa[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + CenPer[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + CentralTax[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + StatePer[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + StateTax[ii] + " </td>");
                        html.Append("<td style='font-size: 12px; text-align: right;'>" + (CentralTax[ii] + StateTax[ii]) + "</td></tr>");
                    }
                }
                // });
                html.Append("<tr><td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>Total</td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>" + item.TotalTaxable + "</td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'></td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>" + (CTax) + "</td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'></td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>" + (item.TotalSGST) + "</td>");
                html.Append("<td style='border-top: 1px solid #000; font-size: 13px; text-align: right; font-weight: bold;'>" + (item.TotalCGST + item.TotalSGST + item.TotalIGST) + "</td></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border-left: 1px solid #000; border-right: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr style='margin: 0 0 40px;'>");
                html.Append("<td colspan='2' style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>Tax Amount(in words) : <span style='font-size:14px; font-weight:bold;'>" + objCurr.changeCurrencyToWords((item.TotalCGST + item.TotalSGST + item.TotalIGST).ToString("0")) + "</span></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border-left: 1px solid #333; border-right: 1px solid #333; border-bottom: 1px solid #333;' cellspacing='0' cellpadding='0'><tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='2' style='padding:0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                html.Append("<tr>");
                html.Append("<td>");
                html.Append("<p style='font-size: 13px; margin:0; padding: 0 0 0 5px;'>Company's PAN: <b>AAACC1206D</b></p>");
                html.Append("<p style='font-size: 12px; margin:0; padding: 0 0 0 5px;'>Declaration</p>");
                html.Append("<p style='font-size: 12px; margin:0; padding: 0 0 0 5px;'>We declare that this invoice shows the actual price of the goods described and that all particulars are true and correct</p>");
                html.Append("</td>");
                html.Append("<td style='padding-right: 0; padding-bottom: 0;'>");
                html.Append("<p style='font-size: 12px; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='font-size: 13px; margin:0; font-weight: bold;'><span style='width: 150px; font-weight: normal;'>Bank Name:</span> " + objCompany[0].BankName + "</p>");
                html.Append("<p style='font-size: 13px; margin:0; font-weight: bold;'><span style='width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='font-size: 13px; margin:0; font-weight: bold;'><span style='width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("<table style='border: 1px solid #000; border-bottom: 0; border-right: 0;  width:100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr>");
                html.Append("<td><p align='right' style='font-size: 13px; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p><span><br/><br/></span></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td><p align='right' style='font-size: 13px; margin:0;'>Authorised Signatory</p></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%;' cellspacing='0' cellpadding='2'><tbody>");
                html.Append("<tr>");
                html.Append("<td style='text-align:center; font-size: 11px; padding:0;'>SUBJECT TO HYDERABAD JURISDICTION</td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='text-align:center; font-size: 11px;'>This is a Computer Generated Invoice</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("</td></tr>");

                html.Append("</tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            /*   var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
               var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
               if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
               {
                   System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
               }
               /*if (System.IO.File.Exists(location))
               {
                   System.IO.File.Delete(location);
               }*/
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }




        [NonAction]
        public string GeneratingBulkPDFAll(DataSet ds, string InvoiceModuleName,string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            var distinctValues = ds.Tables[3].AsEnumerable()
                       .Select(row => new
                       {
                           SACCode = row.Field<string>("SACCode")

                       })
                       .Distinct();


            List<string> lstSB = new List<string>();

            lstInvoice.ToList().ForEach(item =>
            {
                System.Text.StringBuilder html = new System.Text.StringBuilder();
                /*Header Part*/





                Decimal CTax = 0;
                if (item.TotalIGST > 0)
                {
                    CTax = item.TotalIGST;
                }
                else
                {
                    CTax = item.TotalCGST;
                }
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");

                html.Append("<tr style='text-align: center;'><td colspan='2'><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2></td></tr>");

                html.Append("<tr cellspacing='0' cellpadding='0'>");
                html.Append("<td style='border:1px solid #333; border-bottom: none;'>");
                html.Append("<table cellspacing='0' style='width:100%;'><tbody>");
                html.Append("<tr>");
                html.Append("<td style='vertical-align: top;'><img style='width: 100%;' src='logo.png'/></td>");
                html.Append("<td style='padding: 0 10px;'>");
                html.Append("<h1 style='font-size: 16px; margin:0; padding: 0;'>Central Warehousing Corporation</h1>");
                html.Append("<label style='font-size: 13px; text-transform:uppercase;'>(A Govt. of India Undertaking) </label>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>Principle Place of Business-RO Hyderabad,</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>1st Floor Warehousing Sadan,</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>Nampally, Behind Gandhi Bhavan</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>GSTIN/UIN: 36AAACC1206D2ZG</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>State Name: Telangana, Code: 36</h6>");
                html.Append("<h6 style='font-size: 11px; margin:0; font-weight:normal;'>Contact: 040-23773751,8142456715,9966483827,7337516165</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>E-Mail: cfs.kukatpally@cewacor.nic.in</h6>");
                html.Append("<h6 style='font-size: 12px; margin:0; font-weight:normal;'>www.cewacor.nic.in</h6>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("<td valign='top' cellspacing='0' cellpadding='0' style='border:1px solid #333; border-left: none; padding:0; border-bottom: none;'>");
                html.Append("<table cellspacing='0' style='width:100%;'><tbody>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Invoice No.<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>" + item.InvoiceNo + "</h2></td>");
                html.Append("<td valign='top' style='width:50%; padding: 10px; font-size: 12px;'>Dated<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>" + item.InvoiceDate + "</h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Delivery Note<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Account</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Mode/Terms of Payment<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>15 Days</h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Supplier's Ref.<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Cfs Kukarpally</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Other Reference(s)<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase;margin: 0; padding: 0;'>Tn56h2594</h2></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");

                html.Append("<tr valign='top' cellpadding='0'>");
                html.Append("<td style='border:1px solid #333; border-bottom: none;'>");
                html.Append("<br/>");
                html.Append("<p style='display: block; font-size: 12px; margin:0; padding: 0 10px;'>Consignee</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; font-weight: bold; margin:0;'>" + item.PartyName + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'>" + item.PartyAddress + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'></p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>GSTIN/UIN:</span>" + item.PartyGSTNo + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; padding: 0 10px; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>Pan/It No:</span> </p>");
                html.Append("<p style='display: block; font-size: 13px; margin:0; padding: 0 10px;'><span style='display: inline-block; width: 100px;'>State Name:</span> " + item.PartyState + "</p>");
                html.Append("</td>");
                int i = 1;
                String cfscd = "";
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    cfscd = cfscd + elem.CFSCode + ",";
                });

                html.Append("<td valign='top' cellspacing='0' cellpadding='0' style='border:1px solid #333; border-left: 0; border-top: 0;'>");
                html.Append("<table cellspacing='0' style='width:100%;'><tbody>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top: 0; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Buyer's Order No.<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>" + cfscd + "</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top: 0; padding: 10px; font-size: 12px;'>Dated<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'></h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>Despatch Document No.<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Be No: " + item.BOENo + " ," + item.BOEDate + "</h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Delivery Note Date<br/><h2 style='font-size: 13px; padding-bottom: 10px; margin: 0; padding: 0;'>" + item.DeliveryDate + "</h2></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; border-right:1px solid #333; padding: 10px; font-size: 12px;'>despatched througn<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'></h2></td>");
                html.Append("<td valign='top' style='width:50%; border-top:1px solid #333; padding: 10px; font-size: 12px;'>Destination<br/><h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase;margin: 0; padding: 0;'></h2></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<td style='border:1px solid #333; padding: 10px;'>");
                html.Append("<p style='display: block; font-size: 12px; margin:0;'>Buyer(if other than consignee)</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; font-weight: bold; margin:0;'> " + item.PayeeName + " </p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'>" + item.PartyAddress + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'></p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'>" + item.PartyState + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>GSTIN/UIN:</span> " + item.PartyGSTNo + "</p>");
                html.Append("<p style='display: block; text-transform:uppercase; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>Pan/It No:</span> </p>");
                html.Append("<p style='display: block; font-size: 13px; margin:0;'><span style='display: inline-block; width: 100px;'>State Name:</span> " + item.PartyState + "</p>");
                html.Append("</td>");
                html.Append("<td style='border:1px solid #333; border-top: 0; border-left: none; padding:10px; vertical-align: top;'>");
                html.Append("<span style='display: block; font-size: 12px;'>Terms of Delivery</span>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>" + item.TotalNoOfPackages.ToString() + "</h2>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>" + item.TotalGrossWt.ToString("0.000") + "</h2>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>Godown no: </h2>");
                html.Append("<h2 style='font-size: 13px; padding-bottom: 10px; text-transform:uppercase; margin: 0; padding: 0;'>No of Grids: </h2>");
                html.Append("</td>");
                html.Append("</tr>");

                /***************/
                html.Append("<tr cellspacing='0' cellpadding='0'>");
                html.Append("<td colspan='2' style='padding:0;'>");
                html.Append("<table style='border: 1px solid #000; border-bottom: 0; border-top: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>SL No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 300px;'>Particulars</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 80px;'>HSN/SAC</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>GST Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Quantity</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>per</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width:100px;'>Amount</th>");
                html.Append("</tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                Decimal cgstamt = 0;
                Decimal sgstamt = 0;
                Decimal igstamt = 0;
                Decimal tot = 0;
                String[] Sac;
                Sac = new string[50];
                Decimal[] Taxa;
                Decimal[] CenPer;
                Decimal[] StatePer;
                CenPer = new Decimal[50];
                StatePer = new Decimal[50];
                Taxa = new decimal[50];
                Decimal[] StateTax;
                StateTax = new decimal[50];
                Decimal[] CentralTax;
                CentralTax = new decimal[50];
                Decimal[] TotTax;
                TotTax = new decimal[50];
                Decimal Tamt = 0;
                Decimal Tcen = 0;
                Decimal Tstate = 0;
                Decimal TTax = 0;
                int count = 0;
                distinctValues.ToList().ForEach(data1 =>
                {
                    Sac[count] = data1.SACCode;
                    count++;
                });

                for (int ii = 0; ii < count; ii++)
                {
                    Taxa[ii] = 0;
                    CentralTax[ii] = 0;
                    StateTax[ii] = 0;
                    TotTax[ii] = 0;
                    lstCharges.ToList().ForEach(data =>
                    {


                        if (data.SACCode == Sac[ii] && data.InvoiceId == item.InvoiceId)
                        {
                            Taxa[ii] = Taxa[ii] + data.Taxable;
                            cgstamt = cgstamt + data.CGSTAmt;
                            sgstamt = sgstamt + data.SGSTAmt;
                            igstamt = igstamt + data.IGSTAmt;
                            if (data.IGSTAmt > 0)
                            {
                                CenPer[ii] = data.IGSTPer;
                                StatePer[ii] = data.SGSTPer;
                                CentralTax[ii] = CentralTax[ii] + data.IGSTAmt;
                                StateTax[ii] = StateTax[ii] + (data.SGSTAmt + data.CGSTAmt);
                                TotTax[ii] = TotTax[ii] + (CentralTax[ii] + StateTax[ii]);
                                Tamt = Tamt + Taxa[ii];
                                Tcen = Tcen + CentralTax[ii];
                                Tstate = Tstate + StateTax[ii];
                                TTax = TTax + TotTax[ii];
                            }

                            else
                            {
                                CenPer[ii] = data.SGSTPer;
                                StatePer[ii] = data.CGSTPer;
                                CentralTax[ii] = CentralTax[ii] + data.SGSTAmt;
                                StateTax[ii] = StateTax[ii] + (data.CGSTAmt);
                                TotTax[ii] = TotTax[ii] + (CentralTax[ii] + StateTax[ii]);
                                Tamt = Tamt + Taxa[ii];
                                Tcen = Tcen + CentralTax[ii];
                                Tstate = Tstate + StateTax[ii];
                                TTax = TTax + TotTax[ii];

                            }
                        }
                    });
                }

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    Decimal gstper = 0;
                    gstper = data.CGSTPer + data.SGSTPer;

                    tot = data.Total;
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left; padding:0 20px 0 60px; font-weight:bold;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + gstper + " %</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'></td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'></td>");
                        html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + data.Taxable.ToString("0") + "</td></tr>");
                        i = i + 1;
                    }
                });
                html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'> " + i.ToString() + " </td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right; padding:0 20px 0 60px; font-weight:bold; text-transform:uppercase;'>CGST</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'>9</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'>%</td>");
                html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + item.TotalCGST.ToString("0") + "</td></tr>");
                i = i + 1;
                html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + i.ToString() + "</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right; padding:0 20px 0 60px; font-weight:bold; text-transform:uppercase;'>SGST</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'>9</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'>%</td>");
                html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + item.TotalSGST.ToString("0") + "</td></tr>");
                i = i + 1;
                html.Append("<tr><td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'>" + i.ToString() + "</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right; padding:0 20px 0 60px; font-weight:bold; text-transform:uppercase;'>IGST</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: right;'>9</td>");
                html.Append("<td style='border-right: 1px solid #000; font-size: 11px; text-align: left;'>%</td>");
                html.Append("<td style='font-size: 11px; text-align: right; font-weight: bold;'>" + item.TotalIGST.ToString("0") + "</td></tr>");

                html.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: right; padding:0 20px 0 60px;'>Total</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: center;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: right;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; border-bottom: 1px solid #000;  font-size: 13px; text-align: left;'></td>");
                html.Append("<td style=' border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 18px; text-align: right; font-weight: bold;'>" + item.InvoiceAmt.ToString("0") + " &#8377;</td></tr>");
                html.Append("</tbody>");
                html.Append("</table></td></tr>");

                html.Append("<tr cellspacing='0' cellpadding='0'><td colspan='2' style='padding:0;'>");
                html.Append("<table style='border: 1px solid #000; border-top:0; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; border-bottom: 1px solid #000; text-align: left;'>Amount Chargeable(in words)<br/><span style='font-size: 13px; font-weight:bold;'>" + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</span></td>");
                html.Append("<td style='font-size: 13px; border-bottom: 1px solid #000; text-align: right; vertical-align: top;'><em>E. & o.E</em></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //Group OF CHARGES SECTION START
                // distinctValues.ToList().ForEach(item => item.SACCode=
                // {

                html.Append("<tr cellspacing='0' cellpadding='0'>");
                html.Append("<td colspan='2' style='padding:0;'>");
                html.Append("<table style='border: 1px solid #000; border-top: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 160px;'>HSN/SAC</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Taxable Value</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Central Tax</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>State Tax</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Total Tax Amount</th>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                //int j = 1;
                /*Charges Bind*/
                // lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                //{

                for (int ii = 0; ii < count; ii++)
                {
                    if (Taxa[ii] > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; font-size: 12px; text-align: left;'>" + Sac[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + Taxa[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + CenPer[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + CentralTax[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + StatePer[ii] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; font-size: 12px; text-align: right;'>" + StateTax[ii] + " </td>");
                        html.Append("<td style='font-size: 12px; text-align: right;'>" + (CentralTax[ii] + StateTax[ii]) + "</td></tr>");
                    }
                }
                // });
                html.Append("<tr><td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>Total</td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>" + item.TotalTaxable + "</td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'></td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>" + (CTax) + "</td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'></td>");
                html.Append("<td style='border-top: 1px solid #000; border-right: 1px solid #000; font-weight: bold; font-size: 13px; text-align: right;'>" + (item.TotalSGST) + "</td>");
                html.Append("<td style='border-top: 1px solid #000; font-size: 13px; text-align: right; font-weight: bold;'>" + (item.TotalCGST + item.TotalSGST + item.TotalIGST) + "</td></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border-left: 1px solid #000; border-right: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr style='margin: 0 0 40px;'>");
                html.Append("<td colspan='2' style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>Tax Amount(in words) : <span style='font-size:14px; font-weight:bold;'>" + objCurr.changeCurrencyToWords((item.TotalCGST + item.TotalSGST + item.TotalIGST).ToString("0")) + "</span></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border-left: 1px solid #333; border-right: 1px solid #333; border-bottom: 1px solid #333;' cellspacing='0' cellpadding='0'><tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='2' style='padding:0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                html.Append("<tr>");
                html.Append("<td>");
                html.Append("<p style='font-size: 13px; margin:0; padding: 0 0 0 5px;'>Company's PAN: <b>AAACC1206D</b></p>");
                html.Append("<p style='font-size: 12px; margin:0; padding: 0 0 0 5px;'>Declaration</p>");
                html.Append("<p style='font-size: 12px; margin:0; padding: 0 0 0 5px;'>We declare that this invoice shows the actual price of the goods described and that all particulars are true and correct</p>");
                html.Append("</td>");
                html.Append("<td style='padding-right: 0; padding-bottom: 0;'>");
                html.Append("<p style='font-size: 12px; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='font-size: 13px; margin:0; font-weight: bold;'><span style='width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='font-size: 13px; margin:0; font-weight: bold;'><span style='width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='font-size: 13px; margin:0; font-weight: bold;'><span style='width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("<table style='border: 1px solid #000; border-bottom: 0; border-right: 0;  width:100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr>");
                html.Append("<td><p align='right' style='font-size: 13px; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p><span><br/><br/></span></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td><p align='right' style='font-size: 13px; margin:0;'>Authorised Signatory</p></td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%;' cellspacing='0' cellpadding='2'><tbody>");
                html.Append("<tr>");
                html.Append("<td style='text-align:center; font-size: 11px; padding:0;'>SUBJECT TO HYDERABAD JURISDICTION</td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='text-align:center; font-size: 11px;'>This is a Computer Generated Invoice</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("</td></tr>");

                html.Append("</tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforGodown(DataSet ds, string InvoiceModuleName,string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span>");
                html.Append("<br />" + InvoiceModuleName);
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Carting</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Destuffing</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>No of Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>No of Week</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.CartingDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (Convert.ToDateTime(item.DestuffingDate)).ToString("MM/dd/yyyy").ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + ((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.ArrivalDate)).TotalDays + 1).ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Math.Ceiling(((((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(item.ArrivalDate)).TotalDays + 1)) / 7)).ToString() + "</td>");

                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tr><td style='font-size: 12px;' colspan='5'>Shipping Line : " + item.ShippingLineName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>Shipping Line No.:  </td>");
                html.Append("<td style='font-size: 12px;'>OBL No :  </td>");
                html.Append("<td style='font-size: 12px;'>Item No. : " + lstContainer.Where(x => x.InoviceId == item.InvoiceId).Count().ToString() + "</td>");
                html.Append("<td style='font-size: 12px;'>BOE No : " + item.BOENo + " </td>");
                html.Append("<td style='font-size: 12px;'>BOE Date : " + item.BOEDate + " </td>");
                html.Append("</tr>");
                html.Append("<tr><td style='font-size: 12px;' colspan='3'>Importer : " + item.ExporterImporterName + " </td>");
                html.Append("<td style='font-size: 12px;' colspan='2'>VALUE : " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td style='font-size: 12px;' colspan='5'>CHA Name : " + item.CHAName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>No Of Pkg : " + item.TotalNoOfPackages.ToString() + " </td>");
                html.Append("<td style='font-size: 12px;'>Total Gr.Wt (In Kg) : " + item.TotalGrossWt.ToString("0.000") + " </td>");
                html.Append("<td style='font-size: 12px;'>Total Area (In Sqr Mtr) :  </td>");
                html.Append("<td></td>");
                html.Append("<td></td>");
                html.Append("</tr>");
                html.Append("</table>");
                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 4%;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 7%;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 20%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 6%;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 10%;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 10%;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 11%;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 11%;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 11%;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 10%;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
               {
                   if (data.Taxable > 0)
                   {
                       html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationSDesc + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationDesc + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SACCode + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Taxable.ToString("0.00") + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Taxable.ToString("0.00") + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTPer.ToString("0") + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTPer.ToString("0") + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTPer.ToString("0") + "</td>");
                       html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                       html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Total.ToString("0.00") + "</td></tr>");
                       i = i + 1;
                       totamt = totamt + data.Taxable;
                   }
               });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;width:50%;'>Total :</th>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;width:10%;'>" + totamt.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;width:10%;'>" + item.TotalCGST.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;width:10%;'>" + item.TotalSGST.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;width:10%;'>" + item.TotalIGST.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;width:10%;'>" + item.InvoiceAmt.ToString("0.00") + "</td>");
                html.Append("</tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='6'>");
                html.Append("Total Invoice (In Word) :");
                html.Append("" + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'  colspan='6'>Amount of Tax Subject of Reverse :");
                html.Append("0</th>");
                html.Append("</tr></tbody></table><table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'colspan='2'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;' colspan='2'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 11px; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 11px; text-align: left;  '><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 11px; text-align: left;  '><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 11px; text-align: left;  '><br/><br/>SAM/SIO <br/>(Signature)</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforContainer(DataSet ds, string InvoiceModuleName,string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span>");
                html.Append("<br />" + InvoiceModuleName);
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td></tr>");



                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");


                html.Append("</tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                //  html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Destuffing</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Delivery</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Weight</th>");
                //  html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Delivery</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>No of Days</th>");
                //   html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>No of Week</th>");

                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {



                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    //  html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.ArrivalDate + "</td>");
                    // html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.CartingDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (Convert.ToDateTime(item.DestuffingDate)).ToString("dd/MM/yyyy").ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.DeliveryDate + "</td>");
                    //    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.GrossWt.ToString() + "</td>");
                    //     html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.DeliveryDate + "</td>");
                    //   html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + ((Convert.ToDateTime(objGP.DeliveryDate) - Convert.ToDateTime(objGP.ArrivalDate)).TotalDays + 1).ToString() + "</td>");
                    //  html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Math.Ceiling(((((Convert.ToDateTime(objGP.DeliveryDate) - Convert.ToDateTime(objGP.ArrivalDate)).TotalDays + 1)) / 7)).ToString() + "</td>");

                    // html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (container.CargoType == 1 ? "Haz" : "Non-Haz") + "</td>");
                    html.Append("</tr>");
                    i = i + 1;



                });





                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tr><td style='font-size: 12px;' colspan='5'>Shipping Line : " + item.ShippingLineName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>Shipping Line No.:  </td>");
                html.Append("<td style='font-size: 12px;'>OBL No :  </td>");
                html.Append("<td style='font-size: 12px;'>Item No. : " + lstContainer.Where(x => x.InoviceId == item.InvoiceId).Count().ToString() + "</td>");
                html.Append("<td style='font-size: 12px;'>BOE No : " + item.BOENo + " </td>");
                html.Append("<td style='font-size: 12px;'>BOE Date : " + item.BOEDate + " </td>");
                html.Append("</tr>");
                html.Append("<tr><td style='font-size: 12px;' colspan='3'>Importer : " + item.ExporterImporterName + " </td>");
                html.Append("<td style='font-size: 12px;' colspan='2'>VALUE : " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td style='font-size: 12px;' colspan='5'>CHA Name : " + item.CHAName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>No Of Pkg : " + item.TotalNoOfPackages.ToString() + " </td>");
                html.Append("<td style='font-size: 12px;'>Total Gr.Wt (In Kg) : " + item.TotalGrossWt.ToString("0.000") + " </td>");
                html.Append("<td style='font-size: 12px;'>Total Area (In Sqr Mtr) :  </td>");
                html.Append("<td></td>");
                html.Append("<td></td>");
                html.Append("</tr>");
                html.Append("</table>");
                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");


                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'colspan='2'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label>");
                html.Append("</td>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;' colspan='2'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 11px; text-align: left;'><br/><br/>SAM/SIO <br/>(Signature)</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }



        [NonAction]
        public string GeneratingBulkPDFforCCINEntry(DataSet ds, string InvoiceModuleName,string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                Ppg_ExportRepository rep = new Ppg_ExportRepository();
                CCINEntry objCCINEntry = new CCINEntry();
                rep.GetCCINEntryById(Convert.ToInt32(item.StuffingReqId));
                if (rep.DBResponse.Data != null)
                {
                    objCCINEntry = (CCINEntry)rep.DBResponse.Data;
                }
                // 'SB Types 1. Baggage 2. Duty Free Goods 3. Cargo in Drawback',
                string SBTypeLabel = "";
                if (objCCINEntry.SBType == 1)
                {
                    SBTypeLabel = "Baggage";
                }
                else if (objCCINEntry.SBType == 2)
                {
                    SBTypeLabel = "Duty Free Goods";
                }
                else if (objCCINEntry.SBType == 3)
                {
                    SBTypeLabel = "Cargo in Drawback";
                }
                StringBuilder html = new StringBuilder();
                int i = 1;
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span>");
                html.Append("<br />" + InvoiceModuleName);
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td></tr>");


                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");


                html.Append("</tbody> ");
                // <tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Assessment No :" + item.StuffingReqNo + "</b>
                html.Append("</table></td></tr><tr><td><hr /></td></tr> ");
                html.Append("<tr><td>");
                html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tr><td style='font-size: 12px;'>CCIN NO : " + item.StuffingReqNo + " </td>");
                html.Append("<td style='font-size: 12px;'>CCIN DT : " + Convert.ToDateTime(item.StuffingReqDate).ToString("dd/MM/yyyy") + "</td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>SB NO : " + objCCINEntry.SBNo + " </td>");
                html.Append("<td style='font-size: 12px;'>SB DATE : " + objCCINEntry.SBDate + "</td>");
                html.Append("<td style='font-size: 12px;'>SB Type : " + SBTypeLabel + "</td></tr>");

                html.Append("<tr><td style='font-size: 12px;'>Shipping Line : " + item.ShippingLineName + " </td><td style='font-size: 12px;'>FOB : " + objCCINEntry.FOB + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>Exporter : " + item.ExporterImporterName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>CHA Name : " + item.CHAName + " </td></tr>");
                html.Append("<tr><td style='font-size: 12px;'>No Of Pkg : " + item.TotalNoOfPackages.ToString() + " </td>");
                html.Append("<td style='font-size: 12px;'>Total Gr.Wt (In Kg) : " + item.TotalGrossWt.ToString("0.000") + " </td>");
                html.Append("</tr>");
                html.Append("</table>");
                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 4%;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 7%;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 20%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 6%;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 10%;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 10%;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 11%;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 11%;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 11%;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;width: 10%;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 60px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: right; width: 50px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;width:50%;'>Total :</th>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;width:10%;'>" + item.TotalTaxable.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;width:10%;'>" + item.TotalCGST.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;width:10%;'>" + item.TotalSGST.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;width:10%;'>" + item.TotalIGST.ToString("0.00") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;width:10%;'>" + item.InvoiceAmt.ToString("0.00") + "</td>");
                html.Append("</tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='6'>");
                html.Append("Total Invoice (In Word) :");
                html.Append("" + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'  colspan='6'>Amount of Tax Subject of Reverse :");
                html.Append("0</th>");
                html.Append("</tr></tbody></table><table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 11px; text-align: left;'><br/><br/><b>Remarks</b> : " + objCCINEntry.Remarks + "</td></tr>");
                html.Append("<tr><td style='font-size: 11px; text-align: left;'><br/><br/>&nbsp;</td>");
                html.Append("<td style='font-size: 11px; text-align: left;  '><br/><br/>&nbsp;</td>");
                html.Append("<td style='font-size: 11px; text-align: right;  '><br/><br/>(Sign. of Exporter / CHA)</td>");
                html.Append("<td style='font-size: 11px; text-align: right;  '><br/><br/>(Sign. of Shed Incharge)</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBTT(DataSet ds, string InvoiceModuleName)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span>");
                html.Append("<br />" + InvoiceModuleName);
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td></tr>");


                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");


                html.Append("</tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'></td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });

                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 60px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 60px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; width: 120px;'>Total :</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; center; width: 144px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 70px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; width: 210px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; width: 210px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 7px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; width: 200px;'>" + item.TotalIGST.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; width: 110px;'>" + item.InvoiceAmt.ToString("0.00") + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='12'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>");
                html.Append("*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
          /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforAuction(DataSet ds, string InvoiceModuleName,string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                int i = 1;
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span>");
                html.Append("<br />" + InvoiceModuleName);
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");



                html.Append("</tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tr><td style='font-size: 12px;'>BID No : " + item.StuffingReqNo + " </td>");
                html.Append("<td style='font-size: 12px;'>BID Date : " + Convert.ToDateTime(item.StuffingReqDate).ToString("dd/MM/yyyy") + "</td></tr>");
                html.Append("</table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>");
                html.Append("*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        [NonAction]
        public string GeneratingBulkPDFforBTTCONT(DataSet ds, string InvoiceModuleName,string All)
        {
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);
            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                   objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                 //  objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br /><label style='font-size: 7pt; font-weight:bold;'>" + InvoiceModuleName + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>ODC</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>From Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>To Date</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                List<string> lstCFSCode = new List<string>();
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    if (!lstCFSCode.Any(y => y == elem.CFSCode))
                    {
                        lstCFSCode.Add(elem.CFSCode);
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    }
                });

                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBTTStuffCONT(DataSet ds, string InvoiceModuleName,string All)
        {
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            Einvoice obj = new Einvoice(new HeaderParam(), "");

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                   objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                 //  objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br /><label style='font-size: 7pt; font-weight:bold;'>" + InvoiceModuleName + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");


                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%;' cellspacing='0'><tbody>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + " </span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Payer Name :</label> <span>" + item.PayeeName + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;padding-bottom:5px;'><label style='font-weight: bold;'>Under :</label> <span>" + item.ExportUnder + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;border-bottom:1px solid #000;padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + "(" + item.PartyStateCode + ")</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom:1px solid #000;'><label style='font-weight: bold;'>Is Service :</label> <span>Yes</span></td></tr>");

                html.Append("</tbody> ");
                html.Append("</table></td></tr><tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>ODC</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>To Date</th>");
                
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                List<string> lstCFSCode = new List<string>();
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    if (!lstCFSCode.Any(y => y == elem.CFSCode))
                    {
                        lstCFSCode.Add(elem.CFSCode);
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                        // html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.CartingDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Shift + "</td>");
                        //    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.GrossWt.ToString() + "</td>");
                        //     html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objGP.DeliveryDate + "</td>");
                        //   html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + ((Convert.ToDateTime(objGP.DeliveryDate) - Convert.ToDateTime(objGP.ArrivalDate)).TotalDays + 1).ToString() + "</td>");
                        //  html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Math.Ceiling(((((Convert.ToDateTime(objGP.DeliveryDate) - Convert.ToDateTime(objGP.ArrivalDate)).TotalDays + 1)) / 7)).ToString() + "</td>");

                        // html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (container.CargoType == 1 ? "Haz" : "Non-Haz") + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    }
                });

                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>SR No.</th>");
                //html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 120px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + i.ToString() + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 150px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 30px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 120px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 130px;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 7pt; text-align: center; width: 120px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 7pt; text-align: center; width: 120px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Total(Rounded) :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 150px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 7pt; text-align: center; width: 120px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>"); 
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' colspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Total Invoice (In Word) :</th>");                
                html.Append("<th rowspan='2'  colspan='9' style='font-size: 7pt; text-align: center; width: 120px;'>" + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th></tr>");
                html.Append("<tr><th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 30px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #333; border-top:0; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='6'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;'colspan='2'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label>");
                html.Append("</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='2'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/SIO <br/>(Signature)</td>");
                html.Append("</tr><tr><td colspan=4 style='font-size: 6pt; text-align: left;'>If any changes in INVOICE will be done within 15 days.After 15 days changes will not be done</td></tr></tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*  var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
              if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              {
                  System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              }
              /*if (System.IO.File.Exists(location))
              {
                  System.IO.File.Delete(location);
              }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateBulkInvoiceReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "BulkInvoice.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/BulkInvoice/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                {

                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/BulkInvoice/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }


        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfInvoiceDateWise(string FromDate, string ToDate, string invoiceType)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceList(FromDate, ToDate, invoiceType);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }
        [NonAction]
        public string GeneratingBulkPDFforReefer(DataSet ds, string InvoiceModuleName,string All)
        {
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                      objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                  // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br/></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Shift</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                List<string> lstCFSCode = new List<string>();
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    if (!lstCFSCode.Any(y => y == elem.CFSCode))
                    {
                        lstCFSCode.Add(elem.CFSCode);
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.PlugInDatetime + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.PlugOutDatetime + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Shift + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    }
                });

                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Exporter Name</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span> "+ objCompany[0].BankName + " </p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        [NonAction]
        public string GeneratingBulkPDFforMisc(DataSet ds, string InvoiceModuleName,string All)
        {
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
           Einvoice obj = new Einvoice(new HeaderParam(), "");

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                     objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);

                   // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);
                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br /><label style='font-size: 7pt; font-weight:bold;'>" + InvoiceModuleName + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");
                
                int i = 1; Decimal totamt = 0;

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:" + objCompany[0].BankName + "</span></p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforEC(DataSet ds, string InvoiceModuleName,string All)
        {
            var BQRFileName = "";
            var BQRlocation = "";
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            decimal totamt = 0;
            Einvoice obj = new Einvoice(new HeaderParam(), "");

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                   objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                   // objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);

                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }


                /*Header Part*/
                html.Clear();
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt;'>Assessment No :" + item.StuffingReqNo + "</b> ");
                html.Append("<br /><b style='text-align: left; font-size: 7pt;'>Container Details :</b> </th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Arrival</th>");
                //html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>ODC</th>");
                //   html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GrossWt.ToString("0.000") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ISODC + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");

                html.Append("</td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }*/
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBondExtendHdb(DataSet ds, string InvoiceModuleName,string All)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstStorageDate = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();
            var FileName = "";
            var location = "";
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br /><label style='font-size: 7pt; font-weight:bold;'>Bond Reservation/Advance Collection</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(lstInvoice[0].SignedQRCode)) + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(lstInvoice[0].SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice (SAC)</h2> </td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th colspan='6' width='50%'><b style='text-align: left; font-size: 7pt;margin-top: 2px;'>Bond No :" + item.StuffingReqNo + "</b></th>");

                lstContainer.Where(p => p.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<td colspan='6' width='50%' style='font-size:7pt; text-align: right'><label width='15%'><b>SAC validity :</b></label> From <u>" + elem.SacApprovedDate + "</u> to <u>" + elem.SacValidityDate + "</u></td>");
                });
                html.Append("</tr>");

                html.Append("<tr><th colspan='2' width='20%' style='text-align: left; font-size: 7pt;margin-top: 4px;' valign='top'>Storage Period :</th>");
                html.Append("<td colspan='10' width='80%'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='0'><tbody>");

                var SacId = 0;
                var DeliId = 0;
                if (lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).Count() > 0)
                {
                    SacId = lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).ToList().Select(y => y.SacId).ToArray()[0];
                    DeliId = lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).ToList().Select(y => y.SacDelivryId).ToArray()[0];
                }

                lstStorageDate.Where(x => x.SacId == SacId && x.InvoiceId <= item.InvoiceId && x.SacDelivryId <= DeliId).ToList().ForEach(storage =>
                {
                    int j = 1;
                    html.Append("<tr><td colspan='12' cellpadding='5' valign='top'>From <u>" + storage.StorageFromDt + "</u> to <u>" + storage.StorageToDt + "</u></td></tr>");
                    j = j + 1;
                });
                html.Append("</tbody></table></td></tr>");


                html.Append("<tr><td colspan='12'>");
                int i = 1;
                Decimal totamt = 0;
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Bond No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BondNo.ToString().TrimEnd(',') + " </td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Bond Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BondDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOL No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOLNo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOL Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOLDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOENo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().BOEDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>AWB No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().AWBNo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>AWB Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().AWBDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Godown No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().GodownName.ToString().TrimEnd(',') + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-left: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='40%'>Ex-BOE No.</td><td>:</td><td colspan='6' width='60%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().ExBOENo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Ex-BOE Date.</td><td>:</td><td colspan='6' width='60%'>" + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).FirstOrDefault().ExBOEDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Importer</td><td>:</td><td colspan='6' width='60%'>" + item.ExporterImporterName.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>CHA Name</td><td>:</td><td colspan='6' width='60%'>" + item.CHAName.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>CIF Value</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIF)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>DUTY</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIF) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>No Of Pkg</td><td>:</td><td colspan='6' width='60%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");
                
                html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt; margin:0;'>Container/Cargo Charges :</h3> </th></tr>");
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 100px; text-align:left;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px; text-align:right;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px; text-align:right;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 170px; text-align:left;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th>");
                html.Append("<th style='width: 100px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px; text-align:left; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width: 100%; font-size:7pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b>  " + item.PayeeCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333; margin-bottom:3px;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td cellpadding='5' style='font-size: 6pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span> " + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; font-size: 6pt; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border: 1px solid #333; border-top: 0; border-bottom: 0; border-right: 0; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0; font-weight: bold;'>for Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 6pt; margin:0;'>Authorised Signatory</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td></tr>");

                if (item.SupplyType == "B2B")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                      html.Append("</tbody></table>");
                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());

            });
            /* var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
             var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
             if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             {
                 System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
             }
             /*if (System.IO.File.Exists(location))
             {
                 System.IO.File.Delete(location);
             }*/
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        #endregion

        #region Invoice Print

        public string ConvertNumbertoWords(long number)
        {
            if (number == 0) return "ZERO";
            if (number < 0) return "minus " + ConvertNumbertoWords(Math.Abs(number));
            string words = "";
            if ((number / 1000000) > 0)
            {
                words += ConvertNumbertoWords(number / 100000) + " LAKHS ";
                number %= 1000000;
            }
            if ((number / 1000) > 0)
            {
                words += ConvertNumbertoWords(number / 1000) + " THOUSAND ";
                number %= 1000;
            }
            if ((number / 100) > 0)
            {
                words += ConvertNumbertoWords(number / 100) + " HUNDRED ";
                number %= 100;
            }
            //if ((number / 10) > 0)  
            //{  
            // words += ConvertNumbertoWords(number / 10) + " RUPEES ";  
            // number %= 10;  
            //}  
            if (number > 0)
            {
                //if (words != "") words += "AND ";
                var unitsMap = new[]
                {
            "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE", "TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN", "FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN"
        };
                var tensMap = new[]
                {
            "ZERO", "TEN", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY", "SEVENTY", "EIGHTY", "NINETY"
        };
                if (number < 20) words += unitsMap[number];
                else
                {
                    words += tensMap[number / 10];
                    if ((number % 10) > 0) words += " " + unitsMap[number % 10];
                }
            }
            return words;
        }
        [NonAction]
        private string GeneratingPDF(PpgInvoiceGate objGP, int InvoiceId, string InvoiceModeleName)
        {
            string html = "";

            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/BulkReport" + InvoiceId.ToString() + ".pdf";
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }
            html = "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>" +
                "<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objGP.CompanyName + "</h1>" +
                "<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />" +
                "<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span><br/>" +
                "<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + InvoiceModeleName + "</span></td></tr>" +
                "<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" +
                "CWC GST No. <label>" + objGP.CompanyGstNo + "</label></span></td></tr>" +
                "<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>" +
                "<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>" +
                "<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>" +
                "<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + objGP.InvoiceNo + "</span></td>" +
                "<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + objGP.InvoiceDate + "</span></td></tr>" +
                "<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>" +
                "<span>" + objGP.PartyName + "</span></td>" +
                "<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + objGP.PartyState + "</span> </td></tr>" +
                "<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>" +
                "Party Address :</label> <span>" + objGP.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>" +
                "<label style='font-weight: bold;'>State Code :</label> <span>" + objGP.PartyStateCode + "</span></td></tr>" +
                "<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + objGP.PartyGstNo + "</span></td>" +
                "</tr></tbody> " +
                "</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>" +
                "<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:80%;' cellspacing='0' cellpadding='10'>" +
                "<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>" +
                "<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>To Date</th></tr></thead><tbody>";
            int i = 1;
            foreach (var container in objGP.LstContainersGate)
            {
                html = html + "<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.CfsCode + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ContainerNo + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.Size + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.FromDate + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ToDate + "</td></tr>";
                i = i + 1;
            }

            html = html + "</tbody></table></td></tr>" +
            "<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>" +
            "<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>" +
            "<thead><tr>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SR No.</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Charge Code</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Description</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>HSN Code</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Taxable Amt.</th>" +
            "<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>CGST</th>" +
            "<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SGST</th>" +
            "<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>IGST</th>" +
            "<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Total</th></tr><tr>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th></tr></thead>" +
            "<tbody>";
            i = 1;
            foreach (var charge in objGP.LstChargesGate)
            {
                html = html + "<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.ChargeSD + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.ChargeDesc + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.HsnCode + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Rate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.TaxableAmt.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTRate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTAmt.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTRate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTAmt.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTRate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTAmt.ToString("0") + "</td>" +
                    "<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Total.ToString("0") + "</td></tr>";
                i = i + 1;
            }
            html = html + "</tbody>" +
                "</table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='10'> " +
                "<tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total :</th>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'></td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalTax.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalCGST.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalSGST.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalIGST.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalAmt.ToString("0") + "</td>" +
                "</tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>" +
                "Total Invoice (In Word) :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='6'>" +
                "" + ConvertNumbertoWords(Convert.ToInt32(objGP.TotalAmt)) + "</td>" +
                "</tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'>Amount of Tax Subject of Reverse :</th>" +
                "<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='6'>0</td>" +
                "</tr></tbody></table><table style='width:100%;' cellspacing='0' cellpadding='10'>" +
                "<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: " +
                "<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:" +
                "<label style='font-weight: bold;'>" + objGP.PartyCode + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>" +
                "*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>" +
                "</td></tr></tbody></table>";
            //html = "<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 0; '><tbody> <tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>Central Warehousing Corporation</h1><label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span></td></tr><tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CWC GST No. <label>07AAACC1206D1ZI</label></span></td></tr><tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='0'><tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr><tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='0'><tbody><tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>11071/96365</span></td><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>14-MAR-18</span></td></tr><tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label> <span>FREIGHTBRIDGE LOGISTICS PVT LTD</span></td><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>Delhi</span> </td></tr><tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Address :</label> <span>501, 5th Floor, 56 Eros Apartment</span></td><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State Code :</label> <span>DL</span></td></tr><tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>07AAACF8646G1ZJ</span></td></tr></tbody> </table></td></tr><tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</h3> </th></tr><tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='0'><thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>To Date</th></tr></thead><tbody><tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>--</td></tr></tbody></table></td></tr><tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='0'><thead><tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Charge Code</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Description</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>HSN Code</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Taxable Amt.</th><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CGST</th><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SGST</th><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>IGST</th><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Total</th></tr><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amt.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amt.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amt.</th></tr></thead><tbody><tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>--</td></tr></tbody></table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='0'> <tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>7200</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>648</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>648</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>8496</td></tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total Invoice (In Word) :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='4'>Eight Thousand Four Hundred Ninety Six Rupees Only</td></tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'>Amount of Tax Subject of Reverse :</th><td style='font-size: 12px; text-align: left; padding: 5px;' colspan='4'>0</td></tr></table><table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>Receipt No.: <label style='font-weight: bold;'></label></td><td style='font-size: 11px; text-align: left; line-height: 30px;'>Party Code: <label style='font-weight: bold;'></label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table></td></tr></tbody></table>";

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f))
            {
                rp.GeneratePDF(location, html);
            }
            return "/Docs/" + Session.SessionID + "/BulkReport" + InvoiceId.ToString() + ".pdf";
        }

        private string GeneratingBulkPDF(List<PpgInvoiceGate> objGPList, string InvoiceModeleName)
        {

            List<string> HtmlList = new List<string>();

            string currDateTime = DateTime.Now.ToString("ddMMyyyyhhmmtt");

            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/BulkReport_" + currDateTime + ".pdf";
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }

            foreach (PpgInvoiceGate objGP in objGPList.OrderBy(x => x.InvoiceNo).ToList())
            {
                StringBuilder html = new StringBuilder();
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objGP.CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span><br/>");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + InvoiceModeleName + "</span></td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objGP.CompanyGstNo + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + objGP.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + objGP.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + objGP.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + objGP.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + objGP.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + objGP.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + objGP.PartyGstNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:80%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>To Date</th></tr></thead><tbody>");
                int i = 1;
                foreach (var container in objGP.LstContainersGate)
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.CfsCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.FromDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ToDate + "</td></tr>");
                    i = i + 1;
                }

                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                foreach (var charge in objGP.LstChargesGate)
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.ChargeSD + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.ChargeDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.HsnCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Rate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.TaxableAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTRate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTRate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTRate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Total.ToString("0") + "</td></tr>");
                    i = i + 1;
                }
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='10'> ");
                html.Append("<tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total :</th>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'></td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalTax.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalCGST.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalSGST.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalIGST.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalAmt.ToString("0") + "</td>");
                html.Append("</tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>");
                html.Append("Total Invoice (In Word) :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='6'>");
                html.Append("" + ConvertNumbertoWords(Convert.ToInt32(objGP.TotalAmt)) + "</td>");
                html.Append("</tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'>Amount of Tax Subject of Reverse :</th>");
                html.Append("<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='6'>0</td>");
                html.Append("</tr></tbody></table><table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + objGP.PartyCode + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>");
                html.Append("*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");

                HtmlList.Add(html.ToString());
            }


            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f))
            {
                rp.GeneratePDF(location, HtmlList);
            }
            return "/Docs/" + Session.SessionID + "/BulkReport_" + currDateTime + ".pdf";
        }
        #endregion

        #region service code wise Invoice Details

        [HttpGet]
        public ActionResult ServiceCodeWiseInvDtls()
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            // List<SACList> LstSAC = new List<SACList>();
            // ObjRR.GetSAC();
            //if (ObjRR.DBResponse.Data != null)
            // {
            //  LstSAC = (List<SACList>)ObjRR.DBResponse.Data;
            // }
            // ViewBag.SACList = LstSAC;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetServiceCodeWiseInvDtls(Hdb_ServiceCodeWiseInvDtls ObjServiceCodeWiseInvDtls)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_ServiceCodeWiseInvDtls> LstInvoiceReportDetails = new List<Hdb_ServiceCodeWiseInvDtls>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ServiceCodeWiseInvDtls(ObjServiceCodeWiseInvDtls);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<Hdb_ServiceCodeWiseInvDtls>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateServiceCodeWiseInvDtlsPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ServiceCodeWiseInvoiceDetails.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region SD A/c Statement

        [HttpGet]
        public ActionResult SDStatement()
        {
            var Months = new Dictionary<int, string>();
            for (Int16 i = 1; i <= 12; i++)
            {
                Months.Add(i, System.Globalization.DateTimeFormatInfo.InvariantInfo.MonthNames[i - 1]);
            }
            ViewBag.Months = new SelectList((IEnumerable)Months, "Key", "Value", DateTime.Today.Month);
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetSDStatement(Hdb_SDStatement ObjSDStatement)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetPDAStatement(ObjSDStatement.Month, ObjSDStatement.Year);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForPDAStatement(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "SDStatement.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/SDStatement/";
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SDStatement/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        #endregion

        #region register of outward supply

        [HttpGet]
        public ActionResult RegisterOfOutwardSupply()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfOutwardSupply(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetRegisterofOutwardSupply(date1, date2);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                }
            }
            // return null;
        }

        #endregion

        #region All Party Credit Status
        [HttpGet]
        public ActionResult GetPartyWiseCreditStatus()
        {
            return PartialView();
        }
        [HttpPost, CustomValidateAntiForgeryToken]
        public JsonResult PartyUnpaidCreditStatus(string AsOnDate)
        {
            Ppg_ReportRepository objIM = new Ppg_ReportRepository();
            objIM.PartyUnpaidCreditStatus(AsOnDate);
            if (objIM.DBResponse.Data != null)
            {
                IList<PartyUnpaidDetails> lstDet = new List<PartyUnpaidDetails>();
                lstDet = (List<PartyUnpaidDetails>)objIM.DBResponse.Data;
                string Path = GeneratePDFforCreditStatus(lstDet);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GeneratePDFforCreditStatus(IList<PartyUnpaidDetails> lstDtl)
        {
            StringBuilder objSB = new StringBuilder();
            objSB.Append("<table style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 0; '>");
            objSB.Append("<tbody><tr><td style='text-align: center;' colspan='2'>");
            objSB.Append("<span style='font-size: 14px; font-weight: bold; line-height: 16px;'>Payee Wise Credit Status</span>");
            objSB.Append("</td></tr><tr><td style='text-align: right;' colspan='2'>");

            objSB.Append("<span style='font-size: 11px; line-height: 22px;padding-bottom: 10px;'>As On: <label>" + lstDtl[0].AsOnDate + "</label>");
            objSB.Append("</span></td><td style='text-align: right;'></td></tr><tr><td colspan='2'><table style='width:100%; margin-bottom: 10px;'><tbody>");
            objSB.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;'><thead>");
            objSB.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Payee</th>");
            objSB.Append("<th style=' border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Unpaid Amount</th></tr>");
            objSB.Append("</thead><tfoot><tr>");
            objSB.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; font-weight: bold; text-align: center; padding: 5px;'>");
            objSB.Append("Total</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Convert.ToDecimal(lstDtl.Sum(x => x.UnpaidAmt)) + "</td>");
            objSB.Append("</tr></tfoot><tbody>");
            int Serial = 1;
            lstDtl.ToList().ForEach(item =>
            {
                objSB.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' >" + Serial + "." + item.PartyName + "</td>");
                objSB.Append("<td style=' border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'> " + item.UnpaidAmt + "</td></tr>");
                Serial++;
            });
            objSB.Append("</tbody></table></td></tr></tbody></table></td></tr></tbody></table>");
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID;
            if (!Directory.Exists(LocalDirectory))
                Directory.CreateDirectory(LocalDirectory);
            if (System.IO.File.Exists(LocalDirectory + "/CreditStatus.pdf"))
                System.IO.File.Delete(LocalDirectory + "/CreditStatus.pdf");
            using (var RH = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
            {
                RH.HeadOffice = this.HeadOffice;
                RH.HOAddress = this.HOAddress;
                RH.ZonalOffice = this.ZonalOffice;
                RH.ZOAddress = this.ZOAddress;
                RH.GeneratePDF(LocalDirectory + "/CreditStatus.pdf", objSB.ToString());
            }
            return "/Docs/" + Session.SessionID + "/CreditStatus.pdf";
        }
        #endregion

        #region Party Wise Unpaid Invoice Details
        [HttpGet]
        public ActionResult GetUnpaidInvoice()
        {
            Ppg_ReportRepository objRR = new Ppg_ReportRepository();
            objRR.GetPayeeNameforUnpaidInvoice();
            if (objRR.DBResponse.Data != null)
                ViewBag.GetPaymentParty = JsonConvert.DeserializeObject(JsonConvert.SerializeObject(objRR.DBResponse.Data));
            else ViewBag.GetPaymentParty = null;
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult PartyWiseUnpaidAmout(PartyWiseUnpaid objUn)
        {
            if (ModelState.IsValid)
            {
                Ppg_ReportRepository objIM = new Ppg_ReportRepository();
                objIM.PartyWiseUnpaidAmout(objUn.PartyId, objUn.AsOnDate);
                if (objIM.DBResponse.Data != null)
                {
                    PartyWiseUnpaidDtl objDet = new PartyWiseUnpaidDtl();
                    objDet = (PartyWiseUnpaidDtl)objIM.DBResponse.Data;
                    string Path = GeneratePDFforUnpaidInvoiceDetails(objDet);
                    return Json(new { Status = 1, Message = Path });
                }
                return Json(new { Status = 0, Message = "No Data Found" });
            }
            else return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GeneratePDFforUnpaidInvoiceDetails(PartyWiseUnpaidDtl objDet)
        {
            StringBuilder objSB = new StringBuilder();
            objSB.Append("<table style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 0; '>");
            objSB.Append("<tbody><tr><td style='text-align: center;' colspan='3'>");
            objSB.Append("<span style='font-size: 14px; font-weight: bold; line-height: 16px;'>Payee Unpaid Bill Status</span>");
            objSB.Append("</td></tr><tr><td style='text-align: left;' colspan='2'>");
            objSB.Append("<span style='display: block; font-size: 11px; padding-bottom: 10px;'>Payee Name: <label>" + objDet.PartyName + "</label>");
            objSB.Append("</span></td><td style='text-align: right;'>");
            objSB.Append("<span style='display: block; font-size: 11px; line-height: 22px;padding-bottom: 10px;'>As On: <label>" + objDet.AsOnDate + "</label></span>");
            objSB.Append("</td></tr><tr><td colspan='3'><table style='width:100%; margin-bottom: 10px;' ><tbody><tr>");
            objSB.Append("<td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;'><thead><tr>");
            objSB.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Invoice No.</th>");
            objSB.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date</th>");
            objSB.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amount</th>");
            objSB.Append("</tr></thead>");
            objSB.Append("<tfoot><tr>");
            objSB.Append("<td colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; font-weight: bold; text-align: center; padding: 5px;'>Total</td>");
            objSB.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Convert.ToDecimal(objDet.lstDtl.Sum(x => x.InvoiceAmt)) + "</td></tr></tfoot><tbody>");
            objDet.lstDtl.ToList().ForEach(item =>
            {
                objSB.Append("<tr>");
                objSB.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>" + item.InvoiceNo + "</td>");
                objSB.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>" + item.InvoiceDate + "</td>");
                objSB.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.InvoiceAmt + "</td></tr>");
            });
            objSB.Append("</tbody></table></td></tr></tbody></table></td></tr></tbody></table>");
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID;
            if (!Directory.Exists(LocalDirectory))
                Directory.CreateDirectory(LocalDirectory);
            if (System.IO.File.Exists(LocalDirectory + "/UnpaidInvoiceDet.pdf"))
                System.IO.File.Delete(LocalDirectory + "/UnpaidInvoiceDet.pdf");
            using (var RH = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
            {
                RH.HeadOffice = this.HeadOffice;
                RH.HOAddress = this.HOAddress;
                RH.ZonalOffice = this.ZonalOffice;
                RH.ZOAddress = this.ZOAddress;
                RH.GeneratePDF(LocalDirectory + "/UnpaidInvoiceDet.pdf", objSB.ToString());
            }
            return "/Docs/" + Session.SessionID + "/UnpaidInvoiceDet.pdf";
        }
        #endregion

        #region Bulk Receipt  Report
        [HttpGet]
        public ActionResult BulkReceiptReport()
        {
            return PartialView();
        }
        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReport(BulkReceiptReport ObjBulkReceiptReport)
        {
            Ppg_ReportRepository ObjRR = new Ppg_ReportRepository();
            ObjRR.GetBulkCashreceipt(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulk(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkCashreceiptForSDOpening(BulkReceiptReport ObjBulkReceiptReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetBulkCashreceiptForSDOpening(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulk(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetChequeBounceReceiptReport(String ReceiptNo)
        {
            Ppg_ReportRepository ObjRR = new Ppg_ReportRepository();
            ObjRR.GetChequeBounceCashreceipt(ReceiptNo);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulk(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }


        [NonAction]
        public string GenerateBulk(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                /*
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span>");
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt Date : </label> <span>" + item.ReceiptDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                */
                /*************/
                /*Container Bind*/
                /*
                int i = 1;
                var InvoceIds = item.InvoiceId.Split(',');
                foreach (var InvId in InvoceIds)
                {
                    lstContainer.Where(x => x.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.FromDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    });
                }
                */
                /***************/
                /*
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 60px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                */
                /*Charges Bind*/
                /*
                foreach (var InvId in InvoceIds)
                {
                    lstCharges.Where(y => y.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(data =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Rate.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Taxable.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Total.ToString("0") + "</td></tr>");
                        i = i + 1;
                    });
                }
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; width: 120px;'>Total :</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; center; width: 144px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 90px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 160px;'>" + item.TotalTaxable.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalCGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalSGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalIGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 120px;'>" + item.InvoiceAmt.ToString("0") + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='12'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code: <label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr></tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Mode</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Drawee Bank</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Instrument No</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Amount</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Amount + "</td>");
                    html.Append("</tr>");
                });
                html.Append("</tbody></table>");
                */
                /***************/



                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '>");
                html.Append("<tbody>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 12px;'>Email -" + objCompany[0].EmailAddress + "</label><br/><label style='font-size: 16px; font-weight:bold;'>Cash Receipt</label></td>");
                html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //Header
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12' style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Date : </label> <span>" + item.ReceiptDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>By : </label><span>" + item.PartyName + "</span></td></tr></tbody></table>");
                html.Append("</td></tr><tr><td colspan='12'><hr/></td></tr><tr><td colspan='12'>");

                //Invoice Nos and Amounts
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Invoice No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Importer/Exporter</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Invoice Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr></thead><tbody>");

                //Loop
                var InvoiceIds = item.InvoiceId.Split(',');
                var InvoiceNos = item.InvoiceNo.Split(',');
                var ImpExpName = item.ExporterImporterName.Split(',');
                var InvType = item.InvType.Split(',');
                var InvoiceAmts = item.Amt.Split(',');
                i = 0;
                foreach (var Invoice in InvoiceNos)
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>" + InvoiceNos[i] + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>" + ImpExpName[i] + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>" + InvType[i] + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>" + InvoiceAmts[i] + "</td>");
                    html.Append("</tr>");

                    i = i + 1;
                }

                html.Append("</tbody></table></td></tr>");

                //Banks
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Mode</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Instrument</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Date</th>");
                html.Append("</tr></thead><tbody>");

                //loop

                i = 1;
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Amount + "</td>");
                    html.Append("</tr>");

                    i = i + 1;
                });

                //TDS
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>TDS</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TdsAmount.ToString() + "</td></tr>");


                //Total
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>Total</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.InvoiceAmt.ToString() + "</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 80px;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td width='10%' valign='top' align='right' style='font-size:13px;'><b>Remarks : </b></td><td colspan='2' width='85%' style='font-size:12px; line-height:22px;'>" + item.Remarks + "</td></tr>");
                //html.Append("<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'><b>Remarks : </b> " + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<td style='font-size: 12px; width:60%;'><b>CWC GST NO -</b> " + objCompany[0].GstIn + " <br/> <b>CWC PAN NO -</b> " + objCompany[0].Pan + "</td>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");

                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }
        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfReceiptDateWise(string FromDate, string ToDate)
        {
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.GetReceiptList(FromDate, ToDate);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region PDA Receipt Print

        [HttpPost]
        // [ValidateAntiForgeryToken]
        public JsonResult GetPDAReceiptReportNew(BulkReceiptReport ObjBulkReceiptReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetBulkPDACashreceipt(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, Convert.ToString(ObjBulkReceiptReport.ReceiptNumber));
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GeneratePDAReceiptReport(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GeneratePDAReceiptReport(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();

            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);

            List<string> lstSB = new List<string>();

            int i = 0;
           
                StringBuilder html = new StringBuilder();

                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:8pt;'><tbody>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:8pt;'><tbody>");
                html.Append("<tr><th style='width:20%;'><img style='width:50%;' src='ImgLeft'/></th><th style='width:60%;'></th><th style='width:20%;'><img style='width:70%;' src='ImgRight'/></th></tr><tr><th colspan='3' style='text-align:center;vertical-align:bottom;'>CENTRAL WAREHOUSING CORPORATION<br />(A GOVT. OF INDIA UNDERTAKING)</th></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12' width='50%' style='text-align:center;'>Cash Deposit to PD Account Voucher</td></tr>");
                //   html.Append("<td colspan='6' width='50%' align='right'>" + objCompany[0].CompanyAddress + "</td></tr>");



                html.Append("<tr>");
                html.Append("<td colspan='4' width='33.33333333333333%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>");
                html.Append("<tr><td><b>Receipt No. : </b>" + lstInvoice[0].PdaTranRecNo + "</td></tr>");
                html.Append("<tr><td><b>Payee Name :</b>" + lstInvoice[0].EximTraderName + "</td></tr>");
                html.Append("<tr><td><b>Address: </b>" + lstInvoice[0].Address + "</td></tr>");
                html.Append("<tr><td><b>Folio No. : </b>" + lstInvoice[0].FolioNo + "</td></tr>");
                html.Append("</tbody></table></td>");
                html.Append("<td colspan='6' width='50%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>");
                html.Append("<tr><th>Dated : :</th> <td>" + lstInvoice[0].PdaTransDate + "</td></tr>");

                html.Append("</tbody></table></td>");
                html.Append("</tr>");



                html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7.5pt;'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000;'>Mode</th>");
                html.Append("<th style='border-right: 1px solid #000;'>Drawee Bank</th>");
                html.Append("<th style='border-right: 1px solid #000;'>Instrument No</th>");
                html.Append("<th style='border-right: 1px solid #000;'>Date</th>");
                html.Append("<th style='text-align:right;'>Amount</th></tr></thead>");
                html.Append("<tbody>");
            lstInvoice.ToList().ForEach(item =>
            {
                html.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaPayType + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaDrawBank + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaInsNo + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaChequeDate + "</td>");
                html.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item.Amount + "</td></tr>");
            });
            html.Append("</tbody>");
                html.Append("</table></td></tr>");

                //   html.Append("<tr><td colspan='12'><b>CASHIER REMARKS :</b> " + item.Remarks + "</td></tr>");

                html.Append("<tr><td><br/><br/><br/><br/></td></tr>");
                html.Append("<tr>");
                html.Append("<th colspan='4' width='33.33333333333333%' align='left'>Received By :</th>");
                //html.Append("<th colspan='4' width='33.33333333333333%' align='center'>AM (A/cs)</th>");
                //html.Append("<th colspan='4' width='33.33333333333333%' align='right'>Manager (CFS)</th>");
                html.Append("</tr>");

                html.Append("</tbody></table>");

                html = html.Replace("ImgLeft", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ImgRight", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
           
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }

        #endregion


        #region DailyCashBookReport
        [HttpGet]
        public ActionResult DailyCashBookReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyCashBookReport(string PeriodFrom, string PeriodTo)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_DailyCashBook> LstDailyCashBook = new List<Hdb_DailyCashBook>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DailyCashBook(PeriodFrom, PeriodTo);
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyCashBook = (List<Hdb_DailyCashBook>)ObjRR.DBResponse.Data;
                LstDailyCashBook = LstDailyCashBook.OrderBy(o => o.ReceiptDate).ThenBy(o => o.CRNo).ToList();
                LstDailyCashBook.Add(new Hdb_DailyCashBook()
                {
                    ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",
                    Depositor = "",
                    ChqNo = "",
                    Area = LstDailyCashBook.ToList().Sum(o => o.Area),
                    STO = LstDailyCashBook.ToList().Sum(o => o.STO),
                    INS = LstDailyCashBook.ToList().Sum(o => o.INS),
                    GRE = LstDailyCashBook.ToList().Sum(o => o.GRE),
                    GRL = LstDailyCashBook.ToList().Sum(o => o.GRL),
                    Reefer = LstDailyCashBook.ToList().Sum(o => o.Reefer),
                    EscCharge = LstDailyCashBook.ToList().Sum(o => o.EscCharge),
                    Print = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Print)),
                    Royality = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Royality)),
                    Franchiese = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Franchiese)),
                    HT = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HT)),
                    LWB = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)),
                    Cgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Cgst)).ToString(),
                    Sgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Sgst)).ToString(),
                    Igst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Igst)).ToString(),
                    Roundoff = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Roundoff)),
                    TotalCash = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    TotalCheque = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    TotalNEFT = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalNEFT)),
                    TotalOth = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOth)),
                    Tds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Tds)).ToString(),
                    CrTds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CrTds)).ToString(),
                    AddmonyToSd= LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.AddmonyToSd)).ToString(),
                    RefundFromSd= LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RefundFromSd)).ToString(),
                });
                ObjRR.DBResponse.Data = LstDailyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyCashBookReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DailyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages[0] = Pages[0].ToString().Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape,40f, 40f, 20f, 20f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region MonthlyCashBookReport

        //same model used for daily and monthly cashbook in patparganj

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult MonthlyCashBookReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Ppg_ReportRepository ObjReport = new Ppg_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyCashBookReport(Hdb_MonthlyCashBook ObjMonthlyCashBook)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_MonthlyCashBook> LstMonthlyCashBook = new List<Hdb_MonthlyCashBook>();
           
            
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.MOnthlyCashBook(ObjMonthlyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstMonthlyCashBook = (List<Hdb_MonthlyCashBook>)ObjRR.DBResponse.Data;
                LstMonthlyCashBook.Add(new Hdb_MonthlyCashBook()
                {
                    ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",
                    Depositor = "",
                    CwcChargeTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeTAX)).ToString(),
                    CwcChargeNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeNonTAX)).ToString(),
                    CustomRevenueTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueTAX)).ToString(),
                    CustomRevenueNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueNonTAX)).ToString(),
                    InsuranceTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceTAX)).ToString(),
                    InsuranceNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceNonTAX)).ToString(),
                    PortTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortTAX)).ToString(),
                    PortNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortNonTAX)).ToString(),
                    LWB = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)).ToString(),
                    CWCCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCCGST)).ToString(),
                    CWCSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCSGST)).ToString(),
                    CWCISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCISGT)).ToString(),
                    HtTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtTax)).ToString(),
                    HtNonTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtNonTax)).ToString(),
                    HtCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtCGST)).ToString(),
                    HtSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtSGST)).ToString(),
                    HtISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtISGT)).ToString(),
                    RoPdRefund = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoPdRefund)).ToString(),
                    MISC = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MISC)).ToString(),
                    PdaPLus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaPLus)).ToString(),
                    TDSPlus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSPlus)).ToString(),
                    PdaMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaMinus)).ToString(),
                    Exempted = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Exempted)).ToString(),
                    TDSMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSMinus)).ToString(),
                    HtAdjust = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtAdjust)).ToString(),
                    BankDeposit = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.BankDeposit)).ToString(),
                    RoundOff = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoundOff)).ToString(),
                    RowTotal = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowTotal)).ToString(),
                    AddMoneySD = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.AddMoneySD)).ToString(),
                    withdralfromSD = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.withdralfromSD)).ToString()
                });
                ObjRR.DBResponse.Data = LstMonthlyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }
            

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlyCashBookPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }



        #region PDSummary



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult PDASummaryReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Ppg_ReportRepository ObjReport = new Ppg_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetPdSummaryReport(Hdb_PdSummary ObjPdSummary)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_PdSummary> LstPdSummary = new List<Hdb_PdSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.PdSummaryReport(ObjPdSummary);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstPdSummary = (List<Hdb_PdSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePdSummaryPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "SdSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/SdSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SdSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion




        #region Stock Position Report
        [HttpGet]
        public ActionResult StockPositionReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetStockPositionReport(StockPositionReportModel ObjStockPosition)
        {
            Kdl_ReportRepository ObjRR = new Kdl_ReportRepository();
            List<StockPositionReportModel> LstStockPosition = new List<StockPositionReportModel>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.StockPositionReport(ObjStockPosition);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockPosition = (List<StockPositionReportModel>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateStockPositionReportPDF(FormCollection fc)
        {
            try
            {

                var Pages = new string[1];
                var FileName = "StockPositionReport.pdf";
                Pages[0] = fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/StockPositionReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/StockPositionReport/" + FileName };
                return Json(ObjResult);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #endregion

        #region ContainerArrivalReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerArrivalReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerArrivalReport(ContainerArrivalReport ObjContainerArrivalReport)
        {
            Kdl_ReportRepository ObjRR = new Kdl_ReportRepository();
            List<ContainerArrivalReport> LstContainerArrivalReport = new List<ContainerArrivalReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerArrivalReport(ObjContainerArrivalReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerArrivalReport = (List<ContainerArrivalReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerArrivalReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerArrivalReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ContainerArrivalReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ContainerArrivalReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        //#region Stock Position Report
        //[HttpGet]
        //public ActionResult StockPositionReport()
        //{
        //    return PartialView();
        //}
        #region Stock Position Report
        //[HttpGet]
        //public ActionResult StockPositionReport()
        //{
        //    return PartialView();
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult GetStockPositionReport(StockPositionReportModel ObjStockPosition)
        //{
        //    Kdl_ReportRepository ObjRR = new Kdl_ReportRepository();
        //    List<StockPositionReportModel> LstStockPosition = new List<StockPositionReportModel>();
        //    Login objLogin = (Login)Session["LoginUser"];
        //    ObjRR.StockPositionReport(ObjStockPosition);//, objLogin.Uid
        //    if (ObjRR.DBResponse.Data != null)
        //    {
        //        LstStockPosition = (List<StockPositionReportModel>)ObjRR.DBResponse.Data;
        //        return Json(ObjRR.DBResponse);
        //    }
        //    else
        //    {
        //        return Json(ObjRR.DBResponse);
        //    }

        //}

        //[HttpPost, ValidateInput(false)]
        //[CustomValidateAntiForgeryToken]
        //public JsonResult GenerateStockPositionReportPDF(FormCollection fc)
        //{
        //    try
        //    {

        //        var Pages = new string[1];
        //        var FileName = "StockPositionReport.pdf";
        //        Pages[0] = fc["Page"].ToString();
        //        string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ChequeSummary/";
        //        if (!Directory.Exists(LocalDirectory))
        //            Directory.CreateDirectory(LocalDirectory);
        //        using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
        //        {
        //            ObjPdf.HeadOffice = this.HeadOffice;
        //            ObjPdf.HOAddress = this.HOAddress;
        //            ObjPdf.ZonalOffice = this.ZonalOffice;
        //            ObjPdf.ZOAddress = this.ZOAddress;
        //            ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

        //        }
        //        var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ChequeSummary/" + FileName };
        //        return Json(ObjResult);
        //    }
        //    catch (Exception ex)
        //    {
        //        return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
        //    }

        //}
        #endregion
        //}
        //#endregion

        #region CashReceiptInvoiceLedgerReport Partywise
        public ActionResult CashReceiptInvoiceLedgerReport()
        {
            return PartialView();
        }

        public JsonResult GetCashReceiptInvoiceLedgerReport(int partyId, string fromdate, string todate)
        {
            try
            {

                return Json("", JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Status = 0, Data = "", Message = ex.Message.ToString() }, JsonRequestBehavior.AllowGet);
            }

        }
        #endregion

        #region Invoice Report Details



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult InvoiceReportDetails()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView("InvoiceReportDetails");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetInvoiceReportList(Hdb_InvoiceReportDetails ObjInvoiceReportDtls)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_InvoiceReportDetails> LstInvoiceReportDetails = new List<Hdb_InvoiceReportDetails>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceReportDetails(ObjInvoiceReportDtls);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<Hdb_InvoiceReportDetails>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateInvoiceReportDetailsPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "InvoiceReportDetails.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/InvoiceReportDetails/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                //"/"+ SubDomain + 
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/InvoiceReportDetails/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region Invoice Report Summary



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult InvoiceReportSummary()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView("InvoiceReportSummary");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetInvoiceReportSummary(Hdb_InvoiceReportSummary ObjInvoiceReportSummary)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_InvoiceReportSummary> LstInvoiceReportSummary = new List<Hdb_InvoiceReportSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceReportSummary(ObjInvoiceReportSummary);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportSummary = (List<Hdb_InvoiceReportSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateInvoiceReportSummaryPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "InvoiceReportSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/InvoiceReportSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //"/"+ SubDomain + 
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/InvoiceReportSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region Exemted Service (Without Tax) for a month



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ExemptedService()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetExemptedServiceList(Hdb_ExemptedService ObjExemptedService)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_ExemptedService> LstInvoiceReportDetails = new List<Hdb_ExemptedService>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetExemptedService(ObjExemptedService);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<Hdb_ExemptedService>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateExemptedServicePDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ExemptedServiceWithoutTax.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ExemptedServiceWithoutTax/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ExemptedServiceWithoutTax/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region Destuffing Print

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintDestuffingSheet(int DestuffingEntryId)
        {
            HDB_ImportRepository ObjIR = new HDB_ImportRepository();
            ObjIR.GetDestuffEntryForPrint_Hdb(DestuffingEntryId);
            if (ObjIR.DBResponse.Data != null)
            {
                Hdb_DestuffingEntry ObjDestuff = new Hdb_DestuffingEntry();
                ObjDestuff = (Hdb_DestuffingEntry)ObjIR.DBResponse.Data;
                string Path = GeneratePDFForDestuffSheet(ObjDestuff, DestuffingEntryId);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        [NonAction]
        public string GeneratePDFForDestuffSheet(Hdb_DestuffingEntry ObjDestuff, int DestuffingEntryId)
        {
            // DestuffingEntry ObjDestuff = new DestuffingEntry();
            // ObjDestuff=ObjDestuffing.LstDestuffingEntry[0];
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/DestuffingSheet" + DestuffingEntryId + ".pdf";
            string Html = "";
            //string ContainerNo = "", Size = "", Serial = "", BOEDate = "", BOLDate = "", BOENo = "", Vessel = "", CHA = "", Importer = "", ShippingLine = "",
            //CargoDescription = "", MarksNo = "", Weight = "", LineNo = "", Rotation = "", ArrivalDate = "", DestuffingDate = "", Location = "";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            //if (System.IO.File.Exists(Path))
            //{
            //    System.IO.File.Delete(Path);
            //}
            //  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;'>CONTAINER FREIGHT STATION<br/>DESTUFFING SHEET FCL/LCL</th></tr></thead><tbody><tr><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>MODEL</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th style='border:1px solid #000;text-align:center;padding:5px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Duty</th></tr></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            //Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;'>CONTAINER FREIGHT STATION<br/>DESTUFFING SHEET FCL/LCL</th></tr></thead><tbody><tr><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>MODEL</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><th style='border:1px solid #000;text-align:center;padding:5px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Duty</th></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></th><th width='80%' valign='top' align='center' style='font-size:25px; text-align:center;'>CENTRAL WAREHOUSING CORPORATION <br/> <label style='font-size: 13px; margin-bottom:10px;'>(A Govt. of India Undertaking)</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>Container Freight Station, Kukatpally</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>IDPL Road, Hyderabad - 37</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>DESTUFFING SHEET FCL</label></th><th width='20%' valign='top'><img align='right' src='ISO' width='100'/></th></tr></thead><tbody><tr><td style='width:50%;' colspan='6'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.DestuffingEntryNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>Container no.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.ContainerNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.CFSCode + "</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Vessel + "</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Voyage + "</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.SealNo + "</td></tr></tbody></table></td><td style='width:50%;' colspan='6'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.DestuffingEntryDate + "</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Size + "</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.ShippingLine + "</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Rotation + "</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.CustomSealNo + "</td></tr></tbody></table></td></tr><tr><td colspan='12'><table style='width:100%;font-size:6.5pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Destuffing Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Duty</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Area</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Volume</th></tr></thead><tbody>";
            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            string html2 = "";
            ObjDestuff.LstDestuffingEntry.ToList().ForEach(item =>
            {
                html2 += "<tr><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.LineNo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOENo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOEDate + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOLNo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOLDate + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.MarksNo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CHA + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Importer + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CargoDescription + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Commodity + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Cargo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.NoOfPackages + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GodownName + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GodownWiseLctnNames + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GrossWeight + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.DestuffingWeight + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CIFValue + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Duty + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.SQM + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CUM + "</td></tr>";
            });
            string html3 = "</tbody></table></td></tr><tr><td colspan='12' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of<br/>Rep. / Surveyor / S.Agent <br/> Live / CHA</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            Html = Html + html2 + html3;
            using (var RH = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
            {

                RH.HeadOffice = this.HeadOffice;
                RH.HOAddress = this.HOAddress;
                RH.ZonalOffice = this.ZonalOffice;
                RH.ZOAddress = this.ZOAddress;

                RH.GeneratePDF(Path, Html);
            }

            return "/Docs/" + Session.SessionID + "/DestuffingSheet" + DestuffingEntryId + ".pdf";
        }

        #endregion
        #region Destuffing Print Lcl

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintDestuffingSheetLcl(int DestuffingEntryId)
        {
            HDB_ImportRepository ObjIR = new HDB_ImportRepository();
            ObjIR.GetDestuffEntryForPrint_Hdb(DestuffingEntryId);
            if (ObjIR.DBResponse.Data != null)
            {
                Hdb_DestuffingEntry ObjDestuff = new Hdb_DestuffingEntry();
                ObjDestuff = (Hdb_DestuffingEntry)ObjIR.DBResponse.Data;
                string Path = GeneratePDFForDestuffSheetLcl(ObjDestuff, DestuffingEntryId);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        [NonAction]
        public string GeneratePDFForDestuffSheetLcl(Hdb_DestuffingEntry ObjDestuff, int DestuffingEntryId)
        {
            // DestuffingEntry ObjDestuff = new DestuffingEntry();
            // ObjDestuff=ObjDestuffing.LstDestuffingEntry[0];
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/DestuffingSheet" + DestuffingEntryId + ".pdf";
            string Html = "";
            //string ContainerNo = "", Size = "", Serial = "", BOEDate = "", BOLDate = "", BOENo = "", Vessel = "", CHA = "", Importer = "", ShippingLine = "",
            //CargoDescription = "", MarksNo = "", Weight = "", LineNo = "", Rotation = "", ArrivalDate = "", DestuffingDate = "", Location = "";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            //if (System.IO.File.Exists(Path))
            //{
            //    System.IO.File.Delete(Path);
            //}
            //  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;'>CONTAINER FREIGHT STATION<br/>DESTUFFING SHEET FCL/LCL</th></tr></thead><tbody><tr><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>MODEL</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th style='border:1px solid #000;text-align:center;padding:5px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Duty</th></tr></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            //Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;'>CONTAINER FREIGHT STATION<br/>DESTUFFING SHEET FCL/LCL</th></tr></thead><tbody><tr><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>MODEL</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><th style='border:1px solid #000;text-align:center;padding:5px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Duty</th></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></th><th width='80%' valign='top' align='center' style='font-size:25px; text-align:center;'>CENTRAL WAREHOUSING CORPORATION <br/> <label style='font-size: 13px; margin-bottom:10px;'>(A Govt. of India Undertaking)</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>Container Freight Station, Kukatpally</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>IDPL Road, Hyderabad - 37</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>DESTUFFING SHEET LCL</label></th><th width='20%' valign='top'><img align='right' src='ISO' width='100'/></th></tr></thead><tbody><tr><td style='width:50%;' colspan='6'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.DestuffingEntryNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>" + ObjDestuff.CBT + "</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.ContainerNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.CFSCode + "</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Vessel + "</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Voyage + "</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.SealNo + "</td></tr></tbody></table></td><td style='width:50%;' colspan='6'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.DestuffingEntryDate + "</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Size + "</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.ShippingLine + "</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Rotation + "</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.CustomSealNo + "</td></tr></tbody></table></td></tr><tr><td colspan='12'><table style='width:100%;font-size:6.5pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Destuffing Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Duty</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Area</th><th style='border:1px solid #000;text-align:center;padding:5px; width:100px;'>Volume</th></tr></thead><tbody>";
            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            string html2 = "";
            ObjDestuff.LstDestuffingEntry.ToList().ForEach(item =>
            {
                html2 += "<tr><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.LineNo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOENo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOEDate + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOLNo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.BOLDate + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.MarksNo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CHA + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Importer + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CargoDescription + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Commodity + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Cargo + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.NoOfPackages + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GodownName + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GodownWiseLctnNames + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GrossWeight + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.DestuffingWeight + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CIFValue + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Duty + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.SQM + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CUM + "</td></tr>";
            });
            string html3 = "</tbody></table></td></tr><tr><td colspan='12' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of<br/>Rep. / Surveyor / S.Agent <br/> Live / CHA</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            Html = Html + html2 + html3;
            using (var RH = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
            {

                RH.HeadOffice = this.HeadOffice;
                RH.HOAddress = this.HOAddress;
                RH.ZonalOffice = this.ZonalOffice;
                RH.ZOAddress = this.ZOAddress;

                RH.GeneratePDF(Path, Html);
            }

            return "/Docs/" + Session.SessionID + "/DestuffingSheet" + DestuffingEntryId + ".pdf";
        }

        #endregion

        #region Gate Entry Seal Cutting

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintSealCutting(int EntryId, string CBTContainer, string OperationType, string GateInNo, string ContainerType, string StuffType)

        {
            HDB_EntryThroughGateRepository ObjGR = new HDB_EntryThroughGateRepository();

            ObjGR.GetPrintSealCutting(EntryId, OperationType, ContainerType, StuffType);
            if (ObjGR.DBResponse.Data != null)
            {
                List<GateEntrySealCutting> LstSeal = new List<GateEntrySealCutting>();
                LstSeal = (List<GateEntrySealCutting>)ObjGR.DBResponse.Data;
                string Path = GeneratePdfForSealCut(LstSeal, EntryId, CBTContainer, OperationType, GateInNo, ContainerType);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 1, Message = "Error" });
            }
        }

        [NonAction]
        public string GeneratePdfForSealCut(List<GateEntrySealCutting> LstSeal, int EntryId, string CBTContainer, string OperationType, string GateInNo, string ContainerType)
        {
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/SealCutting" + EntryId + ".pdf";
            string ContainerNo = "", Size = "", SealNo = "", BLNo = "", Importer = "", LCLFCL = "", ArrivalDate = "", CHA = "", Purpose = "", EntryDate = "";
            string CargoDescription = "", NoOfUnits = "", SACNo = "", SACDate = "", AWBNo = "", AWBDate = "", GodownNo = "", CompanyAddress = "", CompanyEmail = "", CBTFrom = "";
            int Index = 1;
            string hdrCont = "";
            StringBuilder Html = new StringBuilder();
            if (OperationType == "Import")
            {
                LstSeal.Select(x => new { ContainerNo = x.ContainerNo }).Distinct().ToList().ForEach(item =>
                {
                    if (ContainerNo == "")
                        ContainerNo = item.ContainerNo;
                    else
                        ContainerNo += "<br/>" + item.ContainerNo;
                });
                LstSeal.Select(x => new { Size = x.Size }).Distinct().ToList().ForEach(item =>
                {
                    if (Size == "")
                        Size = item.Size;
                    else
                        Size += "<br/>" + item.Size;
                });
                LstSeal.Select(x => new { SealNo = x.SealNo }).Distinct().ToList().ForEach(item =>
                {
                    if (SealNo == "")
                        SealNo = item.SealNo;
                    else
                        SealNo += "<br/>" + item.SealNo;
                });
                LstSeal.Select(x => new { BLNo = x.BLNo }).Distinct().ToList().ForEach(item =>
                {
                    if (BLNo == "")
                        BLNo = item.BLNo;
                    else
                        BLNo += "<br/>" + item.BLNo;
                });
                LstSeal.Select(x => new { Importer = x.Importer }).Distinct().ToList().ForEach(item =>
                {
                    if (Importer == "")
                        Importer = item.Importer;
                    else
                        Importer += "<br/>" + item.Importer;
                });

                LstSeal.Select(x => new { LCLFCL = x.LCLFCL }).Distinct().ToList().ForEach(item =>
                {
                    if (LCLFCL == "")
                        LCLFCL = item.LCLFCL;
                    else
                        LCLFCL += "<br/>" + item.LCLFCL;
                });
                LstSeal.Select(x => new { ArrivalDate = x.ArrivalDate }).Distinct().ToList().ForEach(item =>
                {
                    if (ArrivalDate == "")
                        ArrivalDate = item.ArrivalDate;
                    else
                        ArrivalDate += "<br/>" + item.ArrivalDate;
                });
                LstSeal.Select(x => new { CBTFrom = x.CBTFrom }).Distinct().ToList().ForEach(item =>
                {
                    if (CBTFrom == "")
                        CBTFrom = item.CBTFrom;
                    else
                        CBTFrom += "<br/>" + item.CBTFrom;
                });


            }
            else if (OperationType == "Bond")
            {
                LstSeal.Select(x => new { ContainerNo = x.ContainerNo }).Distinct().ToList().ForEach(item =>
                {
                    if (ContainerNo == "")
                        ContainerNo = item.ContainerNo;
                    else
                        ContainerNo += "<br/>" + item.ContainerNo;
                });
                LstSeal.Select(x => new { Size = x.Size }).Distinct().ToList().ForEach(item =>
                {
                    if (Size == "")
                        Size = item.Size;
                    else
                        Size += "<br/>" + item.Size;
                });
                LstSeal.Select(x => new { SealNo = x.SealNo }).Distinct().ToList().ForEach(item =>
                {
                    if (SealNo == "")
                        SealNo = item.SealNo;
                    else
                        SealNo += "<br/>" + item.SealNo;
                });
                LstSeal.Select(x => new { BLNo = x.BLNo }).Distinct().ToList().ForEach(item =>
                {
                    if (BLNo == "")
                        BLNo = item.BLNo;
                    else
                        BLNo += "<br/>" + item.BLNo;
                });
                LstSeal.Select(x => new { Importer = x.Importer }).Distinct().ToList().ForEach(item =>
                {
                    if (Importer == "")
                        Importer = item.Importer;
                    else
                        Importer += "<br/>" + item.Importer;
                });
                LstSeal.Select(x => new { CHA = x.CHA }).Distinct().ToList().ForEach(item =>
                {
                    if (CHA == "")
                        CHA = item.CHA;
                    else
                        CHA += "<br/>" + item.CHA;
                });
                LstSeal.Select(x => new { CargoDescription = x.CargoDescription }).Distinct().ToList().ForEach(item =>
                {
                    if (CargoDescription == "")
                        CargoDescription = item.CargoDescription;
                    else
                        CargoDescription += "<br/>" + item.CargoDescription;
                });
                LstSeal.Select(x => new { NoOfUnits = x.NoOfUnits }).Distinct().ToList().ForEach(item =>
                {
                    if (NoOfUnits == "")
                        NoOfUnits = item.NoOfUnits;
                    else
                        NoOfUnits += "<br/>" + item.NoOfUnits;
                });
                LstSeal.Select(x => new { SACNo = x.SACNo }).Distinct().ToList().ForEach(item =>
                {
                    if (SACNo == "")
                        SACNo = item.SACNo;
                    else
                        SACNo += "<br/>" + item.SACNo;
                });
                LstSeal.Select(x => new { SACDate = x.SACDate }).Distinct().ToList().ForEach(item =>
                {
                    if (SACDate == "")
                        SACDate = item.SACDate;
                    else
                        SACDate += "<br/>" + item.SACDate;
                });
                LstSeal.Select(x => new { AWBNo = x.AWBNo }).Distinct().ToList().ForEach(item =>
                {
                    if (AWBNo == "")
                        AWBNo = item.AWBNo;
                    else
                        AWBNo += "<br/>" + item.AWBNo;
                });
                LstSeal.Select(x => new { AWBDate = x.AWBDate }).Distinct().ToList().ForEach(item =>
                {
                    if (AWBDate == "")
                        AWBDate = item.AWBDate;
                    else
                        AWBDate += "<br/>" + item.AWBDate;
                });
                LstSeal.Select(x => new { GodownNo = x.GodownNo }).Distinct().ToList().ForEach(item =>
                {
                    if (GodownNo == "")
                        GodownNo = item.GodownNo;
                    else
                        GodownNo += "<br/>" + item.GodownNo;
                });
                LstSeal.Select(x => new { CompanyAddress = x.CompanyAddress }).Distinct().ToList().ForEach(item =>
                {
                    if (CompanyAddress == "")
                        CompanyAddress = item.CompanyAddress;
                    else
                        CompanyAddress += "<br/>" + item.CompanyAddress;
                });
                LstSeal.Select(x => new { CompanyEmail = x.CompanyEmail }).Distinct().ToList().ForEach(item =>
                {
                    if (CompanyEmail == "")
                        CompanyEmail = item.CompanyEmail;
                    else
                        CompanyEmail += "<br/>" + item.CompanyEmail;
                });
                LstSeal.Select(x => new { LCLFCL = x.LCLFCL }).Distinct().ToList().ForEach(item =>
                {
                    if (LCLFCL == "")
                        LCLFCL = item.LCLFCL;
                    else
                        LCLFCL += "<br/>" + item.LCLFCL;
                });
                LstSeal.Select(x => new { ArrivalDate = x.ArrivalDate }).Distinct().ToList().ForEach(item =>
                {
                    if (ArrivalDate == "")
                        ArrivalDate = item.ArrivalDate;
                    else
                        ArrivalDate += "<br/>" + item.ArrivalDate;
                });


            }
            else if (OperationType == "Export" && ContainerType == "Empty" | OperationType == "Empty")
            {
                LstSeal.Select(x => new { ContainerNo = x.ContainerNo }).Distinct().ToList().ForEach(item =>
                {
                    if (ContainerNo == "")
                        ContainerNo = item.ContainerNo;
                    else
                        ContainerNo += "<br/>" + item.ContainerNo;
                });
                LstSeal.Select(x => new { Size = x.Size }).Distinct().ToList().ForEach(item =>
                {
                    if (Size == "")
                        Size = item.Size;
                    else
                        Size += "<br/>" + item.Size;
                });
                LstSeal.Select(x => new { SealNo = x.SealNo }).Distinct().ToList().ForEach(item =>
                {
                    if (SealNo == "")
                        SealNo = item.SealNo;
                    else
                        SealNo += "<br/>" + item.SealNo;
                });
                LstSeal.Select(x => new { BLNo = x.BLNo }).Distinct().ToList().ForEach(item =>
                {
                    if (BLNo == "")
                        BLNo = item.BLNo;
                    else
                        BLNo += "<br/>" + item.BLNo;
                });
                LstSeal.Select(x => new { Importer = x.Importer }).Distinct().ToList().ForEach(item =>
                {
                    if (Importer == "")
                        Importer = item.Importer;
                    else
                        Importer += "<br/>" + item.Importer;
                });

                LstSeal.Select(x => new { LCLFCL = x.LCLFCL }).Distinct().ToList().ForEach(item =>
                {
                    if (LCLFCL == "")
                        LCLFCL = item.LCLFCL;
                    else
                        LCLFCL += "<br/>" + item.LCLFCL;
                });
                LstSeal.Select(x => new { ArrivalDate = x.ArrivalDate }).Distinct().ToList().ForEach(item =>
                {
                    if (ArrivalDate == "")
                        ArrivalDate = item.ArrivalDate;
                    else
                        ArrivalDate += "<br/>" + item.ArrivalDate;
                });
                LstSeal.Select(x => new { Purpose = x.Purpose }).Distinct().ToList().ForEach(item =>
                {
                    if (Purpose == "")
                        Purpose = item.Purpose;
                    else
                        Purpose += " ," + item.Purpose;
                });
                LstSeal.Select(x => new { EntryDate = x.EntryDate }).Distinct().ToList().ForEach(item =>
                {
                    if (EntryDate == "")
                        EntryDate = item.EntryDate;
                    else
                        EntryDate += "<br/>" + item.EntryDate;
                });
                LstSeal.Select(x => new { CHA = x.CHA }).Distinct().ToList().ForEach(item =>
                {
                    if (CHA == "")
                        CHA = item.CHA;
                    else
                        CHA += " ," + item.CHA;
                });
            }
            else
            {
                LstSeal.Select(x => new { CHA = x.CHA }).Distinct().ToList().ForEach(item =>
                {
                    if (CHA == "")
                        CHA = item.CHA;
                    else
                        CHA += " ," + item.CHA;
                });
                LstSeal.Select(x => new { Purpose = x.Purpose }).Distinct().ToList().ForEach(item =>
                {
                    if (Purpose == "")
                        Purpose = item.Purpose;
                    else
                        Purpose += " ," + item.Purpose;
                });
                LstSeal.Select(x => new { ContainerNo = x.ContainerNo }).Distinct().ToList().ForEach(item =>
                {
                    if (ContainerNo == "")
                        ContainerNo = item.ContainerNo;
                    else
                        ContainerNo += "<br/>" + item.ContainerNo;
                });
                LstSeal.Select(x => new { EntryDate = x.EntryDate }).Distinct().ToList().ForEach(item =>
                {
                    if (EntryDate == "")
                        EntryDate = item.EntryDate;
                    else
                        EntryDate += "<br/>" + item.EntryDate;
                });
                LstSeal.Select(x => new { Size = x.Size }).Distinct().ToList().ForEach(item =>
                {
                    if (Size == "")
                        Size = item.Size;
                    else
                        Size += "<br/>" + item.Size;
                });

            }
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }

            if (OperationType == "Bond")
            {
                hdrCont = "Bond " + LCLFCL;
                //Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody> <tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='60%' valign='top' align='center'><h1 style='font-size: 22px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Government of India Undertaking)</label> </td><td valign='top'><img align='right' src='ISO' width='100'/></td></tr>           <tr><td colspan='12'><table width='100%'><tbody><tr> <th colspan='6' width='50%'><h6 style='margin:0;'>Manager - CFS/The Superintendent(Customs)</h6><h6 style='margin:0;'>Container Freight Station, Kukatpally</h6><h6 style='margin:0;'>IDPL Road, Hyderabad - 37</h6><h6 style='margin:0;'>Email - cwccfs@gmail.com</h6></th> <td colspan='6' width='50%' align='right' style='font-size:12px;'><b>Date:</b>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td> </tr></tbody></table></td></tr>                   <tr><td><span><br/></span></td></tr> <tr><td colspan='3' style='text-align: center;'><h2 style='font-size: 16px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Sub : Request for Seal Cutting of " + hdrCont + " " + CBTContainer + " - Reg.</h2></td></tr> <tr><td colspan='3'><table style='width:100%;'cellspacing='0' cellpadding='0'><tbody><tr><td><p style='font-size:12px; margin-bottom:0;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> With reference to the above cited subject kindly arrange the following " + hdrCont + " " + CBTContainer + " for the Customs Examinations for Factory de-stuffing/CFS de-stuffing into godown/direct loading into truck.</p></td></tr><tr><td><table style='margin:5px 0 0; border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='10'><thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width:80px;'>S.No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 200px;'>" + CBTContainer + " </th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 70px;'>Size</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 150px;'>Seal No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 150px;'>BL No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 250px;'>Name of the importer</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 250px;'>Arrival Date</th></tr></thead><tbody>");                
                //  foreach (GateEntrySealCutting item in LstSeal)
                // {
                //Html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width:80px;'>" + Index + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 200px;'>" + ContainerNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 70px;'>" + Size + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 150px;'>" + SealNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 150px;'>" + BLNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 250px;'>" + Importer + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 250px;'>" + ArrivalDate + "</td></tr>");
                // Index++;
                // }
                //Html.Append("</tbody></table></td></tr></tbody></table><p style='font-size: 13px; margin: 0;'>No Objection for seal cutting & destuffing obtained from IS/liner is enclosed.</p><br/><br/><br/><table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr><td><h6 style='font-size: 13px; margin:0; font-weight: normal;'>Permitted</h6><h3 style='font-size: 15px; margin:0;'>Signature of Customs Official</h3></td><td><h3 style='font-size: 15px; margin:0;font-weight: normal; text-align:right;'>Yours faithfully,</h3></td></tr></tbody></table></td></tr></tbody></table>");


                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table width='100%'><tbody><tr>");
                Html.Append("<td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='70%' valign='top' align='center'><h1 style='font-size: 22px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Government of India Undertaking)</label> </td><td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table width='100%'><tbody><tr>");
                Html.Append("<th colspan='6' width='50%'><h6 style='margin:0;'>Manager - CFS/The Superintendent(Customs)</h6><h6 style='margin:0;'>Container Freight Station,</h6><h6 style='margin:0;'>" + CompanyAddress + "</h6><h6 style='margin:0;'>" + CompanyEmail + "</h6></th>");
                Html.Append("<td colspan='6' width='50%' align='right' style='font-size:12px;'><b>Date:</b>" + ArrivalDate + "</td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table width='100%'><tbody><tr>");
                Html.Append("<td style='text-align: center;'><h2 style='font-size: 16px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Sub : Request for Seal Cutting of Bond " + CBTContainer + " - Reg.</h2></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellpadding='5' width='100%' style='font-size:12px; border: 1px solid #000;'><tbody>");
                Html.Append("<tr><td width='15%'><b>" + CBTContainer + " No</b></td><td>:</td><td width='80%'>" + ContainerNo + "</td></tr>");
                Html.Append("<tr><td width='15%'><b>Importer Name</b></td><td>:</td><td width='80%'>" + Importer + "</td></tr>");
                Html.Append("<tr><td width='15%'><b>CHA Name</b></td><td>:</td><td width='80%'>" + CHA + "</td></tr>");
                Html.Append("<tr><td width='15%'><b>Cargo Description</b></td><td>:</td><td width='80%'>" + CargoDescription + "</td></tr>");
                Html.Append("<tr><td width='15%'><b>No. of Units</b></td><td>:</td><td width='80%'>" + NoOfUnits + "<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> <b>Seal No :</b> " + SealNo + "</td></tr>");
                Html.Append("<tr><td width='15%'><b>SAC No</b></td><td>:</td><td width='80%'>" + SACNo + "<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> <b>SAC Date :</b> " + SACDate + "</td></tr>");
                Html.Append("<tr><td width='15%'><b>AWB No</b></td><td>:</td><td width='80%'>" + AWBNo + "<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> <b>AWB Date :</b> " + AWBDate + "</td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table width='100%' style='font-size:12px;'><tbody>");
                Html.Append("<tr><td colspan='12'>Please receive the cargo as detailed above and as per the Into B/E enclosed in godown no <u>" + GodownNo + "</u> on branded weight basis / after undertaking weighment.</td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/><br/></span></td></tr>");
                Html.Append("<tr><th colspan='6' width='50%'>Gate I/C</th> <th colspan='6' width='50%' style='text-align:right;'>Office Assistant</th></tr>");
                Html.Append("<tr><td colspan='12'><span><br/></span></td></tr>");
                Html.Append("<tr><td colspan='12'></td></tr>");
                Html.Append("<tr><td colspan='12' style='border-top: 1px solid #000; padding-top:20px;'><p>With reference to the above cited subject kindly arrange the above Bond " + CBTContainer + " for Customs Examination for warehouse de-stuffing.</p></td></tr>");
                Html.Append("<tr><td colspan='12'><p>No Objection for seal cutting & destuffing into warehouse.</p></td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/><br/><br/></span></td></tr>");
                Html.Append("<tr><td colspan='6' width='50%'><h6 style='font-size: 12px; margin:0; font-weight: normal;'>Permitted</h6><h3 style='font-size: 13px; margin:0;'>Signature of Customs Official</h3></td> <td colspan='6' width='50%'><h3 style='font-size: 13px; margin:0;font-weight: normal; text-align:right;'>Yours faithfully,</h3></td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");


                Html.Append("</tbody></table>");
            }
            else if (OperationType == "Import")
            {
                hdrCont = "Import " + LCLFCL;
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody> <tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='60%' valign='top' align='center'><h1 style='font-size: 22px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Government of India Undertaking)</label> </td><td valign='top'><img align='right' src='ISO' width='100'/></td></tr>           <tr><td colspan='12'><table width='100%'><tbody><tr> <th colspan='6' width='50%'><h6 style='margin:0;'>Manager - CFS/The Superintendent(Customs)</h6><h6 style='margin:0;'>Container Freight Station, Kukatpally</h6><h6 style='margin:0;'>IDPL Road, Hyderabad - 37</h6><h6 style='margin:0;'>Email - cfs.kukatpally@cewacor.nic.in</h6></th> <td colspan='6' width='50%' align='right' style='font-size:12px;'><b>Date:</b>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td> </tr></tbody></table></td></tr>                   <tr><td><span><br/></span></td></tr> <tr><td colspan='3' style='text-align: center;'><h2 style='font-size: 16px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Sub : Request for Seal Cutting of " + hdrCont + " " + CBTContainer + " - Reg.</h2></td></tr> <tr><td colspan='3'><table style='width:100%;'cellspacing='0' cellpadding='0'><tbody><tr><td><p style='font-size:12px; margin-bottom:0;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> With reference to the above cited subject kindly arrange the following " + hdrCont + " " + CBTContainer + " for the Customs Examinations for Factory de-stuffing/CFS de-stuffing into godown/direct loading into truck.</p></td></tr><tr><td><table style='margin:5px 0 0; border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='10'><thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width:80px;'>S.No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 200px;'>" + CBTContainer + " </th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 70px;'>Size</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 150px;'>Seal No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 150px;'>BL No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 250px;'>Name of the importer</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 250px;'>Arrival Date</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 250px;'>Container/CBT From</th></tr></thead><tbody>");
                //  foreach (GateEntrySealCutting item in LstSeal)
                // {
                Html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width:80px;'>" + Index + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 200px;'>" + ContainerNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 70px;'>" + Size + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 150px;'>" + SealNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 150px;'>" + BLNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 250px;'>" + Importer + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 250px;'>" + ArrivalDate + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 250px;'>" + CBTFrom + "</td></tr>");
                // Index++;
                // }
                Html.Append("</tbody></table></td></tr></tbody></table><p style='font-size: 13px; margin: 0;'>No Objection for seal cutting & destuffing obtained from IS/liner is enclosed.</p><br/><br/><br/><table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr><td><h6 style='font-size: 13px; margin:0; font-weight: normal;'>Permitted</h6><h3 style='font-size: 15px; margin:0;'>Signature of Customs Official</h3></td><td><h3 style='font-size: 15px; margin:0;font-weight: normal; text-align:right;'>Yours faithfully,</h3></td></tr></tbody></table></td></tr></tbody></table>");

            }
            else if (OperationType == "Empty")
            {
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                Html.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
                Html.Append("<td width='10%' align='right'>");
                Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                Html.Append("<tr><td style='border:1px solid #333;'>");
                Html.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/CFS/01</div>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>TRUCK SLIP</label></td>");
                Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody><tr>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Html.Append("<tr><th style='text-align:left; font-size:12px; width:25%;'>SL.No. :</th><td style='font-size:12px;'>" + GateInNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; width:20%;'>Date :</th><td style='font-size:12px;'>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; text-align:right; width:40%;'>Entry Date :</th><td style='font-size:12px;'>" + LstSeal[0].ArrivalDate + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");


                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody><tr>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Html.Append("<tr><th style='text-align:left; font-size:12px; width:30%;'>Truck No. :</th><td style='font-size:12px;'>" + LstSeal[0].VehicleNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px;width:50%;'>Container/CBT No. :</th><td style='font-size:12px;'>" + ContainerNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; text-align:right; width:30%;'>Size :</th><td style='font-size:12px; width:21%;'>" + Size + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'><span style='font-size:12px;padding:0 5px;'>Purpose <u>" + Purpose + "</u></span></td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table style='border: 1px solid #000; width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%; font-size:8pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'>");
                Html.Append("<thead><tr><th colspan='12' style='border-bottom: 1px solid #000; font-size:14px; text-align:center; padding:10px;'>TO BE FILLED BY AGENT</th></tr>");
                Html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Sl. No.</th>");
                Html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Sub No./ Carting PNR No.</th>");
                Html.Append("<th colspan='4' width='33.3%;' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Cargo</th>");
                Html.Append("<th colspan='2' width='16.66666667%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th></tr></thead>");
                Html.Append("<tbody>");
                foreach (GateEntrySealCutting item in LstSeal)
                {
                    Html.Append("<tr><td colspan='2' width='16.66666667%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + Index + "</td> ");
                    Html.Append("<td colspan='4' width='33.3%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.ReferenceNo + "</td>");
                    Html.Append("<td colspan='4' width='33.3%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.CargoDescription + "</td>");
                    Html.Append("<td colspan='2' width='16.66666667%' style='font-size:7pt; text-align:center; padding:10px;'>" + item.NoOfUnits + "</td></tr>");
                    Index++;
                }
                Html.Append("</tbody>");
                Html.Append("</table></td>");

                Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0;'><table style='border-bottom:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                Html.Append("<thead><tr><th colspan='12' style='font-size:14px;text-align:center;padding:10px;border-bottom:1px solid #000;'>TO BE FILLED BY CFS</th></tr>");
                Html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Godown No.</th> ");
                Html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th>");
                Html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Gate Pass No.</th>");
                Html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>Signature of Shed Incharge</th></tr></thead>");
                Html.Append("<tbody>");
                foreach (GateEntrySealCutting item in LstSeal)
                {
                    Html.Append("<tr><td colspan='2' width='16.66666667%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.GodownNo + "</td>");
                    Html.Append("<td colspan='3' width='25%' style='border-right:1px solid #000;font-size:7pt;text-align:center;padding:10px;'>" + item.NoOfUnits + "</td> ");
                    Html.Append("<td colspan='3' width='25%' style='border-right:1px solid #000;font-size:7pt; text-align:center;padding:10px;'>" + string.Empty + "</td>");
                    Html.Append("<td colspan='4' width='33.3%' style='font-size:7pt; text-align:center;padding:10px;'></td></tr>");
                }
                Html.Append("</tbody>");
                Html.Append("</table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Name of the Importer/Exporter : " + LstSeal[0].Exporter + "</span></td></tr>");
                Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Name and Signature of CHA : " + CHA + "</span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 15px;'><u>AT GATE</u></th></tr>");
                Html.Append("<tr><th colspan='6' style='text-align: center;font-size: 15px;'>ALLOWED IN</th><th colspan='6' style='text-align: center;font-size: 15px;'>ALLOWED OUT</th></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='0'  style='border:1px solid #000;width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr>");
                Html.Append("<td colspan='6' width='50%' valign='top'><table cellpadding='5' style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Truck in time</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/></span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 13px;'>Signature of Gate I/C</th></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='6' width='50%' valign='top'><table cellpadding='5' style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Truck out time</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/></span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 13px;'>Signature of Gate I/C</th></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");

            }
            else if (OperationType == "Export" && ContainerType == "Empty")
            {
                string strDateTime = EntryDate;
                string[] dateTimeArray = strDateTime.Split(' ');
                string strDtae = dateTimeArray[0];

                string strTime = dateTimeArray[1];

                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                Html.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
                Html.Append("<td width='10%' align='right'>");
                Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                Html.Append("<tr><td style='border:1px solid #333;'>");
                Html.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/CFS/01</div>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>TRUCK SLIP</label></td>");
                Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody><tr>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Html.Append("<tr><th style='text-align:left; font-size:12px; width:25%;'>SL.No. :</th><td style='font-size:12px;'>" + GateInNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; width:20%;'>Date :</th><td style='font-size:12px;'>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; text-align:right; width:40%;'>Entry Date :</th><td style='font-size:12px;'>" + LstSeal[0].ArrivalDate + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");


                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody><tr>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Html.Append("<tr><th style='text-align:left; font-size:12px; width:30%;'>Truck No. :</th><td style='font-size:12px;'>" + LstSeal[0].VehicleNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px;width:50%;'>Container/CBT No. :</th><td style='font-size:12px;'>" + ContainerNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; text-align:right; width:30%;'>Size :</th><td style='font-size:12px; width:21%;'>" + Size + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'><span style='font-size:12px;padding:0 5px;'>Purpose <u>" + Purpose + "</u></span></td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table style='border: 1px solid #000; width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%; font-size:8pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'>");
                Html.Append("<thead><tr><th colspan='12' style='border-bottom: 1px solid #000; font-size:14px; text-align:center; padding:10px;'>TO BE FILLED BY AGENT</th></tr>");
                Html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Sl. No.</th>");
                Html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Sub No./ Carting PNR No.</th>");
                Html.Append("<th colspan='4' width='33.3%;' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Cargo</th>");
                Html.Append("<th colspan='2' width='16.66666667%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th></tr></thead>");
                Html.Append("<tbody>");
                foreach (GateEntrySealCutting item in LstSeal)
                {
                    Html.Append("<tr><td colspan='2' width='16.66666667%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + Index + "</td> ");
                    Html.Append("<td colspan='4' width='33.3%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.ReferenceNo + "</td>");
                    Html.Append("<td colspan='4' width='33.3%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.CargoDescription + "</td>");
                    Html.Append("<td colspan='2' width='16.66666667%' style='font-size:7pt; text-align:center; padding:10px;'>" + item.NoOfUnits + "</td></tr>");
                    Index++;
                }
                Html.Append("</tbody>");
                Html.Append("</table></td>");

                Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0;'><table style='border-bottom:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                Html.Append("<thead><tr><th colspan='12' style='font-size:14px;text-align:center;padding:10px;border-bottom:1px solid #000;'>TO BE FILLED BY CFS</th></tr>");
                Html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Godown No.</th> ");
                Html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th>");
                Html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Gate Pass No.</th>");
                Html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>Signature of Shed Incharge</th></tr></thead>");
                Html.Append("<tbody>");
                foreach (GateEntrySealCutting item in LstSeal)
                {
                    Html.Append("<tr><td colspan='2' width='16.66666667%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.GodownNo + "</td>");
                    Html.Append("<td colspan='3' width='25%' style='border-right:1px solid #000;font-size:7pt;text-align:center;padding:10px;'>" + item.NoOfUnits + "</td> ");
                    Html.Append("<td colspan='3' width='25%' style='border-right:1px solid #000;font-size:7pt; text-align:center;padding:10px;'>" + string.Empty + "</td>");
                    Html.Append("<td colspan='4' width='33.3%' style='font-size:7pt; text-align:center;padding:10px;'></td></tr>");
                }
                Html.Append("</tbody>");
                Html.Append("</table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Name of the Exporter : " + LstSeal[0].Exporter + "</span></td></tr>");
                Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Name and Signature of CHA : " + CHA + "</span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 15px;'><u>AT GATE</u></th></tr>");
                Html.Append("<tr><th colspan='6' style='text-align: center;font-size: 15px;'>ALLOWED IN</th><th colspan='6' style='text-align: center;font-size: 15px;'>ALLOWED OUT</th></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='0'  style='border:1px solid #000;width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr>");
                Html.Append("<td colspan='6' width='50%' valign='top'><table cellpadding='5' style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Truck in time</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'>" + strTime + "</td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'>" + LstSeal[0].ArrivalDate + "</td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/></span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 13px;'>Signature of Gate I/C</th></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='6' width='50%' valign='top'><table cellpadding='5' style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Truck out time</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/></span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 13px;'>Signature of Gate I/C</th></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");

            }
            else if (OperationType == "Export")

            {
                string strDateTime = EntryDate;
                string[] dateTimeArray = strDateTime.Split(' ');
                string strDtae = dateTimeArray[0];

                string strTime = dateTimeArray[1];

                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                Html.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
                Html.Append("<td width='10%' align='right'>");
                Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                Html.Append("<tr><td style='border:1px solid #333;'>");
                Html.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/CFS/01</div>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>TRUCK SLIP</label></td>");
                Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody><tr>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Html.Append("<tr><th style='text-align:left; font-size:12px; width:25%;'>SL.No. :</th><td style='font-size:12px;'>" + GateInNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; width:20%;'>Date :</th><td style='font-size:12px;'>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; text-align:right; width:40%;'>Entry Date :</th><td style='font-size:12px;'>" + LstSeal[0].ArrivalDate + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");


                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody><tr>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Html.Append("<tr><th style='text-align:left; font-size:12px; width:30%;'>Truck No. :</th><td style='font-size:12px;'>" + LstSeal[0].VehicleNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px;width:50%;'>Container/CBT No. :</th><td style='font-size:12px;'>" + ContainerNo + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='4' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                Html.Append("<tr><th style='font-size:12px; text-align:right; width:30%;'>Size :</th><td style='font-size:12px; width:21%;'>" + Size + "</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'><span style='font-size:12px;padding:0 5px;'>Purpose " + Purpose + "</span></td></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table style='border: 1px solid #000; width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%; font-size:8pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'>");
                Html.Append("<thead><tr><th colspan='12' style='border-bottom: 1px solid #000; font-size:14px; text-align:center; padding:10px;'>TO BE FILLED BY AGENT</th></tr>");
                Html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Sl. No.</th>");
                Html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Sub No./ Carting PNR No.</th>");
                Html.Append("<th colspan='4' width='33.3%;' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Cargo</th>");
                Html.Append("<th colspan='2' width='16.66666667%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th></tr></thead>");
                Html.Append("<tbody>");
                foreach (GateEntrySealCutting item in LstSeal)
                {
                    Html.Append("<tr><td colspan='2' width='16.66666667%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + Index + "</td> ");
                    Html.Append("<td colspan='4' width='33.3%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.ReferenceNo + "</td>");
                    Html.Append("<td colspan='4' width='33.3%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.CargoDescription + "</td>");
                    Html.Append("<td colspan='2' width='16.66666667%' style='font-size:7pt; text-align:center; padding:10px;'>" + item.NoOfUnits + "</td></tr>");
                    Index++;
                }
                Html.Append("</tbody>");
                Html.Append("</table></td>");

                Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0;'><table style='border-bottom:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                Html.Append("<thead><tr><th colspan='12' style='font-size:14px;text-align:center;padding:10px;border-bottom:1px solid #000;'>TO BE FILLED BY CFS</th></tr>");
                Html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Godown No.</th> ");
                Html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th>");
                Html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Gate Pass No.</th>");
                Html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>Signature of Shed Incharge</th></tr></thead>");
                Html.Append("<tbody>");
                foreach (GateEntrySealCutting item in LstSeal)
                {
                    Html.Append("<tr><td colspan='2' width='16.66666667%' style='border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + item.GodownNo + "</td>");
                    Html.Append("<td colspan='3' width='25%' style='border-right:1px solid #000;font-size:7pt;text-align:center;padding:10px;'>" + item.NoOfUnits + "</td> ");
                    Html.Append("<td colspan='3' width='25%' style='border-right:1px solid #000;font-size:7pt; text-align:center;padding:10px;'>" + string.Empty + "</td>");
                    Html.Append("<td colspan='4' width='33.3%' style='font-size:7pt; text-align:center;padding:10px;'></td></tr>");
                }
                Html.Append("</tbody>");
                Html.Append("</table></td>");
                Html.Append("</tr></tbody></table>");
                Html.Append("</td></tr>");

                Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Name of the Exporter : " + LstSeal[0].Exporter + "</span></td></tr>");
                Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Name and Signature of CHA : " + CHA + "</span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 15px;'><u>AT GATE</u></th></tr>");
                Html.Append("<tr><th colspan='6' style='text-align: center;font-size: 15px;'>ALLOWED IN</th><th colspan='6' style='text-align: center;font-size: 15px;'>ALLOWED OUT</th></tr>");

                Html.Append("<tr><td colspan='12'>");
                Html.Append("<table cellspacing='0' cellpadding='0'  style='border:1px solid #000;width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr>");
                Html.Append("<td colspan='6' width='50%' valign='top'><table cellpadding='5' style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Truck in time</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'>" + strTime + "</td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'>" + LstSeal[0].ArrivalDate + "</td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/></span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 13px;'>Signature of Gate I/C</th></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("<td colspan='6' width='50%' valign='top'><table cellpadding='5' style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Truck out time</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='1' style='font-size:12px;' width='50%' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:12px;' width='40%' valign='top'></td></tr>");
                Html.Append("<tr><td colspan='12'><span><br/><br/></span></td></tr>");
                Html.Append("<tr><th colspan='12' style='text-align: center;font-size: 13px;'>Signature of Gate I/C</th></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr>");
                Html.Append("</tbody></table>");
                Html.Append("</td></tr>");
                Html.Append("</tbody></table>");






                //Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                //Html.Append("<tr><td colspan='12'>");
                //Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                //Html.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
                //Html.Append("<td width='10%' align='right'>");
                //Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                //Html.Append("<tr><td style='border:1px solid #333;'>");
                //Html.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/CFS/01</div>");
                //Html.Append("</td></tr>");
                //Html.Append("</tbody></table>");
                //Html.Append("</td></tr>");
                //Html.Append("</tbody></table>");
                //Html.Append("</td></tr>");
                //Html.Append("<tr><td colspan='12'>");
                //Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                //Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cwccfs@gmail.com</label><br/><label style='font-size: 14px; font-weight:bold;'>TRUCK SLIP</label></td>");
                //Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                //Html.Append("</tbody></table>");
                //Html.Append("</td></tr>");
                //Html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody><tr><th style='font-size:13px;'>SL.No.</th>");
                //Html.Append("<td style='font-size:12px;'><u></u></td><th style='font-size:13px; text-align:right;'>Date</th>");
                //Html.Append("<td style='font-size:12px; width:10%;'><u></u></td></tr></tbody></table></td></tr>");
                //Html.Append("<tr><td colspan='12'>");
                //Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");               
                //Html.Append("<tr>");
                //Html.Append("<td colspan='3' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin:0; padding: 5px;'><tbody>");
                //Html.Append("<tr><th style='font-size:13px;'>Truck No.</th><td style='font-size:12px;'></td></tr>");
                //Html.Append("</tbody></table></td>");
                //Html.Append("<td colspan='3' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin:0; padding: 5px;'><tbody>");
                //Html.Append("<tr><th style='font-size:13px;'>Container No.</th><td style='font-size:12px;'>"+ContainerNo+"</td></tr>");
                //Html.Append("</tbody></table></td>");
                //Html.Append("<td colspan='3' width='33.3%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin:0; padding: 5px;'><tbody>");
                //Html.Append("<tr><th style='font-size:13px; text-align:right;'>Size</th><td style='font-size:12px; width:21%;'>"+Size+"</td></tr>");
                //Html.Append("</tbody></table></td>");
                //Html.Append("</tr>");
                //Html.Append("</tbody></table>");
                //Html.Append("</td></tr>");
                //Html.Append("<tr><td colspan='12'><span style='font-size:14px;'>Purpose <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u></span></td></tr>");
                //Html.Append("<tr><td colspan ='12'>");
                //Html.Append("<table style='border:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                //Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%; font-size:8pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'>");
                //Html.Append("<thead><tr><th colspan='12' style='font-size:14px; text-align:center; border-bottom:1px solid #000;padding:10px;'>TO BE FILLED BY AGENT</th></tr>");
                //Html.Append("<tr><th style='font-weight:600; text-align:center; border: 1px solid #000;border-left:none;padding:10px;'>Sl. No.</th> ");
                //Html.Append("<th style='font-weight:600; text-align:center; border: 1px solid #000;padding:10px;'>Sub No./ Carting <br/> PNR No.</th>");
                //Html.Append("<th style='font-weight:600; text-align:center; border: 1px solid #000;padding:10px;'>Cargo</th>");
                //Html.Append("<th style='font-weight:600; text-align:center; border: 1px solid #000;padding:10px;border-right:none;'>No. of Units</th></tr></thead>");
                //Html.Append("<tbody>");
                //foreach (GateEntrySealCutting item in LstSeal)
                //{
                //    Html.Append("<tr><td style='text-align:center; border: 1px solid #000;border-left:none;border-bottom:none;padding:10px;'>" + Index + "</td> ");
                //    Html.Append("<td style='text-align:center; border: 1px solid #000;border-bottom:none;padding:10px;'>" + item.ReferenceNo + "</td>");
                //    Html.Append("<td style='text-align:center; border: 1px solid #000;border-bottom:none;padding:10px;'>"+item.CargoDescription+"</td>");
                //    Html.Append("<td style='text-align:center; border: 1px solid #000;border-bottom:none;border-right:none;padding:10px;'>"+item.NoOfUnits+"</td></tr>");
                //    Index++;
                //}
                //Html.Append("</tbody>");
                //Html.Append("</table></td>");
                //Html.Append("<td colspan='6' width='50%' valign='top' style='padding:0;'><table style='width:100%; font-size:8pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'>");
                //Html.Append("<thead><tr><th colspan='12' style='font-size:14px; text-align:center; border-bottom:1px solid #000;padding:10px;'>TO BE FILLED BY CFS</th></tr>");
                //Html.Append("<tr><th style='font-weight:600; text-align:center; border: 1px solid #000;border-left:none;padding:10px;'>Godown No.</th>");
                //Html.Append("<th style='font-weight:600; text-align:center; border: 1px solid #000;padding:10px;'>No Of units</th>");
                //Html.Append("<th style='font-weight:600; text-align:center; border: 1px solid #000;padding:10px;'>Gate Pass No.</th>");
                //Html.Append("<th style='font-weight:600; text-align:center; border: 1px solid #000;padding:10px;border-right:none;'>Signature of <br/> Shed Incharge</th></tr></thead><tbody>");
                //foreach(GateEntrySealCutting item in LstSeal)
                //{
                //    Html.Append("<tr><td style='text-align:center; border: 1px solid #000;border-bottom:none;border-left:none;padding:10px;'>"+ string.Empty +"</td>");
                //    Html.Append("<td style='text-align:center; border: 1px solid #000;border-bottom:none;padding:10px;'>"+item.NoOfUnits+"</td> ");
                //    Html.Append("<td style='text-align:center; border: 1px solid #000;border-bottom:none;padding:10px;'>"+string.Empty+"</td>");
                //    Html.Append("<td style='text-align:center; border: 1px solid #000;border-bottom:none;border-right:none;padding:10px;'></td></tr>");
                //}

                //Html.Append("</tbody></table></td>");
                //Html.Append("</tr></tbody></table>");
                //Html.Append("</td></tr>");
                //Html.Append("<tr><td colspan='12'><span style='font-size:14px;'>Name of the Importer/Exporter : "+LstSeal[0].Exporter+"</span></td></tr>");
                //Html.Append("<tr><td colspan='12'><span style='font-size:14px;'>Name and Signature of CHA : "+ CHA +"</span></td></tr>");
                //Html.Append("<tr><th colspan='12' style='text-align: center; font-size:15px;'><u>AT GATE</u></th></tr>");
                //Html.Append("<tr><th colspan='6' style='text-align: center; font-size: 15px;'>ALLOWED IN</th><th colspan='6' style='text-align:center; font-size: 15px; '>ALLOWED OUT</th></tr>");
                //Html.Append("<tr><td colspan='12'>");
                //Html.Append("<table cellspacing='0' cellpadding='5'  style='border: 1px solid #000;width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                //Html.Append("<tr>");
                //Html.Append("<td colspan='6' width='50%' valign='top'><table style='width:100%; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'><tbody>");
                //Html.Append("<tr><td colspan='1' style='font-size:13px;' width='50% ' valign='top'>Truck in time</td><td>:</td><td colspan='2' style='font-size:13px;' width='40% ' valign='top'></td></tr>");
                //Html.Append("<tr><td colspan='1' style='font-size:13px;' width='50% ' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:13px;' width='40% ' valign='top'></td></tr>");
                //Html.Append("<tr><td colspan='1' style='font-size:13px; ' width='50% ' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:13px; ' width='40% ' valign='top'></td></tr>");
                //Html.Append("</tbody></table></td>");
                //Html.Append("<td colspan='6' width='50%' valign='top'><table style='width: 100%; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'><tbody>");
                //Html.Append("<tr><td colspan='1' style='font-size:13px; ' width='50%' valign='top'>Truck out time</td><td>:</td><td colspan='2' style='font-size:13px;' width='40% ' valign='top'></td></tr>");
                //Html.Append("<tr><td colspan='1' style='font-size:13px; ' width='50% ' valign='top'>Date</td><td>:</td><td colspan='2' style='font-size:13px;' width='40% ' valign='top'></td></tr>");
                //Html.Append("<tr><td colspan='1' style='font-size:13px; ' width='50% ' valign='top'>Seal No.</td><td>:</td><td colspan='2' style='font-size:13px;' width='40% ' valign='top'></td></tr>");
                //Html.Append("</tbody></table></td>");
                //Html.Append("</tr>");
                //Html.Append("<tr><td colspan='12'><span><br/><br/></span></td></tr>");
                //Html.Append("<tr><th colspan='6' style='text-align: center; font-size: 13px;'>Signature of Gate I/C</th><th colspan='6' style='text-align: center; font-size: 13px;'>Signature of Gate I/C</th></tr>");
                //Html.Append("</tbody></table>");
                //Html.Append("</td></tr>");
                //Html.Append("</tbody></table>");

            }

            else
            {
                Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody> <tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='60%' valign='top' align='center'><h1 style='font-size: 22px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Government of India Undertaking)</label> </td><td valign='top'><img align='right' src='ISO' width='100'/></td></tr>           <tr><td colspan='12'><table width='100%'><tbody><tr> <th colspan='6' width='50%'><h6 style='margin:0;'>Manager - CFS/The Superintendent(Customs)</h6><h6 style='margin:0;'>Container Freight Station, Kukatpally</h6><h6 style='margin:0;'>IDPL Road, Hyderabad - 37</h6><h6 style='margin:0;'>Email - cfs.kukatpally@cewacor.nic.in</h6></th> <td colspan='6' width='50%' align='right' style='font-size:12px;'><b>Date:</b>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td> </tr></tbody></table></td></tr>                   <tr><td><span><br/></span></td></tr> <tr><td colspan='3' style='text-align: center;'><h2 style='font-size: 16px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Sub : Request for Seal Cutting of " + hdrCont + " " + CBTContainer + " - Reg.</h2></td></tr> <tr><td colspan='3'><table style='width:100%;'cellspacing='0' cellpadding='0'><tbody><tr><td><p style='font-size:12px; margin-bottom:0;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> With reference to the above cited subject kindly arrange the following " + hdrCont + " " + CBTContainer + " for the Customs Examinations for Factory de-stuffing/CFS de-stuffing into godown/direct loading into truck.</p></td></tr><tr><td><table style='margin:5px 0 0; border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='10'><thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width:80px;'>S.No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 200px;'>" + CBTContainer + " </th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 70px;'>Size</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 150px;'>Seal No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 150px;'>BL No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 250px;'>Name of the importer</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 11px; text-align: center; width: 250px;'>Arrival Date</th></tr></thead><tbody>");
                //  foreach (GateEntrySealCutting item in LstSeal)
                // {
                Html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width:80px;'>" + Index + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 200px;'>" + ContainerNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 70px;'>" + Size + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 150px;'>" + SealNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 150px;'>" + BLNo + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 250px;'>" + Importer + "</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 250px;'>" + ArrivalDate + "</td></tr>");
                // Index++;
                // }
                Html.Append("</tbody></table></td></tr></tbody></table><p style='font-size: 13px; margin: 0;'>No Objection for seal cutting & destuffing obtained from IS/liner is enclosed.</p><br/><br/><br/><table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr><td><h6 style='font-size: 13px; margin:0; font-weight: normal;'>Permitted</h6><h3 style='font-size: 15px; margin:0;'>Signature of Customs Official</h3></td><td><h3 style='font-size: 15px; margin:0;font-weight: normal; text-align:right;'>Yours faithfully,</h3></td></tr></tbody></table></td></tr></tbody></table>");
            }

            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                Rh.HeadOffice = this.HeadOffice;
                Rh.HOAddress = this.HOAddress;
                Rh.ZonalOffice = this.ZonalOffice;
                Rh.ZOAddress = this.ZOAddress;
                Rh.GeneratePDF(Path, Html.ToString());
            }
            return "/Docs/" + Session.SessionID + "/SealCutting" + EntryId + ".pdf";
        }
        #endregion

        #region Carting Application
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintCartingApp(int CartingAppId)
        {
            int Count = 0;
            string Serial = "";
            if (CartingAppId > 0)
            {
                List<Hdb_PrintCA> lstCA = new List<Hdb_PrintCA>();
                Hdb_ExportRepository objER = new Hdb_ExportRepository();
                StringBuilder objSB = new StringBuilder();
                objER.PrintCartingApp(CartingAppId);
                if (objER.DBResponse.Data != null)
                {
                    if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                        Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                    if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/CartingApp" + CartingAppId + ".pdf"))
                        System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/CartingApp" + CartingAppId + ".pdf");
                    lstCA = (List<Hdb_PrintCA>)objER.DBResponse.Data;
                    string Html = "";
                    Html = "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><td colspan='12'>";
                    Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
                    Html += "<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>";
                    Html += "<td width='9%' align='right'>";
                    Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
                    Html += "<tr><td style='border:1px solid #333;'>";
                    Html += "<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/CFS/04</div>";
                    Html += "</td></tr>";
                    Html += "</tbody></table>";
                    Html += "</td></tr>";
                    Html += "</tbody></table>";
                    Html += "</td></tr>";
                    Html += "</tbody></table>";

                    Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><td colspan='12'>";
                    Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>";
                    Html += "<td width='100%' valign='top' align='center'><h1 style='font-size: 30px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:14px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:14px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 16px; font-weight:bold;'>CARTING APPLICATION</label></td>";
                    Html += "<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>";
                    Html += "</tbody></table>";
                    Html += "</td></tr>";
                    Html += "</tbody></table>";

                    Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><td colspan='12'>";
                    Html += "<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr>";
                    Html += "<td colspan='6' width='50%'>";
                    Html += "<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><th width='28%' align='left' style='font-size:13px;'>Carting No.</th> <td colspan='7' style='font-size:12px;'><u>" + lstCA[0].CartingNo + "</u></td></tr>";
                    Html += "</tbody></table>";
                    Html += "</td>";
                    Html += "<td colspan='6' width='50%'>";
                    Html += "<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><th style='font-size:13px; text-align:right;'>Date</th> <td style='font-size:12px; width:18%;'><u>" + lstCA[0].CartingDt + "</u></td></tr>";
                    Html += "</tbody></table>";
                    Html += "</td>";
                    Html += "</tr>";
                    Html += "<tr><td><span><br/></span></td></tr>";
                    Html += "<tr><td colspan='12' style='font-size:12px;'>(To be assigned by CWC Official)</td></tr>";
                    Html += "</tbody></table>";
                    Html += "</td></tr>";
                    Html += "<tr><td colspan='12'><span style='font-size:14px;'>Please receive the following cargo for Export as FCL/LCL</span></td></tr>";
                    Html += "</tbody></table>";

                    Html += "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr>  <th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Sl.No.</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Shipping Bill No. & Date</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Name of Exporter</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Cargo</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Commodity</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Marks & No</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>FOB Value</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Pkg Type</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>No. of Units</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Weight</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>No. of TEUS.</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>SCMTR Package Type</th></tr></thead><tbody>";
                    lstCA.ForEach(item =>
                    {
                        Serial = (Serial == "") ? (++Count).ToString() : ((++Count).ToString());
                        Html += "<tr><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + Serial + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ShipBillNo + " , " + item.ShipBillDate + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Exporter + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.CargoDescription + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Commodity + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.MarksAndNo + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.FoBValue + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.PkgType + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.NoOfUnits + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Weight + "</td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'></td><td colspan='2' style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>"+ item.SCMTRPackageType+"</td></tr>";
                    });
                    Html += "</tbody></table>";
                    Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><td colspan='12'>";
                    Html += "<table style='width: 100%; border-bottom: 2px solid #333;' cellspacing='0' cellpadding='5'><tbody>";
                    Html += "<tr><td><span><br/></span></td></tr>";
                    Html += "<tr><th colspan='12' style='font-size:15px; text-align:right;'>Signature of Exporter/CHA</th></tr>";
                    Html += "</tbody></table>";
                    Html += "</td></tr>";
                    Html += "</tbody></table>";

                    Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                    Html += "<tr><td colspan='12' style='text-align: center;'>";
                    Html += "<h2 style='font-size: 16px; padding-bottom: 10px; text-align: center; margin: 0; padding: 0;'><u>AT OFFICE</u></h2>";
                    Html += "</td></tr>";
                    Html += "<tr><td colspan='12' style='font-size:14px;'>Accepted for carting at Godown No_________ <u></u></td></tr>";
                    Html += "<tr><th colspan='12' style='font-size:15px; text-align: right;'>Shift Incharge</th></tr>";
                    Html += "<tr><td><span><br/></span></td></tr>";
                    Html += "<tr><td colspan='12' style='text-align: center;'>";
                    Html += "<h2 style='font-size: 16px; padding-bottom: 10px; text-align: center; margin: 0; padding: 0;'><u>AT GODOWN</u></h2>";
                    Html += "</td></tr>";

                    Html += "<tr><td colspan='12'>";
                    Html += "<table style='border: 1px solid #000;width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>";
                    Html += "<thead><tr><th style='font-weight:600; text-align:center; padding: 10px;'>Receipt</th>";
                    Html += "<th style='font-weight:600; text-align:center; padding:10px;'>Cargo</th>";
                    Html += "<th style='font-weight:600; text-align:center; padding:10px;'>Marks & Nos.</th>";
                    Html += "<th style='font-weight:600; text-align:center; padding:10px;'>Pkg Type</th>";
                    Html += "<th style='font-weight:600; text-align:center; padding:10px;'>No. of Units</th>";
                    Html += "<th style='font-weight:600; text-align:center; padding:10px;'>Remarks</th></tr></thead>";
                    Html += "<tbody>";
                    lstCA.ForEach(item =>
                    {
                        Html += "<tr><td style='text-align:center; padding:10px;'></td><td style='text-align:center; padding:10px;'></td><td style='text-align:center; padding:10px;'></td><td style='text-align:center; padding:10px;'></td><td style='text-align:center; padding:10px;'></td></tr>";
                    });
                    Html += "</tbody>";
                    Html += "</table>";
                    Html += "</td></tr>";
                    Html += "<tr><th colspan='12' style='font-size:15px; text-align:right;'>Shed I/c</th></tr>";
                    Html += "<tr><td colspan='12' style='text-align: center;'>";
                    Html += "<h2 style='font-size: 16px; padding-bottom: 10px; text-align: center; margin: 0; padding: 0;'><u>AT OFFICE</u></h2>";
                    Html += "</td></tr>";
                    Html += "<tr><td colspan='12' style='font-size:14px;'>Entered in Carting Register at Folio No________ <u></u></td></tr>";
                    Html += "<tr><th colspan='12' style='font-size:14px; text-align: right;'>Office Assistant</th></tr>";
                    Html += "</tbody></table>";

                    //Html += "<tr><th style='padding-bottom:20px;text-align:left;'>CHA Name:</th><td colspan='6' style='padding-bottom:20px;text-align:left;'>" + lstCA[0].CHAName + "</td></tr>";
                    //Html += "";
                    Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                    Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                    using (var rh = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                    {
                        rh.HeadOffice = this.HeadOffice;
                        rh.HOAddress = this.HOAddress;
                        rh.ZonalOffice = this.ZonalOffice;
                        rh.ZOAddress = this.ZOAddress;
                        rh.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/CartingApp" + CartingAppId + ".pdf", Html);
                    }
                    return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/CartingApp" + CartingAppId + ".pdf" });
                }
                else
                    return Json(new { Status = -1, Message = "Error" });

            }
            else
                return Json(new { Status = -1, Message = "Error" });
        }

        #endregion

        #region Container Stuffing

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintContainerStuffing(int ContainerStuffingId)
        {
            Hdb_ExportRepository ObjER = new Hdb_ExportRepository();
            HDBContainerStuffing ObjStuffing = new HDBContainerStuffing();
            ObjER.GetContainerStuffForPrint(ContainerStuffingId);
            if (ObjER.DBResponse.Data != null)
            {
                ObjStuffing = (HDBContainerStuffing)ObjER.DBResponse.Data;
                string Path = GeneratePdfForContainerStuff(ObjStuffing, ContainerStuffingId);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }

        }
        [NonAction]
        public string GeneratePdfForContainerStuff(HDBContainerStuffing ObjStuffing, int ContainerStuffingId)
        {
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/HDBContainerStuffing" + ContainerStuffingId + ".pdf";
            string Html = "";
            string ShippingBillNo = "", ShippingDate = "", StuffWeight = "", Exporter = "", ShippingLine = "", Fob = "", CHA = "",
            StuffQuantity = "", SLNo = "", CFSCode = "", ContainerNo = "", CustomSeal = "", Commodity = "", EquipmentSealType="";

            String Consignee = ""; int SerialNo = 1;
            if (ObjStuffing.LstStuffingDtl.Count() > 0)
            {
                ObjStuffing.LstStuffingDtl.Select(x => new { ShippingBillNo = x.ShippingBillNo }).Distinct().ToList().ForEach(item =>
                {
                    ShippingBillNo = (ShippingBillNo == "" ? ((item.ShippingBillNo) + " ") : (item.ShippingBillNo + "<br/>" + item.ShippingBillNo + " "));
                    /*   if (ShippingBillNo == "")
                           ShippingBillNo = item.ShippingBillNo + " ";
                       else
                           ShippingBillNo += "," + item.ShippingBillNo; */
                });

                ObjStuffing.LstStuffingDtl.Select(x => new { ShippingDate = x.ShippingDate }).Distinct().ToList().ForEach(item =>
                {

                    ShippingDate = (ShippingDate == "" ? (item.ShippingDate) : (item.ShippingDate));
                    /*  if (ShippingDate == "")
                          ShippingDate = item.ShippingDate;
                      else
                          ShippingDate += "," + item.ShippingDate;*/
                });

                ObjStuffing.LstStuffingDtl.Select(x => new { Exporter = x.Exporter }).Distinct().ToList().ForEach(item =>
                {
                    if (Exporter == "")
                        Exporter = item.Exporter;
                    else
                        Exporter += "," + item.Exporter;
                });

                ObjStuffing.LstStuffingDtl.Select(x => new { Consignee = x.Consignee }).Distinct().ToList().ForEach(item =>
                {
                    if (Consignee == "")
                        Consignee = item.Consignee;
                    else
                        Consignee += "," + item.Consignee;
                });

                ObjStuffing.LstStuffingDtl.Select(x => new { ShippingLine = x.ShippingLine }).Distinct().ToList().ForEach(item =>
                {

                    if (ShippingLine == "")
                        ShippingLine = item.ShippingLine;
                    else
                        ShippingLine += "," + item.ShippingLine;
                });
                ObjStuffing.LstStuffingDtl.Select(x => new { CHA = x.CHA }).Distinct().ToList().ForEach(item =>
                {
                    if (CHA == "")
                        CHA = item.CHA;
                    else
                        CHA += "," + item.CHA;
                });

                //StuffWeight = (ObjStuffing.LstStuffingDtl.Sum(x => x.StuffWeight) > 0) ? (ObjStuffing.LstStuffingDtl.Sum(x => x.StuffWeight)).ToString() : "";
                //Fob = (ObjStuffing.LstStuffingDtl.Sum(x => x.Fob) > 0) ? (ObjStuffing.LstStuffingDtl.Sum(x => x.Fob)).ToString() : "";
                StuffQuantity = (ObjStuffing.LstStuffingDtl.Sum(x => x.StuffQuantity) > 0) ? (ObjStuffing.LstStuffingDtl.Sum(x => x.StuffQuantity)).ToString() : "";
                ObjStuffing.LstStuffingDtl.ToList().ForEach(item =>
                {
                    //SLNo = SLNo + SerialNo + "<br/>";
                    CFSCode = (CFSCode == "" ? (item.CFSCode) : CFSCode == item.CFSCode ? CFSCode : (CFSCode + "<br/>" + item.CFSCode));
                    ContainerNo = (ContainerNo == "" ? (item.ContainerNo) : ContainerNo == item.ContainerNo ? ContainerNo : (ContainerNo + "<br/>" + item.ContainerNo));
                    CustomSeal = (CustomSeal == "" ? (item.CustomSeal) : CustomSeal == item.CustomSeal ? CustomSeal : (CustomSeal + "<br/>" + item.CustomSeal));
                    Commodity = (Commodity == "" ? (item.CommodityName) : Commodity == item.CommodityName ? Commodity : (Commodity + "<br/>" + item.CommodityName));

                    EquipmentSealType = (EquipmentSealType == "" ? (item.EquipmentSealType) : EquipmentSealType == item.EquipmentSealType ? EquipmentSealType : (EquipmentSealType + "<br/>" + item.EquipmentSealType));
                    //SerialNo++;
                });
                //SLNo.Remove(SLNo.Length - 1);


                Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'>";

                Html += "<thead>";
                Html += "<tr><td colspan='12'>";
                Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
                Html += "<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>";
                Html += "<td width='8%' align='right'>";
                Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
                Html += "<tr><td style='border:1px solid #333;'>";
                Html += "<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/CFS/15</div>";
                Html += "</td></tr>";
                Html += "</tbody></table>";
                Html += "</td></tr>";
                Html += "</tbody></table>";
                Html += "</td></tr>";

                Html += "<tr><td colspan='12'>";
                Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                Html += "<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>";
                Html += "<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>CONTAINER STUFFING SHEET(FCL/LCL)</label></td>";
                Html += "<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>";
                Html += "</tbody></table>";
                Html += "</td></tr>";
                Html += "</thead>";

                Html += "<tbody>";
                Html += "<tr><td colspan='12'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><th colspan='1' width='3%' style='padding:3px;text-align:left;'>Sl.No</th><td colspan='10' width='6%' style='padding:3px;text-align:left;'>" + ObjStuffing.StuffingNo + "</td><th colspan='10' width='8%'></th><th colspan='10' width='40%' style='padding:3px;text-align:right;'>Date</th><td colspan='1' width='8%' style='padding:3px;text-align:right;'>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td></tr></tbody></table></td></tr>";
                Html += "<tr><td colspan='12'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody> <tr> <td colspan='4' width='33.33333333333333%'><b>Container No.</b> <u>" + ContainerNo + "</u></td>  <td colspan='4' width='33.33333333333333%' align='center'><b>CFS Code No.</b> <u>" + CFSCode + "</u></td>  <td colspan='4' width='33.33333333333333%' align='right'><b>Godown No / Bay No.</b> <u>" + ObjStuffing.GodownName + "</u></td> </tr> </tbody></table></td></tr>";
                //Html += "<tr><td colspan='12'><p style='font-size:9pt; margin:0 0 10px;'><b>Container No.</b> <u>" + ContainerNo + "</u> <b>CFS Code No.</b> <u>" + CFSCode + "</u> <b>Godown No / Bay No.</b> <u>" + ObjStuffing.GodownName + "</u> </p></td></tr>";
                Html += "<tr><td colspan='12'><p style='font-size:9pt; margin:0 0 10px;'><b>Shhiping Agent</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Shipping Line</b> <u>" + ShippingLine + "</u> <b>Size</b> <u>" + ObjStuffing.Size + "</u> <b>Shipping Line Seal No.</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> </p></td></tr>";
                Html += "<tr><td colspan='12'><p style='font-size:9pt; margin:0 0 10px;'><b>Vessel</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Country of Origin</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>VIA No.</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Voyage</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Customs Seal No.</b> <u>" + CustomSeal + "" + "</u> </p></td></tr>";

                Html += "<tr><td colspan='12'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody> <tr> <td colspan='6' width='50%'><b>Final Destination Location</b> <u>" + ObjStuffing.FinalDestinationLocation + "" + "</u></td>  <td colspan='6' width='50%' align='right'><b>Equipment Seal Type</b> <u>" + EquipmentSealType + "" + "</u></td> </tr> </tbody></table></td></tr>";

                //Html += "<tr><td colspan='12'><p style='font-size:9pt; margin:0 0 10px;'><b>Final Destination Location</b> <u>" + ObjStuffing.FinalDestinationLocation + "" + "</u> </p></td></tr>";
                //Html += "<tr><td colspan='12'><p style='font-size:9pt; margin:0 0 10px;'><b>Equipment Seal Type</b> <u>" + EquipmentSealType + "" + "</u> </p></td></tr>";

                Html += "<tr><td colspan='12' style='padding-top:20pt;'>";
                Html += "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>";
                Html += "<thead>";
                Html += "<tr><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>S. No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Shipping Bill No. and Date</th> <th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Exporter</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Consignee</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Name Of Goods</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Carting No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>No.of Pkgs Stuffed</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Gross Weight in Mts</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Value as per S/B INR(in lacs)</th><th colspan='10' style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Tally</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Total</th></tr>";
                Html += "</thead>";
                Html += "<tbody>";

                //LOOP START
                ObjStuffing.LstStuffingDtl.ToList().ForEach(item =>
                {
                    Html += "<tr><td style='border:1px solid #000;padding:3px;text-align:center;'>" + SerialNo++ + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.ShippingBillNo + " " + item.ShippingDate + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.Exporter + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.Consignee + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.CommodityName + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.CartingRegNo + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.StuffQuantity + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.StuffWeight + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.Fob + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:center;'>-</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:center;'>-</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td></tr>";
                });

                //LOOP END

                Html += "<tr><td colspan='20' style='border:1px solid #000;'><table cellspacing='0' cellpadding='5' style='width:100%; margin: 0; padding: 5px; font-size:8pt;'><tbody><tr><td colspan='16' width='80%'></td><th style='border-right:1px solid #000;padding:3px;text-align:right;'>Grand Total</th><td style='padding:3px;text-align:right;'>" + StuffQuantity + "</td></tr></tbody></table></td></tr>";
                Html += "<tr><td colspan='12' style='border:1px solid #000;padding:3px;text-align:left;'>Variation observed if Any</td></tr>";
                Html += "<tr><td colspan='12'><span><br/></span></td></tr>";
                Html += "<tr><td colspan='12' style='padding:3px;text-align:left;'>Signature and designation <br/> with date & Seal</td></tr>";
                Html += "</tbody></table>";
                Html += "</td></tr>";

                Html += "<tr><td colspan='12' style='padding-top:100pt;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;'>Representative/Surveyor <br/> Shipping Agent/Line/CHA</td><td style='text-align:left;'>Shed Asst. <br/> CWC.CFS</td><td style='text-align:left;'>Shed I/c <br/> CWC.CFS</td><td style='text-align:center;'>Rep/Surveyor of Handling & <br/> Transport Contractor</td><td style='text-align:center;'>Preventive Officer of Customs</td></tr></tbody></table></td></tr>";

                Html += "</tbody></table>";


            }

            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }

            // if (Convert.ToInt32(Session["BranchId"]) == 1)
            // {
            //Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>";

            //Html += "<tr><td colspan='4'>";
            //Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
            //Html += "<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>";
            //Html += "<td width='8%' align='right'>";
            //Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
            //Html += "<tr><td style='border:1px solid #333;'>";
            //Html += "<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/CFS/15</div>";
            //Html += "</td></tr>";
            //Html += "</tbody></table>";
            //Html += "</td></tr>";
            //Html += "</tbody></table>";
            //Html += "</td></tr>";

            //Html += "<tr><td colspan='4'>";
            //Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
            //Html += "<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>";
            //Html += "<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cwccfs@gmail.com</label><br/><label style='font-size: 14px; font-weight:bold;'>CONTAINER STUFFING SHEET(FCL/LCL)</label></td>";
            //Html += "<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>";
            //Html += "</tbody></table>";
            //Html += "</td></tr>";

            //Html += "</thead>";
            //Html += "<tbody>  <tr><td colspan='4'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><th colspan='1' width='3%' style='padding:3px;text-align:left;'>Sl.No</th><td colspan='10' width='5%' style='padding:3px;text-align:left;'>" + ObjStuffing.StuffingNo + "</td><th colspan='10' width='8%'></th><th colspan='10' width='40%' style='padding:3px;text-align:right;'>Date</th><td colspan='1' width='8%' style='padding:3px;text-align:right;'>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td></tr></tbody></table></td></tr>   <tr><td colspan='4'><p style='font-size:9pt; margin:0 0 10px;'><b>Container No.</b> <u>" + ContainerNo + "</u> <b>CFS Code No.</b> <u>" + CFSCode + "</u> <b>Godown No / Bay No.</b> <u>" + ObjStuffing.GodownName + "</u> </p></td></tr>      <tr><td colspan='4'><p style='font-size:9pt; margin:0 0 10px;'><b>Shhiping Agent</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Shipping Line</b> <u>" + ShippingLine + "</u> <b>Size</b> <u>" + ObjStuffing.Size + "</u> <b>Shipping Line Seal No.</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> </p></td></tr>      <tr><td colspan='4'><p style='font-size:9pt; margin:0 0 10px;'><b>Vessel</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Country of Origin</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>VIA No.</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Voyage</b> <u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u> <b>Customs Seal No.</b> <u>" + CustomSeal + "" + "</u> </p></td></tr>  <tr><td colspan='4' style='padding-top:20pt;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>S. No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Shipping Bill No. and Date</th> <th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Exporter</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Consignee</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Name Of Goods</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Carting No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>No.of Pkgs Stuffed</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Gross Weight in Mts</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Value as per S/B INR(in lacs)</th><th colspan='10' style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Tally</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Total</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:3px;text-align:center;'>" + SLNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ShippingBillNo + ShippingDate + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Exporter + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Consignee + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Commodity + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>Carting No - [DATA]</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + StuffQuantity + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + StuffWeight + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Fob + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:center;'>-</td><td style='border:1px solid #000;padding:3px;text-align:center;'>-</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td></tr><tr><td colspan='20' style='border:1px solid #000;'><table cellspacing='0' cellpadding='5' style='width:100%; margin: 0; padding: 5px; font-size:8pt;'><tbody><tr><td colspan='16' width='80%'></td><th style='border-right:1px solid #000;padding:3px;text-align:right;'>Grand Total</th><td style='padding:3px;text-align:right;'>" + StuffQuantity + "</td></tr></tbody></table></td></tr><tr><td colspan='12' style='border:1px solid #000;padding:3px;text-align:left;'>Variation observed if Any</td></tr> <tr><td colspan='12'><span><br/></span></td></tr><tr><td colspan='12' style='padding:3px;text-align:left;'>Signature and designation <br/> with date & Seal</td></tr></tbody></table></td></tr><tr><td colspan='4' style='padding-top:100pt;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;'>Representative/Surveyor <br/> Shipping Agent/Line/CHA</td><td style='text-align:left;'>Shed Asst. <br/> CWC.CFS</td><td style='text-align:left;'>Shed I/c <br/> CWC.CFS</td><td style='text-align:center;'>Rep/Surveyor of Handling & <br/> Transport Contractor</td><td style='text-align:center;'>Preventive Officer of Customs</td></tr></tbody></table></td></tr></tbody></table>";
            //// }
            //// else
            //// {
            ////    Html += "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='width:20%;text-align:right;'><img src='IMGSRC' style='width:50%;' /></th><th style='width:60%;font-weight:600;text-align:center;'><span style='font-size:10pt;'>CENTRAL WAREHOUSING CORPORATION</span><br/>(A Govt. of India Undertaking)</th><th style='text-align:center;'>Container Freight Station<br/><br/>_____________________</th></tr></thead><tbody><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>S.No</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ObjStuffing.StuffingNo + "</td><td rowspan='2' style='width:60%;font-weight:600;text-align:center;'>FORMAT FOR STUFFING SHEET(FCL/LCL)<br/><span style='border-bottom:1px solid #000;'>CONTAINER STUFFING SHEET</span></td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Date</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td></tr><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Size</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ObjStuffing.Size + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Godown</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ObjStuffing.GodownName + "</td></tr></tbody></table></td></tr><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Shipping Bill No.</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ShippingBillNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Shipping Bill Date:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ShippingDate + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Gross Weight:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + StuffWeight + "</td></tr><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Exporter:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Exporter + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Shipping Line:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ShippingLine + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>FOBValue(INR):</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Fob + "</td></tr>			<tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Consignee/CHA:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + CHA + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Destination:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>No. of Packages Stuffed:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + StuffQuantity + "</td></tr></tbody></table></td></tr><tr><td colspan='3' style='padding-top:20pt;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>S. No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>CFS Code</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Container No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Commodity</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Customs Seal</th><th colspan='10' style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Tally</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Total</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:3px;text-align:center;'>" + SLNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + CFSCode + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Commodity + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + CustomSeal + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:center;'>-</td><td style='border:1px solid #000;padding:3px;text-align:center;'>-</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td></tr><tr><td colspan='10'></td><td colspan='4' style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Grand Total</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + StuffQuantity + "</td></tr><tr><td colspan='15' style='padding:3px;text-align:left;'>Variation observed if Any</td></tr></tbody></table></td></tr><tr><td colspan='3' style='padding-top:100pt;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:center;'>Signature & <br/>Designation with<br/>Date and Seal</td><td style='text-align:center;'>Rep./Surveyor/S.<br/>Agent/Line/CHA</td><td style='text-align:center;'>Shed I/C CWC-CFS</td><td style='text-align:center;'>Rep./Surveyor of H & T<br/>Contractor</td><td style='text-align:center;'>Preventive Officer of Customs</td></tr></tbody></table></td></tr></tbody></table>";
            ////}
            //// Html += "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='width:20%;text-align:right;'><img src='IMGSRC' style='width:50%;' /></th><th style='width:60%;font-weight:600;text-align:center;'><span style='font-size:10pt;'>CENTRAL WAREHOUSING CORPORATION</span><br/>(A Govt. of India Undertaking)</th><th style='text-align:center;'>Container Freight Station<br/><br/>_____________________</th></tr></thead><tbody><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>S.No</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ObjStuffing.StuffingNo + "</td><td rowspan='2' style='width:60%;font-weight:600;text-align:center;'>FORMAT FOR STUFFING SHEET(FCL/LCL)<br/><span style='border-bottom:1px solid #000;'>CONTAINER STUFFING SHEET</span></td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Date</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + DateTime.Now.ToString("dd/MM/yyyy") + "</td></tr><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Size</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ObjStuffing.Size + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Godown</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ObjStuffing.GodownName + "</td></tr></tbody></table></td></tr><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Shipping Bill No.</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ShippingBillNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Shipping Bill Date:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ShippingDate + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Gross Weight:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + StuffWeight + "</td></tr><tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Exporter:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Exporter + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Shipping Line:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ShippingLine + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>FOBValue(INR):</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Fob + "</td></tr>			<tr><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Consignee/CHA:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + CHA + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>Destination:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:left;font-weight:600;'>No. of Packages Stuffed:</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + StuffQuantity + "</td></tr></tbody></table></td></tr><tr><td colspan='3' style='padding-top:20pt;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>S. No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>CFS Code</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Container No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Commodity</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Customs Seal</th><th colspan='10' style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Tally</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Total</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:3px;text-align:center;'>" + SLNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + CFSCode + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + Commodity + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + CustomSeal + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td><td style='border:1px solid #000;padding:3px;text-align:center;'>-</td><td style='border:1px solid #000;padding:3px;text-align:center;'>-</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + "" + "</td></tr><tr><td colspan='10'></td><td colspan='4' style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Grand Total</td><td style='border:1px solid #000;padding:3px;text-align:right;'>" + StuffQuantity + "</td></tr><tr><td colspan='15' style='padding:3px;text-align:left;'>Variation observed if Any</td></tr></tbody></table></td></tr><tr><td colspan='3' style='padding-top:100pt;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:center;'>Signature & <br/>Designation with<br/>Date and Seal</td><td style='text-align:center;'>Rep./Surveyor/S.<br/>Agent/Line/CHA</td><td style='text-align:center;'>Shed I/C CWC-CFS</td><td style='text-align:center;'>Rep./Surveyor of H & T<br/>Contractor</td><td style='text-align:center;'>Preventive Officer of Customs</td></tr></tbody></table></td></tr></tbody></table>";
            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var Rh = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
            {
                Rh.HeadOffice = this.HeadOffice;
                Rh.HOAddress = this.HOAddress;
                Rh.ZonalOffice = this.ZonalOffice;
                Rh.ZOAddress = this.ZOAddress;
                Rh.GeneratePDF(Path, Html);
            }
            return "/Docs/" + Session.SessionID + "/HDBContainerStuffing" + ContainerStuffingId + ".pdf";
        }
        #endregion


        #region Container Stuffing Shipbill wise Charge

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintShipBillWiseStorageAmount(int ContainerStuffingId)
        {
            Hdb_ReportRepository ObjER = new Hdb_ReportRepository();
            Hdb_ShipbillWiseStorageCharge ObjStuffing = new Hdb_ShipbillWiseStorageCharge();
            ObjER.GetContainerShipbillwiseChargesForPrint(ContainerStuffingId);
            if (ObjER.DBResponse.Data != null)
            {
                ObjStuffing = (Hdb_ShipbillWiseStorageCharge)ObjER.DBResponse.Data;
                string Path = GeneratePdfForShipBillWiseStorageAmount(ObjStuffing, ContainerStuffingId);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }

        }
        [NonAction]
        public string GeneratePdfForShipBillWiseStorageAmount(Hdb_ShipbillWiseStorageCharge ObjStuffing, int ContainerStuffingId)
        {
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/HDBShipBillWiseStorageAmount" + ContainerStuffingId + ".pdf";
            string Html = "";
         
                //SLNo.Remove(SLNo.Length - 1);


                Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'>";

                Html += "<thead>";
                Html += "<tr><td colspan='12'>";
                Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
                Html += "<tr><td width='65%' style='font-size: 10px;'></td>";
                Html += "<td width='8%' align='right'>";
                Html += "<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>";
                Html += "<tr><td style='border:1px solid #333;'>";
                Html += "<div style='padding: 5px 0; font-size: 12px; text-align: center;'></div>";
                Html += "</td></tr>";
                Html += "</tbody></table>";
                Html += "</td></tr>";
                Html += "</tbody></table>";
                Html += "</td></tr>";

                Html += "<tr><td colspan='12'>";
                Html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>";
                Html += "<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>";
                Html += "<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label></td>";
                Html += "<td valign='top'><img align='right' src='PPP' width='100'/></td></tr>";
                Html += "</tbody></table>";
                Html += "</td></tr>";
                Html += "</thead>";

                Html += "<tbody>";
                Html += "<tr><td colspan='12'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><th colspan='12' width='3%' style='padding:3px;text-align:center;'><label style='font-size: 14px; font-weight:bold;'><u>Shipping Bill Wise Storage & Insurance Charges Sheet</u></label></th></tr></tbody></table></td></tr>";

                Html += "<tr><td colspan='12'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td colspan='6' width='50%'><b>Stuffing Req No :</b> " + ObjStuffing.StuffingNo + "</td> <td colspan='6' width='50%' align='right'><b>Stuffing Date: :</b> " + ObjStuffing.StuffingDate + "</td> </tr></tbody></table></td></tr>";
               
                Html += "<tr><td colspan='12'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody> <tr> <td colspan='6' width='50%'><b>Forwarder Name</b> <u>" + ObjStuffing.Forwarder + "" + "</u></td>  <td colspan='6' width='50%' align='right'><b>CBT No/ Size</b> <u>"+ ObjStuffing.ContainerNo + "/"+ ObjStuffing.Size + "</u></td> </tr> </tbody></table></td></tr>";

                //Html += "<tr><td colspan='12'><p style='font-size:9pt; margin:0 0 10px;'><b>Final Destination Location</b> <u>" + ObjStuffing.FinalDestinationLocation + "" + "</u> </p></td></tr>";
                //Html += "<tr><td colspan='12'><p style='font-size:9pt; margin:0 0 10px;'><b>Equipment Seal Type</b> <u>" + EquipmentSealType + "" + "</u> </p></td></tr>";

                Html += "<tr><td colspan='12' style='padding-top:20pt;'>";
                Html += "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>";
                Html += "<thead>";
                Html += "<tr><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>S. No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Shipping Bill No. and Date</th> <th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Exporter</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Description Of Goods</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Carting No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Carting/Arrival Date</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Gross Weight in Kgs</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>FOB</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Storage Charges (Exclusive of GST)</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Insurance Charges (Exclusive of GST)</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Escalation Storage charges (50% of storage charges applicable after 28 days of cargo arrival)</th></tr>";
                Html += "</thead>";
                Html += "<tbody>";
            int i = 1;
                //LOOP START
                ObjStuffing.lstChargeDetails.ToList().ForEach(item =>
                {
                    Html += "<tr><td style='border:1px solid #000;padding:3px;text-align:center;'>"+i+"</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.SBNo + " " + item.SBDate + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.Exporter + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.CargoDescription + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.CartingRegisterNo + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.RegisterDate + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.GrossWeight + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.Fob + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.Storage + "</td>";     
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + item.Insurance + "</td>";
                    Html += "<td style='border:1px solid #000;padding:3px;text-align:right;'>" + item.ExStorage + "</td></tr>";
                    i++;
                });
            Html += "<tr><td style='border:1px solid #000;padding:3px;text-align:center;font-weight:bold;'>Total</td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'></td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'></td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'></td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'></td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'></td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'>" + ObjStuffing.lstChargeDetails.Sum(x=>x.GrossWeight) + "</td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'>" + ObjStuffing.lstChargeDetails.Sum(x => x.Fob) + "</td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:left;font-weight:bold;'>" + ObjStuffing.lstChargeDetails.Sum(x => x.Storage)  + "</td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:right;font-weight:bold;'>" + ObjStuffing.lstChargeDetails.Sum(x => x.Insurance)  + "</td>";
            Html += "<td style='border:1px solid #000;padding:3px;text-align:right;font-weight:bold;'>" + ObjStuffing.lstChargeDetails.Sum(x => x.ExStorage) + "</td></tr>";
            //LOOP END

            //  Html += "<tr><td colspan='20' style='border:1px solid #000;'><table cellspacing='0' cellpadding='5' style='width:100%; margin: 0; padding: 5px; font-size:8pt;'><tbody><tr><td colspan='16' width='80%'></td><th style='border-right:1px solid #000;padding:3px;text-align:right;'>Grand Total</th><td style='padding:3px;text-align:right;'>0</td></tr></tbody></table></td></tr>";

            Html += "</tbody></table>";
               Html += "</td></tr>";

            //Html += "<tr><td colspan='12' style='padding-top:100pt;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;'>Representative/Surveyor <br/> Shipping Agent/Line/CHA</td><td style='text-align:left;'>Shed Asst. <br/> CWC.CFS</td><td style='text-align:left;'>Shed I/c <br/> CWC.CFS</td><td style='text-align:center;'>Rep/Surveyor of Handling & <br/> Transport Contractor</td><td style='text-align:center;'>Preventive Officer of Customs</td></tr></tbody></table></td></tr>";
            Html += "<tr><td colspan='12' style='font-size:8pt;'>Carting and stuffing charges (handling) B-9 or B-11 : "+ ObjStuffing.FranchiseCharge.Carting + " </td></tr>";
            Html += "<tr><td colspan='12' style='font-size:8pt;'>Franchise charges: " + ObjStuffing.FranchiseCharge.FranchaieseCharge + " </td></tr>";
            Html += "<tr><td colspan='12'><br/></td></tr>";
            Html += "<tr><td colspan='12' style='font-size:8pt;'>** Charges shown are exclusive of GST </td></tr>";
            Html += "<tr><td colspan='12'><br/><br/></td></tr>";
            Html += "<tr><td colspan='6' width='50%' style='font-size:8pt;'>Incharge-EXPORT</td> <td colspan='6' style='font-size:8pt;' width='50%' align='right'>MANAGER-CFS</td></tr>";
            Html += "</tbody></table>";


            

            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }

            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("PPP", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var Rh = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
            {
                Rh.HeadOffice = this.HeadOffice;
                Rh.HOAddress = this.HOAddress;
                Rh.ZonalOffice = this.ZonalOffice;
                Rh.ZOAddress = this.ZOAddress;
                Rh.GeneratePDF(Path, Html);
            }
            return "/Docs/" + Session.SessionID + "/HDBShipBillWiseStorageAmount" + ContainerStuffingId + ".pdf";
        }
        #endregion

        #region Job Order Print
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintJO(int ImpJobOrderId, string JobOrderNo, int JobOrderFor, string Purpose)
        {
            HDB_ImportRepository objIR = new HDB_ImportRepository();
            objIR.GetImportJODetailsFrPrint(ImpJobOrderId);
            if (objIR.DBResponse.Data != null)
            {
                List<PrintJobOrder> LstJobOrder = new List<PrintJobOrder>();
                // List<OperationList> LstOperation = new List<OperationList>();
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(objIR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                string JOPrint = Jobject["LstJobOrder"].ToString();
                //  string Operation = Jobject["LstOperationName"].ToString();
                LstJobOrder = Newtonsoft.Json.JsonConvert.DeserializeObject<List<PrintJobOrder>>(JOPrint);
                // LstOperation = Newtonsoft.Json.JsonConvert.DeserializeObject<List<OperationList>>(Operation);
                string Path = GeneratePDFForJO(LstJobOrder, ImpJobOrderId, JobOrderNo, JobOrderFor, Purpose);
                return Json(new { Status = 1, Message = Path });
            }
            else if (objIR.DBResponse.Status == 2)
            {
                return Json(new { Status = 2, Message = objIR.DBResponse.Message });
            }
            else
                return Json(new { Status = -1, Message = "Error" });
        }
        [NonAction]
        public string GeneratePDFForJO(List<PrintJobOrder> LstJobOrder, int ImpJobOrderId, string JobOrderNo, int JobOrderFor, string Purpose)
        {
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/JobOrder" + ImpJobOrderId + ".pdf";
            string JobOrderType = JobOrderFor == 1 ? "CBT" : "Container ";
            List<PrintJobOrder> List = new List<PrintJobOrder>();
            //int Count = 0;
            // string Sline = "";
            StringBuilder Html = new StringBuilder();
            string CompanyAddress = "";
            CompanyRepository ObjCR = new CompanyRepository();
            List<Company> LstCompany = new List<Company>();
            ObjCR.GetAllCompany();
            if (ObjCR.DBResponse.Data != null)
            {
                LstCompany = (List<Company>)ObjCR.DBResponse.Data;
                CompanyAddress = LstCompany[0].CompanyAddress;
            }

            /*   LstJobOrder.ToList().ForEach(item =>
               {
                   ContainerNo = (ContainerNo == "" ? (item.ContainerNo) : (ContainerNo + "<br/>" + item.ContainerNo));
                   Size = (Size == "" ? (item.ContainerSize) : (Size + "<br/>" + item.ContainerSize));
                   Sline = (Sline == "" ? (item.Sline) : (Sline + "<br/>" + item.Sline));
                   Serial = (Serial == "") ? (++Count).ToString() : (Serial + "<br/>" + (++Count).ToString());
               }); */

            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Path))
            {
                System.IO.File.Delete(Path);
            }
            /*  if ((Convert.ToInt32(Session["BranchId"])) == 1)
              {
                  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th style='width:15%;text-align:left;'><img src='IMGSRC' width='50%;'/></th><th style='text-align:center;'><span style='font-size:16pt;'><strong>CENTRAL WAREHOUSING CORPORATION</strong></span><br/><span>(A GOVT. OF INDIA UNDERTAKING)<br/>" + CompanyAddress + "</span></th></tr></thead><tbody><tr><td width='20%' style='text-align:left;'>No.<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderNo + "</span></td><td style='text-align:right;'>Date<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderDate + "</span></td></tr><tr><td colspan='2' style='text-align:center;'><br/><span style='border-bottom:1px solid #000;font-size:12pt;font-weight:600;'>JOB ORDER</span></td></tr><tr><td colspan='2' style='text-align:left;'><br/>To,<br/>The Kandla International Container Terminal(KICT),<br/>Kandla</td></tr><tr><td colspan='2' style='text-align:center;'><br/>Shift the Import from <span style='border-bottom:1px solid #000;'> " + objMdl.FromLocation + " </span> to<span style='border-bottom:1px solid #000;'> CFS-KPT </span></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:5px;text-align:center;'>SL. NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>CONTAINER NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>SIZE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>S. LINE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>LOADED / EMPTY</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:5px;'>" + Serial + "</td><td style='border:1px solid #000;padding:5px;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:5px;'>" + Size + "</td><td style='border:1px solid #000;padding:5px;'>" + objMdl.ShippingLineName + "</td><td style='border:1px solid #000;padding:5px;'>" + objMdl.ContainerType + "</td></tr></tbody> </table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><tbody><tr><td>Copy to:- <span>M/s Abrar Forwarders <br/>Gate Incharge,CWC KPT <br/>Custom PO,KICT Gate</span></td><td><br/><br/>Authorised Signature</td></tr></tbody></table></td></tr></tbody></table>";
              }
              else
              {
                  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><thead><tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='90%' valign='top' align='center'><h1 style='font-size: 18px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>" + CompanyAddress + "</span><br/><label style='font-size: 12px;'>Email - cwccfs@gmail.com</label></td><td valign='top'><img align='right' src='ISO' width='100'/></td></tr></thead><tbody><tr><td style='text-align:left;' colspan='2'>No.<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderNo + "</span></td><td style='text-align:right; width:20%;'>Date<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderDate + "</span></td></tr><tr><td colspan='4' style='text-align:center;'><br/><span style='border-bottom:1px solid #000;font-size:12pt;font-weight:600;'>JOB ORDER</span></td></tr><tr><td colspan='4' style='text-align:center;'><br/>Please arrange to bring / shift the Import / Export Load / Loaded Container / Loaded CBT </td></tr><tr><td colspan='4' style='text-align:left;'><span style='border-bottom:1px solid #000;'> " + objMdl.FromLocation + " </span> <span style='border-bottom:1px solid #000;'> " + objMdl.ToLocation + " </span></td></tr><tr><td colspan='4'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:5px;text-align:center;'>SL. NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>CONTAINER/CBT NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>SIZE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>S. LINE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>LOADED / EMPTY</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Serial + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Size + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Sline + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + objMdl.ContainerType + "</td></tr></tbody> </table></td></tr><tr><td colspan='4'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><tbody><tr></tr><tr><span><br/><br/><br/><br/><br/><br/></span></tr><tr><td colspan='6' style='padding-top:150px;'>Copy to:- <span></span></td><td colspan='6' style='padding-top:150px;text-align:right;'>SR.ASSTT.MANAGER</td></tr></tbody></table></td></tr></tbody></table>";
              } */

            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            Html.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
            //Html.Append("<td width='10%' align='right'>");
            //Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            //Html.Append("<tr><td style='border:1px solid #333;'>");
            //Html.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'></div>");
            //Html.Append("</td></tr>");
            //Html.Append("</tbody></table></td>");
            Html.Append("</tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");
            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            Html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>" + JobOrderType + " JOB ORDER</label></td>");
            Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");
            Html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody><tr><th style='font-size:13px; width:8%;'>SL.No.</th>");
            Html.Append("<td style='font-size:12px;'><u>" + JobOrderNo + "</u></td><th style='font-size:13px; text-align:right;'>Date</th>");
            Html.Append("<td style='font-size:12px; width:10%;'><u>" + DateTime.Now.ToString("dd/MM/yyyy") + "</u></td></tr></tbody></table></td></tr>");
            Html.Append("<tr><th colspan='12' style='font-size:12px;'>" + Purpose + "</th></tr>");
            Html.Append("<tr>");
            Html.Append("<td colspan='12'>");
            Html.Append("<table style='border:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            Html.Append("<thead>");
            Html.Append("<tr>");
            Html.Append("<th style='font-weight:600;text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>Name of Operation</th> ");
            Html.Append("<th style='font-weight:600; text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>Location</th>");
            Html.Append("<th style='font-weight:600; text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>Name of Party</th> ");
            Html.Append("<th style='font-weight:600; text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>Weight</th> ");
            Html.Append("<th style='font-weight:600; text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>BOE No.</th>");
            Html.Append("<th style='font-weight:600; text-align:center;border-bottom:1px solid #000;padding:10px;'>No. of Units</th>");
            Html.Append("</tr>");
            Html.Append("</thead>");
            Html.Append("<tbody>");



            LstJobOrder.ToList().ForEach(item =>
            {
                //  if (LstOperation.Any(x => x.OperationName != "") || LstOperation.Any(x => x.OperationName != "OtherOperations"))


                //List = LstJobOrder.Where(x => x.NatureOfOperation == "JobOrder").ToList();
                //List.Select(x => new { Location = x.Location }).Distinct().ToList().ForEach(item =>
                //{
                //    Location = (Location == "" ? (item.Location) : (Location + "<br/>" + item.Location));
                //});
                //List.Select(x => new { PartyName = x.PartyName }).Distinct().ToList().ForEach(item =>
                //{
                //    PartyName = (PartyName == "" ? (item.PartyName) : (PartyName + "<br/>" + item.PartyName));
                //});
                //List.ForEach(item =>
                //{
                //    NoOfUnits = (NoOfUnits == "" ? (item.NoOfUnits) : item.NoOfUnits == "0" ? NoOfUnits : (NoOfUnits + "<br/>" + item.NoOfUnits));
                //});
                //List.Select(x => new { Weight = x.Weight }).Distinct().ToList().ForEach(item =>
                //{
                //    Weight = (Weight == "" ? (item.Weight) : (Weight + "<br/>" + item.Weight));
                //});

                Html.Append("<tr>");
                Html.Append("<td style='text-align:left;border-right:1px solid #000; border-bottom:1px solid #000;padding:10px;'>" + item.NatureOfOperation + "</td> ");
                Html.Append("<td style='text-align:center;border-right:1px solid #000; border-bottom:1px solid #000; padding: 10px;'>" + item.Location + "</td> ");
                Html.Append("<td style='text-align:center;border-right:1px solid #000; border-bottom:1px solid #000; padding: 10px;'>" + item.PartyName + "</td> ");
                Html.Append("<td style='text-align:center;border-right:1px solid #000; border-bottom:1px solid #000; padding: 10px;'>" + item.Weight + "</td> ");
                Html.Append("<td style='text-align:center;border-right:1px solid #000; border-bottom:1px solid #000; padding: 10px;'></td>");
                Html.Append("<td style='border-bottom:1px solid #000; text-align:center;padding:10px;'>" + item.NoOfUnits + "</td> ");
                Html.Append("</tr>");

                //NoOfUnits = "";
                //Location = "";
                //PartyName = "";
                //BOENo = "";
                //Weight = "";
                // List.Clear();

            });



            //if (LstOperation.Any(x => x.OperationName == ""))
            //{
            //    if (flag == 0)
            //    {
            //        flag = 1;
            //        //List = LstJobOrder.Where(x => x.NatureOfOperation == "").ToList();
            //        //List.Select(x => new { PartyName = x.PartyName }).Distinct().ToList().ForEach(item =>
            //        //{
            //        //    PartyName = (PartyName == "" ? (item.PartyName) : (PartyName + "<br/>" + item.PartyName));
            //        //});
            //        //List.ForEach(item =>
            //        //{
            //        //    NoOfUnits = (NoOfUnits == "" ? (item.NoOfUnits) : item.NoOfUnits == "0" ? NoOfUnits : (NoOfUnits + "<br/>" + item.NoOfUnits));
            //        //});
            //        //List.Select(x => new { Location = x.Location }).Distinct().ToList().ForEach(item =>
            //        //{
            //        //    Location = (Location == "" ? (item.Location) : (Location + "<br/>" + item.Location));
            //        //});
            //        //List.Select(x => new { Weight = x.Weight }).Distinct().ToList().ForEach(item =>
            //        //{
            //        //    Weight = (Weight == "" ? (item.Weight) : (Weight + "<br/>" + item.Weight));
            //        //});

            //        Html.Append("<tr>");
            //        Html.Append("<td style='text-align:left;border-right:1px solid #000;padding:10px;'></td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + item.Location + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + item.PartyName + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + item.Weight + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'></td>");
            //        Html.Append("<td style='text-align:center;padding:10px;'>" + item.NoOfUnits + "</td> ");
            //        Html.Append("</tr>");

            //        //NoOfUnits = "";
            //        //Location = "";
            //        //PartyName = "";
            //        //BOENo = "";
            //        //Weight = "";
            //        List.Clear();
            //    }
            //}

            //if (LstOperation.Any(x => x.OperationName == "EmptyLiftOn"))
            //{
            //    if (flag == 0)
            //    {
            //        flag = 1;
            //        List = LstJobOrder.Where(x => x.NatureOfOperation == "JobOrder").ToList();
            //        List.Select(x => new { PartyName = x.PartyName }).Distinct().ToList().ForEach(item =>
            //        {
            //            PartyName = (PartyName == "" ? (item.PartyName) : (PartyName + "<br/>" + item.PartyName));
            //        });
            //        List.ForEach(item =>
            //        {
            //            NoOfUnits = (NoOfUnits == "" ? (item.NoOfUnits) : item.NoOfUnits == "0" ? NoOfUnits : (NoOfUnits + "<br/>" + item.NoOfUnits));
            //        });
            //        List.Select(x => new { Location = x.Location }).Distinct().ToList().ForEach(item =>
            //        {
            //            Location = (Location == "" ? (item.Location) : (Location + "<br/>" + item.Location));
            //        });
            //        List.Select(x => new { Weight = x.Weight }).Distinct().ToList().ForEach(item =>
            //        {
            //            Weight = (Weight == "" ? (item.Weight) : (Weight + "<br/>" + item.Weight));
            //        });

            //        Html.Append("<tr>");
            //        Html.Append("<td style='text-align:left;border-right:1px solid #000;padding:10px;'>Empty Lift On</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + Location + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + PartyName + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + Weight + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'></td>");
            //        Html.Append("<td style='text-align:center;padding:10px;'>" + NoOfUnits + "</td> ");
            //        Html.Append("</tr>");

            //        NoOfUnits = "";
            //        Location = "";
            //        PartyName = "";
            //        BOENo = "";
            //        Weight = "";
            //        List.Clear();
            //    }
            //}

            //if (LstOperation.Any(x => x.OperationName == "EmptyLiftOff"))
            //{
            //    if (flag == 0)
            //    {
            //        flag = 1;
            //        List = LstJobOrder.Where(x => x.NatureOfOperation == "JobOrder").ToList();
            //        List.Select(x => new { PartyName = x.PartyName }).Distinct().ToList().ForEach(item =>
            //        {
            //            PartyName = (PartyName == "" ? (item.PartyName) : (PartyName + "<br/>" + item.PartyName));
            //        });
            //        List.ForEach(item =>
            //        {
            //            NoOfUnits = (NoOfUnits == "" ? (item.NoOfUnits) : item.NoOfUnits == "0" ? NoOfUnits : (NoOfUnits + "<br/>" + item.NoOfUnits));
            //        });
            //        List.Select(x => new { Location = x.Location }).Distinct().ToList().ForEach(item =>
            //        {
            //            Location = (Location == "" ? (item.Location) : (Location + "<br/>" + item.Location));
            //        });
            //        List.Select(x => new { Weight = x.Weight }).Distinct().ToList().ForEach(item =>
            //        {
            //            Weight = (Weight == "" ? (item.Weight) : (Weight + "<br/>" + item.Weight));
            //        });

            //        Html.Append("<tr>");
            //        Html.Append("<td style='text-align:left;border-right:1px solid #000;padding:10px;'>Empty Lift Off</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + Location + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + PartyName + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'>" + Weight + "</td> ");
            //        Html.Append("<td style='text-align:center;border-right:1px solid #000;padding:10px;'></td>");
            //        Html.Append("<td style='text-align:center;padding:10px;'>" + NoOfUnits + "</td> ");
            //        Html.Append("</tr>");

            //        NoOfUnits = "";
            //        Location = "";
            //        PartyName = "";
            //        BOENo = "";
            //        Weight = "";
            //        List.Clear();
            //    }
            //}

            /*     List = LstJobOrder.Where(x => x.NatureOfOperation == "DestuffingEntry").ToList();
                 List.Select(x => new { Location = x.Location }).Distinct().ToList().ForEach(item =>
                 {
                     Location = (Location == "" ? (item.Location) : (Location + "<br/>" + item.Location));
                 });
                 List.Select(x => new { PartyName = x.PartyName }).Distinct().ToList().ForEach(item =>
                 {
                     PartyName = (PartyName == "" ? (item.PartyName) : (PartyName + "<br/>" + item.PartyName));
                 });
                 List.Select(x => new { BOENo = x.BOENo }).Distinct().ToList().ForEach(item =>
                 {
                     BOENo = (BOENo == "" ? (item.BOENo) : (BOENo + "<br/>" + item.BOENo));
                 });
                 List.ForEach(item =>
                 {
                     NoOfUnits = (NoOfUnits == "" ? (item.NoOfUnits) : item.NoOfUnits == "0" ? NoOfUnits : (NoOfUnits + "<br/>" + item.NoOfUnits));
                 });

                 Html.Append("<tr>");
                 Html.Append("<td style='text-align:left;border-right:1px solid #000;padding:10px;'>Destuffing</td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'>"+ Location + "</td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'>"+ PartyName + "</td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'>"+ BOENo + "</td>");
                 Html.Append("<td style='text-align:center;padding:10px;'>"+ NoOfUnits + "</td> ");
                 Html.Append("</tr>");

                 NoOfUnits = "";
                 Location = "";
                 PartyName = "";
                 BOENo = "";
                 List.Clear(); */

            /*     Html.Append("<tr>");
                 Html.Append("<td style='text-align:left;border-right:1px solid #000;padding:10px;'>Shifting</td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td>");
                 Html.Append("<td style='text-align:center;padding:10px;'></td> ");
                 Html.Append("</tr>");
                 Html.Append("<tr>");
                 Html.Append("<td style='text-align:left;border-right:1px solid #000;padding:10px;'>Transportation</td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
                 Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td>");
                 Html.Append("<td style='text-align:center;padding:10px;'></td> ");
                 Html.Append("</tr>"); */


            //if (LstOperation.Any(x => x.OperationName == "OtherOperations"))
            //{
            //    Html.Append("<tr>");
            //    Html.Append("<td style='text-align:left;border-right:1px solid #000;padding:10px;'>Other Operations</td> ");
            //    Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
            //    Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
            //    Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td> ");
            //    Html.Append("<td style='text-align:center;border-right:1px solid #000; padding: 10px;'></td>");
            //    Html.Append("<td style='text-align:center;padding:10px;'></td> ");
            //    Html.Append("</tr>");
            //}



            Html.Append("</tbody>");
            Html.Append("</table>");
            Html.Append("</td>");
            Html.Append("</tr>");
            Html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' width='100%'><tbody><tr><td><span><br/></span></td></tr><tr><td colspan='8' width='70%' valign='top'><span style='font-size:12px;'>To,</span><br/><br/> <span style='font-size:12px;'>H&T Contractor<br/> CFS, Kukatpally</span> </td><td colspan='4' width='30%'><table cellspacing='0' cellpadding='5' width='100%'><tbody><tr><th style='font-size:14px;' align='left'>SHIFT INCHARGE</th></tr><tr><td style='font-size:12px;' align='left'>Date :</td></tr><tr><td style='font-size:12px;' align='left'>Time :</td></tr></tbody></table></td></tr></tbody></table></td></tr>");
            Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Copy to:</span></td></tr>");
            Html.Append("<tr><td colspan='12'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style='font-size:13px;'>Shed I/O at Shed No. <u></u></span></td></tr>");
            Html.Append("</tbody></table>");
            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = this.HeadOffice;
                rh.HOAddress = this.HOAddress;
                rh.ZonalOffice = this.ZonalOffice;
                rh.ZOAddress = this.ZOAddress;
                rh.GeneratePDF(Path, Html.ToString());
            }
            return "/Docs/" + Session.SessionID + "/JobOrder" + ImpJobOrderId + ".pdf";
        }
        #endregion

        #region Issue Slip
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintIssueSlip(int IssueSlipId)
        {
            Hdb_ReportRepository ObjIR = new Hdb_ReportRepository();
            ObjIR.GetIssueSlipForPreview(IssueSlipId);
            if (ObjIR.DBResponse.Data != null)
            {
                HdbIssueSlip ObjIssueSlip = new HdbIssueSlip();
                ObjIssueSlip = (HdbIssueSlip)ObjIR.DBResponse.Data;
                string Path = GeneratePDFForIssueSlip(ObjIssueSlip, IssueSlipId);
                return Json(new { Status = 1, Message = Path });
            }
            else
                return Json(new { Status = -1, Message = "Error" });
        }
        [NonAction]
        public string GeneratePDFForIssueSlip(HdbIssueSlip ObjIssueSlip, int IssueSlipId)
        {
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/IssueSlip" + IssueSlipId + ".pdf";
            string ContainerNo = "", Size = "", Serial = "", BOEDate = "", BOENo = "", Vessel = "", CHA = "", Importer = "", ShippingLine = "",
            CargoDescription = "", MarksNo = "", Weight = "", LineNo = "", Rotation = "", ArrivalDate = "", DestuffingDate = "", Godown = "", Location = "",
            GodownAndLocation = "";
            string IssueDt = "";
            int NoOfPkg = 0;
            string OBL = "";
            int Count = 0;
            // decimal MarksNo = 0, Weight=0;
            string Html = "";
            string CompanyAddress = "";
            CompanyRepository ObjCR = new CompanyRepository();
            List<Company> LstCompany = new List<Company>();
            ObjCR.GetAllCompany();
            if (ObjCR.DBResponse.Data != null)
            {
                LstCompany = (List<Company>)ObjCR.DBResponse.Data;
                CompanyAddress = LstCompany[0].CompanyAddress;
            }
            ObjIssueSlip.LstIssueSlipRpt.ToList().ForEach(item =>
            {
                ContainerNo = (ContainerNo == "" ? (item.ContainerNo) : (ContainerNo == item.ContainerNo) ? ContainerNo : (ContainerNo + "<br/>" + item.ContainerNo));
                Size = (Size == "" ? (item.Size) : (Size == item.Size) ? Size : (Size + "<br/>" + item.Size));
                // BOEDate = (BOEDate == "" ? (item.BOEDate) : (BOEDate + "<br/>" + item.BOEDate));
                //  BOENo = (BOENo == "" ? (item.BOENo) : (BOENo + "<br/>" + item.BOENo));
                //  Vessel = (Vessel == "" ? (item.Vessel) : (Vessel + "<br/>" + item.Vessel));
                // CHA = (CHA == "" ? (item.CHA) : (CHA + "<br/>" + item.CHA));
                // Importer = (Importer == "" ? (item.Importer) : (Importer + "<br/>" + item.Importer));
                // CargoDescription = (CargoDescription == "" ? (item.CargoDescription) : (CargoDescription + "<br/>" + item.CargoDescription));
                MarksNo = (MarksNo == "" ? (item.MarksNo) : (MarksNo + "<br/>" + item.MarksNo));
                // Weight = (Weight == "" ? (item.Weight) : (Weight + "<br/>" + item.Weight));
                //  LineNo = (LineNo == "" ? (item.LineNo) : (LineNo + "<br/>" + item.LineNo));
                //  Rotation = (Rotation == "" ? (item.Rotation) : (Rotation + "<br/>" + item.Rotation));
                // ArrivalDate = (ArrivalDate == "" ? (item.ArrivalDate) : (ArrivalDate + "<br/>" + item.ArrivalDate));
                // DestuffingDate = (DestuffingDate == "" ? (item.DestuffingDate) : (DestuffingDate + "<br/>" + item.DestuffingDate));
                // Location = (Location == "" ? (item.Location) : (Location + "<br/>" + item.Location));
                // ShippingLine = (ShippingLine == "" ? (item.ShippingLine) : (ShippingLine + "<br/>" + item.ShippingLine));
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { CHA = x.CHA }).Distinct().ToList().ForEach(item =>
            {
                if (CHA == "")
                    CHA = item.CHA;
                else
                    CHA += "<br/>" + item.CHA;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { Weight = x.Weight }).Distinct().ToList().ForEach(item =>
            {
                if (Weight == "" || Weight == "0.0000")
                    Weight = item.Weight;
                else
                    Weight += "<br/>" + item.Weight;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { LineNo = x.LineNo }).Distinct().ToList().ForEach(item =>
            {
                if (LineNo == "")
                    LineNo = item.LineNo;
                else
                    LineNo += "<br/>" + item.LineNo;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { Rotation = x.Rotation }).Distinct().ToList().ForEach(item =>
            {
                if (Rotation == "")
                    Rotation = item.Rotation;
                else
                    Rotation += "<br/>" + item.Rotation;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { GodownAndLocation = x.GodwonAndLocation }).Distinct().ToList().ForEach(item =>
            {
                if (GodownAndLocation == "")
                    GodownAndLocation = item.GodownAndLocation;
                else
                    GodownAndLocation += "<br/>" + item.GodownAndLocation;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { Godown = x.Godown }).Distinct().ToList().ForEach(item =>
            {
                if (Godown == "")
                    Godown = item.Godown;
                else
                    Godown += ", " + item.Godown;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { Location = x.Location }).Distinct().ToList().ForEach(item =>
            {
                if (Location == "")
                    Location = item.Location;
                else
                    Location += ", " + item.Location;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { Importer = x.Importer }).Distinct().ToList().ForEach(item =>
            {
                if (Importer == "")
                    Importer = item.Importer;
                else
                    Importer += "<br/>" + item.Importer;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { CargoDescription = x.CargoDescription }).Distinct().ToList().ForEach(item =>
            {
                if (CargoDescription == "")
                    CargoDescription = item.CargoDescription;
                else
                    CargoDescription += "<br/>" + item.CargoDescription;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { ArrivalDate = x.ArrivalDate }).Distinct().ToList().ForEach(item =>
            {
                if (ArrivalDate == "")
                    ArrivalDate = item.ArrivalDate;
                else
                    ArrivalDate += "<br/>" + item.ArrivalDate;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { DestuffingDate = x.DestuffingDate }).Distinct().ToList().ForEach(item =>
            {
                if (DestuffingDate == "")
                    DestuffingDate = item.DestuffingDate;
                else
                    DestuffingDate += "<br/>" + item.DestuffingDate;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { ShippingLine = x.ShippingLine }).Distinct().ToList().ForEach(item =>
            {
                if (ShippingLine == "")
                    ShippingLine = item.ShippingLine;
                else
                    ShippingLine += "<br/>" + item.ShippingLine;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { Vessel = x.Vessel }).Distinct().ToList().ForEach(item =>
            {
                if (Vessel == "")
                    Vessel = item.Vessel;
                else
                    Vessel += "<br/>" + item.Vessel;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { BOEDate = x.BOEDate }).Distinct().ToList().ForEach(item =>
            {
                if (BOEDate == "")
                    BOEDate = item.BOEDate;
                else
                    BOEDate += "<br/>" + item.BOEDate;
            });
            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { BOENo = x.BOENo }).Distinct().ToList().ForEach(item =>
            {
                if (BOENo == "")
                    BOENo = item.BOENo;
                else
                    BOENo += "<br/>" + item.BOENo;
            });


            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { IssueDt = x.IssueDate }).Distinct().ToList().ForEach(item =>
            {
                if (IssueDt == "")
                    IssueDt = item.IssueDt;
                else
                    IssueDt += "<br/>" + item.IssueDt;
            });

            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { OBL = x.OBL }).Distinct().ToList().ForEach(item =>
            {
                if (OBL == "")
                    OBL = item.OBL;
                else
                    OBL += "<br/>" + item.OBL;
            });

            ObjIssueSlip.LstIssueSlipRpt.Select(x => new { NoOfPkg = x.NoOfpackage }).Distinct().ToList().ForEach(item =>
            {
                if (NoOfPkg == 0)
                    NoOfPkg = item.NoOfPkg;

            });


            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Path))
            {
                System.IO.File.Delete(Path);
            }
            int BranchId = Convert.ToInt32(Session["BranchId"]); ;

            if (BranchId == 4)
            {
                Html = "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody> <tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody><tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</label><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>ISSUE SLIP <br/> DELIVERY OF IMPORTED CARGO</label></td><td valign='top'><img align='right' src='ISO' width='100'/></td></tr></tbody></table></td></tr>  <tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody><tr><th width='8%' style='font-size:13px;'>SL.No.</th><td style='font-size:12px;'><u>" + ObjIssueSlip.IssueSlipNo + "</u></td><th style='font-size:13px; text-align:right;'>Date</th><td style='font-size:12px; width:10%;'><u>" + IssueDt + "</u></td></tr></tbody></table></td></tr>  <tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody><tr><td width='3%' valign='top' align='right' style='font-size:12px;'>1.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Container No.</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + ContainerNo + "</td></tr>  <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>2.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>PNR No.</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + Size + "</td></tr>  <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>3.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>VIA No.</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + Size + "</td></tr>  <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>4.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Vessel Name</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + Vessel + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>5.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>BOE No. & Date</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + BOENo + " , " + BOEDate + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>6.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>OBL No.</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + OBL + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>7.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Shipping Agent</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + ShippingLine + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>8.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Importer Name</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + Importer + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>9.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Cargo Description</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + CargoDescription + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>10.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Marks & Number</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + MarksNo + "</td></tr>    <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>11.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>No of Units</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + NoOfPkg + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>12.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Weight</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + Weight + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>13.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Package No.</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'></td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>14.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>S/L Delivery Note No. & Date</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>15.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Date of Receipt of Container</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + ArrivalDate + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>16.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Date of Destuffing</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + DestuffingDate + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>17.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Shed/Grid No.</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + GodownAndLocation + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>18.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Total CWC Dues</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + ObjIssueSlip.TotalCWCDues + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>19.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>C.R No. & Date</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>" + ObjIssueSlip.CRNoDate + "</td></tr>   <tr><td width='3%' valign='top' align='right' style='font-size:12px;'>20.</td><td colspan='1' valign='top' width='50%' style='font-size:12px;'>Valid till Date</td><td>:</td><td colspan='2' valign='top' width='40%' style='font-size:12px;'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td></tr> </tbody></table></td></tr>   <tr><td colspan='12'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><td><span><br/></span></td></tr>  <tr><td colspan='12'><table style='width:100%;'><tbody> <tr><th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; padding:30px 0; font-size:11px;'>Name & Signature of <br/> Importer/Agent/Esoort Officer</th><th style='font-size:11px; border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:right; padding:30px 0;'>Supervisor of CWC</th></tr> </tbody></table></td></tr>  <tr><td colspan='12' style='text-align:left;'><br/>Delivered <u>" + NoOfPkg + "</u> No of Units at Shed No <u>" + Godown + "</u> Grid No <u>" + Location + "</u> on <span>" + IssueDt + "</span></td></tr> <tr><th colspan='12' style='text-align:right;'><br/>Shed In-Charge</th></tr> <tr><td colspan='12' style='text-align:left;'><br/>Received <u>" + NoOfPkg + "</u> No of Units/ Container in Good Condition.</td></tr> <tr><th colspan='12' style='text-align:right;'><br/>Signature of Importer/Agent</th></tr></thead></table></td></tr></tbody></table>";
            }
            else
            {
                Html = "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='6' style='text-align:center;font-weight:600;'>CENTRAL WAREHOUSING CORPORATION<br/>(A GOVT. OF INDIA UNDERTAKING)<br/><br/>Issue Slip of Container Freight Station, Kolkata.</th></tr></thead><tbody style='border:1px solid #000;'><tr><td colspan='6' style='border:1px solid #000;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='border-bottom:1px solid #000;text-align:center;width:20%;'>Container</th><th style='border-bottom:1px solid #000;text-align:center;width:15%;'>Size P.N.R No Via No.</th><th style='border-bottom:1px solid #000;text-align:center;'>Vessel Name</th><th style='border-bottom:1px solid #000;text-align:center;'>Bill of Entry No.</th><th style='border-bottom:1px solid #000;text-align:center;'>Bill of Entry Date</th></tr></thead><tbody style='border-bottom:1px solid #000;'><tr><td style='text-align:center;'><span>" + ContainerNo + "</span></td><td style='text-align:center;'><span>" + Size + "</span></td><td style='text-align:center;'><span>" + Vessel + "</span></td><td style='text-align:center;'><span>" + BOENo + "</span></td><td style='text-align:center;'><span>" + BOEDate + "</span></td></tr></tbody></table></td></tr><tr><td colspan='6' style='border:1px solid #000;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='border-bottom:1px solid #000;text-align:center;'>C.H.A Name.</th><th style='border-bottom:1px solid #000;text-align:center;'>Shipping Agent</th><th style='border-bottom:1px solid #000;text-align:center;'>Importer</th><th style='border-bottom:1px solid #000;text-align:center;width:30%;'>Cargo Description</th><th style='border-bottom:1px solid #000;text-align:center;'>Marks & No.</th></tr></thead><tbody><tr><td style='text-align:center;'><span>" + CHA + "</span></td><td style='text-align:center;'><span>" + ShippingLine + "</span></td><td style='text-align:center;'><span>" + Importer + "</span></td><td style='text-align:center;'><span>" + CargoDescription + "</span></td><td style='text-align:center;'><span>" + MarksNo + "</span></td></tr></tbody></table></td></tr><tr><td colspan='6' style='border:1px solid #000;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='border-bottom:1px solid #000;text-align:center;'>Line No</th><th style='border-bottom:1px solid #000;text-align:center;'>Rotation</th><th style='border-bottom:1px solid #000;text-align:center;'>Weight</th><th style='border-bottom:1px solid #000;text-align:center;'>S/L Delivery Note No.</th><th style='border-bottom:1px solid #000;text-align:center;'>Date of Receipt of Cont.</th><th style='border-bottom:1px solid #000;text-align:center;'>Date of De-Stuffing/Delivery</th></tr></thead><tbody><tr><td style='text-align:center;'><span>" + LineNo + "</span></td><td style='text-align:center;'><span>" + Rotation + "</span></td><td style='text-align:center;'><span>" + Weight + "</span></td><td style='text-align:center;'><span>" + "" + "</span></td><td style='text-align:center;'><span>" + ArrivalDate + "</span></td><td style='text-align:center;'><span>" + DestuffingDate + "</span></td></tr></tbody></table></td></tr><tr><td colspan='6' style='border:1px solid #000;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='border-bottom:1px solid #000;text-align:center;'>Shed/Grid No.</th><th style='border-bottom:1px solid #000;text-align:center;'>Total CWC Dues</th><th style='border-bottom:1px solid #000;text-align:center;'>CR No. & Date</th><th style='border-bottom:1px solid #000;text-align:center;'>Valid Till Date</th></tr></thead><tbody><tr><td style='text-align:center;'><span>" + Location + "</span></td><td style='text-align:center;'><span>" + ObjIssueSlip.TotalCWCDues + "</span></td><td style='text-align:center;'><span>" + ObjIssueSlip.CRNoDate + "</span></td><td style='text-align:center;'><span>" + "" + "</span></td></tr></tbody></table></td></tr><tr><td colspan='6' style='border:1px solid #000;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='text-align:left;'><br/><br/><br/>Name & Signature of Importer / Agent</th><th style='text-align:right;'><br/><br/><br/>Signature of CWC</th></tr><tr><th colspan='2' style='text-align:left;'><br/><tr>Delivered............... No of Units at Shed No...Grid No... ....... on <span>" + DateTime.Now.ToString("dd/MM/yyy") + "</span></th></tr><tr><th colspan='2' style='text-align:right;'><br/>Shed In-Charge</th></tr><tr><th colspan='2' style='text-align:left;'><br/>Received....... ....... No of Units/ Container in Good Condition.</th></tr><tr><th colspan='2' style='text-align:right;'><br/>Signature of Importer/Agent</th></tr></thead></table></td></tr></tbody></table>";
            }
            //  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th style='width:15%;text-align:left;'><img src='IMGSRC' width='50%;'/></th><th style='text-align:center;'><span style='font-size:16pt;'><strong>CENTRAL WAREHOUSING CORPORATION</strong></span><br/><span>(A GOVT. OF INDIA UNDERTAKING)<br/>" + CompanyAddress + "</span></th></tr></thead><tbody><tr><td style='text-align:left;'><span style='border-bottom:1px solid #000;'></span></td><td style='text-align:right;'><span style='border-bottom:1px solid #000;'></span></td></tr><tr><td colspan='2' style='text-align:center;'><br/><span style='border-bottom:1px solid #000;font-size:12pt;font-weight:600;'>Issue Slip Of Container Freight Station.</span></td></tr><tr><td colspan='2' style='text-align:center;'><br/></td></tr><tr><td colspan='2' style='text-align:left;'><span style='border-bottom:1px solid #000;'></span><span style='border-bottom:1px solid #000;'></span></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:5px;text-align:center;'>SL. NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>CONTAINER NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>SIZE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>Bill of Entry No.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>Bill of Entry Date</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:5px;'>" + Serial + "</td><td style='border:1px solid #000;padding:5px;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:5px;'>" + Size + "</td><td style='border:1px solid #000;padding:5px;'>" + BOENo + "</td><td style='border:1px solid #000;padding:5px;'>" + BOEDate + "</td></tr></tbody> </table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><tbody><tr><td><span></span></td><td><br/><br/></td></tr></tbody></table></td></tr></tbody></table>";


            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                Rh.HeadOffice = this.HeadOffice;
                Rh.HOAddress = this.HOAddress;
                Rh.ZonalOffice = this.ZonalOffice;
                Rh.ZOAddress = this.ZOAddress;
                Rh.GeneratePDF(Path, Html);
            }
            return "/Docs/" + Session.SessionID + "/IssueSlip" + IssueSlipId + ".pdf";
        }

        #endregion

        #region BTT Cargo Print
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult BTTCargoPrint(int BTTId)
        {
            Hdb_ExportRepository objIR = new Hdb_ExportRepository();
            objIR.BTTCargoPrint(BTTId);
            if (objIR.DBResponse.Data != null)
            {
                Hdb_BTTCargoEntry objMdl = new Hdb_BTTCargoEntry();
                objMdl = (Hdb_BTTCargoEntry)objIR.DBResponse.Data;
                string Path = GeneratePDFForBTT(objMdl, BTTId);
                return Json(new { Status = 1, Message = Path });
            }
            else
                return Json(new { Status = -1, Message = "Error" });
        }
        [NonAction]
        public string GeneratePDFForBTT(Hdb_BTTCargoEntry objMdl, int BTTId)
        {
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/BTTCargoPrint" + BTTId + ".pdf";
            string ShippingBillNo = "", CartingAppNo = "", Serial = "", ShippingBillNoftr = "", CartingDate = "", ShippingBillDate = "", BTTQuantity = "";
            string NoOfUnits = "";
            string BTTWeight = "", Fob = "";
            int Count = 0;
            string Sline = "";
            //string Html = "";
            string CompanyAddress = "";
            CompanyRepository ObjCR = new CompanyRepository();
            List<Company> LstCompany = new List<Company>();
            ObjCR.GetAllCompany();
            if (ObjCR.DBResponse.Data != null)
            {
                LstCompany = (List<Company>)ObjCR.DBResponse.Data;
                CompanyAddress = LstCompany[0].CompanyAddress;
            }

            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Path))
            {
                System.IO.File.Delete(Path);
            }
            StringBuilder Html = new StringBuilder();

            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin:0;'><tbody>");

            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin:0;'><tbody>");
            Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            Html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>APPLICATION FOR BACK TO TOWN CARGO</label></td>");
            Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");

            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            Html.Append("<thead><tr><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:50px;'>Sl.No.</th>");
            Html.Append("<th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:200px;'>Shipping Bill No.</th>");
            Html.Append("<th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:150px;'>Carting No. / <br/> Container No.</th>");
            Html.Append("<th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:100px;'>No. of <br/> Units / Size</th>");
            Html.Append("<th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:100px;'>Weight</th>");
            Html.Append("<th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:120px;'>FOB Value</th></tr></thead>");
            Html.Append("<tbody>");
            //StringBuilder Html1 = new StringBuilder();
            objMdl.lstBTTCargoEntryDtl.ToList().ForEach(item =>
            {
                ShippingBillNo = item.ShippingBillNo;
                CartingAppNo = item.CartingAppNo;
                NoOfUnits = item.NoOfUnits.ToString();
                BTTQuantity = item.BTTQuantity.ToString();
                BTTWeight = item.BTTWeight.ToString();
                Fob = item.Fob.ToString();
                Serial = (Serial == "") ? (++Count).ToString() : ((++Count).ToString());
                CartingDate = item.CartingDate;
                ShippingBillDate = item.ShippingBillDate;
                Html.Append("<tr>");
                Html.Append("<td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:50px;'>" + Serial + "</td>");
                Html.Append("<td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:200px;'>" + ShippingBillNo + "</td>");
                Html.Append("<td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:150px;'>" + CartingAppNo + "</td>");
                Html.Append("<td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:100px;'>" + BTTQuantity + "</td>");
                Html.Append("<td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:100px;'>" + BTTWeight + "</td>");
                Html.Append("<td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px; width:120px;'>" + Fob + "</td>");
                Html.Append("</tr>");
                ShippingBillNoftr = ShippingBillNoftr + ShippingBillNo + ",";

            });
            ShippingBillNoftr = ShippingBillNoftr.TrimEnd(',');
            Html.Append("</tbody>");
            Html.Append("</table>");
            Html.Append("</td></tr>");
            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table style='width:100%; border-collapse:collapse;'><tbody>");
            Html.Append("<tr><td><span><br/></span></td></tr>");
            Html.Append("<tr><th style='font-size:13px; text-align: right;'>EXPORTER/CHA</th></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");

            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            Html.Append("<tr><td colspan='1' valign='top' width='30%' style='font-size:13px;'>Exporter Name</td><td>:</td><td colspan='2' valign='top' width='70%' style='font-size:13px;'>" + objMdl.ExporterImporterName + "</td></tr>");
            Html.Append("<tr><td colspan='1' valign='top' width='30%' style='font-size:13px;'>Storage Charges</td><td>:</td><td colspan='2' valign='top' width='70%' style='font-size:13px;'>" + objMdl.StorageAmt + "</td></tr>");
            Html.Append("<tr><td colspan='1' valign='top' width='30%' style='font-size:13px;'>Handling Charges</td><td>:</td><td colspan='2' valign='top' width='70%' style='font-size:13px;'>" + objMdl.HTTotalAmt + "</td></tr>");
            Html.Append("<tr><td colspan='1' valign='top' width='30%' style='font-size:13px;'>Other</td><td>:</td><td colspan='2' valign='top' width='70%' style='font-size:13px;'>" + objMdl.OthersAmt + "</td></tr>");
            Html.Append("<tr><td colspan='1' valign='top' width='30%' style='font-size:13px;'>Total</td><td>:</td><td colspan='2' valign='top' width='70%' style='font-size:13px;'>" + objMdl.Total + "</td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            Html.Append("<tr><td colspan='12'>");
            Html.Append("<p style='font-size: 12px; margin: 0 0 5px; line-height:18px;'>A sum of Rs <u>" + objMdl.Total + "</u> Rupess <u>" + objCurr.changeCurrencyToWords(objMdl.Total.ToString("0")) + "</u> ) received vide Cr. No " + ((objMdl.CrNo == "" || objMdl.CrNo == null) ? "______________" : "<u>" + objMdl.CrNo + "</u>") + " Date <u>" + objMdl.CrDate + "</u> Debited to SD A/C </p> ");
            Html.Append("</td></tr>");

            Html.Append("<tr><th colspan='12' style='font-size:13px; text-align: right;'>Back to Town Cargo Permitted</th></tr>");
            Html.Append("<tr><td><span><br/></span></td></tr>");
            Html.Append("<tr><td width='80%' colspan='10'></td><td style='font-size:12px; text-align: center; font-weight:bold;'>Incharge</td></tr>");

            Html.Append("<tr><td colspan='12'>");
            Html.Append("<p style='font-size: 12px; margin: 0 0 5px; line-height:18px;'>Delivered <u>" + (objMdl.lstBTTCargoEntryDtl.ToList().Sum(x => x.BTTQuantity)) + "</u> No. of Units on <u><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></u> Covered Under Shipping Bill No " + ((ShippingBillNoftr == "" || ShippingBillNoftr == null) ? "______________" : "<u>" + ShippingBillNoftr + "</u>") + " Date : <u>" + ((ShippingBillDate == "" || ShippingBillDate == null) ? "______________" : "<u>" + ShippingBillDate + "</u>") + "</u> and Carting No <u>" + CartingAppNo + "</u> Date : <u>" + CartingDate + "</u> </p>");
            Html.Append("</td></tr>");

            Html.Append("<tr><td><span><br/></span></td></tr>");
            Html.Append("<tr><th colspan='12' style='font-size:13px; text-align: right;'>Shed Incharge</th></tr>");
            Html.Append("<tr><td><span><br/><br/></span></td></tr>");

            Html.Append("<tr>");
            Html.Append("<td colspan='6' style='font-size:13px;' width='50%'>Entries made in Carting Register</td>");
            Html.Append("<td colspan='6' style='font-size:13px;' width='50%' align='right'>Received <u>" + objMdl.lstBTTCargoEntryDtl.ToList().Sum(x => x.BTTQuantity) + "</u> No. of Units in Good Condition</td>");
            Html.Append("</tr>");
            Html.Append("<tr><td><span><br/></span></td></tr>");

            Html.Append("<tr>");
            Html.Append("<th align='left' colspan='8' style='font-size:12px;' width='70%'>Assistant</th>");
            Html.Append("<th align='right' colspan='4' style='font-size:12px;' width='35%'>Signature of CHA/Exporter</th>");
            Html.Append("</tr>");

            Html.Append("</tbody></table>");



            //Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><thead><tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='90%' valign='top' align='center'><h1 style='font-size: 18px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='display: block; font-size: 12px; font-weight:bold;'>(A GOVT. OF INDIA UNDERTAKING)</label><br /><span style='display: block; font-size: 11px; text-transform: uppercase; padding-bottom: 10px; font-weight:bold;'>" + CompanyAddress + "</span></td><td valign='top'><img align='right' src='ISO' width='100'/></td></tr></thead><tbody><tr><td style='text-align:left;' colspan='2'>No.<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderNo + "</span></td><td style='text-align:right; width:20%;'>Date<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderDate + "</span></td></tr><tr><td colspan='4' style='text-align:center;'><br/><span style='border-bottom:1px solid #000;font-size:12pt;font-weight:600;'>JOB ORDER</span></td></tr><tr><td colspan='4' style='text-align:center;'><br/>Please arrange to bring / shift the Import / Export Load / Empty container</td></tr><tr><td colspan='4' style='text-align:left;'>from<span style='border-bottom:1px solid #000;'> " + objMdl.FromLocation + " </span> to<span style='border-bottom:1px solid #000;'> " + objMdl.ToLocation + " </span></td></tr><tr><td colspan='4'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:5px;text-align:center;'>SL. NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>CONTAINER NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>SIZE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>S. LINE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>LOADED / EMPTY</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Serial + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Size + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Sline + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + objMdl.ContainerType + "</td></tr></tbody> </table></td></tr><tr><td colspan='4'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><tbody><tr></tr><tr><span><br/><br/><br/><br/><br/><br/></span></tr><tr><td colspan='6' style='padding-top:150px;'>Copy to:- <span></span></td><td colspan='6' style='padding-top:150px;text-align:right;'>SR.ASSTT.MANAGER</td></tr></tbody></table></td></tr></tbody></table>";

            // string Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th style='width:15%;text-align:left;'><img src='IMGSRC' width='50%;'/></th><th style='text-align:center;'><span style='font-size:16pt;'><strong>CENTRAL WAREHOUSING CORPORATION</strong></span><br/><span>(A GOVT. OF INDIA UNDERTAKING)<br/>CONTAINER FREIGHT STATION<br/>18, COAL DOCK ROAD, KOLKATA - 700 043</span></th></tr></thead><tbody><tr><td style='text-align:left;'>No.<span style='border-bottom:1px solid #000;'> "+objMdl.JobOrderNo+"</span></td><td style='text-align:right;'>Date<span style='border-bottom:1px solid #000;'> "+objMdl.JobOrderDate+"</span></td></tr><tr><td colspan='2' style='text-align:center;'><br/><span style='border-bottom:1px solid #000;font-size:12pt;font-weight:600;'>JOB ORDER</span></td></tr><tr><td colspan='2' style='text-align:center;'><br/>Please arrange to bring / shift the Import / Export Load / Empty container</td></tr><tr><td colspan='2' style='text-align:left;'>from<span style='border-bottom:1px solid #000;'> "+objMdl.FromLocation+" </span> to<span style='border-bottom:1px solid #000;'> "+objMdl.ToLocation+" </span></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:5px;text-align:center;'>SL. NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>CONTAINER NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>SIZE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>S. LINE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>LOADED / EMPTY</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:5px;'>"+ Serial + "</td><td style='border:1px solid #000;padding:5px;'>"+ContainerNo+"</td><td style='border:1px solid #000;padding:5px;'>"+Size+"</td><td style='border:1px solid #000;padding:5px;'>"+objMdl.ShippingLineName+"</td><td style='border:1px solid #000;padding:5px;'>"+objMdl.ContainerType+"</td></tr></tbody> </table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><tbody><tr><td>Copy to:- <span></span></td><td><br/><br/>SR.ASSTT.MANAGER</td></tr></tbody></table></td></tr></tbody></table>";
            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = this.HeadOffice;
                rh.HOAddress = this.HOAddress;
                rh.ZonalOffice = this.ZonalOffice;
                rh.ZOAddress = this.ZOAddress;
                rh.GeneratePDF(Path, Html.ToString());
            }
            return "/Docs/" + Session.SessionID + "/BTTCargoPrint" + BTTId + ".pdf";
        }
        #endregion

        #region PV Report
        [HttpGet]
        public ActionResult PVReport()
        {
            HDBMasterRepository ObjGR = new HDBMasterRepository();
            ObjGR.GetAllGodown();
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPVReport(Hdb_PV ObjPV)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                if (ObjPV.Module == "Import")
                    ObjRR.GetPVReportImport(ObjPV);
                else if (ObjPV.Module == "Export")
                    ObjRR.GetPVReportExport(ObjPV);
                else
                    ObjRR.GetPVReportBond(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null && ObjPV.Module == "Import")
                {
                    List<Hdb_ImpPVReport> lstData = new List<Hdb_ImpPVReport>();
                    lstData = (List<Hdb_ImpPVReport>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFImpPVReport(lstData, ObjPV.AsOnDate, ObjPV.GodownName);
                }
                else if (ObjRR.DBResponse.Data != null && ObjPV.Module == "Export")
                {
                    List<Hdb_ExpPVReport> lstData = new List<Hdb_ExpPVReport>();
                    lstData = (List<Hdb_ExpPVReport>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFPExpPVReport(lstData, ObjPV.AsOnDate, ObjPV.GodownName);
                }
                else
                {
                    List<Hdb_BondPVReport> lstData = new List<Hdb_BondPVReport>();
                    lstData = (List<Hdb_BondPVReport>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFBondPVReport(lstData, ObjPV.AsOnDate, ObjPV.GodownName);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImpPVReport(List<Hdb_ImpPVReport> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "PVReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>Physical Verification Report for Import Cargo</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size:12px;'><b>As On Date - </b> " + Date + "</span><br/><span style='font-size:12px;'><b>Shed Cd - </b>" + GodownName + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Physical Verification Report for Import Cargo</label></td></tr>");
                //Pages.Append("</tbody></table>");
                //Pages.Append("</td></tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='6' style='font-size:12px; width:50%;'><b>As On Date - </b> " + Date + "</td>");
                Pages.Append("<td colspan='6' style='font-size:12px; width:50%; text-align:right;'><b>Shed Cd - </b>" + GodownName + "</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;'>OBL No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;'>OBL Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Date of Arrival</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Dstf Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CFS Code</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>LCL/FCL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;'>Importer</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Item No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>No Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Rcvd Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Gr W</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Value</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Duty</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Slot No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Cargo Description</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:15%;'>Remarks</th></tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");

                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BOLNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BOLDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.EntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.DestuffingEntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.LCLFCL + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CommodityAlias + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.NoOfUnits + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.NoOfUnitsRec + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Weight.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Area.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CIFValue.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Duty.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.LocationName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CargoDescription + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='9' style='border-bottom:1px solid #000;border-right:1px solid #000;'>Total :</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnits) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnitsRec) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.CIFValue).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Duty).ToString("0.00") + "</th>");
                Pages.Append("<th colspan='3' style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("</tr>");

                //Pages.Append("<tr>");
                //Pages.Append("<th colspan='5' style='text-align:left;'>Total :</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnits) + "</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnitsRec) + "</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight).ToString("0.00") + "</th>");
                //Pages.Append("<th colspan='3' style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area).ToString("0.00") + "</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.CIFValue).ToString("0.00") + "</th>");
                //Pages.Append("<th colspan='3' style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.Duty).ToString("0.00") + "</th>");
                //Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        [NonAction]
        public string GeneratePDFPExpPVReport(List<Hdb_ExpPVReport> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "PVReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Pages.Append("<td width='180%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>Container Freight Station, Kukatpally</span></td></tr>");
                //Pages.Append("</tbody></table>");
                //Pages.Append("</td></tr>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 14px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 14px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 14px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 16px; font-weight:bold;'>Physical Verification Report for Export Cargo</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='6' style='font-size:14px; width:50%;'><b>Stock Register of Shed No...</b> " + GodownName + "</td>");
                Pages.Append("<td colspan='6' style='font-size:14px; width:50%; text-align:right;'><b>As on Date...</b> " + Date + "</td>");
                Pages.Append("</tr>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                Pages.Append("<thead><tr><td colspan='12'><table style='border-top:1px solid #000;border-left:1px solid #000;border-right:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");                
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:3%;'>Sr</th> ");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:8%;'>CARTING DATE</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:6%;'>CARTING NO.</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:6%;'>S.B NO.</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:8%;'>DATE</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:12%;'>EXPORTER</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:12%;'>CHA</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:10%;'>CARGO</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:6%;'>TYPE OF PKGS</ th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:5%;'>NO.OF PKGS</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:8%;'>WEIGHT</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:10%;'>FOB VALUE</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:7%;'>MEASURE-MENT</th>");
                Pages.Append("<th style='text-align:left;border-right:1px solid #000;padding:10px;width:6%;'>LOCATION</th>");
                Pages.Append("<th style='text-align:left;padding:10px;width:7%;'>Remarks</th>");
                Pages.Append("</tr></tbody></table></td></tr></thead>");

                Pages.Append("<tbody>");
                //Loop
                lstData.Select(x => new { ShippingLineId = x.ShippingLineId, EximTraderName = x.EximTraderName, EximTraderAlias = x.EximTraderAlias }).Distinct().ToList().ForEach(x =>
                {
                    Pages.Append("<tr><td colspan='12' style='padding:0;'>");
                    Pages.Append("<table style='margin:0 0 15px;border:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                    Pages.Append("<tr><td colspan='12'>");
                    Pages.Append("<table style='margin:0;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                    Pages.Append("<th style='text-align:left;padding:10px;width:5.5%;'>" + x.EximTraderAlias + "</th> ");
                    Pages.Append("<td style='text-align:left;padding:10px;width:100%;'>" + x.EximTraderName + "</td> ");
                    Pages.Append("</tr></tbody></table>");
                    Pages.Append("</td></tr>");
                    //Loop
                    int i = 1;
                    lstData.Where(y => y.ShippingLineId == x.ShippingLineId).ToList().ForEach(y =>
                    {
                        Pages.Append("<tr><td colspan='12'>");
                        Pages.Append("<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");

                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:3%;'>" + i + "</td> ");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:8%;'>" + y.RegisterDate + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:6%;'>" + y.CartingNo + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:6%;'>" + y.ShippingBillNo + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:8%;'>" + y.ShippingBillDate + "</td> ");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:12%;'>" + y.ExporterName + "</td> ");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:12%;'>" + y.ChaName + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:10%;'>" + y.CargoDescription + "</td> ");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:6%;'>" + y.PackageType + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:5%;'>" + y.Units + "</td> ");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:8%;'>" + y.Weight.ToString("0.00") + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:10%;'>" + y.Fob + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:7%;'>" + y.Measurement + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:6%;'>" + y.LocationName + "</td>");
                        Pages.Append("<td style='text-align:left;border-top:1px solid #000;border-right:1px solid #000;padding:10px;width:6%;'>" + y.Remarks + "</td>");


                        Pages.Append("</tr></tbody></table>");
                        Pages.Append("</td></tr>");
                        i++;
                    });
                    //loop end

                    Pages.Append("<tr><td colspan='12'>");
                    Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:6%;'></th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:3%;'></th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:8%;'>Total :</th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:8%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Count() + "</th> ");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:10%;'></th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:10%;'></th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:10%;'></th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:18%;'></th>");
                    Pages.Append("<th style='text-align:right;border-top:1px solid #000;padding:10px;width:5%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Units) + "</th> ");
                    Pages.Append("<th style='text-align:right;border-top:1px solid #000;padding:10px;width:8%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Weight).ToString("0.00") + "</th>");
                    Pages.Append("<th style='text-align:right;border-top:1px solid #000;padding:10px;width:10%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Fob) + "</th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:7%;'></th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:6%;'></th>");
                    //Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:7%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Area).ToString("0.00") + "</th>");
                    Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:7%;'></th>");

                    Pages.Append("</tr></tbody></table>");
                    Pages.Append("</td></tr>");

                    Pages.Append("</tbody></table>");
                    Pages.Append("</td></tr>");
                });
                //loop  end

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:6%;'></th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:3%;'></th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'>Total :</th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'>" + lstData.Count() + "</th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:10%;'></th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:10%;'></th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:10%;'></th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:18%;'></th>");
                Pages.Append("<th style='text-align:right;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:5%;'>" + lstData.Sum(x => x.Units) + "</th>");
                Pages.Append("<th style='text-align:right;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'>" + lstData.Sum(x => x.Weight).ToString("0.00") + "</th>");
                Pages.Append("<th style='text-align:right;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:10%;'>" + lstData.Sum(x => x.Fob) + "</th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:7%;'></th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:6%;'></th>");
                //Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:7%;'>" + lstData.Sum(x => x.Area).ToString("0.00") + "</th>");
                Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:7%;'></th>");
                Pages.Append("</tr></tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</tbody>");
                Pages.Append("</table>");
                Pages.Append("</td></tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                /*if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }*/
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        public string GeneratePDFBondPVReport(List<Hdb_BondPVReport> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "PVReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                decimal Value = 0, Duty = 0, Total = 0;


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + lstData[0].CompAddress + "</span><br/><label style='font-size: 12px;'>Email: -" + lstData[0].CompEmail + "</label><br/><label style='font-size: 12px;'>PV STATEMENT OF LIVE BONDS IN GODOWN NO : " + GodownName + " AS ON " + Date + "</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>GODOWN NO : " + GodownName + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>SL. NO</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>BOND NO</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>BOND DATE</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>NAME OF THE IMPORTER</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>DESCRIPTION OF GOODS</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>NO OF PKGS</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>WT.IN. KGS</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>ACCESIBLE VALUE</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>DUTY</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>TOTAL</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Location</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>AREA IN SQ. MT</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>CHA</th><th style='border-bottom:1px solid #000;'>Remarks</th></tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");

                lstData.ForEach(item =>
                {

                    Value = item.Value;
                    Duty = item.Duty;
                    Total = Math.Round((Value + Duty), 2);


                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BondNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BondDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.ItemDesc + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Units + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Weight + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Value + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + (item.Value + item.Duty) + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Location + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CHA + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;'>"+item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-bottom:1px solid #000;text-align:left;'>Total :</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Units) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Value) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Duty) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + (lstData.Sum(x => x.Value) + lstData.Sum(x => x.Duty)) + "</th>");
                Pages.Append("<th colspan='3' style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area) + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        /*  [HttpPost]
          [ValidateAntiForgeryToken]
          public JsonResult GetPVReport(Hdb_PV ObjPV)
          {
              if (ModelState.IsValid)
              {
                  Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                  ObjRR.GetPVReport(ObjPV);
                  string Path = "";
                  if (ObjRR.DBResponse.Data != null)
                  {
                      List<Hdb_PVReport> lstData = new List<Hdb_PVReport>();
                      lstData = (List<Hdb_PVReport>)ObjRR.DBResponse.Data;
                      Path = GeneratePDFPVReport(lstData, ObjPV.AsOnDate);
                  }
                  return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
              }
              else
              {
                  var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                  return Json(new { Status = 0, Message = ErrorMessage });
              }
          }
          [NonAction]
          public string GeneratePDFPVReport(List<Hdb_PVReport> lstData, string Date)
          {
              try
              {
                  var FileName = "PVReport.pdf";
                  StringBuilder Pages = new StringBuilder();
                  string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                  Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                  Pages.Append("<tr><td colspan='4'>");
                  Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                  Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                  Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cwccfs@gmail.com</label><br/><label style='font-size: 14px; font-weight:bold;'>PV REPORT AS ON" + Date + "</label></td>");
                  Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                  Pages.Append("</tbody></table>");
                  Pages.Append("</td></tr>");
                  Pages.Append("</thead></table>");

                  Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Stack</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>CFS Code</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Party</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Commodity</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Package</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Weight</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>TSA No</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Bl No</th><th style='border-bottom:1px solid #000;'>Date of Receipt</th></tr></thead><tbody>");
                  lstData.ForEach(item =>
                  {
                      Pages.Append("<tr>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Stack + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CFSCode + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.PartyName + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CommodityName + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.NoOfUnits + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Weight + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.TSA + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BLNo + "</td>");
                      Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.ReceiptDate + "</td>");
                      Pages.Append("</tr>");
                  });
                  Pages.Append("</tbody></table>");
                  if (!Directory.Exists(LocalDirectory))
                  {
                      Directory.CreateDirectory(LocalDirectory);
                  }
                  if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                  {
                      System.IO.File.Delete(LocalDirectory + "/" + FileName);
                  }
                  Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                  Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                  using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                  {
                      ObjPdf.HeadOffice = this.HeadOffice;
                      ObjPdf.HOAddress = this.HOAddress;
                      ObjPdf.ZonalOffice = this.ZonalOffice;
                      ObjPdf.ZOAddress = this.ZOAddress;
                      ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                  }
                  return "/Docs/" + Session.SessionID + "/Report/" + FileName;
              }
              catch
              {
                  return "";
              }
          }*/
        #endregion

        #region SAC Register
        [HttpGet]
        public ActionResult SACRegister()
        {
            return PartialView("SACReport");
        }
        [HttpPost, ValidateAntiForgeryToken]
        public JsonResult GetSACRegister(Hdb_SAC objSAC)
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetSACDetails(objSAC.PeriodFrom, objSAC.PeriodTo);
            string Path = "";
            if (objRR.DBResponse.Data != null)
            {
                List<Hdb_SACRegister> lstSAC = new List<Hdb_SACRegister>();
                lstSAC = (List<Hdb_SACRegister>)objRR.DBResponse.Data;
                Path = GetSACHtml(lstSAC);
                return Json(new { Message = Path, Status = 1 });
            }
            return Json(new { Message = "", Status = 0 });
        }
        [NonAction]
        public string GetSACHtml(List<Hdb_SACRegister> lstSAC)
        {
            StringBuilder sb = new StringBuilder();

            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            sb.Append("<tr><td colspan='4'>");
            sb.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            sb.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
            sb.Append("<td width='10%' align='right'>");
            sb.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            sb.Append("<tr><td style='border:1px solid #333;'>");
            sb.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>Document No.F/CD/CFS/24</div>");
            sb.Append("</td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");

            sb.Append("<tr><td colspan='4'>");
            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            sb.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            sb.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:14px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:14px;'>Container Freight Station, Kukatpally <br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 16px; font-weight:bold;'>SAC REGISTER</label></td>");
            sb.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");
            sb.Append("</tbody></table>");

            sb.Append("<table cellspacing='0' cellpadding='5' style='border:1px solid #000; border-bottom:none; font-size:8pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            sb.Append("<thead><tr>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>S No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>SAC No & Date</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Date upto which valid</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Name of the Importer</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Name of CHA</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>custom Seal No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>BOL/AWB No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>BOE No. & Date</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Description of Cargo</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>No of Units</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Space allotted in sq. mtrs(Gross or Net)</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Advanced Charges Collected (Rs.)</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>C.R No. & Date</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Signature Of the Office Assisatant</th>");
            sb.Append("<th style='border-bottom:1px solid #000; text-align:center;'>Remarks</th>");
            sb.Append("</tr></thead>");
            sb.Append("<tbody>");
            int i = 1;
            lstSAC.ForEach(item =>
            {
                sb.Append("<tr>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + i + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.SacNo + " " + item.SacDate + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.ValidUpto + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.IMPName + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.CHAName + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.SealNo + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.BOLAWBNo + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.BOENo + " " + item.BOEDate + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.CargoDescription + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.NoOfUnits + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.AreaReserved + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.InvoiceAmt + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.ReceiptNo + " " + item.ReceiptDate + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'></td>");
                sb.Append("<td style='border-bottom:1px solid #000; text-align:center;'>" + item.Remarks + "</td>");
                sb.Append("</tr>");
                i++;
            });
            sb.Append("</tbody></table>");

            sb.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            sb.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

            string FileName = "SacRegister.pdf";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName))
            {
                System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName);
            }
            using (var RH = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
            {
                RH.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName, sb.ToString());
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region Bond Register
        [HttpGet]
        public ActionResult BondRegister()
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetBondNo();
            if (objRR.DBResponse.Data != null)
                ViewBag.GetBondNo = objRR.DBResponse.Data;
            else
                ViewBag.GetBondNo = null;
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetBondRegister(int DepositeAppId, string FromDate, string ToDate)
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetBondRegister(DepositeAppId, FromDate, ToDate);
            string Path = "";
            if (objRR.DBResponse.Data != null)
            {
                Hdb_BondRegister objBR = new Hdb_BondRegister();
                objBR = (Hdb_BondRegister)objRR.DBResponse.Data;
                Path = GetBondHtml(objBR, DepositeAppId);
                return Json(new { Message = Path, Status = 1 });
            }
            return Json(new { Message = "", Status = 0 });
        }
        [NonAction]
        public string GetBondHtml(Hdb_BondRegister objBR, int DepositeAppId)
        {
            List<string> lstSB = new List<string>();
            objBR.lstSACDetails.ForEach(item =>
            {
                StringBuilder sb = new StringBuilder();

                sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                sb.Append("<tr><td colspan='12'>");
                sb.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                sb.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
                sb.Append("<td width='4%' align='right'>");
                sb.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                sb.Append("<tr><td style='border:1px solid #333;'>");
                sb.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>F/CD/26</div>");
                sb.Append("</td></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr>");

                sb.Append("<tr><td colspan='12'>");
                sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                sb.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                sb.Append("<td width='160%' valign='top' align='center'><h1 style='font-size: 30px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:14px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:14px;'>" + objBR.lstSACDetails[0].CompanyAdd + "<br/>" + objBR.lstSACDetails[0].CompanyEmail + "</span><br/><label style='font-size: 14px; font-weight:bold;'>BOND REGISTER</label></td>");
                sb.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr>");

                string InvAmt = "", ReceiptNoandDate = "";
                objBR.lstAdvPayment.Where(y => y.SacNo == item.SacNo).ToList().ForEach(i =>
                                   {
                                       if (i.InvoiceAmt > 0)
                                       {
                                           if (InvAmt == "")
                                               InvAmt = i.InvoiceAmt.ToString();
                                           else
                                               InvAmt += ", " + i.InvoiceAmt.ToString();
                                       }
                                       if (i.ReceiptNo != "")
                                       {
                                           if (ReceiptNoandDate == "")
                                               ReceiptNoandDate = i.ReceiptNo + " " + i.ReceiptDate;
                                           else
                                               ReceiptNoandDate += ", " + i.ReceiptNo + " " + i.ReceiptDate;
                                       }
                                   });

                sb.Append("<tr><td colspan='12'>");
                sb.Append("<table cellpadding='0' cellspacing='0' style='width:100%; font-size:9pt; font-family:Verdana,Arial,San-serif;'><tbody>");
                sb.Append("<tr><th cellpadding='5' align='left' colspan='8' width='70%'>Name & Address of Importer <span style='font-weight:normal;'><u>" + item.IMPName + " " + item.IMPAdd + "</u></span></th>");
                sb.Append("<th cellpadding='5' align='left' colspan='4' width='30%'>Godown No. / Stack No. <span style='font-weight:normal;'><u>" + item.GodownName + "</u></span></th></tr>");
                sb.Append("<tr><th cellpadding='5' align='left' colspan='8' width='70%'>Name & Address of CHA <span style='font-weight:normal;'><u>" + item.CHAName + " " + item.CHAdd + "</u></span></th>");
                sb.Append("<th cellpadding='5' align='left' colspan='4' width='30%'>Bond No. & Date <span style='font-weight:normal;'><u>" + item.BondNo + " - " + item.BondDate + "</u></span></th></tr>");
                sb.Append("<tr><th cellpadding='5' align='left' colspan='8' width='70%'>Sac No. & Date <span style='font-weight:normal;'><u>" + item.SacNo + " " + item.SacDate + "</u></span> Area Booked<span style='font-weight:normal;'><u>" + item.AreaReserved + "</u></span></th>");
                sb.Append("<th cellpadding='5' align='left' colspan='4' width='30%'>Expiry date of inital <br/> bond period <span style='font-weight:normal;'><u>" + item.ValidUpto + "</u></span></th></tr>");
                sb.Append("<tr><th cellpadding='5' align='left' colspan='8' width='70%'>Advance charges <br/> received of sac <span style='font-weight:normal;'><u>" + InvAmt + "</u></span>  CR No. & Date <span style='font-weight:normal;'><u>" + ReceiptNoandDate + "</u></span></th>");
                sb.Append("<th cellpadding='5' align='left' colspan='4' width='30%'>In-To Bond B.O.E. No. & Date <span style='font-weight:normal;'><u>" + item.BondBOENo + " " + item.BondBOEDate + "</u></span></th></tr>");
                sb.Append("<tr><th cellpadding='5' align='left' colspan='8' width='70%'></th>");
                sb.Append("<th cellpadding='5' align='left' colspan='4' width='30%'>I.G.M No. & Date <span style='font-weight:normal;'><u>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</u></span></th></tr>");
                sb.Append("<tr><th cellpadding='5' align='left' colspan='8' width='70%'></th>");
                sb.Append("<th cellpadding='5' align='left' colspan='4' width='30%'>BL/AWB No. & BL/AWB Date <span style='font-weight:normal;'><u>" + item.BondAWBNo + " " + item.BondAWBDate + "</u></span></th></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr>");

                sb.Append("<tr><td colspan='12'>");
                sb.Append("<table style='border:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");

                sb.Append("<td colspan='4' width='30%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                sb.Append("<thead><tr><th colspan='12' style='font-size:12px;text-align:center;border-bottom:1px solid #000;padding:10px;'>RECEIPTS</th></tr>");
                sb.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                sb.Append("<tr><th width='5%' style='text-align:center;padding:5px;border-right:1px solid #000;'>Date</th>");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;'>No. of Units</th> ");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;'>Weight <br/> (M.T.)</th>");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;'>Area in sq. Mtrs. <br/>(Gross or Net)</th>");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;'>CIF Value</th>");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;'>Duty</th>");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;'>Total Value</th>");
                sb.Append("<th width='15%' style='text-align:center;padding:5px;'>Condition of Packages</th></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr></thead>");
                sb.Append("<tbody><tr><td cellspacing='0' cellpadding='0' colspan='12'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                if (objBR.lstUnloadingDetails.Where(y => y.DepositappId == item.DepositappId).ToList().Count > 0)
                {
                    objBR.lstUnloadingDetails.Where(y => y.DepositappId == item.DepositappId).ToList().ForEach(data =>
                    {
                        sb.Append("<tr><td width='5%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'>" + data.UnloadedDate + "</td> ");
                        sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'>" + data.UnloadedUnits.ToString() + "</td> ");
                        sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'>" + (data.UnloadedWeights / 1000).ToString("0.000") + "</td>");
                        sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'>" + data.AreaOccupied.ToString("0.000") + "</td>");
                        sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'>" + data.Value.ToString("0.000") + "</td>");
                        sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'>" + data.Duty.ToString("0.000") + "</td>");
                        sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'>" + (data.Value + data.Duty).ToString("0.000") + "</td>");
                        sb.Append("<td width='15%' style='text-align:center;padding:5px;border-bottom:1px solid #000;'>" + data.PackageCondition + "</td></tr>");
                    });
                }
                else
                {
                    sb.Append("<tr><td width='5%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'></td> ");
                    sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'></td> ");
                    sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'></td>");
                    sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'></td>");
                    sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'></td>");
                    sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'></td>");
                    sb.Append("<td width='10%' style='text-align:center;padding:5px;border-right:1px solid #000;border-bottom:1px solid #000;'></td>");
                    sb.Append("<td width='15%' style='text-align:center;padding:5px;border-bottom:1px solid #000;'></td></tr>");

                }
                sb.Append("</tbody></table>");
                sb.Append("</td></tr></tbody>");
                sb.Append("</table></td>");

                sb.Append("<td colspan='3' width='25%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                sb.Append("<thead><tr><th colspan='12' width='100%' style='font-size:12px;text-align:center;border-bottom:1px solid #000;padding:10px;'>ISSUES</th></tr>");
                sb.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                sb.Append("<tr><th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Ex-Bond BOE No & Date </th> ");
                sb.Append("<th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>DeliveryOrderNo & DeliveryDate</th> ");
                sb.Append("<th width='8%' style='text-align:center;border-right:1px solid #000;padding:5px;'>No. of Units</th> ");
                sb.Append("<th width='8%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Weight <br/> (M.T.)</th>");
                sb.Append("<th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Area released in sq. Mtrs. <br/>(Gross or Net)</th>");
                sb.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:5px;'>CIF Value</th>");
                sb.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Duty</th>");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;'>Total Value</th></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr></thead>");
                sb.Append("<tbody><tr><td colspan='12'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                if (objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).ToList().Count > 0)
                {
                    objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).ToList().ForEach(j =>
                    {
                        sb.Append("<tr><td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + j.BondBOENo + " - " + j.BondBOEDate + "</td> ");
                        sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + j.DeliveryOrderNo + " - " + j.DeliveryOrderDate +  "</td> ");
                        sb.Append("<td width='8%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + j.Units.ToString("") + "</td> ");
                        sb.Append("<td width='8%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + Convert.ToDecimal(j.Weight / 1000).ToString("0.000") + "</td>");
                        sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + j.SQM.ToString("0.000") + "</td>");
                        sb.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + j.Value.ToString("0.000") + "</td>");
                        sb.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + j.Duty.ToString("0.000") + "</td>");
                        sb.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:5px;'>" + (j.Value + j.Duty).ToString("0.000") + "</td></tr>");
                    });
                }
                else
                {
                    sb.Append("<tr><td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td> ");
                    sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td> ");
                    sb.Append("<td width='8%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='8%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:5px;'></td></tr>");

                }
                sb.Append("</tbody></table>");
                sb.Append("</td></tr></tbody>");
                sb.Append("</table></td>");

                sb.Append("<td colspan='1' width='10%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                sb.Append("<thead><tr><th colspan='12' width='100%' style='font-size:12px;text-align:center;border-bottom:1px solid #000;padding:10px;'>CHARGES REALISED</th></tr>");
                sb.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                sb.Append("<tr><th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Amount <br/> (Rs.)</th> ");
                sb.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Period <br/> Upto</th> ");
                sb.Append("<th width='10%' style='text-align:center;padding:5px;'>CR. No. & Date</th></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr></thead>");
                sb.Append("<tbody><tr><td colspan='12'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                if (objBR.lstDeliveryPaymentDet.Where(m => m.DepositappId == item.DepositappId).ToList().Count > 0)
                {
                    objBR.lstDeliveryPaymentDet.Where(m => m.DepositappId == item.DepositappId).ToList().ForEach(i =>
                    {
                        sb.Append("<tr><td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + i.InvoiceAmt.ToString("0.000") + "</td> ");
                        sb.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + i.DeliveryDate + "</td> ");
                        sb.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:5px;'>" + i.ReceiptNo + " " + i.ReceiptDate + "</td></tr>");
                    });
                }
                else
                {
                    sb.Append("<tr><td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td> ");
                    sb.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td> ");
                    sb.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:5px;'></td></tr>");
                }
                sb.Append("</tbody></table>");
                sb.Append("</td></tr></tbody>");
                sb.Append("</table></td>");

                sb.Append("<td colspan='4' width='30%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                sb.Append("<thead><tr><th colspan='12' width='100%' style='font-size:12px;text-align:center;border-bottom:1px solid #000;padding:10px;'>CLOSING BALANCE</th></tr>");
                sb.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                sb.Append("<tr><th width='10%' style='text-align:center;border-right:1px solid #000;padding:5px;'>No. of Units</th> ");
                sb.Append("<th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Qty. <br/> (M.T.)</th> ");
                sb.Append("<th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Balance area in sq. Mtrs. <br/>(Gross or Net)</th>");
                sb.Append("<th width='15%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Balance Value</th>");
                sb.Append("<th width='15%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Balance Duty</th>");
                sb.Append("<th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Signature of Custom Officer</th>");
                sb.Append("<th width='20%' style='text-align:center;border-right:1px solid #000;padding:5px;'>Signature of Custom Assistant</th>");
                sb.Append("<th width='20%' style='text-align:center;padding:5px;'>Remarks</th></tr>");
                sb.Append("</tbody></table>");
                sb.Append("</td></tr></thead>");
                sb.Append("<tbody><tr><td colspan='12'>");
                sb.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");

                if (objBR.lstDeliveryDetails.Where(n => n.DepositappId == item.DepositappId).ToList().Count > 0)
                {
                    objBR.lstDeliveryDetails.Where(x => x.DepositappId == item.DepositappId).ToList().ForEach(elem =>
                      {
                          int CBUnits = objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (int)x.UnloadedUnits) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId && m.DeliveryOrderDtlId <= elem.DeliveryOrderDtlId).Sum(x => (int)x.Units);
                          decimal CBWeight = (objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.UnloadedWeights) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId && m.DeliveryOrderDtlId <= elem.DeliveryOrderDtlId).Sum(x => (decimal)x.Weight)) / 1000;
                          decimal CBSq = (objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.AreaOccupied) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId && m.DeliveryOrderDtlId <= elem.DeliveryOrderDtlId).Sum(x => (decimal)x.SQM));
                          decimal CBValue = objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Value) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId && m.DeliveryOrderDtlId <= elem.DeliveryOrderDtlId).Sum(x => (decimal)x.Value);
                          decimal CBDuty = objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Duty) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId && m.DeliveryOrderDtlId <= elem.DeliveryOrderDtlId).Sum(x => (decimal)x.Duty);

                          sb.Append("<tr><td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + CBUnits.ToString("") + "</td> ");
                          sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + CBWeight.ToString("0.000") + "</td> ");
                          sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + CBSq.ToString("0.000") + "</td>");
                          sb.Append("<td width='15%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + CBValue.ToString("0.000") + "</td>");
                          sb.Append("<td width='15%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'>" + CBDuty.ToString("0.000") + "</td>");
                          sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                          sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                          sb.Append("<td width='20%' style='text-align:center;border-bottom:1px solid #000;padding:5px;'></td></tr>");
                      });
                }
                else
                {
                    sb.Append("<tr><td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td> ");
                    sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td> ");
                    sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='15%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='15%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:5px;'></td>");
                    sb.Append("<td width='20%' style='text-align:center;border-bottom:1px solid #000;padding:5px;'></td></tr>");
                }
                /*int CBUnits = objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (int)x.UnloadedUnits) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (int)x.Units);
                decimal CBWeight = (objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.UnloadedWeights) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Weight)) / 1000;
                decimal CBSq = (objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.AreaOccupied) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.SQM));
                decimal CBValue = objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Value) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Value);
                decimal CBDuty = objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Duty) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Duty);

                sb.Append("<tr><td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + CBUnits.ToString("") + "</td> ");
                sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + CBWeight.ToString("0.000") + "</td> ");
                sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + CBSq.ToString("0.000") + "</td>");
                sb.Append("<td width='15%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + CBValue.ToString("0.000") + "</td>");
                sb.Append("<td width='15%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + CBDuty.ToString("0.000") + "</td>");
                sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td>");
                sb.Append("<td width='20%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td>");
                sb.Append("<td width='20%' style='text-align:center;border-bottom:1px solid #000;padding:10px;'></td></tr>");*/



                sb.Append("</tbody></table>");
                sb.Append("</td></tr></tbody>");
                sb.Append("</table></td>");

                sb.Append("</tr></tbody></table>");
                sb.Append("</td></tr>");
                sb.Append("</tbody></table>");

                sb.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                sb.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(sb.ToString());
            });
            string FileName = "BondRegister" + DepositeAppId + ".pdf";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName))
            {
                System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName);
            }
            using (var RH = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 10f, 10f, false, true))
            {
                RH.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region Appraisement Print

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintAppraismentDet(int CustomAppraisementId)
        {
            HDB_ImportRepository ObjIR = new HDB_ImportRepository();
            ObjIR.GetCustomAppraisementForPrint(CustomAppraisementId);
            if (ObjIR.DBResponse.Data != null)
            {
                Hdb_CustomAppraisement ObjDestuff = new Hdb_CustomAppraisement();
                ObjDestuff = (Hdb_CustomAppraisement)ObjIR.DBResponse.Data;
                string Path = GeneratePDFForDestuffSheet(ObjDestuff, CustomAppraisementId);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        [NonAction]
        public string GeneratePDFForDestuffSheet(Hdb_CustomAppraisement ObjDestuff, int CustomAppraisementId)
        {
            StringBuilder sb = new StringBuilder();

            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            sb.Append("<tr><td colspan='4'>");
            sb.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            sb.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
            sb.Append("<td width='10%' align='right'>");
            sb.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            sb.Append("<tr><td style='border:1px solid #333;'>");
            sb.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>Document No.F/CD/CFS/21</div>");
            sb.Append("</td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");

            sb.Append("<tr><td colspan='4'>");
            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            sb.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            sb.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:14px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:14px;'>Container Freight Station, Kukatpally <br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 16px; font-weight:bold;'>FORMAT FOR FCL CONTAINER</label><br/><label style='font-size: 16px; font-weight:bold;'>CUSTOM EXAMINATION REGISTER</label></td>");
            sb.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");
            sb.Append("</tbody></table>");

            sb.Append("<table cellspacing='0' cellpadding='5' style='border:1px solid #000; border-bottom:none; font-size:8pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            sb.Append("<thead><tr>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Sl No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Date</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Container No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Size</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>IGM/ITEM No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Cargo Description</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>CHA No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Name of Importer</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Seal No.</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>No of pkgs</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Exam Date</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Destuff / Restuff</th>");
            sb.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>Sign of CHA</th>");
            sb.Append("</tr></thead>");
            sb.Append("<tbody>");
            int i = 1;
            ObjDestuff.LstAppraisement.ForEach(item =>
            {
                sb.Append("<tr>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + i + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.BOEDate + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.ContainerNo + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.Size + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.IGMNo + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.CargoDescription + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.CHA + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.Importer + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.SealNo + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.NoOfPackages + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.ExamDate + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.DestuffRestuff + "</td>");
                sb.Append("<td style='border-bottom:1px solid #000; border-right:1px solid #000; text-align:center;'>" + item.SignOfCha + "</td>");
                sb.Append("</tr>");
                i++;
            });
            sb.Append("</tbody></table>");

            sb.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            sb.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

            string FileName = "CUSTOM EXAMINATION RAGISTER.pdf";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName))
            {
                System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName);
            }
            using (var RH = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
            {
                RH.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName, sb.ToString());
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        #endregion

        #region Stack Card Report
        [HttpGet]
        public ActionResult StackReport()
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetBondNoForStackReport();
            if (objRR.DBResponse.Data != null)
                ViewBag.GetBondNo = objRR.DBResponse.Data;
            else
                ViewBag.GetBondNo = null;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetStackReport(int DepositeAppId)
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetBondStackReport(DepositeAppId);
            string Path = "";
            if (objRR.DBResponse.Data != null)
            {
                Hdb_BondStackReport objBR = new Hdb_BondStackReport();
                objBR = (Hdb_BondStackReport)objRR.DBResponse.Data;
                Path = GenerateStackHtml(objBR, DepositeAppId);
                return Json(new { Message = Path, Status = 1 });
            }
            return Json(new { Message = "", Status = 0 });
        }

        [NonAction]
        public string GenerateStackHtml(Hdb_BondStackReport objBR, int DepositeAppId)
        {
            List<string> lstSB = new List<string>();
            objBR.lstBondDetails.ForEach(item =>
            {
                StringBuilder html = new StringBuilder();

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                html.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
                html.Append("<td width='12%' align='right'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
                html.Append("<tr><td style='border:1px solid #333;'>");
                html.Append("<div style='padding: 5px 0; font-size: 12px; text-align: center;'>Document No.F/CD/27</div>");
                html.Append("</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:14px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:14px;'>Container Freight Station, Kukatpally <br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 16px; font-weight:bold;'>Stack Card (Custom Bond)</label></td>");
                html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-size:12px; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'><b>Godown No.</b> <u>" + item.GodownName + "</u></td>");
                html.Append("<td colspan='6' width='50%' style='text-align:right;'><b>Central Warehouse</b> <u>Kukatpally</u></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-size:12px; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td colspan='4' width='43.33333333333333%'><b>Name & Address of the Importer</b> <u>" + item.IMPName + " " + item.IMPAdd + "</u></td>");
                html.Append("<td colspan='4' width='23.33333333333333%'><b>Bond No. & Date</b> <u>" + item.BondNo + " " + item.BondDate + "</u></td>");
                html.Append("<td colspan='4' width='33.33333333333333%' style='text-align:right;'><b>Date of Warehousing</b> <u>" + item.ExpDateofWarehouse + "</u></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-size:12px; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td colspan='4' width='43.33333333333333%'><b>Description of Cargo</b> <u>" + item.CargoDesc + "</u></td>");
                html.Append("<td colspan='4' width='23.33333333333333%'><b>Into Bond BOE NO.</b> <u>" + item.BondBOENo + "</u></td>");
                html.Append("<td colspan='4' width='33.33333333333333%' style='text-align:right;'><b>Date of Expiry of Bond Period</b> <u>" + item.ValidUpto + "</u></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");


                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='border: 1px solid #000; width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");

                html.Append("<td colspan='4' width='33.33333333333333%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%; font-size:8pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'>");
                html.Append("<thead><tr><th colspan='12' style='border-bottom: 1px solid #000; font-size:14px; text-align:center; padding:10px;'>RECEIPTS</th></tr>");
                html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:11px;'>Date</th>");
                html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:11px;'>No. of Units/ Packages</th>");
                html.Append("<th colspan='4' width='33.3%;' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:11px;'>Quantity (M.T.)</th>");
                html.Append("<th colspan='2' width='16.66666667%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:11px;'>Area in Sq. Mtr. (Gross or Net)</th></tr></thead>");
                html.Append("<tbody>");
                if (objBR.lstUnloadingDetails.Where(y => y.DepositappId == item.DepositappId).ToList().Count > 0)
                {
                    objBR.lstUnloadingDetails.Where(y => y.DepositappId == item.DepositappId).ToList().ForEach(data =>
                    {
                        html.Append("<tr><td colspan='2' width='16.66666667%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + data.UnloadedDate + "</td> ");
                        html.Append("<td colspan='4' width='33.3%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + data.UnloadedUnits.ToString() + "</td>");
                        html.Append("<td colspan='4' width='33.3%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + (data.UnloadedWeights / 1000).ToString("0.000") + "</td>");
                        html.Append("<td colspan='2' width='16.66666667%' style='border-bottom:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + data.AreaOccupied.ToString("0.000") + "</td></tr>");
                    });
                }
                else
                {
                    html.Append("<tr><td colspan='2' width='16.66666667%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'></td> ");
                    html.Append("<td colspan='4' width='33.3%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'></td>");
                    html.Append("<td colspan='4' width='33.3%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'></td>");
                    html.Append("<td colspan='2' width='16.66666667%' style='border-bottom:1px solid #000;font-size:7pt; text-align:center; padding:10px;'></td></tr>");
                }
                html.Append("</tbody>");
                html.Append("</table></td>");

                html.Append("<td colspan='4' width='33.33333333333333%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                html.Append("<thead><tr><th colspan='12' style='font-size:14px;text-align:center;padding:10px;border-bottom:1px solid #000;'>ISSUES</th></tr>");
                html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Ex-Bond BOE No. & Date</th> ");
                html.Append("<th colspan='3' width='20%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th>");
                html.Append("<th colspan='3' width='30%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Quantity (M.T.)</th>");
                html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>Area Released in Sq. Mtrs. (Gross or Net)</th></tr></thead>");
                html.Append("<tbody>");
                if (objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).ToList().Count > 0)
                {
                    objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).ToList().ForEach(j =>
                    {
                        html.Append("<tr><td colspan='2' width='16.66666667%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + j.EXBOENo + " " + j.ExBOEDate + "</td>");
                        html.Append("<td colspan='3' width='25%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt;text-align:center;padding:10px;'>" + j.Units.ToString("") + "</td> ");
                        html.Append("<td colspan='3' width='25%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center;padding:10px;'>" + Convert.ToDecimal(j.Weight / 1000).ToString("0.000") + "</td>");
                        html.Append("<td colspan='4' width='33.3%' style='border-bottom:1px solid #000;font-size:7pt; text-align:center;padding:10px;'>" + j.SQM.ToString("0.000") + "</td></tr>");
                    });
                }
                else
                {
                    html.Append("<tr><td colspan='2' width='16.66666667%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'></td>");
                    html.Append("<td colspan='3' width='25%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt;text-align:center;padding:10px;'></td> ");
                    html.Append("<td colspan='3' width='25%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center;padding:10px;'></td>");
                    html.Append("<td colspan='4' width='33.3%' style='border-bottom:1px solid #000;font-size:7pt; text-align:center;padding:10px;'></td></tr>");
                }
                html.Append("</tbody>");
                html.Append("</table></td>");

                html.Append("<td colspan='4' width='33.33333333333333%' valign='top' style='padding:0;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                html.Append("<thead><tr><th colspan='12' style='font-size:14px;text-align:center;padding:10px;border-bottom:1px solid #000;'>CLOSING BALANCE</th></tr>");
                html.Append("<tr><th colspan='2' width='16.66666667%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>No. of Units</th> ");
                html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Quantity (M.T.)</th>");
                html.Append("<th colspan='3' width='25%' style='font-size:7pt;border-right:1px solid #000;border-bottom:1px solid #000;text-align:center;padding:10px;'>Balance Area in Sq. Mtrs. (Gross or Net)</th>");
                html.Append("<th colspan='4' width='33.3%' style='font-size:7pt;border-bottom:1px solid #000;text-align:center;padding:10px;'>Remarks</th></tr></thead>");
                html.Append("<tbody>");
                int CBUnits = objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (int)x.UnloadedUnits) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (int)x.Units);
                decimal CBWeight = (objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.UnloadedWeights) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.Weight)) / 1000;
                decimal CBSq = (objBR.lstUnloadingDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.AreaOccupied) - objBR.lstDeliveryDetails.Where(m => m.DepositappId == item.DepositappId).Sum(x => (decimal)x.SQM));

                html.Append("<tr><td colspan='2' width='16.66666667%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center; padding:10px;'>" + CBUnits.ToString("") + "</td>");
                html.Append("<td colspan='3' width='25%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt;text-align:center;padding:10px;'>" + CBWeight.ToString("0.000") + "</td> ");
                html.Append("<td colspan='3' width='25%' style='border-bottom:1px solid #000;border-right:1px solid #000;font-size:7pt; text-align:center;padding:10px;'>" + CBSq.ToString("0.000") + "</td>");
                html.Append("<td colspan='4' width='33.3%' style='border-bottom:1px solid #000;font-size:7pt; text-align:center;padding:10px;'></td></tr>");
                html.Append("</tbody>");
                html.Append("</table></td>");

                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("</tbody></table>");

                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });

            string FileName = "StackReport" + DepositeAppId + ".pdf";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName))
            {
                System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName);
            }
            using (var RH = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
            {
                RH.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        #endregion

        #region Account Report Export Cargo In General Carting
        [HttpGet]
        public ActionResult ExportCargoReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetCargoReport(string AsOnDate)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetCargoExport(AsOnDate);
                string Path = "";
                List<Hdb_ExpCargo> lstData = new List<Hdb_ExpCargo>();
                lstData = (List<Hdb_ExpCargo>)ObjRR.DBResponse.Data;
                Path = GeneratePDFExpCarReport(lstData, AsOnDate);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFExpCarReport(List<Hdb_ExpCargo> lstData, string Date)
        {
            try
            {
                var FileName = "ExportCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 14px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 14px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 14px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px;'>As On Date - " + Date + "</label>");
                Pages.Append("<br /><label style='font-size: 16px; font-weight:bold;'>Accrued Income Report for Export Cargo In General Carting</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Kukatpally-Hyderabad</span><br/><span style='font-size:12px;'><b>As On Date - </b> " + Date + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Account Report for Export Cargo In General Carting</label></td></tr>");
                //Pages.Append("</tbody></table>");
                //Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sb No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sb Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Shed</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Storage Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CHA Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Forwarder Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>FCL / LCL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>No Of Days</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>No Of Week</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Storage Amt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>Insurance Amt</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SbNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SbDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Shed + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.StorageType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CHAName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ForwarderName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.FCLLCL + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.NoOfDays + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.NoOfWeek + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.GeneralAmount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.InsuranceAmount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='9' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>" + lstData.AsEnumerable().Sum(item => item.Area) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfDays) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfWeek) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.GeneralAmount) + "</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + lstData.AsEnumerable().Sum(item => item.InsuranceAmount) + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region Account Report Export Cargo In General Carting in Excel
        [HttpGet]
        public ActionResult AccruedExportCargoReportInExcel()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetExpCargoInExcel(string AsOnDate)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetCargoExportInExcel(AsOnDate);
                string Path = "";
                string excelName = "AccruredIncomeStatementExport.xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            else
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "AccruredIncomeStatement.xls");
                }
            }
        }
        

        #endregion

        #region Accounts Report for Import Cargo
        [HttpGet]
        public ActionResult ImportCargoAccountsReport()
        {
            HDBMasterRepository ObjYR = new HDBMasterRepository();
            ObjYR.GetAllGodown();
            if (ObjYR.DBResponse.Data != null)
            {
                ViewBag.ListOfGodown = (List<CwcExim.Areas.Master.Models.HDBGodown>)ObjYR.DBResponse.Data;
            }
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetImpCargo(string AsOnDate, string GodownId, string GodownName)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetImpCargo(AsOnDate, GodownId);
                string Path = "";
                List<Hdb_ImpCargo> lstData = new List<Hdb_ImpCargo>();
                lstData = (List<Hdb_ImpCargo>)ObjRR.DBResponse.Data;
                Path = GeneratePDFImpCargo(lstData, AsOnDate, GodownName);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImpCargo(List<Hdb_ImpCargo> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "ImpCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 14px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 14px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 14px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px;'>As On Date - " + Date + "</label><br/><label style='font-size: 14px;'>Shed Cd - " + GodownName + "</label>");
                Pages.Append("<br /><label style='font-size: 16px; font-weight:bold;'>Account Report for Import Cargo</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>CFS Kukatpally-Hyderabad</span><br/><span style='font-size:14px;'><b>As On Date - </b> " + Date + "</span><br/><span style='font-size:14px;'><b>Shed Cd - </b>" + GodownName + "</span><br/><label style='font-size: 16px; font-weight:bold;'>Account Report for Import Cargo</label></td></tr>");
                //Pages.Append("</tbody></table>");
                //Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>OBL No</th>");                
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Dstf Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Entry Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>FCL / LCL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>Forwarder Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>CHA Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Storage Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Item No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Rcvd Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Gr Wt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Slot No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Remarks</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Total Wk</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Assessment Value</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Duty Value</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Storage Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>Insurance Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>" + item.BOLNo + "</td>");
                    
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.DestuffingEntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.CFSCode + "</td>");

                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.EntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.LCLFCL + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>" + item.ForwarderName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>" + item.CHAName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.StorageArea + "</td>");

                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.CommodityAlias + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.NoOfUnits + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.NoOfUnitsRec + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Weight.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Area.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.LocationName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Remarks + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.TotWk + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.AssessmentValue + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.DutyValue + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.Amount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.InsuranceAmount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='width:6%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:4%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:4%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfUnits) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:4%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfUnitsRec) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>" + lstData.AsEnumerable().Sum(item => item.Weight) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'>" + lstData.AsEnumerable().Sum(item => item.Area) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:5%;'>" + lstData.AsEnumerable().Sum(item => item.TotWk) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:5%;'>" + lstData.AsEnumerable().Sum(item => item.AssessmentValue) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:5%;'>" + lstData.AsEnumerable().Sum(item => item.DutyValue) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:5%;'>" + lstData.AsEnumerable().Sum(item => item.Amount) + "</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + lstData.AsEnumerable().Sum(item => item.InsuranceAmount) + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Accounts Report for Import Cargo in Excel
        [HttpGet]
        public ActionResult ImportCargoAccountsReportExcel()
        {
            HDBMasterRepository ObjYR = new HDBMasterRepository();
            ObjYR.GetAllGodown();
            if (ObjYR.DBResponse.Data != null)
            {
                ViewBag.ListOfGodown = (List<CwcExim.Areas.Master.Models.HDBGodown>)ObjYR.DBResponse.Data;
            }
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetimportCargoInExcel(string AsOnDate, string GodownId, string GodownName)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetImportCargoInExcel(AsOnDate, GodownId, GodownName);
                string Path = "";
                string excelName = "AccruredIncomeStatementImport.xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            else
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "AccruredIncomeStatement.xls");
                }
            }
        }
        #endregion

        #region Abstract Report
        [HttpGet]
        public ActionResult AbstractReport()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int Fromyear = DateTime.Today.Year - 10;
            int ToYear = DateTime.Today.Year + 20;
            for (int i = Fromyear; i <= ToYear; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstYear = lstYear;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetAbstractReport(int Month, int Year)
        {
            /* string Path = "";
             Hdb_AbstractReport ObjAR = new Hdb_AbstractReport();
             Path = GenerateAbstractReport(ObjAR, Month, Year);
             return Json(new { Message = Path, Status = 1 });*/

            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetAbstractReport(Month, Year);
            string Path = "";
            if (objRR.DBResponse.Data != null)
            {
                Hdb_AbstractReport ObjAR = new Hdb_AbstractReport();
                ObjAR = (Hdb_AbstractReport)objRR.DBResponse.Data;
                Path = GenerateAbstractReport(ObjAR, Month, Year);
                return Json(new { Message = Path, Status = 1 });
            }
            return Json(new { Message = "", Status = 0 });

        }

        [NonAction]
        public string GenerateAbstractReport(Hdb_AbstractReport ObjAR, int Month, int Year)
        {
            string strMonth = new DateTime(1900, Month, 01).ToString("MMMM").ToUpper();
            StringBuilder Html = new StringBuilder();

            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'>");

            Html.Append("<thead>");
            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            Html.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
            Html.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
            Html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
            Html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ABSTRACT (SUNDRY DEBTORS FOR THE MONTH OF " + strMonth + " - " + Year + ")</label>");
            Html.Append("</td>");
            Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
            Html.Append("</tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");
            Html.Append("</thead>");

            Html.Append("<tbody>");

            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='font-size:9pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            Html.Append("<tr><th style='border-right:1px solid #000; width:60%; text-align:center;'>PERTICULARS</th>");
            Html.Append("<th style='border-right:1px solid #000; width:20%; text-align:center;'>No of Invoices</th>");
            Html.Append("<th style='width:20%; text-align:center;'>AMOUNT</th></tr>");

            Html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'>Pending invoice and realisable amount as on " + ObjAR.GivenMnthFirstDate + " (Annexure - I)</td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; text-align:center;'>" + ObjAR.PrevTotalUnpaidInvoice.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td>");
            Html.Append("<td style='border-top:1px solid #000; text-align:center;'>" + ObjAR.PrevTotalUnpaidAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td></tr>");

            Html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'>Invoice raised and amount realisable during the month of " + strMonth + "-" + Year + " (Annexure - II)</td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; text-align:center;'>" + ObjAR.CurrMnthTotalInvoice.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td>");
            Html.Append("<td style='border-top:1px solid #000; text-align:center;'>" + ObjAR.CurrMnthTotalInvoiceAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td></tr>");

            Html.Append("<tr><td style='text-align:center; border-right:1px solid #000; border-top:1px solid #000;'><b>GRAND TOTAL</b></td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; text-align:center;'><b>" + ObjAR.TotalOutstandingInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td>");
            Html.Append("<td style='border-top:1px solid #000; text-align:center;'><b>" + ObjAR.TotalOutstandingAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");


            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='0' style='font-size:9pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            Html.Append("<tr><td colspan='12' cellpadding='5' style='text-align:center;'>LESS (-) cash realisation AGAINST invoices</td></tr>");

            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='font-size:9pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            Html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; width:60%;'>" + strMonth + "-" + Year + " <br/> (Annexure - III)AMOUNT REALISED DURING THE MONTH OF " + strMonth + " AGAINST INVOICES</td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.TotalPaidPreInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.TotalPrevinvoicePaidAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td></tr>");

            Html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; width:60%;'>" + strMonth + " AGAINST INVOICES RAISED DURING THE MONTH OF " + strMonth + "-" + Year + " (Annexure - IV)</td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.TotalPaidCurrMnthInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.TotalPaidCurrMnthInvAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td></tr>");

            Html.Append("<tr><td style='text-align:center; border-right:1px solid #000; border-top:1px solid #000; width:60%;'><b>TOTAL</b></td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.TotalPaidInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.TotalIncome.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");

            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");



            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='0' style='font-size:9pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            Html.Append("<tr><td colspan='12' cellpadding='5' style='text-align:center;'>SUNDRY DEBTORS TOTAL INVOICE PENDING UP TO " + ObjAR.CurrMonthlastDate + "</td></tr>");

            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='font-size:9pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            Html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; width:60%;'>" + strMonth + " ANDAMOUNT REALISABLE AS ON " + ObjAR.CurrMonthlastDate + ". (Annexure - V) NO OF PENDING INVOICES RAISED PRIOR TO " + strMonth + " AND AMOUNT REALISABLE AS ON " + ObjAR.CurrMonthlastDate + " (Annexure - V)</td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.PrevPendingInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.PrevPendingInvAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td></tr>");

            Html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; width:60%;'>" + strMonth + " ANDAMOUNT REALISABLE AS ON " + ObjAR.CurrMonthlastDate + ". (Annexure - VI) NO OF PENDING INVOICES RAISED DURING " + strMonth + " AND AMOUNT REALISABLE AS ON " + ObjAR.CurrMonthlastDate + " (Annexure - VI)</td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.CurrMnthPendingInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'>" + ObjAR.CurrMnthPendingAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</td></tr>");

            Html.Append("<tr><td style='text-align:center; border-right:1px solid #000; border-top:1px solid #000; width:60%;'><b>TOTAL</b></td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.TotalPendingInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.TotalPendingAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td></tr>");

            Html.Append("<tr><td style='text-align:center; border-right:1px solid #000; border-top:1px solid #000; width:60%;'><b>Credit note issued (I & II) Amount</b></td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.CurrMnthTotalCrNote.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.CurrMnthTotalCrAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td></tr>");

            Html.Append("<tr><td style='text-align:center; border-right:1px solid #000; border-top:1px solid #000; width:60%;'><b>GRAND TOTAL</b></td>");
            Html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.TotalBalancedInv.ToString("#,0.##", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td>");
            Html.Append("<td style='border-top:1px solid #000; width:20%; text-align:center;'><b>" + ObjAR.TotalBalancedAmt.ToString("#,0.00", CultureInfo.CreateSpecificCulture("hi-IN")) + "</b></td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");

            Html.Append("</tbody>");

            Html.Append("</table>");


            Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

            string FileName = "AbstractReport" + Month + "-" + Year + ".pdf";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName))
            {
                System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName);
            }
            using (var RH = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                RH.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName, Html.ToString());
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;



        }


        #endregion

        #region ECONOMY REPORT
        public ActionResult EconomyReport()
        {
            return PartialView();
        }

        public JsonResult GetEconomyReport(int Month, int Year)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetEconomyReport(Month, Year);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        public JsonResult SaveEconomyReport(int Month, int Year, List<EconomyReport> lstRptData)
        {
            try
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

                decimal result;
                List<EconomyReport> lst = new List<EconomyReport>();
                lstRptData.ForEach(item =>
                {
                    if (decimal.TryParse(item.Amount, out result))
                    {
                        lst.Add(item);
                    }
                });

                string xml = "";
                if (lst != null)
                {
                    xml = Utility.CreateXML(lst);
                }

                ObjRR.SaveEconomyReport(Month, Year, xml, ((Login)(Session["LoginUser"])).Uid);

                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);

            }
            catch (Exception ex)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!", Data = "" }, JsonRequestBehavior.AllowGet);
            }
        }

        [HttpPost]
        public JsonResult EconomyReportPrint(int Month, int Year)
        {
            try
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetEconomyReportForPrint(Month, Year);
                if (ObjRR.DBResponse.Status == 1)
                {
                    return Json(new { Status = 1, Message = "Data Detected", Data = GeneratingPDFforEcoRpt((EconomyRptPrint)ObjRR.DBResponse.Data) }, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json(new { Status = -1, Message = ObjRR.DBResponse.Message }, JsonRequestBehavior.AllowGet);
                }

            }
            catch (Exception e)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!" }, JsonRequestBehavior.AllowGet);
            }
        }
        [NonAction]
        public string GeneratingPDFforEcoRpt(EconomyRptPrint data)
        {

            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            StringBuilder html2 = new StringBuilder();
            StringBuilder html3 = new StringBuilder();
            StringBuilder html4 = new StringBuilder();
            StringBuilder html5 = new StringBuilder();
            //html.Append("<h1>Test</h1>");
            //Page 1*********************************************************************************************************************
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif;'><thead>");
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%;'><tbody>");
            html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>IDPL Road, Hyderabad - 37</span><br/>");
            html.Append("<label style='font-size: 14px; font-weight:bold;'>ECONOMY REPORT FOR THE PERIOD OF " + Convert.ToDateTime(data.FormDate).ToString("dd-MMM-yyyy") + " TO " + Convert.ToDateTime(data.ToDate).ToString("dd-MMM-yyyy") + "</label></td></tr>");
            html.Append("<tr><th><br/><br/></th></tr>");
            html.Append("<tr><th colspan='12' style='text-align: right; font-size:8pt;'>DATED : " + Convert.ToDateTime(data.CreatedOn).ToString("dd-MMM-yyyy") + "</th></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");
            html.Append("</thead></table>");

            html.Append("<table style='width:100%; margin-bottom:20px; font-size: 8pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th cellpadding='5' colspan='12' style='border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 9pt; text-align: center;'>COVERED AREA AND ITS CAPACITY</th></tr>");
            html.Append("<tr><th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Gross in <br/> Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Net(Usable) in Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Grids/Slot(Nos)</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Std.Bags(Nos)</th>");
            html.Append("</tr>");
            html.Append("</thead>");

            html.Append("<tbody>");
            html.Append("<tr><td colspan='3' style='padding:15px 5px;'>" + data.SqmCovered + "</td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'>" + data.BagCovered + "</td></tr>");
            html.Append("</tbody>");
            html.Append("</table>");

            html.Append("<table style='width:100%; margin-bottom:20px; font-size: 8pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th colspan='12' style='border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 9pt; text-align: center;'>OPEN AREA AND ITS CAPACITY</th></tr>");
            html.Append("<tr><th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Gross in <br/> Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Net(Usable) in Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>TEU's(Nos.)</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Std.Bags(Nos)</th>");
            html.Append("</tr>");
            html.Append("</thead>");
            html.Append("<tbody>");
            html.Append("<tr><td colspan='3' style='padding:15px 5px;'>" + data.SqmOpen + "</td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'>" + data.BagOpen + "</td></tr>");
            html.Append("</tbody>");
            html.Append("</table>");

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-size:9pt;'><tbody>");
            html.Append("<tr><td><br/><br/><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12' style='text-align: left;'>Submmited to:- <br/> <b>The Regional Manager</b> <br/> CWC, RO, DELHI</td></tr>");
            html.Append("</tbody></table>");

            //html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            lstSB.Add(html.ToString());
            //Page 2*********************************************************************************************************************

            html2.Append("<table style='border-top: 1px solid #000;width:100%; font-size:8pt;' cellspacing='0' cellpadding='5'>");
            html2.Append("<thead>");
            html2.Append("<tr><th style='border-bottom: 1px solid #000; text-align:left; width:50%;'>Head of Income</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>Amount <br/> RS   P.</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>Cumulative <br/> Since 1st April</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>Progressive Cumulative <br/> RS   P.</th></tr>");

            html2.Append("<tr><th style='border-bottom: 1px solid #000; text-align:left; width:50%;'>1</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>2</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>3</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>4</th></tr>");
            html2.Append("</thead>");
            html2.Append("<tbody>");

            data.RptDetails.Where(x => x.ItemType == "I" && x.PageNo == 2).ToList().ForEach(i =>
            {
                html2.Append("<tr><td cellpadding='5'>" + i.ItemLabel + "</td>");
                html2.Append("<td cellpadding='5'>" + i.Amount + "</td>");
                html2.Append("<td cellpadding='5'>" + i.CumAmount + "</td>");
                html2.Append("<td cellpadding='5'>" + i.ProCumAmount + "</td></tr>");
            });
            html2.Append("</tbody>");
            html2.Append("</table>");

            lstSB.Add(html2.ToString());

            //Page 3**********************************************************************************************************************          
            html3.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'>");
            html3.Append("<thead>");
            html3.Append("<tr><th style='border-top:1px solid #000; border-bottom: 1px solid #000;text-align:left; width:50%;''>1</th>");
            html3.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:17%;'>2</th>");
            html3.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:17%;'>3</th>");
            html3.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:17%;'>4</th></tr>");
            html3.Append("</thead>");
            html3.Append("<tbody>");

            data.RptDetails.Where(x => x.ItemType == "I" && x.PageNo == 3).ToList().ForEach(i =>
            {
                html3.Append("<tr><td cellpadding='4'>" + i.ItemLabel + "</td>");
                html3.Append("<td cellpadding='4'>" + i.Amount + "</td>");
                html3.Append("<td cellpadding='4'>" + i.CumAmount + "</td>");
                html3.Append("<td cellpadding='4'>" + i.ProCumAmount + "</td></tr>");
            });
            html3.Append("</tbody>");
            html3.Append("</table>");
            lstSB.Add(html3.ToString());

            //Page 4**********************************************************************************************************************            
            html4.Append("<table style='width:100%; font-size: 8pt;' cellspacing='0' cellpadding='5'>");
            html4.Append("<thead>");
            html4.Append("<tr><th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:8%;'>Code No</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:47%;'>Head of Expenses</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Amount <br/> RS   P.</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Cumulative <br/> Since 1st April</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Progressive Cumulative <br/> RS   P.</th></tr>");

            html4.Append("<tr><th style='border-bottom: 1px solid #000; text-align:left; width:8%;'>5</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:47%;'>6</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:15%;'>7</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:15%;'>8</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:15%;'>9</th></tr>");
            html4.Append("</thead>");
            html4.Append("<tbody>");

            int maxSr = data.RptDetails.Where(x => x.ItemType == "E").Max(x => x.Sr);
            data.RptDetails.Where(x => x.ItemType == "E" && x.PageNo == 4).ToList().ForEach(i =>
            {

                html4.Append("<tr>");
                if (i.Sr == maxSr)
                {
                    html4.Append("<td cellpadding='5' colspan='2'>" + i.ItemLabel + "</td>");
                    //html4.Append("<td style='font-size: 9pt; padding:10px;'>" + i.ItemLabel + "</td>");
                }
                else
                {
                    html4.Append("<td cellpadding='5'>" + i.ItemCodeNo + "</td>");
                    html4.Append("<td cellpadding='5'>" + i.ItemLabel + "</td>");
                }
                html4.Append("<td cellpadding='5'>" + i.Amount + "</td>");
                html4.Append("<td cellpadding='5'>" + i.CumAmount + "</td>");
                html4.Append("<td cellpadding='5'>" + i.ProCumAmount + "</td></tr>");
            });

            html4.Append("</tbody>");
            /*html4.Append("<tfoot>");
            html4.Append("<tr><th colspan='2' style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Excess of Income over Expenditure</th>");
            html4.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html4.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html4.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th></tr>");
            html4.Append("</tfoot>");*/
            html4.Append("</table>");
            lstSB.Add(html4.ToString());

            //Page last**********************************************************************************************************************    

            html5.Append("<table style='width:100%; font-size:8pt;' cellspacing='0' cellpadding='5'>");
            html5.Append("<thead><tr><th colspan='12' style='text-align: left; font-size:9pt;'>Summary of Financial Performance for the period of " + Convert.ToDateTime(data.FormDate).ToString("dd-MMM-yyyy") + " to " + Convert.ToDateTime(data.ToDate).ToString("dd-MMM-yyyy") + "</th></tr>");
            html5.Append("<tr><th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Code No</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:40%;'>Head of Income</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Amount <br /> RS   P.</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Cumulative <br /> Since 1st April</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Progressive Cumulative <br /> RS   P.</th></tr>");
            html5.Append("</thead>");
            html5.Append("<tbody>");
            data.RptSummary.ForEach(i =>
            {
                html5.Append("<tr><td cellpadding='5'>" + i.CodeNo + "</td>");
                html5.Append("<td cellpadding='5'>" + i.ItemLabel + "</td>");
                html5.Append("<td cellpadding='5'>" + i.Amount + "</td>");
                html5.Append("<td cellpadding='5'>" + i.CumAmount + "</td>");
                html5.Append("<td cellpadding='5'>" + i.ProCumAmount + "</td></tr>");
            });
            html5.Append("</tbody>");
            /*html5.Append("<tfoot>");
            html5.Append("<tr><th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'></th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Total(A+B)</th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th></tr>");
            html5.Append("</tfoot>");*/
            html5.Append("</table>");

            html5.Append("<table style='border-top:1px solid #000; width:100%;' cellspacing='0' cellpadding='10'>");
            html5.Append("<tbody>");
            html5.Append("<tr><td width='3%' align='right' style='font-size:8pt;'>1.</td><td colspan='2' width='85%' style='font-size:9pt;'>Indicate total number of time barred Bond and income involved(with vearwise break-up)</td></tr>");
            html5.Append("<tr><td width='3%' align='right' style='font-size:8pt;'>2.</td><td colspan='2' width='85%' style='font-size:9pt;'>Number of contaiers seized abandanded and their income involved(with vearwise break-up)</td></tr>");
            html5.Append("</tbody>");
            html5.Append("</table>");

            lstSB.Add(html5.ToString());

            var FileName = "EcoReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion
        #region Monthly Performance Report Of Bonded Warehouse

        public ActionResult MPRCustomBond()
        {
            return PartialView("MPRCustomBond");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyPerformanceReportList(MonthlyPerformaceReport ObjMonthlyPerformaceReport)
        {
            try
            {
                var Pages = new string[1];
                string FileName = "MonthlyPerformanceReportOfBondedWarehouse.pdf";
                Kdl_ReportRepository ObjRR = new Kdl_ReportRepository();
                StringBuilder sb = new StringBuilder();
                List<MonthlyPerformaceReport> LstMonthlyPerformaceReport = ObjRR.GetMonthlyPerformanceReportDataToPrint(ObjMonthlyPerformaceReport.MonthNo, ObjMonthlyPerformaceReport.YearNo);

                if (LstMonthlyPerformaceReport != null && LstMonthlyPerformaceReport.Count > 0)
                {

                    sb.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb.Append("<thead>");
                    sb.Append("<tr>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;padding:5px;'>Particulars</th>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Month Under Report</th>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Previous Month</th>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Corresponding Month of Previous Year</th>");
                    sb.Append("</tr>");
                    sb.Append("</thead>");
                    sb.Append("<tbody>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>1. Import Container Received</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) From ICD</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) From Gateway ports by Road</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>2.Import Container Handled (Including reefers)</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Containers Destuffed</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) Containers despatched factor for destuffing</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>c) ");
                    sb.Append("Total Containers Handled 2(a+b) </span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>3.Export Container Handled (Including reefers)</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Containers Stuffing at CFS/ICD</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) Containers moved/Shifted to rail head/ICD</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>c) Containers moved to Gateway Ports by Road</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>d)  Containers Shifted at factories and moved</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>e) Total Export Containers Handled 3(b+c+d)  </span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>4.Export Container Handled (Including reefers)</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<span style='padding-left:10px;'>a) Empty Containers received at ICD/CFS</span>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span style='padding-left:20px;'>a) From other ICD</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span style='padding-left:20px;'>b) From Gate way ports by Road</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 12).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 12).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 12).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<span style='padding-left:10px;'>b) Empty Containers dispatched/moved out from ICD/CFS</span>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span style='padding-left:20px;'>a) To other ICD/Yards</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span style='padding-left:20px;'>b) To Gate way ports by road</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span style='padding-left:20px;'>c) Total Export containers handled 4(a+b) </span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>5.Total Containers Handles during the month</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Import</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 16).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 16).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 16).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) Export</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>c) Empty</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>Total (a+b+c) </span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>6. Exported</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Quantity(MT)</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) FOB Value (Rs.In Lacs)</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>7.Cargo Exported</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Quantity(MT)</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 22).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 22).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 22).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) FOB Value (Rs.In Lacs)</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>8.Income from Refer Containers</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Export(Rs.)</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) Import(Rs.)</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>9.Progressive total of containers handled</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Import i) Dry ii) Refer</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b)  Export i) Dry ii) Refer</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>c)  Empty</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>Total (a+b+c) </span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    sb.Append("<strong>10.Financial Performance</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>a) Income</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>b) Expenditure</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    sb.Append("<span>c) Profit and Loss</span>");
                    sb.Append("</td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 32).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 32).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 32).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    sb.Append("</tr>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='2'style='padding:3px;vertical-align:top;'>");
                    sb.Append("<span>To:</span>");
                    sb.Append("<table style='width:35%;border:1px solid #000;'><tbody><tr><td><br/><br/><br/></td></tr></tbody></table>");
                    sb.Append("</td>");
                    sb.Append("<td colspan='2'style='padding:3px;vertical-align:bottom;text-align:center;'>");
                    sb.Append("<strong>Signature of Manager CFS/ICD</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("</tbody>");
                    sb.Append("</table>");
                }

                sb.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                sb.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                Pages[0] = sb.ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyPerformanceRepor/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyPerformanceRepor/" + FileName };
                return Json(ObjResult, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }
        }

        #endregion



        #region Work Slip Report

        [HttpGet]
        public ActionResult WorkSlipReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetWorkSlipReportList(HDB_WorkSlipReport ObjWorkSlipReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetWorkSlipReportList(ObjWorkSlipReport);//, objLogin.Uid
            return Json(ObjRR.DBResponse);
        }


        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateWorkSlipPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[2];
                string FileName = "WorkSlipReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[1] = fc["nPage"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/WorkSlipReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/WorkSlipReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }



        #endregion

        #region Inland Way Bill
        [HttpGet]
        public ActionResult ExportRRReport()
        {
            Hdb_ReportRepository ObjIR = new Hdb_ReportRepository();
            //ObjIR.GetContainerForExportRR();
            ObjIR.GetGatePassForExportRR(string.Empty);
            if (ObjIR.DBResponse.Data != null)
            {
                ViewBag.LstGatePass = new SelectList((List<HDBExportRRReport>)ObjIR.DBResponse.Data, "GatePassId", "GatePassNo");
            }
            else
            {
                ViewBag.LstGatePass = null;
            }
            return PartialView();
        }

        [HttpPost]
        public ActionResult GetExportRRReport(int GatePassId)
        {
            string FilePath = "";
            FilePath = GeneratingBulkPDFforRR(GatePassId);
            if (FilePath != string.Empty)
                return Json(new { Status = 1, Data = FilePath });
            else
                return Json(new { Status = 1, Data = "" });
        }


        [NonAction]
        public string GeneratingBulkPDFforRR(int GatePassId)
        {
            string FileName = string.Empty;
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.PrintExportRR(GatePassId);//, objLogin.Uid
            HDBPrintExportRRReport ObjRRData = new HDBPrintExportRRReport();
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            StringBuilder html1 = new StringBuilder();
            if (ObjRR.DBResponse.Data != null)
            {

                ObjRRData = (HDBPrintExportRRReport)ObjRR.DBResponse.Data;
                String Pnm = "", Pynm = "";
                String Cont = "", Sz = "", Vehicle = "", CustomSeal = "", GatePassDate = "";
                int Pack = 0;
                decimal GW = 0;
                ObjRRData.LstPartyDetails.ForEach(item =>
                {
                    Pnm = item.PartyName + " " + "(" + item.PartyAddress + ")";
                    Pynm = item.PayeeName + " " + "(" + item.PayeeAddress + ")";

                });

                ObjRRData.LstContDetails.ForEach(item =>
                {
                    GatePassDate = item.GatePassDate;
                    Cont = item.ContainerNo;
                    Sz = item.Size;
                    Vehicle = item.VehicleNo;
                    Pack = item.NoOfPackages;
                    GW = item.GrossWt;
                    CustomSeal = item.CustomSeal;

                });

                decimal FR = 0;
                decimal HND = 0;
                decimal TPT = 0;
                decimal MSC = 0;

                ObjRRData.LstChargesDetails.ForEach(item =>
                {
                    FR = item.FR;
                    HND = item.HND;
                    TPT = item.TPT;
                    MSC = item.MSC;
                });
                String ExporterName = "", ShippingLine = "", ContainereNo = "";
                ObjRRData.LstContainerDetails.ForEach(item =>
                {
                    ExporterName = item.ExporterName;
                    ShippingLine = item.ShippingLine;
                    ContainereNo = item.ContainereNo;
                });

                String ShippingBill = "";
                ObjRRData.LstShipBillDetails.ForEach(item =>
                {
                    ShippingBill = item.ShippingBill;
                });

                //String InvNo = "", Rctno = "", RDate = "", Payee = "";
                //Decimal InvValue = 0;
                //ObjRRData.LstReceiptDetails.ForEach(item =>
                //{
                //    InvNo = item.InvoiceNo;
                //    Rctno = item.ReceiptNo;
                //    RDate = item.ReceiptDate;
                //    Payee = item.PayeeName;
                //    InvValue = item.InvoiceAmt;

                //});

                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                html.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>INLAND WAY BILL</label>");
                html.Append("</td>");
                html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                html.Append("</tr>");
                html.Append("<tr><td><br/><br/></td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='border-top: 1px solid #000; width:100%; font-size:9pt; margin-bottom:20px;' cellspacing='0' cellpadding='10'><tbody>");
                html.Append("<tr><td><br/></td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>No:</b></td> <td colspan='6' style='width:50%; text-align:right;'><b>Date :</b>" + ObjRRData.LstContDetails[0].GatePassDate.ToString() + "</td></tr>");
                html.Append("<tr><th colspan='3' align='center'><label>Consignor</label> <br/><label>(Name and Address)</label> <br/><br/><br/><br/> Deputy Commissioner of Customs CFS KUKATPALLY HYDERABAD</th>");
                html.Append("<th colspan='3' align='center'><label>Consignor</label><br/> <label>(Name and Address)</label> <br/><br/><br/><br/> Asst. Commissioner of Customs JNPT/NSICT MUMBAI HOM. CHENNAI</th>");
                html.Append("<th colspan='3' align='center'><label>From :</label><br/><br/><br/><br/><br/> CFS KUKATPALLY</th>");
                html.Append("<th colspan='3' align='center'><label>To :</label><br/><br/><br/><br/><br/> JNPT/NSICT MUMBAI HOM. CHENNAI</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='border:1px solid #000; border-bottom:0; width:100%; border-collapse: collapse;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td cellpadding='0' cellspacing='0' colspan='7' style='width:70%;border-right:1px solid #000;'><table cellpadding='15' cellspacing='0' style='width:100%; font-size:9pt;'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 12%;'>Container No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 3%;'>Size</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>Trailor No.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 20%'>Description of Cargo</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 12%;'>Customs Seal No.</th></tr>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>No of Packages</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>Cargo Weight</th></tr></thead>");

                html.Append("<tbody>");
                /********LOOP START**********/
                ObjRRData.LstContDetails.ForEach(item =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 12%;'>" + item.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 3%'>" + item.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.VehicleNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.NoOfPackages + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.GrossWt + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 12%;'>" + item.CustomSeal + "</td></tr>");
                });
                /********LOOP END**********/
                html.Append("</tbody>");
                html.Append("</table></td>");

                html.Append("<td colspan='3' style='width:30%;'><table cellpadding='10 ' cellspacing='0' style='width:100%; font-size:9pt;'>");
                html.Append("<thead><tr>");
                html.Append("<th colspan='4' Valign='middle' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 40%;'>Charges Paid/To Pay</th></tr>");
                html.Append("<tr><th cellpadding='9' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>Freight</th>");
                html.Append("<th cellpadding='9' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>Handling</th>");
                html.Append("<th cellpadding='9' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>TPT</th>");
                html.Append("<th cellpadding='9' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>Misc.</th></tr></thead>");

                html.Append("<tbody>");
                /********LOOP START**********/
                ObjRRData.LstChargesDetails.ForEach(item =>
                {
                    html.Append("<tr><td cellpadding='6' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.FR + "</td>");
                    html.Append("<td cellpadding='5' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.HND + "</td>");
                    html.Append("<td cellpadding='5' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.TPT + "</td>");
                    html.Append("<td cellpadding='5' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.MSC + "</td></tr>");

                });
                /********LOOP END**********/
                html.Append("</tbody>");
                html.Append("</table></td>");

                html.Append("</tr></tbody></table>");

                html.Append("<table style='border:1px solid #000; border-top:0; width:100%; border-collapse: collapse;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td cellpadding='0' cellspacing='0' colspan='7' style='width:70%;border-right:1px solid #000;'><table cellpadding='10' cellspacing='0' style='width:100%; font-size:9pt;'>");
                html.Append("<tbody>");
                html.Append("<tr><th colspan='6' style='text-align:right;'>GRAND TOTAL</th></tr>");
                html.Append("</tbody>");
                html.Append("</table></td>");

                html.Append("<td colspan='3' style='width:30%;'><table cellpadding='10' cellspacing='0' style='border-top:1px solid #000; width:100%; font-size:9pt;'>");
                html.Append("<tbody>");
                ObjRRData.LstChargesDetails.ForEach(item =>
                {
                    html.Append("<tr><th style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.FR + "</th>");
                    html.Append("<th style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.HND + "</th>");
                    html.Append("<th style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 10%;'>" + item.TPT + "</th>");
                    html.Append("<th style='font-size: 10px; text-align: center; width: 10%;'>" + item.MSC + "</th></tr>");
                });
                html.Append("</tbody>");
                html.Append("</table></td>");

                html.Append("</tr></tbody></table>");

                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='10'><tbody>");
                html.Append("<tr><td><br/><br/><br/></td></tr>");
                html.Append("<tr><th colspan='12' align='right'>MANAGER,C.F.S<br/> KUKATPALLY</th></tr>");
                html.Append("<tr><td><br/><br/></td></tr>");
                html.Append("<tr><td width='3%' valign='top' align='right' style='font-size:13px;'>1.</td><td colspan='2' width='90%' style='font-size:14px; line-height:22px;'>The inland way bill is given by CFS for the containers to be carried by it and must be given up at the destination by the consignee at the time of taking delivery.</td></tr>");
                html.Append("<tr><td width='3%' valign='top' align='right' style='font-size:13px;'>2.</td><td colspan='2' width='90%' style='font-size:14px; line-height:22px;'>The consignor must accept he responsibility for all particulars furnished in respect of cargo rendered by him for stuffing into the container and carriage by C.F.S.</td></tr>");
                html.Append("</tbody></table>");


                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                lstSB.Add(html.ToString());



                html1.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; font-size:9.5pt;'>");

                html1.Append("<thead><tr><td colspan='12'>");
                html1.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html1.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html1.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                html1.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                html1.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                html1.Append("<br /><label style='font-size: 14px; font-weight:bold;'></label>");
                html1.Append("</td>");
                html1.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                html1.Append("</tr>");
                html1.Append("</tbody></table>");
                html1.Append("</td></tr></thead>");

                html1.Append("<tbody>");
                html1.Append("<tr><td colspan='6' style='width:50%;'><b>No:</b>CE/CFS/KKP/20</td> <td colspan='6' style='width:50%; text-align:right;'><b>Date :</b><u>" + ObjRRData.LstContDetails[0].GatePassDate.ToString() + "</u></td></tr>");

                html1.Append("<tr><td colspan='12'><table style='width:100%; font-size:8pt;'><tbody>");
                html1.Append("<tr><th>To, <br/> The Assistant commissioner, Customs <br/> Port Area, <br/> JNPT/NSICT/GTIL/BPTC/HOM <br/> MUMBAI / CHENNAI</th></tr>");
                html1.Append("</tbody></table></td></tr>");

                html1.Append("<tr><td><br/><br/></td></tr>");
                html1.Append("<tr><td colspan='12' style='text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Sub : Forwarding of sealed cover to Customs Officer at <u>_______________________________________________</u></td></tr>");
                html1.Append("<tr><td colspan='12' style='text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>Exporter : <u> " + ObjRRData.LstContainerDetails[0].ExporterName.ToString() + " </u> </td></tr>");
                html1.Append("<tr><td><span><br/></span></td></tr>");
                html1.Append("<tr><td colspan='12' style='text-align:center;'>********</td></tr>");
                html1.Append("<tr><td><span><br/></span></td></tr>");
                html1.Append("<tr><td colspan='12'>Sir,</td></tr>");
                html1.Append("<tr><td colspan='12'><span><br/></span></td></tr>");
                html1.Append("<tr><td colspan='12' style='line-height:22px; margin-bottom:20px; text-align:justify;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> Please find enclosed herewith a sealed cover received from the Assistant Commissioner of Customs, CFS, Kukatpally, Hyderabad - 37 addressed to Custom Officer <u>_______________________________________________</u> said to contain one set of transference copies of the Shipping Bill No. <u>" + ObjRRData.LstShipBillDetails[0].ShippingBill.ToString() + "</u> for export container, Container No. <u>" + ObjRRData.LstContainerDetails[0].ContainereNo.ToString() + "</u> of <u>" + ObjRRData.LstContainerDetails[0].ShippingLine.ToString() + "</u> Shipping Line </td></tr>");
                html1.Append("<tr><td><span><br/></span></td></tr>");
                html1.Append("<tr><td colspan='12' style='line-height:22px;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> The sealed cover may please be taken over by the Customs Officer <u>__________________________________________</u>  <u>_______________________________________________</u> and acknowledgement may please to be issued.</td></tr>");

                html1.Append("<tr><td><span><br/></span></td></tr>");
                html1.Append("<tr><td colspan='12'><table style='width:100%; font-size:9pt;'><tbody>");
                html1.Append("<tr><td colspan='6' style='width:50%;'>Encl:A/a</td> <td colspan='6' style='width:50%; text-align:right;'>Yours faithfully,</td></tr>");
                html1.Append("</tbody></table></td></tr>");
                html1.Append("<tr><td><span><br/><br/></span></td></tr>");
                html1.Append("<tr><th colspan='12' style='text-align:right;'>(Manager C.F.S)</th></tr>");
                html1.Append("<tr><td><span><br/><br/><br/><br/></span></td></tr>");

                html1.Append("<tr><td colspan='12'><table style='width:100%; font-size:8pt;'><tbody>");
                html1.Append("<tr><th colspan='3' width='50%'></th><th colspan='3' width='25%' style='text-align:center;border-bottom:1px solid #000; font-size:14px;'>Acknowledgement</th><th colspan='3' width='25%'></th><th colspan='3' width='25%'></th></tr>");
                html1.Append("</tbody></table></td></tr>");
                html1.Append("<tr><td><span><br/></span></td></tr>");

                html1.Append("<tr><td colspan='12'><table style='width:100%; font-size:10pt;'><tbody>");
                html1.Append("<tr><td width='3%' valign='top' align='right' style='font-size:13px;'>1)</td><td colspan='2' width='90%' style='line-height:22px;'>Received transference copies of the Shipping Bill No. <u>" + ObjRRData.LstShipBillDetails[0].ShippingBill.ToString() + "</u> from CFS, Kukatpally through <u>_______________________________________________</u> H & T Contractor</td></tr>");
                html1.Append("<tr><td><span><br/></span></td></tr>");
                html1.Append("<tr><td width='3%' valign='top' align='right' style='font-size:13px;'>2)</td><td colspan='2' width='90%' style='line-height:22px;'>Received Container No. <u>" + ObjRRData.LstContainerDetails[0].ContainereNo.ToString() + "</u> from <u>CFS Kukatpally</u> H & T Contractor, CFS, Kukatpally on <u>_______________________________________________</u> with seals intact condition.</td></tr>");
                html1.Append("</tbody></table></td></tr>");
                html1.Append("</tbody>");

                html1.Append("</table>");


                html1.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html1.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html1.ToString());

                FileName = "ExportRRReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
                /*if (System.IO.File.Exists(location))
                {
                    System.IO.File.Delete(location);
                }*/
                using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
                {
                    rp.HeadOffice = "";
                    rp.HOAddress = "";
                    rp.ZonalOffice = "";
                    rp.ZOAddress = "";
                    rp.GeneratePDF(location, lstSB);
                }
                return "/Docs/" + Session.SessionID + "/" + FileName;
            }
            else
            {
                FileName = string.Empty;
                return "/Docs/" + Session.SessionID + "/" + FileName;
            }
        }

        public JsonResult GetGatePassNo(string GatePassDate)
        {
            Hdb_ReportRepository ObjIR = new Hdb_ReportRepository();
            ObjIR.GetGatePassForExportRR(GatePassDate);
            return Json(ObjIR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region Escalation Report

        [HttpGet]
        public ActionResult EscalationReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //CHN_ReportRepository ObjReport = new CHN_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetEscalationReport(string PeriodFrom, string PeriodTo)
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            objRR.GetEscalationReport(PeriodFrom, PeriodTo);
            if (objRR.DBResponse.Data != null)
            {
                //List<Hdb_EscalationReport> lstData = new List<Hdb_EscalationReport>();
                //lstData = (List<Hdb_EscalationReport>)objRR.DBResponse.Data;
                return Json(objRR.DBResponse);
            }
            else
            {
                return Json(objRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateEscaltionReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "EscalationReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/EscalationReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/EscalationReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion



        #region PartyWiseUnrealized Invoice
        [HttpGet]
        public ActionResult PartyWiseUnrelize()
        {
            //Hdb_ReportRepository ObjRep = new Hdb_ReportRepository();
            //ObjRep.GetPartyForUnrealizedInv();
            //if (ObjRep.DBResponse.Data != null)
            //{
            //    ViewBag.Lstparty = new SelectList((List<Hdb_UnRealizedInvParty>)ObjRep.DBResponse.Data, "PartyId", "Partyname");
            //}
            //else
            //{
            //    ViewBag.Lstparty = null;
            //}
            return PartialView();
        }

        [HttpGet]
        public JsonResult LoadPartyForUnrealizedInv()
        {
            Hdb_ReportRepository ObjRep = new Hdb_ReportRepository();
            ObjRep.GetPartyForUnrealizedInv();
         
            return Json(ObjRep.DBResponse, JsonRequestBehavior.AllowGet);

         
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult PartyWiseUnrealized(Hdb_UnRealizedInvRpt ObjPV)
        {
            Hdb_ReportRepository objIR = new Hdb_ReportRepository();
            //string date= ObjPV.AsOnDate;
            //string date = Convert.ToDateTime(objPV.AsOnDate).ToString("yyyy-MM-dd");
            List<Hdb_PartyWiseUnrelized> SaveLstPartyWiseUrelized = new List<Hdb_PartyWiseUnrelized>();
            objIR.GetPartywiseUnrealized(ObjPV);
            if (objIR.DBResponse.Data != null)
            {
                List<Hdb_PartyWiseUnrelized> LstPartyWiseUrelized = new List<Hdb_PartyWiseUnrelized>();
                // List<OperationList> LstOperation = new List<OperationList>();
                LstPartyWiseUrelized = (List<Hdb_PartyWiseUnrelized>)objIR.DBResponse.Data;

                foreach (var item in LstPartyWiseUrelized)
                {
                    var ifExistPartyWiseUrelized = SaveLstPartyWiseUrelized.Where(x => x.PayeeId == item.PayeeId).FirstOrDefault();

                    if (ifExistPartyWiseUrelized == null)
                    {





                        Hdb_PartyWiseUnrelized savedPartyWiseUnrelize = new Hdb_PartyWiseUnrelized();
                        savedPartyWiseUnrelize.PartyName = item.PartyName;
                        savedPartyWiseUnrelize.Hdb_PartyWiseUnrelizeddetailsLst = new List<Hdb_PartyWiseUnrelizeddetails>();
                        savedPartyWiseUnrelize.InvoiceDate = item.InvoiceDate;
                        savedPartyWiseUnrelize.InvoiceNo = item.InvoiceNo;
                        savedPartyWiseUnrelize.InvoiceDate = item.InvoiceDate;
                        savedPartyWiseUnrelize.PayeeId = item.PayeeId;
                        // savedPartyWiseUnrelize.PartyName = item.PartyName;

                        // SavedAuctionNoticeDetails savedAuctionNoticeDetails = new SavedAuctionNoticeDetails();

                        //savedAuctionNoticeDetails.UOENo = item.BOENo;
                        //savedAuctionNoticeDetails.CommodityName = item.CommodityName;
                        //savedAuctionNoticeDetails.BOLDate = item.BLDate;
                        //savedAuctionNoticeDetails.ShipBillNo = item.ShippingBillNo;
                        //savedAuctionNoticeDetails.ShipBillDate = item.ShipBillDate;
                        //savedAuctionNoticeDetails.ContainerNo = item.ContainerNo;
                        //savedAuctionNotice.SavedAuctionNoticeDetailsList.Add(savedAuctionNoticeDetails);

                        Hdb_PartyWiseUnrelizeddetails savedHdb_PartyWiseUnrelizeddetails = new Hdb_PartyWiseUnrelizeddetails();
                        savedHdb_PartyWiseUnrelizeddetails.Amount = item.Amount;
                        savedHdb_PartyWiseUnrelizeddetails.InvoiceNo = item.InvoiceNo;
                        savedHdb_PartyWiseUnrelizeddetails.InvoiceDate = item.InvoiceDate;
                        savedHdb_PartyWiseUnrelizeddetails.Amount = item.Amount;
                        savedHdb_PartyWiseUnrelizeddetails.PayeeId = item.PayeeId;
                        SaveLstPartyWiseUrelized.Add(savedPartyWiseUnrelize);
                        savedPartyWiseUnrelize.Hdb_PartyWiseUnrelizeddetailsLst.Add(savedHdb_PartyWiseUnrelizeddetails);
                    }
                    else
                    {
                        Hdb_PartyWiseUnrelizeddetails savedPartyWiseUnrelizeDetails = new Hdb_PartyWiseUnrelizeddetails();
                        // savedPartyWiseUnrelizeDetails.PartyName = item.PartyName;
                        savedPartyWiseUnrelizeDetails.InvoiceDate = item.InvoiceDate;
                        savedPartyWiseUnrelizeDetails.InvoiceNo = item.InvoiceNo;
                        savedPartyWiseUnrelizeDetails.Amount = item.Amount;

                        foreach (var itemSavedAuctionNoticeList in SaveLstPartyWiseUrelized.Where(x => x.PayeeId == item.PayeeId).ToList())
                        {
                            itemSavedAuctionNoticeList.Hdb_PartyWiseUnrelizeddetailsLst.Add(savedPartyWiseUnrelizeDetails);
                        }

                    }
                }

                // LstOperation = Newtonsoft.Json.JsonConvert.DeserializeObject<List<OperationList>>(Operation);
                string Path = "";

                if ((ObjPV.FromDate != null) && (ObjPV.ToDate != null))
                    Path = GeneratePDFForPartyWiseUnrealized(SaveLstPartyWiseUrelized, Convert.ToDateTime(ObjPV.AsOnDate).ToString("dd/MM/yyyy"), Convert.ToDateTime(ObjPV.FromDate).ToString("dd/MM/yyyy"), Convert.ToDateTime(ObjPV.ToDate).ToString("dd/MM/yyyy"));
                else
                    Path = GeneratePDFForPartyWiseUnrealized(SaveLstPartyWiseUrelized, Convert.ToDateTime(ObjPV.AsOnDate).ToString("dd/MM/yyyy"), "", "");


                return Json(new { Status = 1, Message = Path });
            }
            else if (objIR.DBResponse.Status == 2)
            {
                return Json(new { Status = 2, Message = objIR.DBResponse.Message });
            }
            else
                return Json(new { Status = -1, Message = "Error" });
        }
        [NonAction]
        public string GeneratePDFForPartyWiseUnrealized(List<Hdb_PartyWiseUnrelized> LstPartyWiseUnrelized, string AsOnDate,string fromdt,string todt)
        {
            //decimal SumTotal = 0;
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/PartyWiseUnrelizedInvoice" + ".pdf";
            //   string JobOrderType = JobOrderFor == 1 ? "CBT" : "Container ";
            List<Hdb_PartyWiseUnrelized> List = new List<Hdb_PartyWiseUnrelized>();
            //int Count = 0;
            // string Sline = "";
            StringBuilder Html = new StringBuilder();
            string CompanyAddress = "";
            CompanyRepository ObjCR = new CompanyRepository();
            List<Company> LstCompany = new List<Company>();
            ObjCR.GetAllCompany();
            if (ObjCR.DBResponse.Data != null)
            {
                LstCompany = (List<Company>)ObjCR.DBResponse.Data;
                CompanyAddress = LstCompany[0].CompanyAddress;
            }

            /*   LstJobOrder.ToList().ForEach(item =>
               {
                   ContainerNo = (ContainerNo == "" ? (item.ContainerNo) : (ContainerNo + "<br/>" + item.ContainerNo));
                   Size = (Size == "" ? (item.ContainerSize) : (Size + "<br/>" + item.ContainerSize));
                   Sline = (Sline == "" ? (item.Sline) : (Sline + "<br/>" + item.Sline));
                   Serial = (Serial == "") ? (++Count).ToString() : (Serial + "<br/>" + (++Count).ToString());
               }); */

            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Path))
            {
                System.IO.File.Delete(Path);
            }
            /*  if ((Convert.ToInt32(Session["BranchId"])) == 1)
              {
                  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th style='width:15%;text-align:left;'><img src='IMGSRC' width='50%;'/></th><th style='text-align:center;'><span style='font-size:16pt;'><strong>CENTRAL WAREHOUSING CORPORATION</strong></span><br/><span>(A GOVT. OF INDIA UNDERTAKING)<br/>" + CompanyAddress + "</span></th></tr></thead><tbody><tr><td width='20%' style='text-align:left;'>No.<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderNo + "</span></td><td style='text-align:right;'>Date<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderDate + "</span></td></tr><tr><td colspan='2' style='text-align:center;'><br/><span style='border-bottom:1px solid #000;font-size:12pt;font-weight:600;'>JOB ORDER</span></td></tr><tr><td colspan='2' style='text-align:left;'><br/>To,<br/>The Kandla International Container Terminal(KICT),<br/>Kandla</td></tr><tr><td colspan='2' style='text-align:center;'><br/>Shift the Import from <span style='border-bottom:1px solid #000;'> " + objMdl.FromLocation + " </span> to<span style='border-bottom:1px solid #000;'> CFS-KPT </span></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:5px;text-align:center;'>SL. NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>CONTAINER NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>SIZE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>S. LINE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>LOADED / EMPTY</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:5px;'>" + Serial + "</td><td style='border:1px solid #000;padding:5px;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:5px;'>" + Size + "</td><td style='border:1px solid #000;padding:5px;'>" + objMdl.ShippingLineName + "</td><td style='border:1px solid #000;padding:5px;'>" + objMdl.ContainerType + "</td></tr></tbody> </table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><tbody><tr><td>Copy to:- <span>M/s Abrar Forwarders <br/>Gate Incharge,CWC KPT <br/>Custom PO,KICT Gate</span></td><td><br/><br/>Authorised Signature</td></tr></tbody></table></td></tr></tbody></table>";
              }
              else
              {
                  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><thead><tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='90%' valign='top' align='center'><h1 style='font-size: 18px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>" + CompanyAddress + "</span><br/><label style='font-size: 12px;'>Email - cwccfs@gmail.com</label></td><td valign='top'><img align='right' src='ISO' width='100'/></td></tr></thead><tbody><tr><td style='text-align:left;' colspan='2'>No.<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderNo + "</span></td><td style='text-align:right; width:20%;'>Date<span style='border-bottom:1px solid #000;'> " + objMdl.JobOrderDate + "</span></td></tr><tr><td colspan='4' style='text-align:center;'><br/><span style='border-bottom:1px solid #000;font-size:12pt;font-weight:600;'>JOB ORDER</span></td></tr><tr><td colspan='4' style='text-align:center;'><br/>Please arrange to bring / shift the Import / Export Load / Loaded Container / Loaded CBT </td></tr><tr><td colspan='4' style='text-align:left;'><span style='border-bottom:1px solid #000;'> " + objMdl.FromLocation + " </span> <span style='border-bottom:1px solid #000;'> " + objMdl.ToLocation + " </span></td></tr><tr><td colspan='4'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;'><thead><tr><th style='border:1px solid #000;padding:5px;text-align:center;'>SL. NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>CONTAINER/CBT NO.</th><th style='border:1px solid #000;padding:5px;text-align:center;'>SIZE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>S. LINE</th><th style='border:1px solid #000;padding:5px;text-align:center;'>LOADED / EMPTY</th></tr></thead><tbody><tr><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Serial + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + ContainerNo + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Size + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + Sline + "</td><td style='border:1px solid #000;padding:5px;text-align:center;'>" + objMdl.ContainerType + "</td></tr></tbody> </table></td></tr><tr><td colspan='4'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;'><tbody><tr></tr><tr><span><br/><br/><br/><br/><br/><br/></span></tr><tr><td colspan='6' style='padding-top:150px;'>Copy to:- <span></span></td><td colspan='6' style='padding-top:150px;text-align:right;'>SR.ASSTT.MANAGER</td></tr></tbody></table></td></tr></tbody></table>";
              } */

            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            Html.Append("<tr><td width='65%' style='font-size: 10px;'>'Warehousing for every one'</td>");
            Html.Append("</tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");
            Html.Append("<tr><td colspan='12'>");
            Html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            Html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            Html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally<br/> IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 14px; font-weight:bold;'>PartyWise Unrealized Invoice As ON</label></td>");
            Html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
            Html.Append("</tbody></table>");
            Html.Append("</td></tr>");
            Html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody><tr><th style='font-size:13px; width:8%;'></th>");
            Html.Append("<td style='font-size:12px; width:10%;'><u>" + AsOnDate + "</u></td></tr></tbody></table></td></tr>");
           

            if (fromdt == "" && todt == "")
            {
                Html.Append("<tr>");
            }
            else
            {
                Html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody><tr><th style='font-size:13px; width:8%;'>Period </th>");
                Html.Append("<td style='font-size:12px; width:10%;'><u>" + fromdt + " To " + todt + "</u></td></tr></tbody></table></td></tr>");
                Html.Append("<tr>");
            }
            Html.Append("<td colspan='12'>");
            Html.Append("<table style='border:1px solid #000;border-bottom:0;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");

            Html.Append("<thead>");
            Html.Append("<tr>");
            Html.Append("<th style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;width:60px;'>Sl.No</th> ");
            Html.Append("<th style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;width:200px;'>Payee Name</th>");

            Html.Append("<th style='text-align:center;border-bottom:1px solid #000;width:450px;'><table cellspacing='0' style='width:100%; font-size:8pt;'><tbody><tr>");
            Html.Append("<th style='text-align:center;border-right:1px solid #000;padding:10px;width:150px;'>Invoice No</th>");
            Html.Append("<th style='text-align:center;border-right:1px solid #000;padding:10px;width:150px;'>Date</th>");
            Html.Append("<th style='text-align:right;padding:10px;width:150px;'>Amount</th>");
            Html.Append("</tr></tbody></table></th>");
            Html.Append("</tr>");
            Html.Append("</thead>");

            Html.Append("<tbody>");

            int i = 1;
            LstPartyWiseUnrelized.ToList().ForEach(item =>
            {
                decimal SumTotal = 0;
                Html.Append("<tr>");
                Html.Append("<td style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;width:60px;'>" + i.ToString() + "</td>");
                Html.Append("<td style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;width:200px;'>" + item.PartyName + "</td>");

                Html.Append("<td style='text-align:center;border-bottom:1px solid #000;width:450px;'><table cellspacing='0' style='width:100%; font-size:8pt;'><tbody>");
                int j = 1;
                item.Hdb_PartyWiseUnrelizeddetailsLst.ToList().ForEach(im =>
                {
                    Html.Append("<tr><td style='text-align:center;border-bottom:1px solid #000;border-right:1px solid #000;padding:10px;width:150px;'>" + im.InvoiceNo + "</td>");
                    Html.Append("<td style='text-align:center;border-bottom:1px solid #000;border-right:1px solid #000;padding:10px;width:150px;'>" + im.InvoiceDate + "</td>");
                    Html.Append("<td style='text-align:right;border-bottom:1px solid #000;padding:10px;width:150px;'>" + im.Amount + "</td></tr>");
                    SumTotal = SumTotal + (im.Amount);
                });
                //Html.Append("<tr><td style='text-align:center;border-bottom:1px solid #000;border-right:1px solid #000;padding:10px;'>Dynamic</td>");
                //Html.Append("<td style='text-align:center;border-bottom:1px solid #000;border-right:1px solid #000;padding:10px;'>Dynamic</td>");
                //Html.Append("<td style='text-align:center;border-bottom:1px solid #000;padding:10px;'>Dynamic</td></tr>");
                Html.Append("</tbody></table></td>");
                Html.Append("</tr>");

                Html.Append("<tr>");
                Html.Append("<th colspan='2' style='text-align:left;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;width:60px;'>Total</th> ");

                Html.Append("<th style='text-align:center;border-bottom:1px solid #000;width:450px;'><table cellspacing='0' style='width:100%; font-size:8pt;'><tbody><tr>");
                Html.Append("<th style='padding:10px;width:150px;'></th>");
                Html.Append("<th style='padding:10px;width:150px;'></th>");
                Html.Append("<th style='text-align:right;padding:10px;width:150px;'>" + SumTotal + "</th>");
                Html.Append("</tr></tbody></table></th>");
                Html.Append("</tr>");

                //Html.Append("<tr>");
                //Html.Append("<th colspan='2' style='text-align:left;border-bottom:1px solid #000;padding:10px;'>TOTAL</th>");
                //Html.Append("<td style='text-align:center;border-bottom:1px solid #000;width:80%;'><table cellspacing='0' style='width:100%; font-size:8pt;'><tbody><tr>");
                //Html.Append("<td style='width:26%;'></td>");
                //Html.Append("<td style='border-right:1px solid #000;width:30%;'></td>");
                //Html.Append("<td style='text-align:center;padding:10px;width:24.66666666666667%;'>" + SumTotal + "</td>");
                //Html.Append("</tr></tbody></table></td>");
                //Html.Append("</tr>");
                i++;
            });



            //Html.Append("<tr>");
            //Html.Append("<th colspan='3' style='text-align:left;border-right:1px solid #000; border-bottom:1px solid #000;padding:10px;'>Total</th> ");
            //Html.Append("<th style='text-align:right;border-bottom:1px solid #000; padding: 10px;'>" + SumTotal + "</th> ");
            //Html.Append("</tr>");            

            Html.Append("</tbody>");
            Html.Append("</table>");
            Html.Append("</td>");
            Html.Append("</tr>");
            Html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' width='100%'><tbody><tr><td><span><br/></span></td></tr><tr><td colspan='8' width='70%' valign='top'><span style='font-size:12px;'>To,</span><br/><br/> <span style='font-size:12px;'>H&T Contractor<br/> CFS, Kukatpally</span> </td><td colspan='4' width='30%'><table cellspacing='0' cellpadding='5' width='100%'><tbody><tr><th style='font-size:14px;' align='left'>SHIFT INCHARGE</th></tr><tr><td style='font-size:12px;' align='left'>Date :</td></tr><tr><td style='font-size:12px;' align='left'>Time :</td></tr></tbody></table></td></tr></tbody></table></td></tr>");
            Html.Append("<tr><td colspan='12'><span style='font-size:13px;'>Copy to:</span></td></tr>");
            Html.Append("</tbody></table>");
            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            Html = Html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = this.HeadOffice;
                rh.HOAddress = this.HOAddress;
                rh.ZonalOffice = this.ZonalOffice;
                rh.ZOAddress = this.ZOAddress;
                rh.GeneratePDF(Path, Html.ToString());
            }
            return "/Docs/" + Session.SessionID + "/PartyWiseUnrelizedInvoice" + ".pdf";
        }
        #endregion

        #region Abstract Accured Report
        public ActionResult AbstractAccuredReport()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int FrmYr = DateTime.Today.Year - 20;
            int Toyr = DateTime.Today.Year + 10;
            for (int i = FrmYr; i <= Toyr; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstyear = lstYear;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetAbstractAccuredReport(int Month, int Year)
        {
            Hdb_ReportRepository objR = new Hdb_ReportRepository();
            objR.GetAbstractAccuredReport(Month, Year);
            string Path = "";
            if (objR.DBResponse.Data != null)
            {
                Hdb_AbstractAccuredReport objAbR = new Hdb_AbstractAccuredReport();
                objAbR = (Hdb_AbstractAccuredReport)objR.DBResponse.Data;
                Path = GenerateAbstractAccuredReport(objAbR, Month, Year);
                return Json(new { Message = Path, Status = 1 });
            }
            else
            {
                return Json(new { Message = "", Status = 0 });
            }

        }

        [NonAction]
        public string GenerateAbstractAccuredReport(Hdb_AbstractAccuredReport ObjAbr, int Month, int Year)
        {
            try
            {
                string strMonth = new DateTime(1900, Month, 01).ToString("MMMM").ToUpper();
                var FileName = "AbstractInvReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ABSTRACT OF INVOICES RAISED (ACCURED) FOR THE MONTH OF " + strMonth + " - " + Year + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;text-align:center;'>SL.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:30%;text-align:center;'>Name of the Head</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>As per Invoices (CGST/SGST)</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>As per Invoices (IGST)</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:20%;text-align:center;'>TOTAL RS.</th></tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");

                /*MISC SEC*/
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>MISC</th></tr>");
                int k = 1;
                ObjAbr.lstInv.Where(x => x.InvType == "MISC").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalMiscSGST = ObjAbr.lstInv.Where(y => y.InvType == "MISC").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalMiscIGST = ObjAbr.lstInv.Where(y => y.InvType == "MISC").Sum(x => (decimal)x.IGST);
                decimal TotalMiscAmt = ObjAbr.lstInv.Where(y => y.InvType == "MISC").Sum(x => (decimal)x.Total);

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalMiscSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalMiscIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalMiscAmt + "</th>");
                Pages.Append("</tr>");

                /*BOND SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>BOND</th></tr>");
                ObjAbr.lstInv.Where(z => z.InvType == "Bond").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalBondSGST = ObjAbr.lstInv.Where(z => z.InvType == "Bond").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalBondIGST = ObjAbr.lstInv.Where(z => z.InvType == "Bond").Sum(x => (decimal)x.IGST);
                decimal TotalBondAmt = ObjAbr.lstInv.Where(z => z.InvType == "Bond").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalBondSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalBondIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalBondAmt + "</th>");
                Pages.Append("</tr>");

                /*IMPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>IMPORT</th></tr>");
                ObjAbr.lstInv.Where(v => v.InvType == "Import").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalImpSGST = ObjAbr.lstInv.Where(a => a.InvType == "Import").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalTmpIGST = ObjAbr.lstInv.Where(a => a.InvType == "Import").Sum(x => (decimal)x.IGST);
                decimal TotalImpAmt = ObjAbr.lstInv.Where(a => a.InvType == "Import").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalImpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalTmpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalImpAmt + "</th>");
                Pages.Append("</tr>");

                /*EXPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>EXPORT</th></tr>");
                ObjAbr.lstInv.Where(u => u.InvType == "Export").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalExpSGST = ObjAbr.lstInv.Where(b => b.InvType == "Export").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalExpIGST = ObjAbr.lstInv.Where(b => b.InvType == "Export").Sum(x => (decimal)x.IGST);
                decimal TotalExpAmt = ObjAbr.lstInv.Where(b => b.InvType == "Export").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalExpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalExpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalExpAmt + "</th>");
                Pages.Append("</tr>");

                /*Grand Total*/
                decimal TotalInvSGST = ObjAbr.lstInv.Sum(x => (decimal)x.SGSTCGST);
                decimal TotalInvIGST = ObjAbr.lstInv.Sum(x => (decimal)x.IGST);
                decimal TotalInvAmt = ObjAbr.lstInv.Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Grand Totals :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalInvSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalInvIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalInvAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE SEC START*/

                /*CREDIT NOTE MISC SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (MISC)</th></tr>");
                ObjAbr.lstCr.Where(t => t.InvType == "MISC").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrMiscSGST = ObjAbr.lstCr.Where(c => c.InvType == "MISC").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalCrMiscIGST = ObjAbr.lstCr.Where(c => c.InvType == "MISC").Sum(x => (decimal)x.IGST);
                decimal TotalCrMiscAmt = ObjAbr.lstCr.Where(c => c.InvType == "MISC").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrMiscSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrMiscIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrMiscAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE BOND SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (BOND)</th></tr>");
                ObjAbr.lstCr.Where(s => s.InvType == "Bond").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrBondSGST = ObjAbr.lstCr.Where(d => d.InvType == "Bond").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalCrBondIGST = ObjAbr.lstCr.Where(d => d.InvType == "Bond").Sum(x => (decimal)x.IGST);
                decimal TotalCrBondAmt = ObjAbr.lstCr.Where(d => d.InvType == "Bond").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrBondSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrBondIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrBondAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE IMPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (IMPORT)</th></tr>");
                ObjAbr.lstCr.Where(r => r.InvType == "Import").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrImpSGST = ObjAbr.lstCr.Where(e => e.InvType == "Import").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalCrImpIGST = ObjAbr.lstCr.Where(e => e.InvType == "Import").Sum(x => (decimal)x.IGST);
                decimal TotalCrImpAmt = ObjAbr.lstCr.Where(e => e.InvType == "Import").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrImpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrImpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrImpAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE EXPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (EXPORT)</th></tr>");
                ObjAbr.lstCr.Where(q => q.InvType == "Export").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.SGSTCGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGST + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrExpSGST = ObjAbr.lstCr.Where(f => f.InvType == "Export").Sum(x => (decimal)x.SGSTCGST);
                decimal TotalCrExpIGST = ObjAbr.lstCr.Where(f => f.InvType == "Export").Sum(x => (decimal)x.IGST);
                decimal TotalCrExpAmt = ObjAbr.lstCr.Where(f => f.InvType == "Export").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrExpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrExpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrExpAmt + "</th>");
                Pages.Append("</tr>");

                /*Grand Total*/
                decimal TotalCrSGST = ObjAbr.lstCr.Sum(x => (decimal)x.SGSTCGST);
                decimal TotalCrIGST = ObjAbr.lstCr.Sum(x => (decimal)x.IGST);
                decimal TotalCrAmt = ObjAbr.lstCr.Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Grand Totals :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrAmt + "</th>");
                Pages.Append("</tr>");

                /*GST SEC*/
                decimal BalancedIGST = ObjAbr.lstInv.Sum(x => (decimal)x.IGST) - ObjAbr.lstCr.Sum(x => (decimal)x.IGST);
                decimal BalancedCGST = ObjAbr.lstInv.Sum(x => (decimal)x.CGST) - ObjAbr.lstCr.Sum(x => (decimal)x.CGST);
                decimal BalancedSGST = ObjAbr.lstInv.Sum(x => (decimal)x.SGST) - ObjAbr.lstCr.Sum(x => (decimal)x.SGST);
                decimal BalancedRoundOff = ObjAbr.lstInv.Sum(x => (decimal)x.RoundOff) - ObjAbr.lstCr.Sum(x => (decimal)x.RoundOff);
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>GST</th></tr>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;'>1</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;text-align:right;'>IGST</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;text-align:right;'>-</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;text-align:right;'>" + BalancedIGST + "</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + BalancedIGST + "</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>2</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>CGST</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + BalancedCGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + BalancedCGST + "</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>3</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>SGST</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + BalancedSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + BalancedSGST + "</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>4</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Round Off</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("</tr>");

                /*   Pages.Append("<tr>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>"+ BalancedIGST + "</td>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>"+BalancedCGST+"</td>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>"+BalancedIGST+"</td>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>"+ BalancedRoundOff + "</td>");
                   Pages.Append("</tr>");
                   /*Total*/
                decimal TotalSGSTCGST = BalancedCGST + BalancedSGST;
                decimal TotalGST = BalancedCGST + BalancedSGST + BalancedIGST;
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalSGSTCGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + BalancedIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalGST + "</th>");
                Pages.Append("</tr>");

                /*Grand Total*/
                decimal GrTotalCGSTSGST = TotalSGSTCGST + TotalInvSGST + TotalCrSGST;
                decimal GrTotalIGST = BalancedIGST + TotalInvIGST + TotalCrIGST;
                decimal GrTotal = GrTotalCGSTSGST + GrTotalIGST;
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Grand Totals :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + GrTotalCGSTSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + GrTotalIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + GrTotal + "</th>");
                Pages.Append("</tr>");





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion


        #region FormOneReport

        //same model used for daily and monthly cashbook in patparganj

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult FormOneReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Ppg_ReportRepository ObjReport = new Ppg_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public ActionResult GetFormOneReport(FormCollection ObjMonthlyCashBook)
        {
            string Fdt = Convert.ToDateTime(ObjMonthlyCashBook["PeriodFrom"]).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ObjMonthlyCashBook["PeriodTo"]).ToString("yyyy-MM-dd");
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_FormOneReport> LstFormOneReport = new List<Hdb_FormOneReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetFormOneReport(Fdt, Tdt);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstFormOneReport = (List<Hdb_FormOneReport>)ObjRR.DBResponse.Data;
                string Path = GeneratePDFFormOneReport(LstFormOneReport, Convert.ToDateTime(Fdt).ToString("dd/MM/yyyy"), Convert.ToDateTime(Tdt).ToString("dd/MM/yyyy"));


                return Json(new { Status = 1, Message = Path });
            }
            else if (ObjRR.DBResponse.Status == 2)
            {
                return Json(new { Status = 2, Message = ObjRR.DBResponse.Message });
            }
            else
                return Json(new { Status = -1, Message = "Error" });

        }

        [NonAction]
        public string GeneratePDFFormOneReport(List<Hdb_FormOneReport> lstData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "FormOneReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>Physical Verification Report for FormOne</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size:12px;'><b>As On Date - </b> " + Date + "</span><br/><span style='font-size:12px;'><b>Shed Cd - </b>" + GodownName + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Physical Verification Report for Import Cargo</label></td></tr>");
                //Pages.Append("</tbody></table>");
                //Pages.Append("</td></tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='6' style='font-size:12px; width:50%;'><b>From  - </b>" + FromDate + " TO -" + ToDate + " </td>");
                Pages.Append("<td colspan='6' style='font-size:12px; width:50%; text-align:right;'><b>Shed Cd - </b>  </td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;'>ContainerNo</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>FormOneDate</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CFS Code</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>LCL/FCL</th></tr>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;'>Importer</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Item No</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>No Pkg</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Rcvd Pkg</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Gr W</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Area</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Slot No</th>");
                //Pages.Append("<th style='border-bottom:1px solid #000;width:15%;'>Remarks</th></tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");

                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CBTContainerNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.FormOneDate + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.LCLFCL + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CommodityAlias + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.NoOfUnits + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.NoOfUnitsRec + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Weight.ToString("0.00") + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Area.ToString("0.00") + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.LocationName + "</td>");
                    //Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                //Pages.Append("<tr>");
                //Pages.Append("<th colspan='5' style='text-align:left;'>Total :</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnits) + "</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnitsRec) + "</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight).ToString("0.00") + "</th>");
                //Pages.Append("<th colspan='3' style='text-align:left;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area).ToString("0.00") + "</th>");
                //Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion


        #region SD Details Report

        public ActionResult SDDetailsReport()
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForSDDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }


        [HttpGet]
        public JsonResult SearchParty(string PartyCode)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForSDDet(PartyCode, 0);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadParty(string PartyCode, int Page)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForSDDet(PartyCode, Page);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetSDDetReport(string FromDate, string ToDate, int PartyId)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetSDDetStatement(PartyId, Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                HdbSDDetailsStatement SDData = new HdbSDDetailsStatement();
                SDData = (HdbSDDetailsStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFSDDetReport(SDData, FromDate, ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GeneratePDFSDDetReport(HdbSDDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "SdReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally,IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px; font-weight:bold;'>SD STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Mode</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;'>Transaction Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.Mode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='border-right:1px solid #000;width:8%;text-align:right;'>Invoice Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + SDData.UtilizationAmount + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion




        #region Party Ledger Report

        public ActionResult PartyLedgerReport()
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForSDDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }




        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetLedgerDetReport(string FromDate, string ToDate, int PartyId)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetLedgerDetStatement(PartyId, Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                HdbSDDetailsStatement SDData = new HdbSDDetailsStatement();
                SDData = (HdbSDDetailsStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFLedgerDetReport(SDData, FromDate, ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GeneratePDFLedgerDetReport(HdbSDDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "LedgerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally,IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px; font-weight:bold;'>PARTY LEDGER STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Realised Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Transaction Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Closing Balance</th></tr></thead>");

                Pages.Append("<tbody>");
                int counter = 1;
                decimal utilisationamt = 0;
                decimal ReceiptAmt = 0;
                decimal balance = 0;
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.RealisedInvoiceNo + "</td>");
                    if (item.ReceiptNo != "")
                    {
                        if (item.TranAmt == 0)
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                        }

                    }
                    else
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                    }
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    if (counter == 1)
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        utilisationamt = Convert.ToDecimal(item.ReceiptAmt);
                    }
                    else
                    {
                        if (item.ReceiptNo != "")
                        {
                            if (item.TranAmt == 0)
                            {
                                if (item.CrAdjust == 0)
                                {
                                    utilisationamt = utilisationamt + Convert.ToDecimal(item.ReceiptAmt);
                                    balance = balance - Convert.ToDecimal(item.TranAmt);
                                }
                            }
                            else
                            {
                                utilisationamt = utilisationamt + Convert.ToDecimal(item.TranAmt);
                                balance = balance - Convert.ToDecimal(item.TranAmt);
                            }
                        }
                        utilisationamt = utilisationamt - Convert.ToDecimal(item.TranAmt);
                        balance = balance + Convert.ToDecimal(item.TranAmt);
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + utilisationamt.ToString() + "</td>");
                    }
                    Pages.Append("</tr>");
                    counter++;
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Closing Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + utilisationamt.ToString() + "</th>");
                Pages.Append("</tr>");



                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>SD Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + SDData.SDBalance.ToString() + "</th>");
                Pages.Append("</tr>");

                Decimal UtiBalance = Convert.ToDecimal(SDData.SDBalance) - Math.Abs(utilisationamt);
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + UtiBalance.ToString() + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region TDS Report

        [HttpGet]
        public ActionResult TDSReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<PartyLedgerList> LstParty = new List<PartyLedgerList>();
            ObjRR.GetEximTraderForPartyLedger();
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.PartyList = new SelectList((List<PartyLedgerList>)ObjRR.DBResponse.Data, "PartyId", "PartyName");
            }
            else
            {
                ViewBag.PartyList = null;
            }
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetTDSReport(Hdb_TDSReport ObjTDSReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            Hdb_TDSMain LstITDSMain = new Hdb_TDSMain();
            //  Login objLogin = (Login)Session["LoginUser"];
            ObjRR.TdsReport(ObjTDSReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstITDSMain = (Hdb_TDSMain)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateTDSReportPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "TDSReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/TDSReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/TDSReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region UnRealized Invoice Report

        [HttpGet]
        public ActionResult UnRealizedInvoiceSummary()
        {


            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetUnRealizedInvSummary(string AsOnDate,string InvoiceType, string FromDate, string ToDate)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetUnRealizedInvSummary(AsOnDate, InvoiceType, FromDate, ToDate);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateUnRealisedSummaryPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "UnrealizedInvoiceSummaryReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/UnrealizedInvoiceSummaryReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/UnrealizedInvoiceSummaryReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region register of outward supply

        [HttpGet]
        public ActionResult RegisterOfOutward()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfOutward(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetRegisterofOutward(date1, date2);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                }
            }
            // return null;
        }

        #endregion

        #region Abstract Accured Report(Taxable)
        public ActionResult AbstractAccuredReportTaxable()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int FrmYr = DateTime.Today.Year - 20;
            int Toyr = DateTime.Today.Year + 10;
            for (int i = FrmYr; i <= Toyr; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstyear = lstYear;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetAbstractAccuredReportTaxable(int Month, int Year)
        {
            Hdb_ReportRepository objR = new Hdb_ReportRepository();
            objR.GetAbstractAccuredReportTaxable(Month, Year);
            string Path = "";
            if (objR.DBResponse.Data != null)
            {
                Hdb_AbstractAccuredReport objAbR = new Hdb_AbstractAccuredReport();
                objAbR = (Hdb_AbstractAccuredReport)objR.DBResponse.Data;
                Path = GenerateAbstractAccuredReportTaxable(objAbR, Month, Year);
                return Json(new { Message = Path, Status = 1 });
            }
            else
            {
                return Json(new { Message = "", Status = 0 });
            }

        }

        [NonAction]
        public string GenerateAbstractAccuredReportTaxable(Hdb_AbstractAccuredReport ObjAbr, int Month, int Year)
        {
            try
            {
                string strMonth = new DateTime(1900, Month, 01).ToString("MMMM").ToUpper();
                var FileName = "AbstractInvReportTaxable.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ABSTRACT OF INVOICES RAISED (ACCURED) FOR THE MONTH OF " + strMonth + " - " + Year + " (Taxable)</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;text-align:center;'>SL.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:25%;text-align:center;'>Name of the Head</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;text-align:center;'>As per Invoices (CGST/SGST)</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;text-align:center;'>As per Invoices (IGST)</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%;text-align:center;'>As per Invoices (Bill)</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:20%;text-align:center;'>TOTAL RS.</th></tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");

                /*MISC SEC*/
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>MISC</th></tr>");
                int k = 1;
                ObjAbr.lstInv.Where(x => x.InvType == "MISC").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalMiscSGST = ObjAbr.lstInv.Where(y => y.InvType == "MISC").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalMiscIGST = ObjAbr.lstInv.Where(y => y.InvType == "MISC").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalMiscBill = ObjAbr.lstInv.Where(y => y.InvType == "MISC").Sum(x => (decimal)x.BillTaxable);
                decimal TotalMiscAmt = ObjAbr.lstInv.Where(y => y.InvType == "MISC").Sum(x => (decimal)x.Total);

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalMiscSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalMiscIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalMiscBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalMiscAmt + "</th>");
                Pages.Append("</tr>");

                /*BOND SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>BOND</th></tr>");
                ObjAbr.lstInv.Where(z => z.InvType == "Bond").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalBondSGST = ObjAbr.lstInv.Where(z => z.InvType == "Bond").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalBondIGST = ObjAbr.lstInv.Where(z => z.InvType == "Bond").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalBondBill = ObjAbr.lstInv.Where(z => z.InvType == "Bond").Sum(x => (decimal)x.BillTaxable);
                decimal TotalBondAmt = ObjAbr.lstInv.Where(z => z.InvType == "Bond").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalBondSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalBondIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalBondBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalBondAmt + "</th>");
                Pages.Append("</tr>");

                /*IMPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>IMPORT</th></tr>");
                ObjAbr.lstInv.Where(v => v.InvType == "Import").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalImpSGST = ObjAbr.lstInv.Where(a => a.InvType == "Import").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalTmpIGST = ObjAbr.lstInv.Where(a => a.InvType == "Import").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalTmpBill = ObjAbr.lstInv.Where(a => a.InvType == "Import").Sum(x => (decimal)x.BillTaxable);
                decimal TotalImpAmt = ObjAbr.lstInv.Where(a => a.InvType == "Import").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalImpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalTmpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalTmpBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalImpAmt + "</th>");
                Pages.Append("</tr>");

                /*EXPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>EXPORT</th></tr>");
                ObjAbr.lstInv.Where(u => u.InvType == "Export").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalExpSGST = ObjAbr.lstInv.Where(b => b.InvType == "Export").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalExpIGST = ObjAbr.lstInv.Where(b => b.InvType == "Export").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalExpBill = ObjAbr.lstInv.Where(b => b.InvType == "Export").Sum(x => (decimal)x.BillTaxable);
                decimal TotalExpAmt = ObjAbr.lstInv.Where(b => b.InvType == "Export").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalExpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalExpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalExpBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalExpAmt + "</th>");
                Pages.Append("</tr>");

                /*Grand Total*/
                decimal TotalInvSGST = ObjAbr.lstInv.Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalInvIGST = ObjAbr.lstInv.Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalInvBill = ObjAbr.lstInv.Sum(x => (decimal)x.BillTaxable);
                decimal TotalInvAmt = ObjAbr.lstInv.Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Grand Totals :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalInvSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalInvIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalInvBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalInvAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE SEC START*/

                /*CREDIT NOTE MISC SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (MISC)</th></tr>");
                ObjAbr.lstCr.Where(t => t.InvType == "MISC").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrMiscSGST = ObjAbr.lstCr.Where(c => c.InvType == "MISC").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalCrMiscIGST = ObjAbr.lstCr.Where(c => c.InvType == "MISC").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalCrMiscBill = ObjAbr.lstCr.Where(c => c.InvType == "MISC").Sum(x => (decimal)x.BillTaxable);
                decimal TotalCrMiscAmt = ObjAbr.lstCr.Where(c => c.InvType == "MISC").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrMiscSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrMiscIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrMiscBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrMiscAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE BOND SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (BOND)</th></tr>");
                ObjAbr.lstCr.Where(s => s.InvType == "Bond").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrBondSGST = ObjAbr.lstCr.Where(d => d.InvType == "Bond").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalCrBondIGST = ObjAbr.lstCr.Where(d => d.InvType == "Bond").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalCrBondBill = ObjAbr.lstCr.Where(d => d.InvType == "Bond").Sum(x => (decimal)x.BillTaxable);
                decimal TotalCrBondAmt = ObjAbr.lstCr.Where(d => d.InvType == "Bond").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrBondSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrBondIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrBondBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrBondAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE IMPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (IMPORT)</th></tr>");
                ObjAbr.lstCr.Where(r => r.InvType == "Import").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrImpSGST = ObjAbr.lstCr.Where(e => e.InvType == "Import").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalCrImpIGST = ObjAbr.lstCr.Where(e => e.InvType == "Import").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalCrImpBill = ObjAbr.lstCr.Where(e => e.InvType == "Import").Sum(x => (decimal)x.BillTaxable);
                decimal TotalCrImpAmt = ObjAbr.lstCr.Where(e => e.InvType == "Import").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrImpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrImpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrImpBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrImpAmt + "</th>");
                Pages.Append("</tr>");

                /*CREDIT NOTE EXPORT SEC*/
                k = 1;
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>CREDIT NOTE (EXPORT)</th></tr>");
                ObjAbr.lstCr.Where(q => q.InvType == "Export").ToList().ForEach(m =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.Headname + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.CGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.IGSTTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.BillTaxable + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + m.Total + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
                decimal TotalCrExpSGST = ObjAbr.lstCr.Where(f => f.InvType == "Export").Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalCrExpIGST = ObjAbr.lstCr.Where(f => f.InvType == "Export").Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalCrExpBill = ObjAbr.lstCr.Where(f => f.InvType == "Export").Sum(x => (decimal)x.BillTaxable);
                decimal TotalCrExpAmt = ObjAbr.lstCr.Where(f => f.InvType == "Export").Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrExpSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrExpIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrExpBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrExpAmt + "</th>");
                Pages.Append("</tr>");

                /*Grand Total*/
                decimal TotalCrSGST = ObjAbr.lstInv.Sum(x => (decimal)x.CGSTTaxable) - ObjAbr.lstCr.Sum(x => (decimal)x.CGSTTaxable);
                decimal TotalCrIGST = ObjAbr.lstInv.Sum(x => (decimal)x.IGSTTaxable) - ObjAbr.lstCr.Sum(x => (decimal)x.IGSTTaxable);
                decimal TotalCrBill = ObjAbr.lstInv.Sum(x => (decimal)x.BillTaxable) - ObjAbr.lstCr.Sum(x => (decimal)x.BillTaxable);
                decimal TotalCrAmt = ObjAbr.lstInv.Sum(x => (decimal)x.Total) - ObjAbr.lstCr.Sum(x => (decimal)x.Total);
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Grand Totals :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalCrBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalCrAmt + "</th>");
                Pages.Append("</tr>");

                /*GST SEC*/
                //decimal BalancedIGST = ObjAbr.lstInv.Sum(x => (decimal)x.IGST) - ObjAbr.lstCr.Sum(x => (decimal)x.IGST);
                //decimal BalancedCGST = ObjAbr.lstInv.Sum(x => (decimal)x.CGST) - ObjAbr.lstCr.Sum(x => (decimal)x.CGST);
                //decimal BalancedSGST = ObjAbr.lstInv.Sum(x => (decimal)x.SGST) - ObjAbr.lstCr.Sum(x => (decimal)x.SGST);
                //decimal BalancedRoundOff = ObjAbr.lstInv.Sum(x => (decimal)x.RoundOff) - ObjAbr.lstCr.Sum(x => (decimal)x.RoundOff);

                decimal BalancedIGST = ObjAbr.lstInv.Sum(x => (decimal)x.IGST) - ObjAbr.lstCr.Sum(x => (decimal)x.IGST);
                decimal BalancedCGST = ObjAbr.lstInv.Sum(x => (decimal)x.CGST) - ObjAbr.lstCr.Sum(x => (decimal)x.CGST);
                decimal BalancedSGST = ObjAbr.lstInv.Sum(x => (decimal)x.SGST) - ObjAbr.lstCr.Sum(x => (decimal)x.SGST);
                //decimal CGSTRoundOff = ObjAbr.lstInv.Sum(x => (decimal)x.CGSTRoundUp) - ObjAbr.lstCr.Sum(x => (decimal)x.CGSTRoundUp);
                //decimal IGSTRoundOff = ObjAbr.lstInv.Sum(x => (decimal)x.IGSTRoundUp) - ObjAbr.lstCr.Sum(x => (decimal)x.IGSTRoundUp);
                Pages.Append("<tr><th colspan='5' style='text-align:center; width:100%;'>GST</th></tr>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;'>1</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;text-align:right;'>IGST</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;text-align:right;'>-</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;text-align:right;'>" + BalancedIGST + "</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>-</th>");
                Pages.Append("<th style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>" + BalancedIGST + "</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>2</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>CGST</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + BalancedCGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + BalancedCGST + "</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>3</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>SGST</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + BalancedSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + BalancedSGST + "</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>4</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Round Off</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>"+ ObjAbr.CGSTRoundUp + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + ObjAbr.IGSTRoundUp + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + ObjAbr.BillRoundUp + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + ObjAbr.TotalRoundUp + "</th>");
                Pages.Append("</tr>");

                /*   Pages.Append("<tr>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>"+ BalancedIGST + "</td>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>"+BalancedCGST+"</td>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>"+BalancedIGST+"</td>");
                   Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:right;'>"+ BalancedRoundOff + "</td>");
                   Pages.Append("</tr>");
                   /*Total*/
                decimal TotalSGSTCGST = BalancedCGST + BalancedSGST+ ObjAbr.CGSTRoundUp;
                decimal TotalIGST = BalancedIGST + ObjAbr.IGSTRoundUp;
                decimal TotalGST = TotalSGSTCGST + TotalIGST+ ObjAbr.BillRoundUp;
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalSGSTCGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + TotalIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + ObjAbr.BillRoundUp + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + TotalGST + "</th>");
                Pages.Append("</tr>");

                /*Grand Total*/
                //decimal GrTotalCGSTSGST = TotalSGSTCGST + TotalInvSGST + TotalCrSGST;
                //decimal GrTotalIGST = BalancedIGST + TotalInvIGST + TotalCrIGST;
                //decimal GrTotal = GrTotalCGSTSGST + GrTotalIGST;

                decimal GrTotalCGSTSGST = TotalCrSGST + TotalSGSTCGST ;
                decimal GrTotalIGST = TotalCrIGST + TotalIGST ;
                decimal GrTotalBill = TotalCrBill + ObjAbr.BillRoundUp;
                decimal GrTotal = GrTotalCGSTSGST + GrTotalIGST+ GrTotalBill;
                
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Grand Totals :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + GrTotalCGSTSGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + GrTotalIGST + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + GrTotalBill + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + GrTotal + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion





        #region Abstract Realised Invoices Report(Annexure -111)
        public ActionResult AbstracRealisedReport()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int FrmYr = DateTime.Today.Year - 20;
            int Toyr = DateTime.Today.Year + 10;
            for (int i = FrmYr; i <= Toyr; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstyear = lstYear;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetAbstracRealisedReport(int Month, int Year)
        {
            Hdb_ReportRepository objR = new Hdb_ReportRepository();
            objR.GetAbstractRealisedReport(Month, Year);
            string Path = "";
            if (objR.DBResponse.Data != null)
            {
                Hdb_AbstracRealisedReport objAbR = new Hdb_AbstracRealisedReport();
                objAbR = (Hdb_AbstracRealisedReport)objR.DBResponse.Data;
                Path = GenerateAbstracRealisedReport(objAbR, Month, Year);
                return Json(new { Message = Path, Status = 1 });
            }
            else
            {
                return Json(new { Message = "", Status = 0 });
            }

        }

        [NonAction]
        public string GenerateAbstracRealisedReport(Hdb_AbstracRealisedReport ObjAbr, int Month, int Year)
        {
            try
            {
                string strMonth = new DateTime(1900, Month, 01).ToString("MMMM").ToUpper();
                var FileName = "AbstractRealisedReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ABSTRACT OF REALISED INVOICES (Annexure -III) FOR THE MONTH OF " + strMonth + " - " + Year + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;text-align:center;'>SL.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:30%;text-align:center;'>Invoice No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Party Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Invoice Amt.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Receipt Date</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;width:20%;text-align:center;'>Receipt No.</th></tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");

                /*MISC SEC*/
             
                int k = 1;
                decimal netamt = 0;
                ObjAbr.lstInv.ForEach(m =>
                {
                    netamt = netamt + m.InvoiceAmt;
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.InvoiceNo + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.InvoiceDate + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.PartyName + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.InvoiceAmt + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.ReceiptDate + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:left;'>" + m.ReceiptNo + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/
              
                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th colspan=3 style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + netamt.ToString("F") + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'> </th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'></th>");
                Pages.Append("</tr>");

              




                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion


        #region Abstract Raised Invoices Report(Annexure -Iv)
        public ActionResult AbstracRaisedReport()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int FrmYr = DateTime.Today.Year - 20;
            int Toyr = DateTime.Today.Year + 10;
            for (int i = FrmYr; i <= Toyr; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstyear = lstYear;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetAbstracRaisedReport(int Month, int Year)
        {
            Hdb_ReportRepository objR = new Hdb_ReportRepository();
            objR.GetAbstractRaisedReport(Month, Year);
            string Path = "";
            if (objR.DBResponse.Data != null)
            {
                Hdb_AbstracRealisedReport objAbR = new Hdb_AbstracRealisedReport();
                objAbR = (Hdb_AbstracRealisedReport)objR.DBResponse.Data;
                Path = GenerateAbstracRaisedReport(objAbR, Month, Year);
                return Json(new { Message = Path, Status = 1 });
            }
            else
            {
                return Json(new { Message = "", Status = 0 });
            }

        }

        [NonAction]
        public string GenerateAbstracRaisedReport(Hdb_AbstracRealisedReport ObjAbr, int Month, int Year)
        {
            try
            {
                string strMonth = new DateTime(1900, Month, 01).ToString("MMMM").ToUpper();
                var FileName = "AbstractRaisedReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ABSTRACT OF RAISED INVOICES (Annexure -IV) FOR THE MONTH OF " + strMonth + " - " + Year + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;text-align:center;'>SL.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:30%;text-align:center;'>Invoice No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Party Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Invoice Amt.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:20%;text-align:center;'>Receipt Date</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;width:20%;text-align:center;'>Receipt No.</th></tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");

                /*MISC SEC*/

                int k = 1;
                decimal netamt = 0;
                ObjAbr.lstInv.ForEach(m =>
                {
                  //  netamt = netamt + m.InvoiceAmt;
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:center;'>" + k.ToString() + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.InvoiceNo + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.InvoiceDate + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.PartyName + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:right;'>" + m.InvoiceAmt + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;text-align:left;'>" + m.ReceiptDate + "</td>");
                    Pages.Append("<td style='border:1px solid #000;border-left:0;border-right:0;text-align:left;'>" + m.ReceiptNo + "</td>");
                    Pages.Append("</tr>");
                    k++;
                });
                /*Total*/

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'></th>");
                Pages.Append("<th colspan=3 style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>Total :-</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'>" + ObjAbr.InvoiceAmt.ToString("F") + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:right;'> </th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'></th>");
                Pages.Append("</tr>");






                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion





        #region Abstract Pending Raised Invoices Report(Annexure -v)
        public ActionResult AbstracPendingRaisedReport()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int FrmYr = DateTime.Today.Year - 20;
            int Toyr = DateTime.Today.Year + 10;
            for (int i = FrmYr; i <= Toyr; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstyear = lstYear;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetPendingAbstracRaisedReport(int Month, int Year)
        {
            Hdb_ReportRepository objR = new Hdb_ReportRepository();
            objR.GetAbstractPendingRaisedReport(Month, Year);
            string Path = "";
            if (objR.DBResponse.Data != null)
            {
                Hdb_AbstracRealisedReport objAbR = new Hdb_AbstracRealisedReport();
                objAbR = (Hdb_AbstracRealisedReport)objR.DBResponse.Data;
                Path = GeneratePendingAbstracRaisedReport(objAbR, Month, Year);
                return Json(new { Message = Path, Status = 1 });
            }
            else
            {
                return Json(new { Message = "", Status = 0 });
            }

        }

        [NonAction]
        public string GeneratePendingAbstracRaisedReport(Hdb_AbstracRealisedReport ObjAbr, int Month, int Year)
        {
            try
            {
                string strMonth = new DateTime(1900, Month, 01).ToString("MMMM").ToUpper();
                var FileName = "AbstractPendingRaisedReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ABSTRACT OF PENDING RAISED INVOICES (Annexure -V) FOR THE MONTH OF " + strMonth + " - " + Year + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");
                Pages.Append("<table style='width:100%;font-size:7.5pt;font-family:Verdana,Arial,San-serif;border: 1px solid #000;border-collapse: collapse;margin-top:10px;'><thead><tr><th style='text-align: center;border: 1px solid #000;font-weight: 600;'>Party Name</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;'>Unrealized Invoice Balance</th></tr></thead><tbody>");

                int i = 1;
                
                /*MISC SEC*/

                int k = 1;
                decimal netamt = 0;
                ObjAbr.lstInv.ForEach(m =>
                {
                    //  netamt = netamt + m.InvoiceAmt;


                    Pages.Append("<tr><td style='text-align: left;border: 1px solid #000; width:80%;'>" + m.PartyName + "</td><td  style='text-align: right;border: 1px solid #000;width:20%;'>" + m.InvoiceAmt + "</td></tr>");



                });
                /*Total*/

                Pages.Append("<tr><th style='text-align: left;border: 1px solid #000; width:80%;'>TOTAL :</th><th  style='text-align: right;border: 1px solid #000;width:20%;'>" + ObjAbr.InvoiceAmt + "</th></tr>");






                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion



        #region Abstract Pending Realisable Invoices Report(Annexure -vi)
        public ActionResult AbstracPendingRealisableReport()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int FrmYr = DateTime.Today.Year - 20;
            int Toyr = DateTime.Today.Year + 10;
            for (int i = FrmYr; i <= Toyr; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstyear = lstYear;
            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetPendingAbstracRealisableReport(int Month, int Year)
        {
            Hdb_ReportRepository objR = new Hdb_ReportRepository();
            objR.GetAbstractPendingRealisableReport(Month, Year);
            string Path = "";
            if (objR.DBResponse.Data != null)
            {
                Hdb_AbstracRealisedReport objAbR = new Hdb_AbstracRealisedReport();
                objAbR = (Hdb_AbstracRealisedReport)objR.DBResponse.Data;
                Path = GeneratePendingAbstraRealisableReport(objAbR, Month, Year);
                return Json(new { Message = Path, Status = 1 });
            }
            else
            {
                return Json(new { Message = "", Status = 0 });
            }

        }

        [NonAction]
        public string GeneratePendingAbstraRealisableReport(Hdb_AbstracRealisedReport ObjAbr, int Month, int Year)
        {
            try
            {
                string strMonth = new DateTime(1900, Month, 01).ToString("MMMM").ToUpper();
                var FileName = "AbstractPendingRealisableReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>Container Freight Station, Kukatpally</span><br/><span style='font-size: 12px; padding-bottom: 10px;'>IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 12px;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ABSTRACT OF PENDING REALISABLE INVOICES (Annexure -VI) FOR THE MONTH OF " + strMonth + " - " + Year + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");
                Pages.Append("<table style='width:100%;font-size:7.5pt;font-family:Verdana,Arial,San-serif;border: 1px solid #000;border-collapse: collapse;margin-top:10px;'><thead><tr><th style='text-align: center;border: 1px solid #000;font-weight: 600;'>Party Name</th><th style='text-align: center;border: 1px solid #000;font-weight: 600;'>Unrealized Invoice Balance</th></tr></thead><tbody>");

                int i = 1;

                /*MISC SEC*/

                int k = 1;
                decimal netamt = 0;
                ObjAbr.lstInv.ForEach(m =>
                {
                    //  netamt = netamt + m.InvoiceAmt;


                    Pages.Append("<tr><td style='text-align: left;border: 1px solid #000; width:80%;'>" + m.PartyName + "</td><td  style='text-align: right;border: 1px solid #000;width:20%;'>" + m.InvoiceAmt + "</td></tr>");



                });
                /*Total*/

                Pages.Append("<tr><th style='text-align: left;border: 1px solid #000; width:80%;'>TOTAL :</th><th  style='text-align: right;border: 1px solid #000;width:20%;'>" + ObjAbr.InvoiceAmt + "</th></tr>");






                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion


        #region-- WEEKLY REPORT --

        [HttpGet]
        public ActionResult WeeklyVCReport()
        {
            CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.getCompanyDetails();
            objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
            ViewBag.CompanyName = objCompanyDetails.CompanyName;
            ViewBag.CompanyAddress = objCompanyDetails.CompanyAddress;
            return PartialView();
        }

        [HttpGet]
        public JsonResult GetVCDetails(string date1, string date2)
        {
            try
            {
                var dt1 = DateTime.ParseExact(date1, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                var dt2 = DateTime.ParseExact(date2, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                /*if (dt2.DayOfWeek.ToString().ToLower() != System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString().ToLower())
                {
                    return Json(new { Status = 2, Message = "Report Only Show on " + System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString() }, JsonRequestBehavior.AllowGet);
                }
                else
                {*/


                var doa = Enumerable.Range(0, 1 + dt2.Subtract(dt1).Days).Select(offset => dt1.AddDays(offset)).ToArray();
                IList<string> formatted = new List<string>();
                doa.ToList().ForEach(item =>
                {
                    formatted.Add(item.ToString("yyyyMMdd"));
                });
                var XMLText = Utility.CreateXML(formatted);
                var reportRepo = new Hdb_ReportRepository();
                reportRepo.VCCapacityDetails(XMLText, date1, date2);
                
                return Json(new { Status = 1, Message = "Data Detected", Data = reportRepo.DBResponse.Data }, JsonRequestBehavior.AllowGet);
                /*}*/
            }
            catch (Exception e)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!" }, JsonRequestBehavior.AllowGet);
            }
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult WeeklyVCReport(FormCollection fc)
        {
            var date = Convert.ToDateTime(fc["VCTdate"].ToString());
            var cfscap = Convert.ToDecimal(fc["TWcfscap"].ToString());
            var bndcap = Convert.ToDecimal(fc["TWbndcap"].ToString());
            var total1 = Convert.ToDecimal(fc["TWtotalcap"].ToString());
            var cfsutl = Convert.ToDecimal(fc["TWcfsutl"].ToString());
            var bndutl = Convert.ToDecimal(fc["TWbndutl"].ToString());
            var total2 = Convert.ToDecimal(fc["TWtotalutl"].ToString());
            var reportRepo = new Hdb_ReportRepository();
            reportRepo.AddVCDetails(date, cfscap, bndcap, cfsutl, bndutl);

            return Json(new { Status = 1, Message = "VC Report Saved Succesfully", Data = reportRepo.DBResponse.Data }, JsonRequestBehavior.DenyGet);
        }

        [HttpPost, ValidateInput(false)]
        public JsonResult GeneratePDF(FormCollection fc)
        {
            try
            {
                var pages = new string[2];
                var type = fc["type"].ToString();
                var id = fc["id"].ToString();
                pages[0] = fc["page"].ToString();
                pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                pages[0] = pages[0].ToString().Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                if (id == "")
                {
                    //string ad = "AB1CE12354F";
                    //Random rnd = new Random();
                    //id = new string(Enumerable.Repeat(ad, ad.Length).Select(s => s[rnd.Next(ad.Length)]).ToArray());
                    id = ((Login)(Session["LoginUser"])).Uid.ToString() + "" + DateTime.Now.ToString().Replace('/', '_').Replace(' ', '_').Replace(':', '_');
                }
                id = id.Replace('/', '_');
                var fileName = id + ".pdf";
                //  var fileName = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
                if (!Directory.Exists(PdfDirectory))
                    Directory.CreateDirectory(PdfDirectory);
                //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    rh.GeneratePDF(PdfDirectory + fileName, pages);
                //}

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                   
                    ObjPdf.GeneratePDF(PdfDirectory + fileName, pages);

                }
                return Json(new { Status = 1, Message = "/Docs/" + type + "/" + fileName }, JsonRequestBehavior.DenyGet);// Data = fileName 
            }
            catch (Exception ex)
            {
                return Json(new { Status = "1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region CFS_ECO Report

        private StringBuilder CreateFieldToBrowse(MonthlyEconomyReport item, StringBuilder sb)
        {
            if (item.FieldType == (int)FieldType.NonValuedField)
            {
                sb.Append("<tr>");

                if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print)
                {
                    sb.Append("<td style='padding-left:5px;'><span>" + item.ItemCodeNo + "</span></td>");
                    sb.Append("<td colspan='2'><span>" + item.ItemLabel + "</span></td>");
                }
                else if (item.ItemType == ItemType.AnnexureEstablishment)
                {
                    sb.Append("<td colspan='3'><span>" + item.ItemLabel + "</span></td>");
                }
                else
                {
                    sb.Append("<td colspan='2'><span>" + item.ItemLabel + "</span></td>");
                }

                sb.Append("</tr>");
            }
            else if (item.FieldType > (int)FieldType.NonValuedField)
            {
                if (item.ItemType == ItemType.AnnexureEstablishment || item.ItemType == ItemType.AnnexureTotal)
                {
                    sb.Append("<tr>");
                    sb.Append("<td style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");

                    sb.Append("<td>");

                    if (item.FieldType == (int)FieldType.TextBoxWithoutJs)
                    {
                        sb.Append("<input class='Numeric' onblur='IsEmpy(this);' style='width: 100%;' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                    }
                    else if (item.FieldType == (int)FieldType.TextBoxWithJs)
                    {
                        sb.Append("<input class='Numeric' style='width: 100%;' onblur='IsEmpy(this);" + item.Script + ";' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                    }
                    else if (item.FieldType > (int)FieldType.TextBoxWithJs)
                    {
                        if (item.FieldType == (int)FieldType.ReadOnlyTextBoxWithJsResult)
                        {
                            sb.Append("<input  class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                        }
                        else
                        {
                            sb.Append("<input  class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                        }
                    }
                    sb.Append("</td>");

                    sb.Append("<td>");

                    if (item.FieldType == (int)FieldType.TextBoxWithoutJs)
                    {
                        sb.Append("<input  class='Numeric'  onblur='IsEmpy(this);' style='width: 100%;' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType == (int)FieldType.TextBoxWithJs)
                    {
                        sb.Append("<input  class='Numeric' style='width: 100%;' onblur='IsEmpy(this);" + item.Script + ";' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType > (int)FieldType.TextBoxWithJs)
                    {
                        if (item.FieldType == (int)FieldType.ReadOnlyTextBoxWithJsResult)
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                        else
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                    }
                    sb.Append("</td>");


                    sb.Append("</tr>");
                }
                else
                {
                    sb.Append("<tr>");
                    if (item.ItemType == ItemType.Income)
                    {
                        sb.Append("<td style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");
                    }
                    else if (item.ItemType == ItemType.AnnexureHead)
                    {
                        sb.Append("<td colspan='2' style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print || item.ItemType == ItemType.Expense_Other)
                    {
                        sb.Append("<td style='padding-left:5px;'><span>" + item.ItemCodeNo + "</span></td>");
                        sb.Append("<td style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    sb.Append("<td>");

                    if (item.FieldType == (int)FieldType.TextBoxWithoutJs)
                    {
                        sb.Append("<input class='Numeric'  onblur='IsEmpy(this);' style='width: 100%;' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType == (int)FieldType.TextBoxWithJs)
                    {
                        sb.Append("<input class='Numeric'  style='width: 100%;' onblur='IsEmpy(this);" + item.Script + ";' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType > (int)FieldType.TextBoxWithJs)
                    {
                        if (item.FieldType == (int)FieldType.ReadOnlyTextBoxWithJsResult)
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                        else
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                    }

                    sb.Append("</td>");

                    sb.Append("</tr>");
                }
            }

            return sb;
        }

        private StringBuilder CreateFieldToPrint(MonthlyEconomyReport item, StringBuilder sb)
        {
            if (item.FieldType == (int)FieldType.NonValuedField)
            {
                sb.Append("<tr>");

                if (item.ItemType == ItemType.Income)
                {
                    sb.Append("<td colspan='4' style='border:1px solid #000;text-align:left;padding:3px;'><span>" + item.ItemLabel + "</span></td>");
                }
                else if (item.ItemType == ItemType.AnnexureEstablishment || item.ItemType == ItemType.AnnexureTotal || item.ItemType == ItemType.AnnexureHead)
                {
                    sb.Append("<td colspan='3' style='border:1px solid #000;text-align:left;padding:3px;'><span>" + item.ItemLabel + "</span></td>");
                }
                else if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print)
                {
                    sb.Append("<td style='padding-left:5px;border:1px solid #000;text-align:center;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemCodeNo + "</span></td>");
                    sb.Append("<td colspan='4' style='border:1px solid #000;text-align:left;padding:3px;'><span>" + item.ItemLabel + "</span></td>");
                }
                //else
                //{
                //    sb.Append("<td colspan='2' style='border:1px solid #000;text-align:left;'><span>" + item.ItemLabel + "</span></td>");
                //}

                sb.Append("</tr>");
            }
            else if (item.FieldType > (int)FieldType.NonValuedField)
            {
                if (item.ItemType == ItemType.AnnexureEstablishment || item.ItemType == ItemType.AnnexureTotal)
                {
                    sb.Append("<tr>");
                    sb.Append("<td style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");

                    sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                    sb.Append("<label>" + item.NoOfPosts + "</label>");
                    sb.Append("</td>");

                    sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                    sb.Append("<label>" + item.Amount + "</label>");
                    sb.Append("</td>");

                    sb.Append("</tr>");
                }
                else
                {
                    sb.Append("<tr>");
                    if (item.ItemType == ItemType.Income)
                    {
                        sb.Append("<td style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");
                    }
                    else if (item.ItemType == ItemType.AnnexureHead)
                    {
                        sb.Append("<td colspan='2' style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print || item.ItemType == ItemType.Expense_Other || item.ItemType == ItemType.Expense_Total)
                    {
                        sb.Append("<td style='padding-left:5px;border:1px solid #000;text-align:center;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemCodeNo + "</span></td>");
                        sb.Append("<td style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                    sb.Append("<label>" + item.Amount + "</label>");
                    sb.Append("</td>");

                    if (!(item.ItemType == ItemType.AnnexureHead || item.ItemType == ItemType.AnnexureEstablishment))
                    {
                        sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                        sb.Append("<label>" + item.CumAmountSinceApril + "</label>");
                        sb.Append("</td>");

                        sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                        sb.Append("<label>" + item.ProrataCumAmount + "</label>");
                        sb.Append("</td>");
                    }

                    sb.Append("</tr>");
                }
            }


            return sb;
        }

        public ActionResult CFSEcoReport()
        {
            ViewBag.BranchType = Session["BranchType"];
            return PartialView();
        }

        [HttpGet]
        public ActionResult PopulateDataForMonthlyReport(string monthNo, string yearNo)
        {

           Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            int dataExistStatus;
            List<Hdb_MonthlyEconomyReport> LstMonthlyEconomyReport = ObjRR.GetMonthlyEconomyReportData(Convert.ToInt32(monthNo), Convert.ToInt32(yearNo), out dataExistStatus).Where(x => x.FieldType > (int)FieldType.NotRequiredField).ToList();

            List<string> Tabs = new List<string>();

            StringBuilder sb_Income = new StringBuilder();
            StringBuilder sb_ExpensesHead = new StringBuilder();
            StringBuilder sb_Rent = new StringBuilder();
            StringBuilder sb_Print = new StringBuilder();

            ///////////////////////////////// Income Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_Income = CreateFieldToBrowse(item, sb_Income);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_Income = CreateFieldToBrowse(subItem, sb_Income);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Income = CreateFieldToBrowse(subSubItem, sb_Income);
                        foreach (var subSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_Income = CreateFieldToBrowse(subSubSubItem, sb_Income);
                            foreach (var subSubSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_Income = CreateFieldToBrowse(subSubSubSubItem, sb_Income);
                            }
                        }
                    }
                }

            }

            ///////////////////////////////// Income End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Head Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.AnnexureHead).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_ExpensesHead = CreateFieldToBrowse(item, sb_ExpensesHead);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.AnnexureHead).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_ExpensesHead = CreateFieldToBrowse(subItem, sb_ExpensesHead);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.AnnexureHead).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_ExpensesHead = CreateFieldToBrowse(subSubItem, sb_ExpensesHead);
                    }
                }

            }

            ///////////////////////////////// Expense Head End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Establish and Total Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal)).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_ExpensesHead = CreateFieldToBrowse(item, sb_ExpensesHead);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal)).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_ExpensesHead = CreateFieldToBrowse(subItem, sb_ExpensesHead);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_ExpensesHead = CreateFieldToBrowse(subSubItem, sb_ExpensesHead);
                    }
                }

            }

            ///////////////////////////////// Expense Establish and Total End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Rent Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print)).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_Rent = CreateFieldToBrowse(item, sb_Rent);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print)).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_Rent = CreateFieldToBrowse(subItem, sb_Rent);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Rent = CreateFieldToBrowse(subSubItem, sb_Rent);
                    }
                }

            }

            ///////////////////////////////// Expense Rent End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Print Start /////////////////////////////////////////////////////////////////

            //foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.Expense_Print).ToList())
            //{
            //    sb_Print = CreateFieldToBrowse(item, sb_Print);
            //    foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Expense_Print).ToList())
            //    {
            //        sb_Print = CreateFieldToBrowse(subItem, sb_Print);
            //        foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Expense_Print).ToList())
            //        {
            //            sb_Print = CreateFieldToBrowse(subSubItem, sb_Print);
            //        }
            //    }

            //}

            /////////////////////////////////// Expense Print End /////////////////////////////////////////////////////////////////


            Tabs.Add(sb_Income.ToString());
            Tabs.Add(sb_ExpensesHead.ToString());
            Tabs.Add(sb_Rent.ToString());
            Tabs.Add(sb_Print.ToString());

            var ObjResult = new { Status = dataExistStatus, Data = Tabs };
            return Json(ObjResult, JsonRequestBehavior.AllowGet);

        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult SaveMonthlyReportDetails(FormCollection fc)
        {
            Login ObjLogin = (Login)Session["LoginUser"];

           Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<Hdb_MonthlyEconomyReport> objMonthlyEconomyReportList = new List<Hdb_MonthlyEconomyReport>();

            foreach (var texkey in fc.AllKeys.Where(x => x.StartsWith("txt_")).ToList())
            {
                int incomeExpHeadId = Convert.ToInt32(texkey.Split('_')[1]);
                Hdb_MonthlyEconomyReport objMonthlyEconomyReport = new Hdb_MonthlyEconomyReport();
                objMonthlyEconomyReport.MonthNo = Convert.ToInt32(fc["MonthNo"]);
                objMonthlyEconomyReport.YearNo = Convert.ToInt32(fc["YearNo"]);
                objMonthlyEconomyReport.IncomeExpHeadId = incomeExpHeadId;

                if (String.IsNullOrWhiteSpace(fc[texkey]))
                {
                    objMonthlyEconomyReport.Amount = 0;
                }
                else
                {
                    objMonthlyEconomyReport.Amount = Convert.ToDecimal(fc[texkey]);
                }

                objMonthlyEconomyReport.CreatedBy = ObjLogin.Uid;

                objMonthlyEconomyReportList.Add(objMonthlyEconomyReport);
            }

            foreach (var texkey in fc.AllKeys.Where(x => x.StartsWith("txtNoPostAmt_")).ToList())
            {
                int incomeExpHeadId = Convert.ToInt32(texkey.Split('_')[1]);
                string noOfPosttxt = "txtNoPost_" + incomeExpHeadId;
                Hdb_MonthlyEconomyReport objMonthlyEconomyReport = new Hdb_MonthlyEconomyReport();
                objMonthlyEconomyReport.IncomeExpHeadId = incomeExpHeadId;

                if (String.IsNullOrWhiteSpace(fc[texkey]))
                {
                    objMonthlyEconomyReport.Amount = 0;
                }
                else
                {
                    objMonthlyEconomyReport.Amount = Convert.ToDecimal(fc[texkey]);
                }

                if (String.IsNullOrWhiteSpace(fc[noOfPosttxt]))
                {
                    objMonthlyEconomyReport.NoOfPosts = 0;
                }
                else
                {
                    objMonthlyEconomyReport.NoOfPosts = Convert.ToInt32(fc[noOfPosttxt]);
                }

                objMonthlyEconomyReportList.Add(objMonthlyEconomyReport);
            }

            string XML = Utility.CreateXML(objMonthlyEconomyReportList);
            ObjRR.SaveMonthlyReportDetails(Convert.ToInt32(fc["MonthNo"]), Convert.ToInt32(fc["YearNo"]), XML);
            return Json(ObjRR.DBResponse);
        }

        [HttpGet]
        public ActionResult PrintDataForMonthlyReport(string monthNo, string yearNo)
        {
            try
            {
                int dataExistStatus;
                var Pages = new string[3];
                string FileName = "MonthlyReport.pdf";

                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                List<Hdb_MonthlyEconomyReport> LstMonthlyEconomyReport = ObjRR.GetMonthlyEconomyReportDataToPrint(Convert.ToInt32(monthNo), Convert.ToInt32(yearNo), out dataExistStatus).Where(x => x.FieldType > (int)FieldType.NotRequiredField).ToList();

                if (dataExistStatus == 1)
                {
                    List<string> Tabs = new List<string>();

                    StringBuilder sb_Income = new StringBuilder();
                    StringBuilder sb_ExpensesHead = new StringBuilder();
                    StringBuilder sb_Rent = new StringBuilder();


                    ///////////////////////////////// Income Start /////////////////////////////////////////////////////////////////

                    sb_Income.Append("<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_Income.Append("<thead>");
                    sb_Income.Append("<tr>");
                    sb_Income.Append("<th style='padding:5px;text-align:center;'>");
                    sb_Income.Append("<span style='font-size:10pt;text-align:center;'>CENTRAL WAREHOUSING CORPORATION</span><br/>(A GOVT. OF INDIA UNDERTAKING)<br/><br/>");
                    sb_Income.Append("</th>");
                    sb_Income.Append("</tr>");
                    sb_Income.Append("</thead>");
                    sb_Income.Append("</table>");
                    sb_Income.Append("<br/>");

                    sb_Income.Append("<table style='repeat-header: yes;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_Income.Append("<thead>");
                    sb_Income.Append("<tr>");
                    sb_Income.Append("<th rowspan='2' style='text-align:center;border:1px solid #000;padding:5px;'>Head of Income</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Amount</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Cumulative since 1st April BE/RE</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Prorata Cumulative BE/RE</th>");
                    sb_Income.Append("</tr>");

                    sb_Income.Append("<tr>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Income.Append("</tr>");
                    sb_Income.Append("</thead>");
                    sb_Income.Append("<tbody>");
                    foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Income = CreateFieldToPrint(item, sb_Income);
                        foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_Income = CreateFieldToPrint(subItem, sb_Income);
                            foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_Income = CreateFieldToPrint(subSubItem, sb_Income);
                                foreach (var subSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                                {
                                    sb_Income = CreateFieldToPrint(subSubSubItem, sb_Income);
                                    foreach (var subSubSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                                    {
                                        sb_Income = CreateFieldToPrint(subSubSubSubItem, sb_Income);
                                    }
                                }
                            }
                        }

                    }

                    sb_Income.Append("</tbody>");
                    sb_Income.Append("</table>");

                    ///////////////////////////////// Income End /////////////////////////////////////////////////////////////////

                    ///////////////////////////////// Expense Head Start /////////////////////////////////////////////////////////////////

                    sb_ExpensesHead.Append("<table style='repeat-header: yes;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_ExpensesHead.Append("<thead>");
                    sb_ExpensesHead.Append("<tr>");
                    sb_ExpensesHead.Append("<th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;'>Head of Expense</th>");
                    sb_ExpensesHead.Append("<th rowspan='2' style='border:1px solid #000;text-align:center;width:10%;padding:5px;'>No Of Post</th>");
                    sb_ExpensesHead.Append("<th style='border:1px solid #000;text-align:center;width:15%;padding:5px;'>Amount</th>");
                    sb_ExpensesHead.Append("</tr>");

                    sb_ExpensesHead.Append("<tr>");
                    sb_ExpensesHead.Append("<th style='border:1px solid #000;text-align:center;padding:5px;'>Rs.</th>");
                    sb_ExpensesHead.Append("</tr>");

                    sb_ExpensesHead.Append("</thead>");
                    sb_ExpensesHead.Append("<tbody>");

                    foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal || x.ItemType == ItemType.AnnexureHead)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_ExpensesHead = CreateFieldToPrint(item, sb_ExpensesHead);
                        foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal || x.ItemType == ItemType.AnnexureHead)).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_ExpensesHead = CreateFieldToPrint(subItem, sb_ExpensesHead);
                            foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal || x.ItemType == ItemType.AnnexureHead)).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_ExpensesHead = CreateFieldToPrint(subSubItem, sb_ExpensesHead);
                            }
                        }

                    }

                    sb_ExpensesHead.Append("</tbody>");
                    sb_ExpensesHead.Append("</table>");

                    ///////////////////////////////// Expense Head End /////////////////////////////////////////////////////////////////

                    ///////////////////////////////// Expense Rent Start /////////////////////////////////////////////////////////////////

                    sb_Rent.Append("<table style='repeat-header: yes;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_Rent.Append("<thead>");
                    sb_Rent.Append("<tr>");
                    sb_Rent.Append("<th rowspan='2' style='text-align:center;border:1px solid #000;width:7%;'>Code No.</th>");
                    sb_Rent.Append("<th rowspan='2' style='text-align:center;border:1px solid #000;'>Head of Expense</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Amount</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Cumulative since 1st April BE/RE</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Prorata Cumulative BE/RE</th>");
                    sb_Rent.Append("</tr>");

                    sb_Rent.Append("<tr>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Rent.Append("</tr>");

                    sb_Rent.Append("</thead>");
                    sb_Rent.Append("<tbody>");

                    foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print || x.ItemType == ItemType.Expense_Other || x.ItemType == ItemType.Expense_Total)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Rent = CreateFieldToPrint(item, sb_Rent);
                        foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print || x.ItemType == ItemType.Expense_Other || x.ItemType == ItemType.Expense_Total)).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_Rent = CreateFieldToPrint(subItem, sb_Rent);
                            foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print || x.ItemType == ItemType.Expense_Other || x.ItemType == ItemType.Expense_Total)).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_Rent = CreateFieldToPrint(subSubItem, sb_Rent);
                            }
                        }

                    }

                    sb_Rent.Append("</tbody>");
                    sb_Rent.Append("</table>");

                    Pages[0] = sb_Income.ToString();
                    Pages[1] = sb_ExpensesHead.ToString();
                    Pages[2] = sb_Rent.ToString();

                    string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyReport/";
                    if (!Directory.Exists(LocalDirectory))
                        Directory.CreateDirectory(LocalDirectory);
                    using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                    {
                        ObjPdf.HeadOffice = this.HeadOffice;
                        ObjPdf.HOAddress = this.HOAddress;
                        ObjPdf.ZonalOffice = this.ZonalOffice;
                        ObjPdf.ZOAddress = this.ZOAddress;
                        ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                    }
                    //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                    //{
                    //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                    //}
                    var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyReport/" + FileName };
                    return Json(ObjResult, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    var ObjResult = new { Status = 0, Message = "No Data Available for this month. Please generate to print." };
                    return Json(ObjResult, JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }
        }

        #endregion




        #region Payer Ledger Statement

        public ActionResult PayerLedgerStatement()
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForPartyLedger("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }


        [HttpGet]
        public JsonResult SearchPartyForPayer(string PartyCode)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForPartyLedger(PartyCode, 0);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadPartyFoPayer(string PartyCode, int Page)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForPartyLedger(PartyCode, Page);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }






       


        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPayerLedgerStatement(HDB_PayerStatement vm)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            string Fdt = Convert.ToDateTime(vm.FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(vm.ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetPayerLedgerStatement(Convert.ToInt32(vm.PartyId), Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                HdbSDDetailsStatement SDData = new HdbSDDetailsStatement();
                SDData = (HdbSDDetailsStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFPayerLedgerStatement(SDData, vm.FromDate, vm.ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GeneratePDFPayerLedgerStatement(HdbSDDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "LedgerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally,IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px; font-weight:bold;'>PARTY LEDGER STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>"); 
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Transaction Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Closing Balance</th></tr></thead>");

                Pages.Append("<tbody>");
                int counter = 1;
                decimal utilisationamt = 0;
                decimal ReceiptAmt = 0;
                decimal balance = 0;
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    if (item.ReceiptNo != "")
                    {
                        if (item.TranAmt == 0)
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                        }

                    }
                    else
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                    }
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    if (counter == 1)
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        utilisationamt = Convert.ToDecimal(item.ReceiptAmt);
                    }
                    else
                    {
                        if (item.ReceiptNo != "")
                        {
                            if (item.TranAmt == 0)
                            {
                                if (item.CrAdjust == 0)
                                {
                                    utilisationamt = utilisationamt + Convert.ToDecimal(item.ReceiptAmt);
                                    balance = balance - Convert.ToDecimal(item.TranAmt);
                                }
                            }
                            else
                            {
                                utilisationamt = utilisationamt + Convert.ToDecimal(item.TranAmt);
                                balance = balance - Convert.ToDecimal(item.TranAmt);
                            }
                        }
                        utilisationamt = utilisationamt - Convert.ToDecimal(item.TranAmt);
                        balance = balance + Convert.ToDecimal(item.TranAmt);
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + utilisationamt.ToString() + "</td>");
                    }
                    Pages.Append("</tr>");
                    counter++;
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Closing Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + utilisationamt.ToString() + "</th>");
                Pages.Append("</tr>");



                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>SD Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + SDData.SDBalance.ToString() + "</th>");
                Pages.Append("</tr>");

                Decimal UtiBalance = Convert.ToDecimal(SDData.SDBalance) - Math.Abs(utilisationamt);
                if(SDData.IsPda==0)
                {
                    UtiBalance = 0;
                }
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" +  UtiBalance.ToString() + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region SD Refund Receipt
        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetSDRefundReceipt(string JournalNo)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetSDRefundReceiptDetails(JournalNo);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateSDRefundReceipt(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GenerateSDRefundReceipt(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstReceiptDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstSB = new List<dynamic>();
            int i = 0;
            
            StringBuilder html = new StringBuilder();
            lstReceiptDetails.ToList().ForEach(item =>
            {
                string ClosingBalanceWord = "";
                if(lstReceiptDetails[0].ClosingAmount==0)
                {
                    ClosingBalanceWord = "Zero";
                }
                else
                {
                    ClosingBalanceWord = objCurr.changeCurrencyToWords(lstReceiptDetails[0].ClosingAmount.ToString("0"));
                }                      
                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");                              
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size:16px; margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1><span style='font-size:7pt;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:7pt;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email -" + objCompany[0].EmailAddress + "</label><br/><label style='font-size: 8pt; font-weight:bold;'>Journal Voucher - Security Deposit <br/> (JV - SD)</label></td>");
                html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");                
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='font-size:9pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'><b>JV - SD Number :</b> " + lstReceiptDetails[0].JaurnalNo + "</td> <td colspan='6' width='50%' style='text-align:right;'><b>JV - SD Date :</b>  " + lstReceiptDetails[0].JaurnalDate + "</td></tr>");

                html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; font-size:9pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>1. Payee Name</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].PartyName + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>2. Payee Address</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].Address + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>3. GST Number</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].GSTNo + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>4. Folio Number</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].FolioNo + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>5. RO Sanction Order Number</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].RoSanctionOrderNo + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>6. RO Sanction Order Date</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].RoSanctionDate + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>7. Opening Balance</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].Amount + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>8. Amount Withdrawn</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].RefundAmount + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>9. Mode of Withdrawal from SD</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstMode[0].Mode + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>10. Closing Balance</th><td width='60%' style='border-bottom:1px solid #000;'> " + lstReceiptDetails[0].ClosingAmount + "</td></tr>");
            html.Append("<tr><th width='40%' style='border-right:1px solid #000; border-bottom:1px solid #000;'>11. Closing Balance (in words)</th><td width='60%' style='border-bottom:1px solid #000;'> " + ClosingBalanceWord + "</td></tr>");
                html.Append("<tr><th width='40%' style='border-right:1px solid #000;'>12. Remarks</th><td width='60%'> " + lstReceiptDetails[0].Remarks + "</td></tr>");
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td colspan='6' width='50%'><b>CWC GST :</b> " + objCompany[0].GstIn + "</td> <td colspan='6' width='50%' style='text-align:right;'><b>CWC PAN :</b> " + objCompany[0].Pan + "</td></tr>");

                html.Append("<tr><td><span><br/><br/><br/><br/></span></td></tr>");

                html.Append("<tr><th colspan='12' style='text-align: right;'>Authorized Signatory <br/> For Central Warehousing Corporation</th></tr>");

                html.Append("</tbody></table>");

                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, html.ToString());
            }
            return "/Docs/" + type + "/" + fileName;
        }
        #endregion




        #region Bulk Receipt  Report For Party
        [HttpGet]
        public ActionResult BulkReceiptReportByParty()
        {
            return PartialView();
        }
        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReportByParty(BulkReceiptReport ObjBulkReceiptReport)
        {
           Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetBulkCashreceiptForUser(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber, objLogin.EximTraderId);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulkByParty(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

        


        [NonAction]
        public string GenerateBulkByParty(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                /*
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>ICD Patparganj-Delhi</span>");
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt Date : </label> <span>" + item.ReceiptDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                */
                /*************/
                /*Container Bind*/
                /*
                int i = 1;
                var InvoceIds = item.InvoiceId.Split(',');
                foreach (var InvId in InvoceIds)
                {
                    lstContainer.Where(x => x.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.FromDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    });
                }
                */
                /***************/
                /*
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 60px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                */
                /*Charges Bind*/
                /*
                foreach (var InvId in InvoceIds)
                {
                    lstCharges.Where(y => y.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(data =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Rate.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Taxable.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Total.ToString("0") + "</td></tr>");
                        i = i + 1;
                    });
                }
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; width: 120px;'>Total :</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; center; width: 144px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 90px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 160px;'>" + item.TotalTaxable.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalCGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalSGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalIGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 120px;'>" + item.InvoiceAmt.ToString("0") + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='12'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code: <label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr></tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Mode</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Drawee Bank</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Instrument No</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Amount</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Amount + "</td>");
                    html.Append("</tr>");
                });
                html.Append("</tbody></table>");
                */
                /***************/



                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '>");
                html.Append("<tbody>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 12px;'>Email -" + objCompany[0].EmailAddress + "</label><br/><label style='font-size: 16px; font-weight:bold;'>Cash Receipt</label></td>");
                html.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //Header
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12' style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Date : </label> <span>" + item.ReceiptDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>By : </label><span>" + item.PartyName + "</span></td></tr></tbody></table>");
                html.Append("</td></tr><tr><td colspan='12'><hr/></td></tr><tr><td colspan='12'>");

                //Invoice Nos and Amounts
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Invoice No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Importer/Exporter</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Invoice Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr></thead><tbody>");

                //Loop
                var InvoiceIds = item.InvoiceId.Split(',');
                var InvoiceNos = item.InvoiceNo.Split(',');
                var ImpExpName = item.ExporterImporterName.Split(',');
                var InvType = item.InvType.Split(',');
                var InvoiceAmts = item.Amt.Split(',');
                i = 0;
                foreach (var Invoice in InvoiceNos)
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>" + InvoiceNos[i] + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>" + ImpExpName[i] + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>" + InvType[i] + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>" + InvoiceAmts[i] + "</td>");
                    html.Append("</tr>");

                    i = i + 1;
                }

                html.Append("</tbody></table></td></tr>");

                //Banks
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Mode</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Instrument</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Date</th>");
                html.Append("</tr></thead><tbody>");

                //loop

                i = 1;
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Amount + "</td>");
                    html.Append("</tr>");

                    i = i + 1;
                });

                //TDS
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>TDS</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TdsAmount.ToString() + "</td></tr>");


                //Total
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>Total</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.InvoiceAmt.ToString() + "</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 80px;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td width='10%' valign='top' align='right' style='font-size:13px;'><b>Remarks : </b></td><td colspan='2' width='85%' style='font-size:12px; line-height:22px;'>" + item.Remarks + "</td></tr>");
                //html.Append("<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'><b>Remarks : </b> " + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<td style='font-size: 12px; width:60%;'><b>CWC GST NO -</b> " + objCompany[0].GstIn + " <br/> <b>CWC PAN NO -</b> " + objCompany[0].Pan + "</td>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");

                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }
        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfReceiptDateWiseByParty(string FromDate, string ToDate)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetReceiptListForExternalUser(FromDate, ToDate, objLogin.EximTraderId);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion


        #region Bulk Invoice For External User
        public JsonResult Download()
        {
            String session = Session.SessionID;
            DSR_ReportCWCController obj = new DSR_ReportCWCController();
            //////int CurrentFileID = Convert.ToInt32(FileID); 
            string fileSavePath = "";
            fileSavePath = Server.MapPath("~/Docs/All/") + Session.SessionID;
            var filesCol = obj.GetFile(fileSavePath).ToList();
            string FileList = "";
            //string FileList = "/Docs/All/" + Session.SessionID + "/";
            for (int i = 0; i < filesCol.Count; i++)
            {
                FileList = FileList + "/Docs/All/" + Session.SessionID + "/" + (filesCol[i].FileName) + ",";
            }
            var ObjResult = new { Status = 1, Message = FileList };
            return Json(ObjResult);
        }

        [NonAction]
        public List<FileList> GetFile(string fileSavePath)
        {
            List<FileList> listFiles = new List<FileList>();
            DirectoryInfo dirInfo = new DirectoryInfo(fileSavePath);
            int i = 0;
            foreach (var item in dirInfo.GetFiles())
            {
                listFiles.Add(new FileList()
                {
                    FileId = i + 1,
                    FileName = item.Name,
                    FilePath = dirInfo.FullName + "/" + item.Name
                });
                i = i + 1;
            }
            return listFiles;
        }

        [HttpGet]
        public ActionResult BulkInvoiceReportForExternalUser()
        {

            Login objLogin = (Login)Session["LoginUser"];
            ViewBag.PartyId = objLogin.EximTraderId;
            ViewBag.PartyName = objLogin.Name;
            ExportRepository objExport = new ExportRepository();
            objExport.GetPaymentParty();
            if (objExport.DBResponse.Status > 0)
                ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            else
                ViewBag.PaymentParty = null;
            return PartialView();
        }


        private void DeleteDirectory(string path)
        {
            if (Directory.Exists(path))
            {
                //Delete all files from the Directory
                foreach (string file in Directory.GetFiles(path))
                {
                    System.IO.File.Delete(file);
                }
                //Delete all child Directories
                //foreach (string directory in Directory.GetDirectories(path))
                //{
                //    DeleteDirectory(directory);
                //}
                ////Delete a Directory
                //Directory.Delete(path);
            }
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkInvoiceReportForExternalUser(BulkInvoiceReport ObjBulkInvoiceReport)
        {
            // if (ObjBulkInvoiceReport.InvoiceNumber == null)
            // {
            //   ObjBulkInvoiceReport.InvoiceNumber = "";
            // }
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjBulkInvoiceReport.PartyId = objLogin.EximTraderId;
            ObjBulkInvoiceReport.PayeeId = objLogin.EximTraderId;
            // if (ObjBulkInvoiceReport.InvoiceNumber == null)
            //  {
            if (ObjBulkInvoiceReport.InvoiceModule == "All")
            {
                string ModuleName = "";
                //delete all the files in the folder before creating it
                if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
                    DeleteDirectory(deletelocation);
                }

                //get all the distinct invoice module and invoices list with respect to party and date range 
                ObjRR.ModuleListWithInvoiceExternalUser(ObjBulkInvoiceReport);
            
            //ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
            //  }
            //  else
            //  {
            // List<PpgInvoiceGate> PpgInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
            //     ObjRR.InvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
            //  }
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                List<dynamic> lstModule = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                IList lstDistModule = lstModule.Select(x => x.Module).Distinct().ToList();
                string FilePath = "";


                foreach (string Mod in lstDistModule)
                {
                   
                    //lstModule.Where(x => x.Module == Mod).ToList().ForEach(itemInv =>
                    //{
                    //    String ModuleName= itemInv.Module;
                    switch (Mod)
                    {
                        case "IMPYard":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                // ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                // FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                //  FilePath = GeneratingBulkPDFforHydYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                FilePath = GeneratingBulkPDFforHydYard((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDeli":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDF_GodownHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "Exp":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforExportHDB((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPLod":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforLoadedHDB((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPMovement":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "CCIN":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCCINEntry((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "BTT":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "AUC":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforAuction((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPREF":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "REEFER PAYMENT SHEET";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforReefer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BND":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBND((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;

                        case "BNDadv":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "FUM":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforFum((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "ECGodn":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforHydECGodn((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "BTTCONT":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTCONT((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "BTTCONTStuff":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTStuffCONT((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "MISCINV":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforMisc((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "PEST":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforPest((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "EC":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEC((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "INVDEBT":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforDebitInv((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDExtend":
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondExtendHdb((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                        default:
                            ObjBulkInvoiceReport.InvoiceModule = Mod;
                            ModuleName = "";
                            ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforHydAll((DataSet)ObjRR.DBResponse.Data, Mod, ObjBulkInvoiceReport.All);
                            break;
                    }
                    //});

                }
                return Json(new { Status = 1, Data = FilePath });
            }
            else
                return Json(new { Status = -1, Data = "No Record Found." });
        }

            else
            {
                // List<DSRInvoiceGate> DSRInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);//, objLogin.Uid

                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
        //string FilePath = GeneratingBulkPDF(DSRInvoiceGateList, ObjBulkInvoiceReport.InvoiceModuleName);
        string FilePath = "";
                    switch (ObjBulkInvoiceReport.InvoiceModule)
                    {
                        case "IMPYard":
                            
                            ObjBulkInvoiceReport.All = "";
                            // ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            // FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                            //  FilePath = GeneratingBulkPDFforHydYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                            FilePath = GeneratingBulkPDFforHydYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDeli":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDF_GodownHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXP":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforExportHDB(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPLod":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforLoadedHDB(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPMovement":
                            
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "CCIN":
                            
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCCINEntry(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTT":
                            
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTTHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "AUC":
                       
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforAuction(ds, ObjBulkInvoiceReport.InvoiceModuleName,ObjBulkInvoiceReport.All);
                            break;
                        case "EXPREF":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforReefer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BND":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName,ObjBulkInvoiceReport.All);
                            break;

                        case "BNDadv":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBondHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName,ObjBulkInvoiceReport.All);
                            break;
                        case "FUM":
                     
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforFum(ds, ObjBulkInvoiceReport.InvoiceModuleName,ObjBulkInvoiceReport.All);
                            break;
                        case "ECGodn":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforHydECGodn(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTTCONT":
                       
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTTCONT(ds, ObjBulkInvoiceReport.InvoiceModuleName,ObjBulkInvoiceReport.All);
                            break;
                        case "BTTCONTStuff":
                         
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTTStuffCONT(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "MISCINV":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforMisc(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "PEST":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforPest(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EC":
                        
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEC(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "INVDEBT":
                           
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforDebitInv(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDExtend":
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBondExtendHdb(ds, ObjBulkInvoiceReport.InvoiceModuleName,ObjBulkInvoiceReport.All);
                            break;
                        default:
                          
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforHydAll(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                    }

                    return Json(new { Status = 1, Data = FilePath
});
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }
        }

        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfInvoiceDateWiseForExternalUser(string FromDate, string ToDate, string invoiceType)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceListForExternalUser(FromDate, ToDate, invoiceType,objLogin.EximTraderId);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }


        #endregion

        #region Bulk Debit Note For External User

        [HttpGet]
        public ActionResult GetBulkDeditNoteForExternalUser()
        {
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetBulkDebitNoteReportForExternalUser(FormCollection fc)
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            Login objLogin = (Login)Session["LoginUser"];
            objRR.GetBulkDebitNoteReportForExternaluser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), objLogin.EximTraderId);
            if (objRR.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRR.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }
            /*   List<string> lststring = new List<string>();
            if (objRR.DBResponse.Data != null)
            {
                lststring = (List<string>)objRR.DBResponse.Data;
                List<string> pdfPages = new List<string>();
                /*PDF Gneration*/
            /*  string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/";
              string FileName = "BulkDRNote" + "DR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
              if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                  Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
              lststring.ForEach(item =>
              {
                  if (!string.IsNullOrEmpty(item) && item != "")
                  {
                      item = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                      pdfPages.Add(item.Replace("|_br_|", "<br/>"));
                  }
              });
              //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
              //{
              //    rh.GeneratePDF(Path + FileName, pdfPages.ToArray());
              //}

              using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
              {
                  ObjPdf.HeadOffice = this.HeadOffice;
                  ObjPdf.HOAddress = this.HOAddress;
                  ObjPdf.ZonalOffice = this.ZonalOffice;
                  ObjPdf.ZOAddress = this.ZOAddress;
                  ObjPdf.GeneratePDF(Path + FileName, pdfPages.ToArray());

              }
              return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/" + FileName });
          }
          else
              return Json(new { Status = -1, Message = "No Data" });
      }*/
            #endregion

            #region Bulk Credit Note For External User
        [HttpGet]
        public ActionResult GetBulkCreditNoteForExternalUser()
        {
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetBulkCreditNoteReportForExternalUser(FormCollection fc)
        {
            Hdb_ReportRepository objRR = new Hdb_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            objRR.GetBulkCreditNoteReportForExteranlUser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"),objLogin.EximTraderId);
            List<string> lststring = new List<string>();
            if (objRR.DBResponse.Data != null)
            {
                lststring = (List<string>)objRR.DBResponse.Data;
                List<string> pdfPages = new List<string>();
                /*PDF Gneration*/
                string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/";
                string FileName = "BulkCRNote" + "CR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                    Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                lststring.ForEach(item =>
                {
                    if (!string.IsNullOrEmpty(item) && item != "")
                    {
                        item = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                        pdfPages.Add(item.Replace("|_br_|", "<br/>"));
                    }
                });
                //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    rh.GeneratePDF(Path + FileName, pdfPages.ToArray());
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(Path + FileName, pdfPages.ToArray());

                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/" + FileName });
            }
            else
                return Json(new { Status = -1, Message = "No Data" });
        }
        #endregion



        #region BulkDebitnoteReport
        [HttpGet]
        public ActionResult BulkDebitnoteReport()
        {

            //ExportRepository objExport = new ExportRepository();
            //objExport.GetPaymentParty();
            //if (objExport.DBResponse.Status > 0)
            //    ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            //else
            //    ViewBag.PaymentParty = null;
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintDRNote(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
           Hdb_ReportRepository objRepo = new Hdb_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            objRepo.PrintDetailsForBulkCRNote(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "D");
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }

        //    public string GenerateCRNotePDF(PrintModelOfBulkCrCompany objCR)
        //    {
        //        string Note = "";
        //        string SACCode = "", note = "", fileName = "";
        //        objCR.lstCharges.Select(x => new { SACCode = x.SACCode }).Distinct().ToList().ForEach(item =>
        //        {
        //            if (SACCode == "")
        //                SACCode = item.SACCode;
        //            else
        //                SACCode = SACCode + "," + item.SACCode;
        //        });

        //            note = (Note == "C") ? "CREDIT NOTE" : "DEBIT NOTE";
        //        fileName = (Note == "C") ? ("CreditNote" + CRNoteId + ".pdf") : ("DebitNote" + CRNoteId + ".pdf");
        //        string Path = Server.MapPath("~/Docs/") + Session.SessionID;//+ "/CreditNote" + CRNoteId + ".pdf";
        //        if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
        //        {
        //            Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
        //        }
        //        if (System.IO.File.Exists(Path + "/" + fileName))
        //        {
        //            System.IO.File.Delete(Path + "/" + fileName);

        //        }
        //        objCR.lstCrParty.ToList().ForEach(item =>
        //        {
        //            string html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;padding:8px;'>Principle Place of Business: <span style='border-bottom:1px solid #000;'>______________________</span><br/>" + note + "</th></tr><tr><th style='border:1px solid #000;text-align:center;padding:8px;width:50%;'>Details of Service Provider</th><th style='border:1px solid #000;text-align:center;padding:8px;width:50%;'>Details of Service Receiver</th></tr></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>Name: " + objCR.CompanyName + "</td><td style='border:1px solid #000;text-align:left;padding:8px;'>Name: <span>" + item.PartyName + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>Warehouse Address: <span>" + objCR.CompanyAddress + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>Address: <span>" + item.PartyAddress + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>City: <span>" + objCR.CompCityName + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>City: <span>" + item.PartyCityName + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>State: <span>" + objCR.CompStateName + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>State: <span>" + item.PartyStateName + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>State Code: <span>" + objCR.CompStateCode + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>State Code: <span>" + item.PartyStateCode + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>GSTIN: <span>" + objCR.CompGstIn + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'><span>GSTIN(if registered):" + item.PartyGSTIN + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>PAN:<span>" + objCR.CompPan + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'><span></span></td></tr><tr><td style='text-align:left;padding:8px;'>Debit/Credit Note Serial No: <span style='border-bottom:1px solid #000;'>" + item.CRNoteNo + "</span><br/><br/>Date of Issue: <span style='border-bottom:1px solid #000;'>" + item.CRNoteDate + "</span></td><td style='text-align:left;padding:8px;'>Accounting Code of <span>" + SACCode + "</span><br/><br/>Description of Services: <span>Other Storage & Warehousing Services</span></td></tr><tr><td colspan='2' style='text-align:left;padding:8px;'>Original Bill of Supply/Tax Invoice No: <span style='border-bottom:1px solid #000;'>" + item.InvoiceNo + "</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date: <span style='border-bottom:1px solid #000;'>" + Convert.ToDateTime(item.InvoiceDate).ToString("dd/MM/yyyy") + "</span></td></tr><tr><td colspan='2'>";
        //        string htmltable = "<table style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;font-size:7pt;'><thead><tr><th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Sl No.</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;width:20%;'>Particulars</th><th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;width:7%;'>Taxable Value</th><th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>CGST</th><th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>SGST</th><th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>IGST</th><th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Total Amount</th></tr><tr><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Reasons for increase / decrease in original invoice</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th></tr></thead><tbody>";
        //        string tr = "";
        //        int Count = 1;
        //        decimal IGSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0;
        //            objCR.lstCharges.Where(y => y.CRNoteId == item.CRNoteId).ToList().ForEach(data =>
        //           {
        //                tr += "<tr><td style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>" + Count + "</td><td style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'>" + item.ChargeName + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.Taxable + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.CGSTPer + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.CGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.SGSTPer + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.SGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.IGSTPer + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.IGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.Total + "</td></tr>";
        //            IGSTAmt += item.IGSTAmt;
        //            CGSTAmt += item.CGSTAmt;
        //            SGSTAmt += item.SGSTAmt;
        //            Count++;
        //        });
        //        string AmountInWord = ConvertNumbertoWords((long)objCR.GrandTotal);
        //        string Remarks = objCR.Remarks;
        //        string tfoot = "<tr><td style='border:1px solid #000;text-align:center;padding:5px;'></td><td style='border:1px solid #000;text-align:left;padding:5px;'></td><td style='border:1px solid #000;text-align:center;padding:5px;font-weight:600;'>Total</td><td style='border:1px solid #000;text-align:right;padding:5px;'></td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + CGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'></td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + SGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'></td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + IGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + objCR.TotalAmt + "</td></tr><tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Total Debit/Credit Note Value (in figure)</span> <span>" + objCR.GrandTotal + "</span></td></tr><tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Total Debit/Credit Note Value (in words)</span> <span>" + AmountInWord + "</span></td></tr><tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Remarks</span> <span>" + Remarks + "</span></td></tr></tbody></table></td></tr><tr><td colspan='2' style='text-align:left;padding:5px;'>Note:<br/><span style='padding:8px;'>1. The invoice issued earlier can be modified/cancelled by way of Debit Note/Credit Note.</span><br/><span style='padding:8px;'>2. Credit Note is to be issued where excess amount cliamed in original invoice.</span><br/><span style='padding:8px;'>3. Debit Note is to be issued where less amount claimed in original invoice.</span></td></tr><tr><td></td><td style='text-align:left;padding:8px;font-weight:600;'>Signature: ____________________________<br/><br/>Name of the Signatory: __________________ <br/><br/>Designation/Status: ____________________ </td></tr><tr><td style='text-align:left;padding:5px;'>To,<br/><span style='border-bottom:1px solid #000;'>____________________________ <br/>____________________________<br/>____________________________<br/></span><br/><br/>Copy To:<br/>1. Duplicate Copy for RM, CWC,RO -<br/>2. Triplicate Copy for Warehouse</td></tr></tbody></table>";
        //        html = html + htmltable + tr + tfoot;
        //        using (var RH = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
        //        {
        //            RH.GeneratePDF(Path + "/" + fileName, html);
        //        }
        //        return "/Docs/" + Session.SessionID + "/" + fileName;
        //    }


        //}

        [NonAction]
        public string GenerateDRNotePDF(PrintModelOfBulkCrCompany objCR)
        {
            Einvoice obj = new Einvoice();
            string note = "Debit Note";

            List<string> lstSB = new List<string>();

            string SACCode = "";
            objCR.lstCharges.Select(x => new { SACCode = x.SACCode }).Distinct().ToList().ForEach(item =>
            {
                if (SACCode == "")
                    SACCode = item.SACCode;
                else
                    SACCode = SACCode + "," + item.SACCode;
            });

            objCR.lstCrParty.ToList().ForEach(item =>
            {

                //    /*Header Part*/
                StringBuilder html = new StringBuilder();

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr>");

                html.Append("<td width='90%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                //html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label></td>");
                //html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td width='800%' valign='top' align='center'><label style='font-size: 10pt; font-weight: bold;'>Principle Place of Business: <span style='border-bottom: 1px solid #000;'>______________________</span></label><br /><label style='font-size: 10pt; font-weight: bold;'>" + note + "</label></td></tr>");

                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + "  </td></tr>");
                html.Append("</tbody></table></td>");

                if (item.SignedQRCode == "")
                { }
                else
                {
                    if (item.SupplyType == "B2C")
                    {
                        html.Append("<td align='left' valign='top'><img align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                    else
                    {
                        html.Append("<td align='left' valign='top'><img align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                }







                html.Append("<td align='left' valign='top'><img valign='top' align='right' src=''/> </td>");

                html.Append("</tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //html.Append("<td colspan='8' width='90%' width='100%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCR.CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span>");
                //html.Append("<br /><label style='font-size: 14px; font-weight:bold;'></label>");
                //html.Append("</td></tr>");

                html.Append("</tbody></table>");

                html.Append("<table cellpadding='0' cellspacing='0' style='table-layout: fixed; width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif;'><tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='6' cellspacing='0' style='width:50%; border-right: 1px solid #000;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Provider</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b>" + objCR.CompanyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Warehouse Address:</b>" + objCR.CompanyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + objCR.CompCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + objCR.CompStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b>" + objCR.CompStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN:</b> " + objCR.CompGstIn + "</td></tr>");
                html.Append("<tr><td cellpadding='10'><b>PAN:</b>" + objCR.CompPan + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' cellspacing='0' Valign='top' style='width:50%;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Receiver</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b> " + item.PartyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Address:</b> " + item.PartyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + item.PartyCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + item.PartyStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b> " + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN(if registered):</b> " + item.PartyGSTIN + "</td></tr>");
                html.Append("<tr><td cellpadding='10'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='6' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'><tbody>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Debit/Credit Note Serial No :</b> " + item.CRNoteNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Accounting Code of</b> " + SACCode + "</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Date of Issue :</b> " + Convert.ToDateTime(item.CRNoteDate).ToString("dd/MM/yyyy") + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Description of Services :</b> Other Storage & Warehousing Services</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Original Bill of Supply/Tax Invoice No :</b>  " + item.InvoiceNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Date :</b>  " + Convert.ToDateTime(item.InvoiceDate).ToString("dd/MM/yyyy") + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Sl No.</th>");
                html.Append("<th colspan='1' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Particulars</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Value</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>Total Amount</th></tr>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Reason for increase/decrease in original invoice</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                int i = 1;
                decimal IGSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0;
                decimal total = 0;
                objCR.lstCharges.Where(y => y.CRNoteId == item.CRNoteId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + data.ChargeName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTAmt + "</td>");

                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + data.Total + "</td></tr>");
                    i = i + 1;
                    IGSTAmt += data.IGSTAmt;
                    CGSTAmt += data.CGSTAmt;
                    SGSTAmt += data.SGSTAmt;
                    total += data.Total;
                });

                html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + CGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + SGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + IGSTAmt + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + total + "</td></tr>");

                string AmountInWord = ConvertNumbertoWords((long)item.GrandTotal);
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in figure):</b>" + item.GrandTotal + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in words):</b> " + AmountInWord + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Remarks:</b>" + item.Remarks + "</td></tr>");

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><th>Note:</th></tr>");
                html.Append("<tr><td colspan='12'><b>1.</b> The invoice issued earlier can be modified/cancelled by way of Debit Note/Credit Note.</td></tr>");
                html.Append("<tr><td colspan='12'><b>2.</b> Credit Note is to be issued where excess amount cliamed in original invoice.</td></tr>");
                html.Append("<tr><td colspan='12'><b>3.</b> Debit Note is to be issued where less amount claimed in original invoice.</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><td colspan='6' width='80%'></td>");
                html.Append("<th colspan='5' width='50%'>Signature: ____________________________ <br/><br/> Name of the Signatory: __________________ <br/><br/> Designation/Status: ____________________</th></tr>");

                html.Append("<tr><td colspan='6' width='50%'>To, <br/> ____________________________ <br/>____________________________<br/>____________________________<br/><br/> Copy To: <br/> Duplicate Copy for RM, CWC,RO - <br/> 2.Triplicate Copy for Warehouse</td>");
                html.Append("<th colspan='6' width='50%'></th></tr>");


                html.Append("</tbody></table>");
                // html.Append("<div style='margin-top:10px;'><br/><br/><br/><br/></div>");
                // html.Append("<div style='margin-top:10px;'><br/><br/></div>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());

            });



            var FileName = "BulkDebitReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion
        #region BulkCreaditNoteReport
        [HttpGet]
        public ActionResult BulkCreaditNoteReport()
        {

            //ExportRepository objExport = new ExportRepository();
            //objExport.GetPaymentParty();
            //if (objExport.DBResponse.Status > 0)
            //    ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            //else
            //    ViewBag.PaymentParty = null;
            return PartialView();
        }



        [NonAction]
        public string GenerateDRNotePDF(PrintModelOfBulkCrCompany objCR,string note)
        {
            Einvoice obj = new Einvoice();

            List<string> lstSB = new List<string>();

            string SACCode = "";
            objCR.lstCharges.Select(x => new { SACCode = x.SACCode }).Distinct().ToList().ForEach(item =>
            {
                if (SACCode == "")
                    SACCode = item.SACCode;
                else
                    SACCode = SACCode + "," + item.SACCode;
            });

            objCR.lstCrParty.ToList().ForEach(item =>
            {

                //    /*Header Part*/
                StringBuilder html = new StringBuilder();

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr>");

                html.Append("<td width='90%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                  //html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                // html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label></td>");
                 //html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
               html.Append("<tr><td width='800%' valign='top' align='center'><label style='font-size: 10pt; font-weight: bold;'>Principle Place of Business: <span style='border-bottom: 1px solid #000;'>______________________</span></label><br /><label style='font-size: 10pt; font-weight: bold;'>" + note + "</label></td></tr>");

                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + "  </td></tr>");
               html.Append("</tbody></table></td>");

                if (item.SignedQRCode == "")
                { }
                else
                {
                    if (item.SupplyType == "B2C")
                    {
                        html.Append("<td align='left' valign='top'><img align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                    else
                    {
                        html.Append("<td align='left' valign='top'><img align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                }







                html.Append("<td align='left' valign='top'><img valign='top' align='right' src=''/> </td>");

                html.Append("</tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //html.Append("<td colspan='8' width='90%' width='100%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCR.CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span>");
                //html.Append("<br /><label style='font-size: 14px; font-weight:bold;'></label>");
                //html.Append("</td></tr>");

                html.Append("</tbody></table>");

                html.Append("<table cellpadding='0' cellspacing='0' style='table-layout: fixed; width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif;'><tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='6' cellspacing='0' style='width:50%; border-right: 1px solid #000;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Provider</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b>" + objCR.CompanyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Warehouse Address:</b>" + objCR.CompanyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + objCR.CompCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + objCR.CompStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b>" + objCR.CompStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN:</b> " + objCR.CompGstIn + "</td></tr>");
                html.Append("<tr><td cellpadding='10'><b>PAN:</b>" + objCR.CompPan + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' cellspacing='0' Valign='top' style='width:50%;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Receiver</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b> " + item.PartyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Address:</b> " + item.PartyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + item.PartyCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + item.PartyStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b> " + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN(if registered):</b> " + item.PartyGSTIN + "</td></tr>");
                html.Append("<tr><td cellpadding='10'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='6' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'><tbody>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Debit/Credit Note Serial No :</b> " + item.CRNoteNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Accounting Code of</b> " + SACCode + "</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Date of Issue :</b> " + Convert.ToDateTime(item.CRNoteDate).ToString("dd/MM/yyyy") + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Description of Services :</b> Other Storage & Warehousing Services</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Original Bill of Supply/Tax Invoice No :</b>  " + item.InvoiceNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Date :</b>  " + Convert.ToDateTime(item.InvoiceDate).ToString("dd/MM/yyyy") + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Sl No.</th>");
                html.Append("<th colspan='1' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Particulars</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Value</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>Total Amount</th></tr>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Reason for increase/decrease in original invoice</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                int i = 1;
                decimal IGSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0;
                decimal total = 0;
                objCR.lstCharges.Where(y => y.CRNoteId == item.CRNoteId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + data.ChargeName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTAmt + "</td>");

                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + data.Total + "</td></tr>");
                    i = i + 1;
                    IGSTAmt += data.IGSTAmt;
                    CGSTAmt += data.CGSTAmt;
                    SGSTAmt += data.SGSTAmt;
                    total += data.Total;
                });

                html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + CGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + SGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + IGSTAmt + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + total + "</td></tr>");

                string AmountInWord = ConvertNumbertoWords((long)item.GrandTotal);
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in figure):</b>" + item.GrandTotal + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in words):</b> " + AmountInWord + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Remarks:</b>" + item.Remarks + "</td></tr>");

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><th>Note:</th></tr>");
                html.Append("<tr><td colspan='12'><b>1.</b> The invoice issued earlier can be modified/cancelled by way of Debit Note/Credit Note.</td></tr>");
                html.Append("<tr><td colspan='12'><b>2.</b> Credit Note is to be issued where excess amount cliamed in original invoice.</td></tr>");
                html.Append("<tr><td colspan='12'><b>3.</b> Debit Note is to be issued where less amount claimed in original invoice.</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><td colspan='6' width='80%'></td>");
                html.Append("<th colspan='5' width='50%'>Signature: ____________________________ <br/><br/> Name of the Signatory: __________________ <br/><br/> Designation/Status: ____________________</th></tr>");

                html.Append("<tr><td colspan='6' width='50%'>To, <br/> ____________________________ <br/>____________________________<br/>____________________________<br/><br/> Copy To: <br/> Duplicate Copy for RM, CWC,RO - <br/> 2.Triplicate Copy for Warehouse</td>");
                html.Append("<th colspan='6' width='50%'></th></tr>");


                html.Append("</tbody></table>");
                // html.Append("<div style='margin-top:10px;'><br/><br/><br/><br/></div>");
                // html.Append("<div style='margin-top:10px;'><br/><br/></div>");

                //html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());

            });



            var FileName = "BulkDebitReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintCRNote(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            Hdb_ReportRepository objRepo = new Hdb_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            string Note = "CREDIT NOTE";

            objRepo.PrintDetailsForBulkCRNote(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "C");
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR,Note);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }
        #endregion

        #region New PartyWise SD Statemnet

        public ActionResult PartyWiseSDStatement()
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForSDDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return View();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPartywiseSDStatementReport(string FromDate, string ToDate, int PartyId)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetPartywiseSdStatement(PartyId, Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                HDB_PartyWiseSdStatement SDData = new HDB_PartyWiseSdStatement();
                SDData = (HDB_PartyWiseSdStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFtPartywiseSDStatementReport(SDData, FromDate, ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GeneratePDFtPartywiseSDStatementReport(HDB_PartyWiseSdStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "SdReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************
                var varopening = 0M;
                var varTransaction = 0M;
                var Closing = 0M;
                 varopening = SDData.Opening;
                 varTransaction = SDData.LstSdStatement.Sum(x => x.Amount);
                 Closing = varopening + varTransaction;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>Container Freight Station, Kukatpally,IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 9pt; font-weight:bold;'>SD STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");

                Pages.Append("<tr><td colspan='12'><span><br/></span></td></tr>");

                Pages.Append("<tr><td colspan='12' style='font-size:8pt;'><b>Party Name :</b> "+ SDData.PartyName + "</td></tr>");
              //  Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
              //  Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
               // Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("</thead>");               
                Pages.Append("</table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; font-size: 8pt;'>");
                Pages.Append("<thead>");
                Pages.Append("<tr>");
                Pages.Append("<th colspan='1' style='border-right: 1px solid #000; width:25px;'>S.No</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; width:150px;'>Deposit</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; width:150px;'>Withdrawal</th>");
                Pages.Append("<th colspan='1' style='border-right: 1px solid #000; width:80px;'>Mode</th>");
                Pages.Append("<th colspan='1' style='text-align:right; width:150px;'>Transaction Amount(in Rs.)</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SD Receipt Number</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SD Receipt Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Journal Voucher (JV-SD Number)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Journal Voucher (JV-SD Date)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;'></th>");
                Pages.Append("</tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;' Colspan='6'>Opening Balance</th>");
                Pages.Append("<th style='border-top: 1px solid #000; text-align:right;'>"+ SDData.Opening + "</th>");
                Pages.Append("</tr>");
                SDData.LstSdStatement.ToList().ForEach(x =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>"+x.SrNo+"</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + x.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + x.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + x.JVNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + x.JVDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + x.Mode + "</td>");
                    Pages.Append("<td style='border-top: 1px solid #000; text-align: right;'>" + x.Amount + "</td>");
                    Pages.Append("</tr>");
                });
                

                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;' Colspan='6'>Closing Balance</th>");
                Pages.Append("<th style='border-top: 1px solid #000; text-align:right;'>"+ Closing + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody>");
                Pages.Append("</table>");



                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Daily Transaction Report
        [HttpGet]
        public ActionResult DailyTransaction()
        {
            ViewBag.BranchType = Session["BranchType"];
            return PartialView("DailyTransaction");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyTransactionReportList(Hdb_DailyTransactionReport ObjDailyTransactionReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetDailyTransactionReportList(ObjDailyTransactionReport);//, objLogin.Uid
            return Json(ObjRR.DBResponse);
        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyTransactionPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[12];
                string FileName = "DailyTransactionReport.pdf";
                Pages[0] = fc["Page1"].ToString();
                Pages[1] = fc["Page2"].ToString();
                Pages[2] = fc["Page3"].ToString();
                Pages[3] = fc["Page4"].ToString();
                Pages[4] = fc["Page5"].ToString();
                Pages[5] = fc["Page6"].ToString();
                Pages[6] = fc["Page7"].ToString();
                Pages[7] = fc["Page8"].ToString();
                Pages[8] = fc["Page9"].ToString();
                Pages[9] = fc["Page10"].ToString();
                Pages[10] = fc["Page11"].ToString();
                Pages[11] = fc["Page12"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyTransactionReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyTransactionReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region LSC Statement Long Standing Of Import Cargo
        [HttpGet]
        public ActionResult LSCStatementLongStandingOfImportCargo()
        {
            HDBMasterRepository ObjGR = new HDBMasterRepository();
            ObjGR.GetAllGodown();
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetLSCStatementLngstndCargoReport(FormCollection fc)
        {
            try
            {
                //var date1 = Convert.ToDateTime(ObjPV["AsOnDate"].ToString());
                //var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //if (ObjPV.Module == "Import")
                //    ObjRR.GetPVReportImport(ObjPV);
                //else if (ObjPV.Module == "Export")
                //    ObjRR.GetPVReportExport(ObjPV);
                //else
                //    ObjRR.GetPVReportBond(ObjPV);
                // var Type = fc["Module"].ToString();
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                //s var ObjPV = new WFLD_PV();
                var AsOnDate = fc["AsOnDate"].ToString();
                //  var Module = fc["Module"].ToString();
                var GodownId = Convert.ToInt32(fc["GodownId"]);
                var GodownName = fc["GodownName"].ToString();


                ObjRR.GetLSCStatementLongStandingOfImportCargo(AsOnDate, GodownId, GodownName);
                // if (Type == "ALL") { Type = "ALL"; }
                // if (Type == "Imprest") { Type = "IMPREST"; }
                //  if (Type == "Temporary Advance") { Type = "Temporary Advance"; }

                excelName = "LSCStatementOfLongStandingImportCargo.xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                // return File(Obj.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName)
                // return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "LSCStatementOfLongStandingImportCargo.xlsx");
                }
            }
            // return null;
        }
        #endregion
        #region Monthly Performance Report  
        public ActionResult MonthlyPerformanceReport()
        {
            return View();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyPerformanceReport(Hdb_MonthlyPerformaceReport ObjMonthlyPerformaceReport)
        {
            try
            {
                var Pages = new string[1];
                string FileName = "MonthlyPerformanceRepor.pdf";
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                StringBuilder sb = new StringBuilder();
                List<Hdb_MonthlyPerformaceReport> LstMonthlyPerformaceReport = ObjRR.GetMonthlyPerformanceReportDataToPrint(ObjMonthlyPerformaceReport.MonthNo, ObjMonthlyPerformaceReport.YearNo);

                if (LstMonthlyPerformaceReport != null && LstMonthlyPerformaceReport.Count > 0)
                {

                    sb.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead>");
                    sb.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='50'/></td>");
                    sb.Append("<td width='80%' valign='top' align='center'><h1 style='font-size: 16px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                    sb.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                    sb.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>Container Freight Station, Kukatpally <br/> IDPL Road, Hyderabad - 37 </span><br/><label style='font-size: 7pt;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                    sb.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Monthly Performance Report for the Month of <u>_______________________________</u> </label>");
                    sb.Append("</td>");
                    sb.Append("<td valign='top'><img align='right' src='ISO' width='60'/></td>");
                    sb.Append("</tr>");
                    sb.Append("</thead></table>");

                    sb.Append("<table cellpadding='5' style='border:1px solid #000; text-align:center; margin-top:20px; width:100%; font-size:7pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'>");
                    sb.Append("<thead><tr>");
                    sb.Append("<th style='border-right: 1px solid #000; width:40%;'>Particulars</th>");
                    sb.Append("<th style='border-right: 1px solid #000; width:15%;'>TEU</th>");
                    sb.Append("<th style='border-right: 1px solid #000; width:15%;'>MT</th>");
                    sb.Append("<th style='border-right: 1px solid #000; width:15%;'>TEU</th>");
                    sb.Append("<th style='border-right: 1px solid #000; width:15%;'>MT</th>");
                    sb.Append("<th style='border-right: 1px solid #000; width:15%;'>TEU</th>");
                    sb.Append("<th style='width:15%;'>MT</th>");
                    sb.Append("</tr></thead>");

                    sb.Append("<tbody>");

                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>1. Import Container Received</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");

                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) From ICD</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");

                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) From Gateway ports by Road</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>2.Import Container Handled (Including reefers)</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Containers Destuffed</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==3).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) Containers despatched for destuffing</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> c) Total Containers Handled 2(a+b)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>3.Export Containers Handled (Including Reefers)</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Containers Stuffed a CFS</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) Containers moved/shifted to railhead/ICD</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> c) Containers moved to Gateway Ports by Road (Reffer)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> d) Containers stuffed at Factories and moved through CFS (Franchise)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> e) Total Export Containers Handled 3(a+b+c+d)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");



                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>4.Empty Containers Handled</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Empty Containers received at CFS</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> i) From other ICD</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> ii) From Gateway Ports by Road</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) Empty Containers Despatched/Moved out from CFS</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> i) To other ICD/Yards</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> ii) To Gateway Ports by Road</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> c) Total Containers Handled 4(a+b)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>5.Total Containers Handled during the month</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Import</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==18).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) Export</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> c) Empty</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> Total 5(a+b+c)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>6. Cargo Exported</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Quantity(MT)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==22).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==22).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==22).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==22).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==22).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 22).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) FOB Value (In Rupees Lakhs)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left; text-align:left;'><strong>7.Cargo Exported since April 1,2020</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Quantity(MT)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) FOB Value (In Rupees Lakhs)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>8.Income from Reefer Containers</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Export(Rs.)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) Import(Rs.)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>9.Progressive Total of Containers Handled since 1st April of Financial Year</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Import</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> i) Dry</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> i) Reefer</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId ==29).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> Total TEUs</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) Export</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> i) Dry</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> i) Reefer</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 33).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 33).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 33).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 33).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 33).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 33).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> Total TEUs</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 35).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 35).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 35).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 35).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 35).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 35).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> c) Empty</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 36).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 36).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 36).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 36).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 36).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 36).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> Total (a+b+c)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 37).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 37).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 37).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 37).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 37).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 37).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><strong>10.Financial Performance</strong></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    sb.Append("<td style='border-top:1px solid #000;'></td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> a) Income</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 38).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 38).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 38).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 38).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 38).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 38).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");


                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> b) Expenditure</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 39).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 39).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 39).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 39).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 39).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 39).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");

                    sb.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000; text-align:left;'><span>&nbsp;&nbsp;&nbsp;&nbsp;</span> Profit / Loss (strike out whicher is not applicable)</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 40).Select(x => x.MonthUnderReport).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 40).Select(x => x.MonthUnderReportMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 40).Select(x => x.PrevMonth).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 40).Select(x => x.PrevMonthMT).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 40).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</td>");
                    sb.Append("<td style='border-top:1px solid #000;'>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 40).Select(x => x.CorresMonthPrevYearMT).FirstOrDefault() + "</td></tr>");

                    sb.Append("</tbody>");
                    sb.Append("</table>");


                    sb.Append("<table style='margin-top:20px; width:100%; font-size:7pt; font-family:Verdana,Arial,San-serif; border-collapse:collapse;'><tbody>");
                    sb.Append("<tr>");
                    sb.Append("<td colspan='6' width='50%'><table style='width:100%; font-size:8pt;'><tbody>");
                    sb.Append("<tr><td>To <br/> GM (Commercial), CWC, CO, New Delhi</td></tr>");
                    sb.Append("<tr><td><span><br/><br/></span></td></tr>");
                    sb.Append("<tr><td>Copy to: <br/> RM, CWC, RO, Hyderabad</td></tr>");
                    sb.Append("</tbody></table></td>");
                    sb.Append("<th colspan='6' width='50%' align='right'>Signature of Manager-CFS</th></tr>");
                    sb.Append("</tbody></table>");
                }
                sb.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                sb.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                Pages[0] = sb.ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyPerformanceRepor/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyPerformanceRepor/" + FileName };
                return Json(ObjResult, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }
        }

        #endregion

        #region PartyLedgerReport For External User
        public ActionResult PartyLedgerReportForExternalUser()
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            /* ObjRR.GetAllPartyForSDDet("", 0);
             if (ObjRR.DBResponse.Data != null)
             {
                 var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                 var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                 ViewBag.LstParty = Jobject["LstParty"];
                 ViewBag.State = Jobject["State"];
             }*/

            Login objLogin = (Login)Session["LoginUser"];
            ViewBag.PartyId = objLogin.EximTraderId;
            ViewBag.PartyName = objLogin.Name;
            return PartialView();
        }




        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetLedgerDetReportForExternalUser(string FromDate, string ToDate, int PartyId)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");
            Login objLogin = (Login)Session["LoginUser"];
            //ViewBag.PartyId = objLogin.EximTraderId;
            //ViewBag.PartyName = objLogin.Name;
            ObjRR.GetLedgerDetStatement(objLogin.EximTraderId, Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                HdbSDDetailsStatement SDData = new HdbSDDetailsStatement();
                SDData = (HdbSDDetailsStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFLedgerDetReportForExternalUser(SDData, FromDate, ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GeneratePDFLedgerDetReportForExternalUser(HdbSDDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "LedgerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally,IDPL Road, Hyderabad - 37</span><br/><label style='font-size: 14px; font-weight:bold;'>PARTY LEDGER STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Realised Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Transaction Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Closing Balance</th></tr></thead>");

                Pages.Append("<tbody>");
                int counter = 1;
                decimal utilisationamt = 0;
                decimal ReceiptAmt = 0;
                decimal balance = 0;
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.RealisedInvoiceNo + "</td>");
                    if (item.ReceiptNo != "")
                    {
                        if (item.TranAmt == 0)
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                        }

                    }
                    else
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                    }
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    if (counter == 1)
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        utilisationamt = Convert.ToDecimal(item.ReceiptAmt);
                    }
                    else
                    {
                        if (item.ReceiptNo != "")
                        {
                            if (item.TranAmt == 0)
                            {
                                if (item.CrAdjust == 0)
                                {
                                    utilisationamt = utilisationamt + Convert.ToDecimal(item.ReceiptAmt);
                                    balance = balance - Convert.ToDecimal(item.TranAmt);
                                }
                            }
                            else
                            {
                                utilisationamt = utilisationamt + Convert.ToDecimal(item.TranAmt);
                                balance = balance - Convert.ToDecimal(item.TranAmt);
                            }
                        }
                        utilisationamt = utilisationamt - Convert.ToDecimal(item.TranAmt);
                        balance = balance + Convert.ToDecimal(item.TranAmt);
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + utilisationamt.ToString() + "</td>");
                    }
                    Pages.Append("</tr>");
                    counter++;
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Closing Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + utilisationamt.ToString() + "</th>");
                Pages.Append("</tr>");



                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>SD Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + SDData.SDBalance.ToString() + "</th>");
                Pages.Append("</tr>");

                Decimal UtiBalance = Convert.ToDecimal(SDData.SDBalance) - Math.Abs(utilisationamt);
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + UtiBalance.ToString() + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region LCL Statement Of Import Cargo
        [HttpGet]
        public ActionResult LCLStatementOfImportCargo()
        {
            HDBMasterRepository ObjGR = new HDBMasterRepository();
            ObjGR.GetAllGodown();
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetLCLStatementReport(FormCollection fc)
        {
            try
            {
                //var date1 = Convert.ToDateTime(ObjPV["AsOnDate"].ToString());
                //var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //if (ObjPV.Module == "Import")
                //    ObjRR.GetPVReportImport(ObjPV);
                //else if (ObjPV.Module == "Export")
                //    ObjRR.GetPVReportExport(ObjPV);
                //else
                //    ObjRR.GetPVReportBond(ObjPV);
                // var Type = fc["Module"].ToString();
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                //s var ObjPV = new WFLD_PV();
                var AsOnDate = fc["AsOnDate"].ToString();
                //  var Module = fc["Module"].ToString();
                var GodownId = Convert.ToInt32(fc["GodownId"]);
                var GodownName = fc["GodownName"].ToString();


                ObjRR.GetLCLStatementOfImportCargo(AsOnDate, GodownId, GodownName);
                // if (Type == "ALL") { Type = "ALL"; }
                // if (Type == "Imprest") { Type = "IMPREST"; }
                //  if (Type == "Temporary Advance") { Type = "Temporary Advance"; }

                excelName = "LSCStatementOfImportCargo.xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
               // return File(Obj.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName)
               // return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "LSCStatementOfImportCargo.xlsx");
                }
            }
            // return null;
        }
        #endregion


        #region Import Insurance Register Report

        [HttpGet]
        public ActionResult ImportInsuranceRegister()
        {
            Hdb_ReportRepository ObjETR = new Hdb_ReportRepository();
            ObjETR.GetAllInsuranceType();
            List<Hdb_ImportInsuranceType> InsuranceTypeList = new List<Hdb_ImportInsuranceType>();
            if (ObjETR.DBResponse.Data != null)
            {
                InsuranceTypeList = (List<Hdb_ImportInsuranceType>)ObjETR.DBResponse.Data;
            }
            List<SelectListItem> InsuranceType = new List<SelectListItem>();
            InsuranceType.Add(new SelectListItem { Text = "----Select----", Value = "" });
            foreach (var x in InsuranceTypeList)
            {
                InsuranceType.Add(new SelectListItem { Text = x.ValueName, Value = x.ValueType });
            }

            ViewBag.lstInsuranceType = InsuranceType;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ImportInsuranceRegister(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var InsuranceType = fc["Type"].ToString();
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetImportInsuranceRegisterReport(date1, date2, InsuranceType);

                excelName = "ImportInsuranceRegister" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ImportInsuranceRegister.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Export Insurance Register

        [HttpGet]
        public ActionResult InsuranceRegisterExport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult InsuranceRegisterExport(FormCollection fc)
        {
            /* try
             {
                 var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                 var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                 Int32 Type = Convert.ToInt32(fc["ddlType"].ToString());
                 var excelName = "";
                 var ObjRR = new Hdb_ReportRepository();
                 ObjRR.GetInsuranceRegisterExport(date1, date2, Type);



                 excelName = "InsuranceRegisterExport"  + ".xlsx";

                 if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                     return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);*/
            List<Hdb_InsuranceRegisterStockModelVM> lstExportStockReportVM = new List<Hdb_InsuranceRegisterStockModelVM>();
            List<Hdb_InsuranceRegisterStockModel> model = new List<Hdb_InsuranceRegisterStockModel>();
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var datefinal = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                Int32 Type = Convert.ToInt32(fc["ddlType"].ToString());
                var GType = Type == 3 ? "IIA" : Type == 4 ? "IIB" : Type == 5 ? "Open" : Type == 1 ? "VI" : Type == 6 ? " All ":"";
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                // ObjRR.GetExportStockValueReport(date1, date2);
                //var excelName = "";
                //  var ObjRR = new WFLD_ReportRepository();
                DataTable dt = new DataTable();

               
                while (date1 <= date2)
                {

                    ObjRR.GetInsuranceRegisterExport(date1, date2,Type);
                    if (ObjRR.DBResponse.Data != null)
                    {
                        decimal CFSValue = 0M;
                        decimal recvalue = 0M;
                        decimal issuevalue = 0M;
                        decimal closevalue = 0M;
                        decimal closewt = 0M;
                        dt =(DataTable) ObjRR.DBResponse.Data;
                        if (dt.Rows.Count > 0)
                        {
                            CFSValue = Convert.ToDecimal(dt.Rows[0]["openingfob"]);
                            recvalue = Convert.ToDecimal(dt.Rows[0]["receiptfob"]);
                            issuevalue = Convert.ToDecimal(dt.Rows[0]["issuefob"]);
                            closevalue = Convert.ToDecimal(dt.Rows[0]["closefob"]);
                            closewt = Convert.ToDecimal(dt.Rows[0]["closeweight"]);
                        }
                        lstExportStockReportVM.Add(new Hdb_InsuranceRegisterStockModelVM
                        {
                            openingfob = CFSValue,
                            receiptfob = recvalue,
                            issuefob = issuevalue,
                            closefob = closevalue,
                            closeweight = closewt,
                            // GrossDuty = 0M,
                            _date = date1.ToString("dd/MM/yyyy")
                        


    });
                    }
                    date1 = date1.AddDays(1);
                }





                //  excelName = "ImportStockValueReport" + ".xls";
                excelName = "InsuranceRegisterExportExcel" + ".xls";

                //    if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                //
                //return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                if (lstExportStockReportVM.Count > 0)
                   // return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelNam
                  return File(InsuranceRegisterExportExcel(model, lstExportStockReportVM,GType , datefinal.ToString("dd/MM/yyyy"), date2.ToString("dd/MM/yyyy")), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "InsuranceRegisterExport.xlsx");
                }
            }
            // return null;
        }
           private string InsuranceRegisterExportExcel(List<Hdb_InsuranceRegisterStockModel> model, List<Hdb_InsuranceRegisterStockModelVM> dt, string datevalue, string datevalueto,string GType)
           {
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/Excel")))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/Excel"));
            }
            var excelFile = Server.MapPath("~/Docs/Excel/" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".xlsx");
            using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
               {
                   var title = @"CENTRAL WAREHOUSING CORPORATION"
                           + Environment.NewLine + "(A Government of India Undertaking)"
                         ;

                   var Addr = "CFS, Kukatpally, Hyderabad";
                   var Titl1 = "Insurance Statement (Export) From " + datevalue + " TO " + datevalueto;
                   var Godown = "Export Godown No. " +GType;
                   exl.MargeCell("A1:G1", title, DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("A2:G2", Addr, DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("A3:G3", Titl1, DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("A4:C4", Godown, DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("A5:A7", "Date", DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("B5:F5", "FOB Value", DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("B6:B7", "Opening Balance", DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("C6:C7", "Receipt / Carting", DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("D6:D7", "Issue / Stuffing & BTT", DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("E6:F6", "Closing Balance", DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("E7:E7", "FOB Value", DynamicExcel.CellAlignment.Middle);
                   exl.MargeCell("F7:F7", "Weight", DynamicExcel.CellAlignment.Middle);

                   //for (var i = 65; i < 85; i++)
                   //{
                   //    char character = (char)i;
                   //    string text = character.ToString();
                   //    exl.AddCell(text + "5", (i - 64), DynamicExcel.CellAlignment.Middle);
                   //}
                   /*exl.AddTable<InvoiceData>("A", 6, model.InvoiceData, new[] { 6, 20, 20, 40, 12, 16, 10, 10, 12, 12, 8, 14, 8, 14, 8, 14, 16 });
                   exl.AddTable<CashReceiptData>("R", 6, model.CashReceiptData, new[] { 12, 30, 14, 14, 14, 14, 14, 40 });/
                   exl.AddTable<PpgRegisterOfOutwardSupplyModel>("A", 6, model, new[] { 6, 20, 20, 40, 12, 16, 10, 10, 12, 12, 8, 14, 8, 14, 8, 14, 16, 12, 30, 14, 14, 14, 14, 14, 40 });*/
         exl.AddTable<Hdb_InsuranceRegisterStockModelVM>("A", 8,dt, new[] { 20, 20, 20, 20, 20, 20 });
         var receiptfob = dt.Sum(o => o.receiptfob);
         var issuefob = dt.Sum(o => o.issuefob);
         var closefob = dt.Sum(o => o.closefob);
         var closeweight = dt.Sum(o => o.closeweight);
         var AvgFob = closefob / (dt.Count);
         String congn = "Total Number of Consignments received during the month:";
         congn = congn + " " + receiptfob;
         exl.AddCell("B" + (dt.Count + 9).ToString(), "Total", DynamicExcel.CellAlignment.CenterRight);

         exl.AddCell("C" + (dt.Count + 9).ToString(), receiptfob.ToString(), DynamicExcel.CellAlignment.CenterRight);
         exl.AddCell("D" + (dt.Count + 9).ToString(), issuefob.ToString(), DynamicExcel.CellAlignment.CenterRight);
         exl.AddCell("E" + (dt.Count + 9).ToString(), closefob.ToString(), DynamicExcel.CellAlignment.CenterRight);
         exl.AddCell("F" + (dt.Count + 9).ToString(), closeweight.ToString(), DynamicExcel.CellAlignment.CenterRight);
         /*exl.AddCell("O" + (model.Count + 7).ToString(), "Invoice Amount", DynamicExcel.CellAlignment.CenterRight);
         exl.AddCell("P" + (model.Count + 7).ToString(), InvoiceAmount, DynamicExcel.CellAlignment.CenterRight);
         exl.AddCell("O" + (model.Count + 8).ToString(), "Cash Receipt Amount", DynamicExcel.CellAlignment.CenterRight);
         exl.AddCell("P" + (model.Count + 8).ToString(), CRAmount, DynamicExcel.CellAlignment.CenterRight);*/
        //  exl.AddCell("D" + (model.Count + 10).ToString(), "Average  Value", DynamicExcel.CellAlignment.CenterRight);
          exl.AddCell("E" + (dt.Count + 10).ToString(), AvgFob.ToString("0.00"), DynamicExcel.CellAlignment.CenterRight);

          string cellpos = "B" + (dt.Count + 12).ToString() + ":" + "D" + (dt.Count + 12).ToString();

          //  exl.MargeCell("B"+ (model.Count + 11).ToString() ":"+, "Closing Balance", DynamicExcel.CellAlignment.Middle);
          exl.MargeCell(cellpos, congn, DynamicExcel.CellAlignment.CenterRight);
          string cellpos1 = "A" + (dt.Count + 15).ToString() + ":" + "C" + (dt.Count + 15).ToString();
          string cellpos2 = "D" + (dt.Count + 15).ToString() + ":" + "F" + (dt.Count + 15).ToString();

          exl.MargeCell(cellpos1, "Signature of Godown In-charge", DynamicExcel.CellAlignment.CenterRight);
          exl.MargeCell(cellpos2, "Signature of Export In-charge", DynamicExcel.CellAlignment.CenterRight);

          exl.Save();
      }
      return excelFile;
  }
     /*   private string InsuranceRegisterExportExcel(List<Hdb_InsuranceRegisterStockModel> model, List<Hdb_InsuranceRegisterStockModelVM> dt, string datevalue, string datevalueto)
        {
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/Excel")))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/Excel"));
            }
            var excelFile = Server.MapPath("~/Docs/Excel/" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".xlsx");
            System.Web.UI.WebControls.GridView Grid = new System.Web.UI.WebControls.GridView();


            System.Web.UI.WebControls.Table tb = new System.Web.UI.WebControls.Table();

            if (dt.Count > 0)
            {

                Grid.AllowPaging = false;
                Grid.DataSource = dt;
                Grid.DataBind();


                for (int i = 0; i < Grid.HeaderRow.Cells.Count; i++)
                {
                    Grid.HeaderRow.Cells[i].Style.Add("background-color", "#edebeb");
                    Grid.HeaderRow.Cells[i].Attributes.Add("class", "Headermode");

                }

                for (int i = 0; i < Grid.Rows.Count; i++)
                {

                    Grid.Rows[i].BackColor = System.Drawing.Color.White;


                    if (i % 2 != 0)
                    {
                        Grid.Rows[i].Attributes.Add("class", "textmode");
                    }
                    else
                    {
                        Grid.Rows[i].Attributes.Add("class", "textmode2");
                    }

                }


                System.Web.UI.WebControls.TableCell cell1 = new System.Web.UI.WebControls.TableCell();
                cell1.Text = "<b> CENTRAL WAREHOUSING CORPORATION </b> ";
                cell1.ForeColor = System.Drawing.Color.Black;
                System.Web.UI.WebControls.TableRow tr1 = new System.Web.UI.WebControls.TableRow();
                tr1.Cells.Add(cell1);
                tr1.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;

                System.Web.UI.WebControls.TableCell cell3 = new System.Web.UI.WebControls.TableCell();
                cell3.Text = "CENTRAL WAREHOUSE";
                cell3.ForeColor = System.Drawing.Color.Black;

                System.Web.UI.WebControls.TableRow tr3 = new System.Web.UI.WebControls.TableRow();
                tr3.Cells.Add(cell3);
                tr3.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;


                System.Web.UI.WebControls.TableCell cell4 = new System.Web.UI.WebControls.TableCell();
                cell4.Text = "Export Stock Value Report From " + datevalue + " to " + datevalueto;
                System.Web.UI.WebControls.TableRow tr4 = new System.Web.UI.WebControls.TableRow();
                cell4.ForeColor = System.Drawing.Color.Black;

                tr4.Cells.Add(cell4);
                tr4.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;



                System.Web.UI.WebControls.TableCell cell5 = new System.Web.UI.WebControls.TableCell();
                cell5.Controls.Add(Grid);
                System.Web.UI.WebControls.TableRow tr5 = new System.Web.UI.WebControls.TableRow();
                tr5.Cells.Add(cell5);

                tb.Rows.Add(tr1);
                //   tb.Rows.Add(tr2);
                tb.Rows.Add(tr3);
                tb.Rows.Add(tr4);
                tb.Rows.Add(tr5);

            }
            using (System.IO.StringWriter sw = new System.IO.StringWriter())
            {
                using (System.Web.UI.HtmlTextWriter hw = new System.Web.UI.HtmlTextWriter(sw))
                {
                    System.IO.StreamWriter writer = System.IO.File.AppendText(excelFile);
                    tb.RenderControl(hw);
                    writer.WriteLine(sw.ToString());
                    writer.Close();
                }
            }



            return excelFile;
        }*/
        #endregion


        #region Daily Transaction Report

        public ActionResult DailyTransactionReport()
        {
            HDBMasterRepository ObjGR = new HDBMasterRepository();
            ObjGR.GetAllGodown();
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return View();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetDailyTransactionReport(Hdb_DailyTransaction vm)
        {
            try
            {
                
               
                var ObjRR = new Hdb_ReportRepository();               
                if (vm.Module == "Import")
                    ObjRR.GetDailyTransactionReportImport(vm.FromDate,vm.ToDate, vm.Module, vm.GodownId, vm.GodownName);
                else if (vm.Module == "Bond")
                    ObjRR.GetDailyTransactionReportBond(vm.FromDate, vm.ToDate, vm.Module, vm.GodownId, vm.GodownName);
                else
                    ObjRR.GetDailyTransactionReportExport(vm.FromDate, vm.ToDate, vm.Module, vm.GodownId, vm.GodownName);              

               string excelName = "DailyTransactionReport" + "_" + vm.Module + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "DailyTransactionReport" + "_" + vm.Module.ToString() + ".xlsx");
                }
            }
        }
        #endregion

        #region Bond Insurance Register Report

        [HttpGet]
        public ActionResult BondInsuranceRegister()
        {
            Hdb_ReportRepository ObjETR = new Hdb_ReportRepository();
            ObjETR.GetAllInsuranceTypeBond();
            List<Hdb_BondInsuranceType> InsuranceTypeList = new List<Hdb_BondInsuranceType>();
            if (ObjETR.DBResponse.Data != null)
            {
                InsuranceTypeList = (List<Hdb_BondInsuranceType>)ObjETR.DBResponse.Data;
            }
            List<SelectListItem> InsuranceType = new List<SelectListItem>();
            InsuranceType.Add(new SelectListItem { Text = "----Select----", Value = "" });
            foreach (var x in InsuranceTypeList)
            {
                InsuranceType.Add(new SelectListItem { Text = x.ValueName, Value = x.ValueType });
            }

            ViewBag.lstInsuranceType = InsuranceType;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult BondInsuranceRegister(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var InsuranceType = fc["Type"].ToString();
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetBondInsuranceRegisterReport(date1, date2, InsuranceType);

                excelName = "BondInsuranceRegister" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BondInsuranceRegister.xls");
                }
            }
            // return null;
        }

        #endregion       

        #region E-Invoice Excel Generation

        [HttpGet]
        public ActionResult RegisterOfEInvoice()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult EInvoiceExcel(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetRegisterofEInvoice(date1, date2);

                excelName = "EInvoice.xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "EInvoice.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Bulk IRN Generation

        [HttpGet]
        public ActionResult BulkIRNGeneration()
        {
            //WFLD_ReportRepository objPpgRepo = new WFLD_ReportRepository();
            //objPpgRepo.GetBulkIrnDetails();
            //if (objPpgRepo.DBResponse.Status > 0)
            //    ViewBag.InvoiceList = JsonConvert.SerializeObject(objPpgRepo.DBResponse.Data);
            //else
            //    ViewBag.InvoiceList = null;
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetBulkIrnDetails()
        {
            Hdb_ReportRepository objPpgRepo = new Hdb_ReportRepository();
            objPpgRepo.GetBulkIrnDetails();
            var Output = (HDB_BulkIRN)objPpgRepo.DBResponse.Data;

            return Json(Output, JsonRequestBehavior.AllowGet);
        }        

        public async Task<JsonResult> AddEditBulkIRN(FormCollection objForm)
        {
            //Ppg_CWCImportController objPpgIrn = new Ppg_CWCImportController();

            try
            {

                var invoiceData = JsonConvert.DeserializeObject<PPG_BulkIRN>(objForm["PaymentSheetModelJson"]);

                foreach (var item in invoiceData.lstPostPaymentChrg)
                {
                    try
                    {
                        if (item.InvoiceType == "Inv")
                        {
                            var result = await GetIRNForBulkInvoice(item.InvoiceNo, item.SupplyType);
                        }
                        if (item.InvoiceType == "C")
                        {
                            var result1 = await GetGenerateIRNForBulkCreditNote(item.InvoiceNo, item.SupplyType, "CRN", "C");
                        }
                        if (item.InvoiceType == "D")
                        {
                            var result2 = await GetGenerateIRNForBulkCreditNote(item.InvoiceNo, item.SupplyType, "DBN", "D");
                        }
                    }
                    catch (Exception ex)
                    {
                        continue;
                    }
                }
                //foreach (var item in invoiceData.lstOperationContwiseAmt)
                //{
                //    if (item.DocumentDate != "")
                //        item.DocumentDate = Convert.ToDateTime(item.DocumentDate).ToString("yyyy-MM-dd");
                //} 
                return Json(new { Status = 1, Message = "IRN Generated" });

            }
            catch (Exception ex)
            {
                var Err = new { Status = -1, Message = "Error" };
                return Json(Err);
            }
        }

        public async Task<JsonResult> GetIRNForBulkInvoice(String InvoiceNo, string SupplyType)
        {

            HDB_ImportRepository objPpgRepo = new HDB_ImportRepository();
            if (SupplyType == "B2B" || SupplyType == "SEZWP" || SupplyType == "SEZWOP")
            {
                objPpgRepo.GetIRNForYard(InvoiceNo);
                var Output = (EinvoicePayload)objPpgRepo.DBResponse.Data;

                if (Output.BuyerDtls.Gstin != "" || Output.BuyerDtls.Gstin != null)
                {
                    objPpgRepo.GetHeaderIRNForYard();

                    HeaderParam Hp = (HeaderParam)objPpgRepo.DBResponse.Data;

                    string jsonEInvoice = JsonConvert.SerializeObject(Output);
                    string jsonEInvoiceHeader = JsonConvert.SerializeObject(Hp);

                    Einvoice Eobj = new Einvoice(Hp, jsonEInvoice);
                    log.Info("before calling GenerateEinvoice");
                    IrnResponse ERes = await Eobj.GenerateEinvoice();
                    if (ERes.Status == 0)
                    {
                        log.Info(ERes.ErrorDetails.ErrorMessage);
                        log.Info(ERes.ErrorDetails.ErrorCode);
                        log.Info("Invoice No:" + InvoiceNo);
                        log.Info(ERes.Status);
                    }
                    if (ERes.Status == 1)
                    {
                        objPpgRepo.AddEditIRNResponsec(ERes, InvoiceNo);
                    }
                    else
                    {
                        objPpgRepo.DBResponse.Message = ERes.ErrorDetails.ErrorMessage;
                        objPpgRepo.DBResponse.Status = Convert.ToInt32(ERes.ErrorDetails.ErrorCode);
                    }
                }
                else
                {

                    Einvoice Eobj = new Einvoice();
                    objPpgRepo.GetIRNB2CForYard(InvoiceNo);
                    Import.Models.Hdb_IrnB2CDetails irnb2cobj = new Import.Models.Hdb_IrnB2CDetails();
                    irnb2cobj = (Import.Models.Hdb_IrnB2CDetails)objPpgRepo.DBResponse.Data;

                    if (irnb2cobj.mtid == "" || irnb2cobj.pa == "")
                    {
                        IrnModel irnModelObj = new IrnModel();
                        irnModelObj.DocumentDate = irnb2cobj.DocDt;
                        irnModelObj.DocumentNo = irnb2cobj.DocNo;
                        irnModelObj.DocumentType = irnb2cobj.DocTyp;
                        irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                        string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                        B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                        string QRCodeInfo = "000201010211021644038499331959060415522024099331959061661000309933195920825HDFC00000015010030812820026560010A0000005240138centralwarehousingco.99331959@hdfcbank27430010A0000005240125STQ200318122305804I0401085204939953033565802IN5923CENTRAL WAREHOUSING NEW6009New Delhi610611001662410525STQ200318122305804I0401080708993319596304e9fc";
                        objresponse = Eobj.GenerateB2cQRCode(QRCodeInfo);
                        IrnResponse objERes = new IrnResponse();
                        objERes.irn = ERes;
                        objERes.SignedQRCode = objresponse.QrCodeBase64;
                        objERes.SignedInvoice = objresponse.QrCodeJson;
                        objERes.SignedQRCode = objresponse.QrCodeJson;

                        objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                    }
                    else
                    {
                        var tn = "GST QR";
                        UpiQRCodeInfo idata = new UpiQRCodeInfo();
                        idata.ver = irnb2cobj.ver;
                        idata.mode = irnb2cobj.mode;
                        idata.mode = irnb2cobj.mode;
                        idata.tr = irnb2cobj.tr;
                        idata.tid = irnb2cobj.tid;
                        idata.tn = tn;
                        idata.pa = irnb2cobj.pa;
                        idata.pn = irnb2cobj.pn;
                        idata.mc = irnb2cobj.mc; ;
                        idata.am = irnb2cobj.TotInvVal;
                        idata.mam = irnb2cobj.TotInvVal;
                        idata.mid = irnb2cobj.mid;
                        idata.msid = irnb2cobj.msid;
                        idata.orgId = irnb2cobj.orgId;
                        idata.mtid = irnb2cobj.mtid;
                        idata.CESS = irnb2cobj.CESS;
                        idata.CGST = irnb2cobj.CGST;
                        idata.SGST = irnb2cobj.SGST;
                        idata.IGST = irnb2cobj.IGST;
                        idata.GSTIncentive = irnb2cobj.GSTIncentive;
                        idata.GSTPCT = irnb2cobj.GSTPCT;
                        idata.qrMedium = irnb2cobj.qrMedium;
                        idata.invoiceNo = irnb2cobj.DocNo;
                        idata.InvoiceDate = irnb2cobj.DocDt;
                        idata.InvoiceName = irnb2cobj.InvoiceName;
                        idata.QRexpire = irnb2cobj.DocDt;
                        idata.pinCode = irnb2cobj.pinCode;
                        idata.tier = irnb2cobj.tier;
                        idata.gstIn = irnb2cobj.gstIn;
                        B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                        objresponse = Eobj.GenerateB2cQRCode(idata);
                        IrnModel irnModelObj = new IrnModel();
                        irnModelObj.DocumentDate = irnb2cobj.DocDt;
                        irnModelObj.DocumentNo = irnb2cobj.DocNo;
                        irnModelObj.DocumentType = irnb2cobj.DocTyp;
                        irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                        string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                        IrnResponse objERes = new IrnResponse();
                        objERes.irn = ERes;
                        objERes.SignedQRCode = objresponse.QrCodeBase64;
                        objERes.SignedInvoice = objresponse.QrCodeJson;
                        objERes.SignedQRCode = objresponse.QrCodeJson;

                        objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                    }
                }

            }
            else
            {
                Einvoice Eobj = new Einvoice();
                objPpgRepo.GetIRNB2CForYard(InvoiceNo);
                Import.Models.Hdb_IrnB2CDetails irnb2cobj = new Import.Models.Hdb_IrnB2CDetails();                
                irnb2cobj = (Import.Models.Hdb_IrnB2CDetails)objPpgRepo.DBResponse.Data;
                if (irnb2cobj.mtid == "" || irnb2cobj.pa == "")
                {
                    IrnModel irnModelObj = new IrnModel();
                    irnModelObj.DocumentDate = irnb2cobj.DocDt;
                    irnModelObj.DocumentNo = irnb2cobj.DocNo;
                    irnModelObj.DocumentType = irnb2cobj.DocTyp;
                    irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                    string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    string QRCodeInfo = "000201010211021644038499331959060415522024099331959061661000309933195920825HDFC00000015010030812820026560010A0000005240138centralwarehousingco.99331959@hdfcbank27430010A0000005240125STQ200318122305804I0401085204939953033565802IN5923CENTRAL WAREHOUSING NEW6009New Delhi610611001662410525STQ200318122305804I0401080708993319596304e9fc";
                    objresponse = Eobj.GenerateB2cQRCode(QRCodeInfo);
                    IrnResponse objERes = new IrnResponse();
                    objERes.irn = ERes;
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                    objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                }
                else
                {
                    var tn = "GST QR";
                    UpiQRCodeInfo idata = new UpiQRCodeInfo();
                    idata.ver = irnb2cobj.ver;
                    idata.mode = irnb2cobj.mode;
                    idata.mode = irnb2cobj.mode;
                    idata.tr = irnb2cobj.tr;
                    idata.tid = irnb2cobj.tid;
                    idata.tn = tn;
                    idata.pa = irnb2cobj.pa;
                    idata.pn = irnb2cobj.pn;
                    idata.mc = irnb2cobj.mc; ;
                    idata.am = irnb2cobj.TotInvVal;
                    idata.mam = irnb2cobj.TotInvVal;
                    idata.mid = irnb2cobj.mid;
                    idata.msid = irnb2cobj.msid;
                    idata.orgId = irnb2cobj.orgId;
                    idata.mtid = irnb2cobj.mtid;
                    idata.CESS = irnb2cobj.CESS;
                    idata.CGST = irnb2cobj.CGST;
                    idata.SGST = irnb2cobj.SGST;
                    idata.IGST = irnb2cobj.IGST;
                    idata.GSTIncentive = irnb2cobj.GSTIncentive;
                    idata.GSTPCT = irnb2cobj.GSTPCT;
                    idata.qrMedium = irnb2cobj.qrMedium;
                    idata.invoiceNo = irnb2cobj.DocNo;
                    idata.InvoiceDate = irnb2cobj.DocDt;
                    idata.InvoiceName = irnb2cobj.InvoiceName;
                    idata.QRexpire = irnb2cobj.DocDt;
                    idata.pinCode = irnb2cobj.pinCode;
                    idata.tier = irnb2cobj.tier;
                    idata.gstIn = irnb2cobj.gstIn;
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode(idata);
                    IrnModel irnModelObj = new IrnModel();
                    irnModelObj.DocumentDate = irnb2cobj.DocDt;
                    irnModelObj.DocumentNo = irnb2cobj.DocNo;
                    irnModelObj.DocumentType = irnb2cobj.DocTyp;
                    irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                    string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                    IrnResponse objERes = new IrnResponse();
                    objERes.irn = ERes;
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                    objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                }

            }


            return Json(objPpgRepo.DBResponse);
        }



        public async Task<JsonResult> GetGenerateIRNForBulkCreditNote(String CrNoteNo, String SupplyType, String Type, String CRDR)
        {
            Einvoice Eobj;
            IrnResponse ERes = null;

            Hdb_CashManagementRepository objPpgRepo = new Hdb_CashManagementRepository();

            if (SupplyType == "B2C" && CRDR == "C")
            {
                Eobj = new Einvoice();
                IrnModel m1 = new IrnModel();

                QrCodeInfo q1 = new QrCodeInfo();
                //   QrCodeData qdt = new QrCodeData();
                objPpgRepo.GetIRNForB2CInvoiceForCreditDebitNote(CrNoteNo, Type, CRDR);
                var Output = (QrCodeData)objPpgRepo.DBResponse.Data;

                m1.DocumentNo = Output.DocNo;
                m1.DocumentDate = Output.DocDt;
                m1.SupplierGstNo = Output.SellerGstin;
                m1.DocumentType = Output.DocTyp;
                String IRN = Eobj.GenerateB2cIrn(m1);
                Output.Irn = IRN;
                Output.IrnDt = Output.DocDt;
                Output.iss = "NIC";
                q1.Data = Output;
                B2cQRCodeResponse QRCode = Eobj.GenerateB2cQRCode(q1);
                objPpgRepo.AddEditIRNB2CCreditDebitNote(IRN, QRCode, CrNoteNo, CRDR);

                //   return Json(objPpgRepo.DBResponse.Status);
                //   IrnResponse ERes = await Eobj.GenerateB2cIrn();
            }
            else if (SupplyType == "B2C" && CRDR == "D")
            {
                Eobj = new Einvoice();
                IrnModel m1 = new IrnModel();

                Import.Models.Hdb_IrnB2CDetails q1 = new Import.Models.Hdb_IrnB2CDetails();
                //   QrCodeData qdt = new QrCodeData();
                objPpgRepo.GetIRNForB2CInvoiceForCreditDebitNoteDN(CrNoteNo, Type, CRDR);
                var irnb2cobj = (Import.Models.Hdb_IrnB2CDetails)objPpgRepo.DBResponse.Data;

                if (irnb2cobj.mtid == "" || irnb2cobj.pa == "")
                {
                    IrnModel irnModelObj = new IrnModel();
                    irnModelObj.DocumentDate = irnb2cobj.DocDt;
                    irnModelObj.DocumentNo = irnb2cobj.DocNo;
                    irnModelObj.DocumentType = irnb2cobj.DocTyp;
                    irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                    string irn = Eobj.GenerateB2cIrn(irnModelObj);
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    string QRCodeInfo = "000201010211021644038499331959060415522024099331959061661000309933195920825HDFC00000015010030812820026560010A0000005240138centralwarehousingco.99331959@hdfcbank27430010A0000005240125STQ200318122305804I0401085204939953033565802IN5923CENTRAL WAREHOUSING NEW6009New Delhi610611001662410525STQ200318122305804I0401080708993319596304e9fc";
                    objresponse = Eobj.GenerateB2cQRCode(QRCodeInfo);
                    IrnResponse objERes = new IrnResponse();
                    objERes.irn = irn;
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                    objPpgRepo.AddEditIRNB2CCreditDebitNote(irn, objresponse, CrNoteNo, CRDR);
                }
                else
                {
                    var tn = "GST QR";
                    UpiQRCodeInfo idata = new UpiQRCodeInfo();
                    idata.ver = irnb2cobj.ver;
                    idata.mode = irnb2cobj.mode;
                    idata.mode = irnb2cobj.mode;
                    idata.tr = irnb2cobj.tr;
                    idata.tn = tn;
                    idata.pa = irnb2cobj.pa;
                    idata.pn = irnb2cobj.pn;
                    idata.mc = irnb2cobj.mc; ;
                    idata.am = irnb2cobj.TotInvVal;
                    idata.mam = irnb2cobj.TotInvVal;
                    idata.mid = irnb2cobj.mid;
                    idata.msid = irnb2cobj.msid;
                    idata.orgId = irnb2cobj.orgId;
                    idata.mtid = irnb2cobj.mtid;
                    idata.CESS = irnb2cobj.CESS;
                    idata.CGST = irnb2cobj.CGST;
                    idata.SGST = irnb2cobj.SGST;
                    idata.IGST = irnb2cobj.IGST;
                    idata.GSTIncentive = irnb2cobj.GSTIncentive;
                    idata.GSTPCT = irnb2cobj.GSTPCT;
                    idata.qrMedium = irnb2cobj.qrMedium;
                    idata.invoiceNo = irnb2cobj.DocNo;
                    idata.InvoiceDate = irnb2cobj.DocDt;
                    idata.InvoiceName = irnb2cobj.InvoiceName;
                    idata.QRexpire = irnb2cobj.DocDt;
                    idata.pinCode = irnb2cobj.pinCode;
                    idata.tier = irnb2cobj.tier;
                    idata.gstIn = irnb2cobj.gstIn;
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode(idata);
                    IrnModel irnModelObj = new IrnModel();
                    irnModelObj.DocumentDate = irnb2cobj.DocDt;
                    irnModelObj.DocumentNo = irnb2cobj.DocNo;
                    irnModelObj.DocumentType = irnb2cobj.DocTyp;
                    irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                    string IRN = Eobj.GenerateB2cIrn(irnModelObj);
                    IrnResponse objERes = new IrnResponse();
                    objERes.irn = IRN;
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                    objPpgRepo.AddEditIRNB2CCreditDebitNote(IRN, objresponse, CrNoteNo, CRDR);
                }
            }

            else
            {
                objPpgRepo.GetIRNForDebitCredit(CrNoteNo, Type, CRDR);
                var Output = (EinvoicePayload)objPpgRepo.DBResponse.Data;
                if (Output.BuyerDtls.Gstin != "" || Output.BuyerDtls.Gstin != null)
                {

                    objPpgRepo.GetHeaderIRNForCreditDebitNote();

                    HeaderParam Hp = (HeaderParam)objPpgRepo.DBResponse.Data;

                    string jsonEInvoice = JsonConvert.SerializeObject(Output);

                    string jsonEInvoiceHeader = JsonConvert.SerializeObject(Hp);
                    Eobj = new Einvoice(Hp, jsonEInvoice);
                    ERes = await Eobj.GenerateEinvoice();
                    if (ERes.Status == 1)
                    {
                        objPpgRepo.AddEditIRNResponsecForCreditDebitNote(ERes, CrNoteNo, CRDR);
                    }
                    else
                    {
                        objPpgRepo.DBResponse.Message = ERes.ErrorDetails.ErrorMessage;
                        objPpgRepo.DBResponse.Status = Convert.ToInt32(ERes.ErrorDetails.ErrorCode);
                    }
                }
                else
                {

                    if (SupplyType == "B2C" && CRDR == "C")
                    {
                        Eobj = new Einvoice();
                        IrnModel m1 = new IrnModel();

                        QrCodeInfo q1 = new QrCodeInfo();
                        //   QrCodeData qdt = new QrCodeData();
                        objPpgRepo.GetIRNForB2CInvoiceForCreditDebitNote(CrNoteNo, Type, CRDR);
                        var Output1 = (QrCodeData)objPpgRepo.DBResponse.Data;

                        m1.DocumentNo = Output1.DocNo;
                        m1.DocumentDate = Output1.DocDt;
                        m1.SupplierGstNo = Output1.SellerGstin;
                        m1.DocumentType = Output1.DocTyp;
                        String IRN = Eobj.GenerateB2cIrn(m1);
                        Output1.Irn = IRN;
                        Output1.IrnDt = Output1.DocDt;
                        Output1.iss = "NIC";
                        q1.Data = Output1;
                        B2cQRCodeResponse QRCode = Eobj.GenerateB2cQRCode(q1);
                        objPpgRepo.AddEditIRNB2CCreditDebitNote(IRN, QRCode, CrNoteNo, CRDR);

                        //   return Json(objPpgRepo.DBResponse.Status);
                        //   IrnResponse ERes = await Eobj.GenerateB2cIrn();
                    }
                    else if (SupplyType == "B2C" && CRDR == "D")
                    {
                        Eobj = new Einvoice();
                        IrnModel m1 = new IrnModel();

                        Import.Models.Hdb_IrnB2CDetails q1 = new Import.Models.Hdb_IrnB2CDetails();
                        //   QrCodeData qdt = new QrCodeData();
                        objPpgRepo.GetIRNForB2CInvoiceForCreditDebitNoteDN(CrNoteNo, Type, CRDR);
                        var irnb2cobj = (Import.Models.Hdb_IrnB2CDetails)objPpgRepo.DBResponse.Data;

                        if (irnb2cobj.mtid == "" || irnb2cobj.pa == "")
                        {
                            IrnModel irnModelObj = new IrnModel();
                            irnModelObj.DocumentDate = irnb2cobj.DocDt;
                            irnModelObj.DocumentNo = irnb2cobj.DocNo;
                            irnModelObj.DocumentType = irnb2cobj.DocTyp;
                            irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                            string irn = Eobj.GenerateB2cIrn(irnModelObj);
                            B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                            string QRCodeInfo = "000201010211021644038499331959060415522024099331959061661000309933195920825HDFC00000015010030812820026560010A0000005240138centralwarehousingco.99331959@hdfcbank27430010A0000005240125STQ200318122305804I0401085204939953033565802IN5923CENTRAL WAREHOUSING NEW6009New Delhi610611001662410525STQ200318122305804I0401080708993319596304e9fc";
                            objresponse = Eobj.GenerateB2cQRCode(QRCodeInfo);
                            IrnResponse objERes = new IrnResponse();
                            objERes.irn = irn;
                            objERes.SignedQRCode = objresponse.QrCodeBase64;
                            objERes.SignedInvoice = objresponse.QrCodeJson;
                            objERes.SignedQRCode = objresponse.QrCodeJson;

                            objPpgRepo.AddEditIRNB2CCreditDebitNote(irn, objresponse, CrNoteNo, CRDR);
                        }
                        else
                        {
                            var tn = "GST QR";
                            UpiQRCodeInfo idata = new UpiQRCodeInfo();
                            idata.ver = irnb2cobj.ver;
                            idata.mode = irnb2cobj.mode;
                            idata.mode = irnb2cobj.mode;
                            idata.tr = irnb2cobj.tr;
                            idata.tn = tn;
                            idata.pa = irnb2cobj.pa;
                            idata.pn = irnb2cobj.pn;
                            idata.mc = irnb2cobj.mc; ;
                            idata.am = irnb2cobj.TotInvVal;
                            idata.mam = irnb2cobj.TotInvVal;
                            idata.mid = irnb2cobj.mid;
                            idata.msid = irnb2cobj.msid;
                            idata.orgId = irnb2cobj.orgId;
                            idata.mtid = irnb2cobj.mtid;
                            idata.CESS = irnb2cobj.CESS;
                            idata.CGST = irnb2cobj.CGST;
                            idata.SGST = irnb2cobj.SGST;
                            idata.IGST = irnb2cobj.IGST;
                            idata.GSTIncentive = irnb2cobj.GSTIncentive;
                            idata.GSTPCT = irnb2cobj.GSTPCT;
                            idata.qrMedium = irnb2cobj.qrMedium;
                            idata.invoiceNo = irnb2cobj.DocNo;
                            idata.InvoiceDate = irnb2cobj.DocDt;
                            idata.InvoiceName = irnb2cobj.InvoiceName;
                            idata.QRexpire = irnb2cobj.DocDt;
                            idata.pinCode = irnb2cobj.pinCode;
                            idata.tier = irnb2cobj.tier;
                            idata.gstIn = irnb2cobj.gstIn;
                            B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                            objresponse = Eobj.GenerateB2cQRCode(idata);
                            IrnModel irnModelObj = new IrnModel();
                            irnModelObj.DocumentDate = irnb2cobj.DocDt;
                            irnModelObj.DocumentNo = irnb2cobj.DocNo;
                            irnModelObj.DocumentType = irnb2cobj.DocTyp;
                            irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                            string IRN = Eobj.GenerateB2cIrn(irnModelObj);
                            IrnResponse objERes = new IrnResponse();
                            objERes.irn = IRN;
                            objERes.SignedQRCode = objresponse.QrCodeBase64;
                            objERes.SignedInvoice = objresponse.QrCodeJson;
                            objERes.SignedQRCode = objresponse.QrCodeJson;

                            objPpgRepo.AddEditIRNB2CCreditDebitNote(IRN, objresponse, CrNoteNo, CRDR);
                        }
                    }
                }

            }
            // var Images = LoadImage(ERes.QRCodeImageBase64);

            return Json(objPpgRepo.DBResponse);
        }

        #endregion


        #region Party Wise SD Statement For External User

        public ActionResult PartyWiseSDStatementExternalUser()
        {
            Login objLogin = (Login)Session["LoginUser"];
            ViewBag.PartyId = objLogin.EximTraderId;
            ViewBag.PartyName = objLogin.Name;
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPartywiseSDStatementReportExternalUser(string FromDate, string ToDate, int PartyId)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");
            Login objLogin = (Login)Session["LoginUser"];
            PartyId = objLogin.EximTraderId;
            ObjRR.GetPartywiseSdStatement(PartyId, Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                HDB_PartyWiseSdStatement SDData = new HDB_PartyWiseSdStatement();
                SDData = (HDB_PartyWiseSdStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFtPartywiseSDStatementReport(SDData, FromDate, ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region Party Wise Unrelize For External User
        [HttpGet]
        public ActionResult PartyWiseUnrelizeForExternalUser()
        {
            Login objLogin = (Login)Session["LoginUser"];
            ViewBag.PartyId = objLogin.EximTraderId;
            ViewBag.PartyName = objLogin.Name;
            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult PartyWiseUnrealizedForExternalUser(Hdb_UnRealizedInvRpt ObjPV)
        {
            Hdb_ReportRepository objIR = new Hdb_ReportRepository();
            //string date= ObjPV.AsOnDate;
            Login objLogin = (Login)Session["LoginUser"];
            ObjPV.PartyId = objLogin.EximTraderId;
            ObjPV.Partyname = objLogin.Name;

            List<Hdb_PartyWiseUnrelized> SaveLstPartyWiseUrelized = new List<Hdb_PartyWiseUnrelized>();
            objIR.GetPartywiseUnrealized(ObjPV);
            if (objIR.DBResponse.Data != null)
            {
                List<Hdb_PartyWiseUnrelized> LstPartyWiseUrelized = new List<Hdb_PartyWiseUnrelized>();
                // List<OperationList> LstOperation = new List<OperationList>();
                LstPartyWiseUrelized = (List<Hdb_PartyWiseUnrelized>)objIR.DBResponse.Data;

                foreach (var item in LstPartyWiseUrelized)
                {
                    var ifExistPartyWiseUrelized = SaveLstPartyWiseUrelized.Where(x => x.PayeeId == item.PayeeId).FirstOrDefault();

                    if (ifExistPartyWiseUrelized == null)
                    {





                        Hdb_PartyWiseUnrelized savedPartyWiseUnrelize = new Hdb_PartyWiseUnrelized();
                        savedPartyWiseUnrelize.PartyName = item.PartyName;
                        savedPartyWiseUnrelize.Hdb_PartyWiseUnrelizeddetailsLst = new List<Hdb_PartyWiseUnrelizeddetails>();
                        savedPartyWiseUnrelize.InvoiceDate = item.InvoiceDate;
                        savedPartyWiseUnrelize.InvoiceNo = item.InvoiceNo;
                        savedPartyWiseUnrelize.InvoiceDate = item.InvoiceDate;
                        savedPartyWiseUnrelize.PayeeId = item.PayeeId;
                        // savedPartyWiseUnrelize.PartyName = item.PartyName;

                        // SavedAuctionNoticeDetails savedAuctionNoticeDetails = new SavedAuctionNoticeDetails();

                        //savedAuctionNoticeDetails.UOENo = item.BOENo;
                        //savedAuctionNoticeDetails.CommodityName = item.CommodityName;
                        //savedAuctionNoticeDetails.BOLDate = item.BLDate;
                        //savedAuctionNoticeDetails.ShipBillNo = item.ShippingBillNo;
                        //savedAuctionNoticeDetails.ShipBillDate = item.ShipBillDate;
                        //savedAuctionNoticeDetails.ContainerNo = item.ContainerNo;
                        //savedAuctionNotice.SavedAuctionNoticeDetailsList.Add(savedAuctionNoticeDetails);

                        Hdb_PartyWiseUnrelizeddetails savedHdb_PartyWiseUnrelizeddetails = new Hdb_PartyWiseUnrelizeddetails();
                        savedHdb_PartyWiseUnrelizeddetails.Amount = item.Amount;
                        savedHdb_PartyWiseUnrelizeddetails.InvoiceNo = item.InvoiceNo;
                        savedHdb_PartyWiseUnrelizeddetails.InvoiceDate = item.InvoiceDate;
                        savedHdb_PartyWiseUnrelizeddetails.Amount = item.Amount;
                        savedHdb_PartyWiseUnrelizeddetails.PayeeId = item.PayeeId;
                        SaveLstPartyWiseUrelized.Add(savedPartyWiseUnrelize);
                        savedPartyWiseUnrelize.Hdb_PartyWiseUnrelizeddetailsLst.Add(savedHdb_PartyWiseUnrelizeddetails);
                    }
                    else
                    {
                        Hdb_PartyWiseUnrelizeddetails savedPartyWiseUnrelizeDetails = new Hdb_PartyWiseUnrelizeddetails();
                        // savedPartyWiseUnrelizeDetails.PartyName = item.PartyName;
                        savedPartyWiseUnrelizeDetails.InvoiceDate = item.InvoiceDate;
                        savedPartyWiseUnrelizeDetails.InvoiceNo = item.InvoiceNo;
                        savedPartyWiseUnrelizeDetails.Amount = item.Amount;

                        foreach (var itemSavedAuctionNoticeList in SaveLstPartyWiseUrelized.Where(x => x.PayeeId == item.PayeeId).ToList())
                        {
                            itemSavedAuctionNoticeList.Hdb_PartyWiseUnrelizeddetailsLst.Add(savedPartyWiseUnrelizeDetails);
                        }

                    }
                }

                // LstOperation = Newtonsoft.Json.JsonConvert.DeserializeObject<List<OperationList>>(Operation);
                string Path = "";

                if ((ObjPV.FromDate != null) && (ObjPV.ToDate != null))
                    Path = GeneratePDFForPartyWiseUnrealized(SaveLstPartyWiseUrelized, Convert.ToDateTime(ObjPV.AsOnDate).ToString("dd/MM/yyyy"), Convert.ToDateTime(ObjPV.FromDate).ToString("dd/MM/yyyy"), Convert.ToDateTime(ObjPV.ToDate).ToString("dd/MM/yyyy"));
                else
                    Path = GeneratePDFForPartyWiseUnrealized(SaveLstPartyWiseUrelized, Convert.ToDateTime(ObjPV.AsOnDate).ToString("dd/MM/yyyy"), "", "");


                return Json(new { Status = 1, Message = Path });
            }
            else if (objIR.DBResponse.Status == 2)
            {
                return Json(new { Status = 2, Message = objIR.DBResponse.Message });
            }
            else
                return Json(new { Status = -1, Message = "Error" });
        }
        #endregion
        
        #region Bond Form A Report

        [HttpGet]
        public ActionResult BondFormAReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetBondFormAReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetBondFormAReport(date1, date2);

                excelName = "BondFormAReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BondFormAReport.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Bond Form B Report

        [HttpGet]
        public ActionResult BondFormBReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetBondFormBReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetBondFormBReport(date1, date2);

                excelName = "BondFormBReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BondFormAReport.xls");
                }
            }
            // return null;
        }

        #endregion

        #region DailyPdaActivityReport

        
        [HttpGet]
        public ActionResult DailyPdaActivityReport()
        {

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyPdaActivityReport(DailyPdaActivityReport ObjDailyPdaActivityReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<DailyPdaActivityReport> LstDailyPdaActivityReport = new List<DailyPdaActivityReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DailyPdaActivity(ObjDailyPdaActivityReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyPdaActivityReport = (List<DailyPdaActivityReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyPdaActivityReportPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                var Pages = new string[1];
                var FileName = "DailySdActivityReport.pdf";
                Pages[0] = fc["Page"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailySdActivityReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailySdActivityReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region E04
        public ActionResult E04DetailsReport()
        {
            return PartialView();
        }

        [HttpGet]
        public ActionResult GetE04List()
        {
            Hdb_ReportRepository ObjER = new Hdb_ReportRepository();
            List<Hdb_E04Report> LstE04 = new List<Hdb_E04Report>();
            ObjER.ListofE04Report(0);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Hdb_E04Report>)ObjER.DBResponse.Data;
            }
            return PartialView("ListOfE04DetailsReport", LstE04);
        }
        [HttpGet]
        public JsonResult LoadMoreE04List(int Page)
        {
            Hdb_ReportRepository ObjER = new Hdb_ReportRepository();
            var LstE04 = new List<Hdb_E04Report>();
            ObjER.ListofE04Report(Page);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Hdb_E04Report>)ObjER.DBResponse.Data;
            }
            return Json(LstE04, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult ViewE04DetailsReport(int ID)
        {
            Hdb_E04Report ObjE04 = new Hdb_E04Report();
            Hdb_ReportRepository ObjER = new Hdb_ReportRepository();
            ObjER.GetE04DetailById(ID);
            if (ObjER.DBResponse.Data != null)
            {
                ObjE04 = (Hdb_E04Report)ObjER.DBResponse.Data;
            }
            return PartialView(ObjE04);
        }


        [HttpGet]
        public JsonResult GetE04Search(string SB_No = "", string SB_Date = "", string Exp_Name = "")
        {
            Hdb_ReportRepository ObjER = new Hdb_ReportRepository();
            List<Hdb_E04Report> LstE04 = new List<Hdb_E04Report>();
            ObjER.GetE04DetailSearch(SB_No, SB_Date, Exp_Name);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Hdb_E04Report>)ObjER.DBResponse.Data;
            }
            //return PartialView("ListOfE04DetailsReport", LstE04);
            return Json(ObjER.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion

        #region Work Slip 

        public ActionResult WorkSlip()
        {
          
           
            return View();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetWorkSlipList(HDB_WorkSlip vm)
        {
            try
            {


                var ObjRR = new Hdb_ReportRepository();
                
                    ObjRR.GetWorkSlipList(vm);
               

                string excelName = "WorkSlipReport" + "_" + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "WorkSlip" + "_" +".xlsx");
                }
            }
        }
        #endregion
        #region Work Slip detail

        public ActionResult WorkSlipdetail()
        {


            return View();
        }


        /* [HttpPost]
         [ValidateAntiForgeryToken]
         public FileResult GetWorkSlipdetailList(HDB_WorkSlipp vm)
         {
             try
             {


                 var ObjRR = new Hdb_ReportRepository();

                 ObjRR.GetWorkSlipdetailList(vm);


                 string excelName = "WorkSlipReport" + "_" + ".xlsx";

                 if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                     return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                 else
                 {
                     string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                     var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                     using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                     {
                         exl.AddCell("A1", "No data found");
                         exl.Save();
                         return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                     }
                 }
             }
             catch
             {
                 string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                 var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                 using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                 {
                     exl.AddCell("A1", "No data found");
                     exl.Save();
                     return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "WorkSlip" + "_" + ".xlsx");
                 }
             }
         }*/
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetWorkSlipdetailList(HDB_WorkSlipp vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=WorkSlipReport.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            Hdb_ReportRepository obj = new Hdb_ReportRepository();
            obj.GetWorkSlipdetailList(vm.PeriodFrom, vm.PeriodTo, vm.WorkSlipType);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            //  Response.Write(ImportReportExcelPDF(ds),vm.PeriodFrom,vm.PeriodTo);
            Response.Write(WorkSlipReportExcelPDF(ds, vm.PeriodFrom, vm.PeriodTo, vm.WorkSlipType));
            Response.End();


            return Content("xc");
        }



        private string WorkSlipReportExcelPDF(DataSet ds, string PeriodFrom, string PeriodTo, string WorkSlipType)
        {

            List<dynamic> lstPartyDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstPayeeDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            //List<dynamic> lstSDTransaction = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            var FileName = "WorkSlip Report.pdf";
            string html = "<html><body>";
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 7pt;'>CFS, Kukatpally, Hyderabad</label><h5 style='font-weight: bold;'>Work-slip Report</h5></td></tr>";
            html += "<tr><td colspan='12' valign='top' align='center'><h5 style='font-weight: bold;'> From" + PeriodFrom + " TO " + PeriodTo + "</h5></td></tr>";
            html += "<tr><td colspan='12' valign='top' align='center'><h5 style='font-weight: bold;'>Type of Workslip:" + WorkSlipType + "</h5></td></tr>";
            html += "<tr><td colspan='12' valign='top' align='center'><h5 style='font-weight: bold;'>Workslip No:" + lstPartyDetails[0].WorkslipNo + "</h5></td></tr>";
            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='15' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";
            html += "<thead>";





            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Serialno</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Date of Operation / Date of Work Order</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Invoice / Bill of Supply No. & Date</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Container No. & Size</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Cargo weight</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>CBM</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Port Name</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>H&T Clause</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Description of clause</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Amount as per Tariff against H&T clause</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>CWC margin in amount as per H&T tariff</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>HTC margin in amount as per H&T tariff</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>H&T rate per qtl</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>CR No.& Date</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; padding:20px;'>Amount Realized</th>";
            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";

            // var lstPartyDetail=null;
            int K = 1;


            for (int i = 0; i < lstPartyDetails.Count; i++)
            {
                var rp = 0;
                var filteredList = lstPayeeDetails.Where(x => x.invoiceid == lstPartyDetails[i].invoiceid).ToList();
                if (filteredList.Count > 1)
                {
                    rp = filteredList.Count;                    
                }

                //run koro
                html += "<tr>";
                html += "<td rowspan=" + "'" + rp + "'" + " style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + K + "</td>";
                html += "<td rowspan=" + "'" + rp + "'" + " style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].Invoicedate + "</td>";
                html += "<td rowspan=" + "'" + rp + "'" + " style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].invoiceno + "</td>";
                html += "<td rowspan=" + "'" + rp + "'" + " style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].containerno + "</td>";
                html += "<td rowspan=" + "'" + rp + "'" + " style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].GrossWeight + "</td>";
                html += "<td rowspan=" + "'" + rp + "'" + " style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].TotalArea + "</td>";
                html += "<td rowspan=" + "'" + rp + "'" + " style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].PortName + "</td>";
                var filteredChildList = lstPayeeDetails.Where(x => x.invoiceid == lstPartyDetails[i].invoiceid).ToList();
                K++;
                for (int j = 0; j < filteredChildList.Count; j++)
                {
                    if (j == 0)
                    {
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].Clause + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].ChargeName + "</td>";
                      //  html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].GrossWeight + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].Amount + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].CWCMargin + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].HTCMargin + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].HTCContractorRate + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].crno + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].CRAmount + "</td>";
                        html += "</tr>";
                    }
                    else
                    {
                        html += "<tr>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].Clause + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].ChargeName + "</td>";
                      //  html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].GrossWeight + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].Amount + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].CWCMargin + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].HTCMargin + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].HTCContractorRate + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].crno + "</td>";
                        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + filteredChildList[j].CRAmount + "</td>";
                        html += "</tr>";
                    }
                  
                }
                //html += "</tr>";
                //else if (filteredList.Count == 1 && filteredList.Count <2)
                //{
                //    html += "<td  style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + i + "</td>";
                //    html += "<td  style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].Invoicedate + "</td>";
                //    html += "<td  style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].invoiceno + "</td>";
                //    html += "<td  style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPartyDetails[i].containerno + "</td>";
                //    for (int j = 0; j < lstPartyDetails.Count; j++)
                //    {
                //        if (lstPartyDetails[i].invoiceid == lstPayeeDetails[j].invoiceid)
                //        {
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].Clause + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].ChargeName + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].GrossWeight + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].Amount + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].CWCMargin + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].HTCMargin + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].HTCContractorRate + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].crno + "</td>";
                //            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstPayeeDetails[j].CRAmount + "</td>";
                //            html += "<tr>";
                //        }
                //    }
                //}


            }



           
            //html += "</tbody>";
            //html += "</table>";//</td></tr>

            html += "</tbody></table>";
            html += "</body></html>";
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }
        #endregion



        #region Work Slip Bond detail

        public ActionResult WorkSlipBonddetail()
        {


            return View();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetWorkSlipBonddetailList(HDB_WorkSlipp vm)
        {
            try
            {


                var ObjRR = new Hdb_ReportRepository();

                ObjRR.GetWorkSlipBonddetailList(vm);


                string excelName = "WorkSlipBondReport" + "_" + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "WorkSlipBond" + "_" + ".xlsx");
                }
            }
        }
        #endregion
        #region Work Slip Report New

        [HttpGet]
        public ActionResult WorkSlipReportNew()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult WorkSlipReportNew(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.WorkSlipReportNew(date1, date2);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "WorkSlipReport.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "WorkSlipReport.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "WorkSlipReport.xlsx");
                }
            }
            // return null;
        }

        #endregion
        #region BI-Monthly Report 
        [HttpGet]
        public ActionResult BIMonthlyReport()
        {
            List<SelectListItem> lstYear = new List<SelectListItem>();
            int FrmYr = DateTime.Today.Year - 10;
            int Toyr = DateTime.Today.Year + 20;
            for (int i = FrmYr; i <= Toyr; i++)
            {
                lstYear.Add(new SelectListItem { Text = i.ToString(), Value = i.ToString() });
            }
            ViewBag.lstyear = lstYear;
            HDBMasterRepository ObjGR = new HDBMasterRepository();
            ObjGR.GetAllGodown();
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
     //   [ValidateAntiForgeryToken]
        public FileResult GetBIMonthlyReport(FormCollection fc)
        {
            try
            {
                //   var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                //    var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var Month = Convert.ToInt32(fc["Month"].ToString());
                var Year = Convert.ToInt32(fc["Year"].ToString());
                var GodownId = Convert.ToInt32(fc["GodownId"].ToString());
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetBIMonthlyReport(Month,Year,GodownId);

                excelName = "BIMonthlyReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BIMonthlyReport.xls");
                }
            }
            // return null;
        }
        #endregion
        #region  LoadContRequestDTR
        [HttpGet]
        public ActionResult LoadContRequestDTR()
        {
            
            return PartialView();
        }

        [HttpPost]
        //   [ValidateAntiForgeryToken]
        public FileResult GetLoadContDtrReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.GetLoadContReqDtrReport(date1, date2);

                excelName = "LoadContReqDTRReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BondFormAReport.xls");
                }
            }
            // return null;
        }
        #endregion
        #region Stuffing Acknowledgement Search       

        [HttpGet]
        public ActionResult StfAckSearch()
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();

            ObjGR.GetAllContainerNoForContstufserach("", 0);

            if (ObjGR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstStuffing = Jobject["LstStuffing"];
                ViewBag.StateCont = Jobject["State"];
            }
            else
            {
                ViewBag.LstStuffing = null;
            }


            ObjGR.GetAllShippingBillNoForContstufserach("", 0);
            if (ObjGR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstStuff = Jobject["LstStuff"];
                ViewBag.StateShipbill = Jobject["State"];
            }
            else
            {
                ViewBag.LstStuff = null;
            }

            return PartialView();
        }
        [HttpGet]
        public JsonResult SearchContainerNo(string cont)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetAllContainerNoForContstufserach(cont, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult SearchShipbill(string shipbill)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetAllShippingBillNoForContstufserach(shipbill, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult LoadContainerLists(string cont, int Page)
        {
           Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetAllContainerNoForContstufserach(cont, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }


        [HttpGet]
        public JsonResult LoadShipbillLists(string shipbill, int Page)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetAllShippingBillNoForContstufserach(shipbill, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getcontstuffingacksearch(string container, string shipbill, string cfscode)
        {
           Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_ContStufAckRes> Lststufack = new List<Hdb_ContStufAckRes>();
            ObjGR.GetStufAckResult(container, shipbill, cfscode);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Hdb_ContStufAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion
        #region ASR Acknowledgement Search       

        [HttpGet]
        public ActionResult StuffingASRAckSearch()
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();

            //ObjGR.GetAllShippingBillNoForASRACK("", 0);
            //if (ObjGR.DBResponse.Data != null)
            //{
            //    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
            //    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
            //    ViewBag.LstStuff = Jobject["LstStuff"];
            //    ViewBag.StateShipbill = Jobject["State"];
            //}
            //else
            //{
            //    ViewBag.LstStuff = null;
            //}

            return PartialView();
        }

        [HttpGet]
        public JsonResult ASRSearchContainerNo(string cont)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetCotainerNoForASRAck(cont, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult ASRLoadContainerLists(string cont, int Page)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetCotainerNoForASRAck(cont, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult ASRSearchShipbill(string shipbill)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetAllShippingBillNoForASRACK(shipbill, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult ASRLoadShipbillLists(string shipbill, int Page)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            ObjGR.GetAllShippingBillNoForASRACK(shipbill, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult GetASRACKStatusSearch(string shipbill, string CFSCode, string container)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_ContStufAckRes> Lststufack = new List<Hdb_ContStufAckRes>();
            ObjGR.GetASRAckResult(shipbill, CFSCode, container);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Hdb_ContStufAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion

        #region Stuffing Loaded Search
        [HttpGet]
        public ActionResult StfLoadSearch()
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();

            /* ObjGR.GetAllContainerNoForContstufserach("", 0);

             if (ObjGR.DBResponse.Data != null)
             {
                 var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                 var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                 ViewBag.LstStuffing = Jobject["LstStuffing"];
                 ViewBag.StateCont = Jobject["State"];
             }
             else
             {
                 ViewBag.LstStuffing = null;
             }


             ObjGR.GetAllShippingBillNoForContstufserach("", 0);
             if (ObjGR.DBResponse.Data != null)
             {
                 var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                 var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                 ViewBag.LstStuff = Jobject["LstStuff"];
                 ViewBag.StateShipbill = Jobject["State"];
             }
             else
             {
                 ViewBag.LstStuff = null;
             }*/

            return PartialView();
        }
        /* [HttpGet]
         public JsonResult SearchContainerNo(string cont)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllContainerNoForContstufserach(cont, 0);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }
         [HttpGet]
         public JsonResult SearchShipbill(string shipbill)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllShippingBillNoForContstufserach(shipbill, 0);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }
         [HttpGet]
         public JsonResult LoadContainerLists(string cont, int Page)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllContainerNoForContstufserach(cont, Page);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }


         [HttpGet]
         public JsonResult LoadShipbillLists(string shipbill, int Page)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllShippingBillNoForContstufserach(shipbill, Page);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }*/
        [HttpGet]
        public JsonResult getloadstufsearch(string jobno)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Kol_loadstuf> Lststufack = new List<Kol_loadstuf>();
            ObjGR.GetStufloadResult(jobno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstuf>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufasrsearch(string jobasrno)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Kol_loadstufasr> Lststufack = new List<Kol_loadstufasr>();
            ObjGR.GetStufloadasrResult(jobasrno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstufasr>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufdpsearch(string jobdpno)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Kol_loadstufdp> Lststufack = new List<Kol_loadstufdp>();
            ObjGR.GetStufloaddpResult(jobdpno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstufdp>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufdtsearch(string jobdtno)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Kol_loadstufdt> Lststufack = new List<Kol_loadstufdt>();
            ObjGR.GetStufloaddpResult(jobdtno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstufdt>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region DP Acknowledment Serach  

        [HttpGet]
        public ActionResult DPAckSearchReport()
        {
            return PartialView();
        }

        public JsonResult GetGatePassNoDPForAckSearch(string GatePassNo = "", int Page = 0)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_GatePassDPAckSearch> lstDPGPAck = new List<Hdb_GatePassDPAckSearch>();
            ObjGR.GetGatePassNoDPForAckSearch(GatePassNo, Page);
            //if (ObjGR.DBResponse.Data != null)
            //{
            //    lstDTGPAck = (List<Hdb_GatePassDTAckSearch>)ObjGR.DBResponse.Data;
            //}
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetContainerNoForDPAckSearch(string ContainerNo = "", int Page = 0)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_ContDPAckSearch> lstDPContACK = new List<Hdb_ContDPAckSearch>();
            ObjGR.GetContainerNoForDPAckSearch(ContainerNo, Page);
            //if (ObjGR.DBResponse.Data != null)
            //{
            //    lstDTContACK = (List<Hdb_ContDTAckSearch>)ObjGR.DBResponse.Data;
            //}
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetDPAckSearch(int GatePassId, string ContainerNo,int GatePassdtlId=0)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_DPAckRes> lstDPAckRes = new List<Hdb_DPAckRes>();
            ObjGR.GetDPAckSearch(GatePassId, ContainerNo, GatePassdtlId);

            if (ObjGR.DBResponse.Data != null)
            {
                lstDPAckRes = (List<Hdb_DPAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region DT Acknowledment Serach  

        [HttpGet]
        public ActionResult DTAckSearch()
        {
            return PartialView();
        }

        public JsonResult GetGatePassNoDTForAckSearch(string GatePassNo="", int Page=0)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_GatePassDTAckSearch> lstDTGPAck = new List<Hdb_GatePassDTAckSearch>();
            ObjGR.GetGatePassNoDTForAckSearch(GatePassNo, Page);
           
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetContainerNoForDTAckSearch(string ContainerNo="", int Page=0)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_ContDTAckSearch> lstDTContACK = new List<Hdb_ContDTAckSearch>();
            ObjGR.GetContainerNoForDTAckSearch(ContainerNo, Page);
           
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetDTAckSearch(int GatePassId, string ContainerNo)
        {
            Hdb_ReportRepository ObjGR = new Hdb_ReportRepository();
            List<Hdb_DTAckRes> lstDTAckRes = new List<Hdb_DTAckRes>();
            ObjGR.GetDTAckSearch(GatePassId, ContainerNo);

            if (ObjGR.DBResponse.Data != null)
            {
                lstDTAckRes = (List<Hdb_DTAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region  Bond STORAGE COLLECTION REPORT 
        [HttpGet]
        public ActionResult BondStorageCollectionReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult BondStorageCollectionReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new Hdb_ReportRepository();
                ObjRR.BondStorageCollectionReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = BondStorageCollectionReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string BondStorageCollectionReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "BondStorageCollectionReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["EmailAddress"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Bond Storage Collection REGISTER</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                decimal StoAmount = 0;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt; text-align: center;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Storage Amount</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[0].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Date"].ToString() + " </td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["Amount"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    StoAmount = StoAmount + Convert.ToDecimal(item["Amount"]);
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + StoAmount + "</th></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion

        #region  Export Carting Register Report in Excel

        public ActionResult ExportCartingReportExcel()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetExportCartingReportExcel(HDB_ExportReportExcel vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=ExportCartingReportExcel.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            Hdb_ReportRepository obj = new Hdb_ReportRepository();
            obj.GetExportCartingReportExcel(vm.PeriodFrom, vm.PeriodTo);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(ExportCartingReportExcelPDF(ds, vm.PeriodFrom, vm.PeriodTo));
            Response.End();


            return Content("xc");
        }


        private string ExportCartingReportExcelPDF(DataSet ds, string FromDate, string ToDate)
        {
            int SLNo = 0;

            List<dynamic> objCompnay = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstCartingDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstCartingTotal = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);

            var FileName = "ExportCartingReportExcel.pdf";
            string html = "<html><body>";
            
            //Carting Register												
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 7pt;'>"+ objCompnay[0].CompanyAddress + "</label><H5 style='font-size: 14pt; font-weight:bold;'>CARTING REGISTER</H5></td></tr>";
            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='15' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";
            html += "<thead>";
            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Sl no.</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Date</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Carting No</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SHIPPING Bill Number</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Date</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Name Of The Exporter</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Name Of The Cha</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Cargo</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Type Of Package</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>No Of Packages Received</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Cargo Weight</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Fob</th>";
            //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>L</th>";
            //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>B</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>GdnNo</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>StackNo</th>";
            html += "<th style='border-top: 1px solid #000;'>Chargable Area</th>";
            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";
            int i = 1;
            lstCartingDetails.ToList().ForEach(item =>
            {
                try
                {
                    html += "<tr>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + i + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.Date + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.CartingNo + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ShippingBillNo + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ShippingBillDate + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.NameOfTheExporter + "</td>";                    
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.NameOfTheCha + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.CargoDescription + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.PackageType + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.PkgReceived + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.CargoWeight + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.Fob + "</td>";
                    //html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.L + "</td>";
                    //html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.B + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.GdnNo + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.StackNo + "</td>";
                    html += "<td style='border-top: 1px solid #000; text-align: center;'>" + item.ChargableArea + "</td>";
                    html += "</tr>";

                    i++;
                }
                catch (Exception Ex)
                {

                }
            });
            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>Total</td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>"+ lstCartingTotal[0].TotalPKG + "</td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + lstCartingTotal[0].TotalWeight + "</td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + lstCartingTotal[0].TotalFOB + "</td>";
            //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.L + "</td>";
            //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.B + "</td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></td>";
            html += "<th style='border-top: 1px solid #000; text-align: center;'></td>";
            html += "</tr>";
            html += "</tbody>";
            html += "</table></td></tr>";
            html += "</tbody></table>";


            html += "</body></html>";

            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }

        #endregion
        #region Stuffing Report

        public ActionResult StuffingReport()
        {
            return View();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult StuffingReportExcel(Hdb_stufrpt vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=StuffingReport.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            Hdb_ReportRepository obj = new Hdb_ReportRepository();
            obj.StuffingReportExcel(vm.PeriodFrom, vm.PeriodTo);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(StuffingReportExcelPDF(ds, vm.PeriodFrom, vm.PeriodTo));
            Response.End();


            return Content("xc");
        }



        private string StuffingReportExcelPDF(DataSet ds, string FromDate, string ToDate)
        {

            List<dynamic> lstGateDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstStuffingDetailSummary = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            var i = 1;
            var FileName = "StuffingReport.pdf";
            string html = "<html><body>";



            //Report of Empty Container Gate Out
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 13px; margin-bottom:10px;'>Container Freight Station, Kukatpally</label><br/><label style='font-size: 13px; margin-bottom:10px;'>IDPL Road, Hyderabad - 37</label><br/> <label style='font-size: 13px; margin-bottom:10px;'>Email - cfs.kukatpally@cewacor.nic.in</label><br/><label style='font-size: 7pt;'></label><h5 style='font-weight: bold;'>Stuffing Report</h5></td></tr>";
            html += "<tr><td colspan='12' align='center'>From " + FromDate + " to " + ToDate + "</td></tr>";
            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='15' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";

            html += "<thead>";

            //   html += "<tr><th colspan='12' style='border-top: 1px solid #000;'>Stuffing Report</th></tr>";
            //   html += "<tr><th colspan='12' style='border-top: 1px solid #000;'>Report of Empty Container Gate Out</th></tr>";
            //   html += "<tr><td colspan='12' align='center' style='border-top: 1px solid #000;'>Empty Container Invoice</td></tr>";

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SL NO.</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>STUFFING DATE</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CARTING NO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SB NO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SB DATE</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>EXPORTER</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CHA</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CARGO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>PACKAGE TYPE</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>NO OF PACKAGES</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>WEIGHT</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>FOB</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>GODOWN NO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>STACK NO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CHARGEABLE AREA</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>FORWARDER/CONSOLIDATOR</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TYPE OF CBT</th>";
            html += "<th style='border-top: 1px solid #000;'>CONTAINER/CBT NO</th>";
            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";
            int totalweight = 0;
            int totalfob = 0;

            lstStuffingDetailSummary.ToList().ForEach(itemSum =>
            {
                lstGateDetails.ToList().ForEach(item =>
                {
                    try
                    {
                        if (item.ContainerNo== itemSum.ContainerNo)
                        {
                            html += "<tr>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + i + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.registerdate + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.cartingno + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.sbno + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.date + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.exporter + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.cha + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.cargo + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.packagetype + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.noofpackages + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.weight + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.fob + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.godownno + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.stackno + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.area + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.Forwarder + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.TypeOfCBT + "</td>";
                            html += "<td style='border-top: 1px solid #000; text-align: center;'>" + item.ContainerNo + "</td>";
                            html += "</tr>";
                            log.Info("item.weight:" + item.weight);
                            totalweight = totalweight + Convert.ToInt32(item.weight);
                            totalfob = totalfob + Convert.ToInt32(item.fob);
                            log.Info("item.weight:" + item.fob);
                            i++;
                        }           


                    }
                    catch (Exception Ex)
                    {

                    }
                });
                html += "<tr>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>Total</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + itemSum.TotalNoOfPackages + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + itemSum.TotalWeight + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + itemSum.ToatalFOB + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
                html += "<th style='border-top: 1px solid #000; text-align: center;'></th>";
                html += "</tr>";
            });
            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
            html += "<th colspan='8' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>GRAND TOTAL :</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + lstGateDetails.Sum(item => item.noofpackages) + "</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + totalweight + "</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + totalfob + "</th>";
            html += "<th colspan='6' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'></th>";
            html += "</tr>";

            html += "</tbody>";
            html += "</table></td></tr>";
            html += "</tbody></table>";



            html += "</body></html>";
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }
        #endregion

        #region   Tally Response Report
        public ActionResult TallyResponseReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult TallyResponseReport(TallyResponse vm)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            List<TallyResponse> lstData = new List<TallyResponse>();

            ObjRR.GetTallyResponse(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<TallyResponse>)ObjRR.DBResponse.Data;
                Path = GenerateTallyResponseReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateTallyResponseReport(List<TallyResponse> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                WFLD_ReportRepository ObjRR = new WFLD_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "TallyResponseReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top' width='10%'><img align='right' src='IMGSRC'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>Container Freight Station, Kukatpally<br/>IDPL Road, Hyderabad <br/> Pin: 500037</span><br/><label style='font-size: 7pt;'>Email - cfs.kukatpally@cewacor.nic.in</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Tally Response Report</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td width='10%' valign='top'><img align='right' src='ISO_IMG'/></td>");
                Pages.Append("<td width='10%' valign='top'><img align='right' src='SWACHBHARAT'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>Bill of Supply</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>Tax Invoice</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Debit Note</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>Credit Note</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>Receipt Voucher</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {

                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Date + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Bill + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Invoice + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Dr + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cr + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Receipt + "</td>");
                    Pages.Append("</tr>");
                    i++;

                });



                // Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='font-size:10pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td><br/></td></tr>");
                Pages.Append("<tr><th colspan='12' style='text-align:left;'>* Contact with Helpdesk (CWC) team for resolution.</th></tr>");
                Pages.Append("</thead></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                Pages.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));



                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 20f, 30f, 20f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region Accrued Income Statement Import In Excel
        public ActionResult AccruedIncomeStatementImportInExcel()
        {
            HDBMasterRepository ObjYR = new HDBMasterRepository();
            ObjYR.GetAllGodown();
            if (ObjYR.DBResponse.Data != null)
            {
                ViewBag.ListOfGodown = (List<CwcExim.Areas.Master.Models.HDBGodown>)ObjYR.DBResponse.Data;
            }
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetImpCargoInExcel(string AsOnDate, string GodownId, string GodownName)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetImportCargoInExcel(AsOnDate, GodownId, GodownName);
                string Path = "";
              string  excelName = "AccruredIncomeStatementImport.xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            else
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "AccruredIncomeStatement.xls");
                }
            }
        }

        #endregion

        #region Partywise Ledger
        public ActionResult PartyWiseLedger()
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetAllPartyForSDDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }




        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetLedgerDetReportt(string FromDate, string ToDate, int PartyId)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetLedgerDetStatement(PartyId, Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                HdbSDDetailsStatement SDData = new HdbSDDetailsStatement();
                SDData = (HdbSDDetailsStatement)ObjRR.DBResponse.Data;
                if (SDData.SDBalance == 0)
                {
                    Path = GeneratePDFLedgerDetReportt(SDData, FromDate, ToDate);
                }
                else
                {
                    Path = GeneratePDFLedgerSDDetReport(SDData, FromDate, ToDate);
                }
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }
        [NonAction]
        public string GeneratePDFLedgerDetReportt(HdbSDDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "SdReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally</span><br/><label style='font-size: 14px; font-weight:bold;'>SD STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Realised Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;'>Transaction Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                int counter = 1;
                decimal utilisationamt = 0;
                decimal ReceiptAmt = 0;
                decimal balance = 0;
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.RealisedInvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    Pages.Append("</tr>");
                    if (counter == 1)
                    {
                        //   Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        utilisationamt = Convert.ToDecimal(item.ReceiptAmt);
                    }
                    if (counter > 1)
                    {
                        if (item.ReceiptNo != "")
                        {
                            if (item.TranAmt == 0)
                            {
                                if (item.CrAdjust == 0)
                                {
                                    utilisationamt = utilisationamt + Convert.ToDecimal(item.ReceiptAmt);
                                    balance = balance - Convert.ToDecimal(item.TranAmt);
                                }
                            }

                            else
                            {
                                utilisationamt = utilisationamt + Convert.ToDecimal(item.TranAmt);
                                balance = balance - Convert.ToDecimal(item.TranAmt);
                            }
                        }
                        utilisationamt = utilisationamt - Convert.ToDecimal(item.TranAmt);
                        balance = balance + Convert.ToDecimal(item.TranAmt);

                    }
                    counter++;
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='border-right:1px solid #000;width:8%;text-align:right;'>Invoice Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + /*SDData.UtilizationAmount*/utilisationamt + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        [NonAction]
        public string GeneratePDFLedgerSDDetReport(HdbSDDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "SdReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station, Kukatpally</span><br/><label style='font-size: 14px; font-weight:bold;'>SD STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Realised Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;'>Transaction Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                int counter = 1;
                decimal utilisationamt = 0;
                decimal ReceiptAmt = 0;
                decimal balance = 0;
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.RealisedInvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    Pages.Append("</tr>");
                    if (counter == 1)
                    {
                        //   Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        utilisationamt = Convert.ToDecimal(item.ReceiptAmt);
                    }
                    if (counter > 1)
                    {
                        if (item.ReceiptNo != "")
                        {
                            if (item.TranAmt == 0)
                            {
                                if (item.CrAdjust == 0)
                                {
                                    utilisationamt = utilisationamt + Convert.ToDecimal(item.ReceiptAmt);
                                    balance = balance - Convert.ToDecimal(item.TranAmt);
                                }
                            }

                            else
                            {
                                utilisationamt = utilisationamt + Convert.ToDecimal(item.TranAmt);
                                balance = balance - Convert.ToDecimal(item.TranAmt);
                            }
                        }
                        utilisationamt = utilisationamt - Convert.ToDecimal(item.TranAmt);
                        balance = balance + Convert.ToDecimal(item.TranAmt);

                    }
                    counter++;
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='border-right:1px solid #000;width:8%;text-align:right;'>Invoice Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + utilisationamt /*SDData.UtilizationAmount*/ + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Accounts Report for Bond Cargo
        [HttpGet]
        public ActionResult BondCargoAccountsReport()
        {
            HDBMasterRepository ObjYR = new HDBMasterRepository();
            ObjYR.GetAllGodown();
            if (ObjYR.DBResponse.Data != null)
            {
                ViewBag.ListOfGodown = (List<CwcExim.Areas.Master.Models.HDBGodown>)ObjYR.DBResponse.Data;
            }
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBondCargo(string AsOnDate, string GodownId, string GodownName)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetBondCargo(AsOnDate, GodownId);
                string Path = "";
                List<Hdb_BondCargo> lstData = new List<Hdb_BondCargo>();
                lstData = (List<Hdb_BondCargo>)ObjRR.DBResponse.Data;
                Path = GeneratePDFBondCargo(lstData, AsOnDate, GodownName);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFBondCargo(List<Hdb_BondCargo> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "AccruedBond.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                decimal Value = 0, Duty = 0, Total = 0;


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + lstData[0].CompAddress + "</span><br/><label style='font-size: 12px;'>Email: -" + lstData[0].CompEmail + "</label><br/><label style='font-size: 12px;'>Accrued Income Report For Bond IN GODOWN NO : " + GodownName + " AS ON " + Date + "</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>GODOWN NO : " + GodownName + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>SL. NO</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>BOND NO</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>BOND DATE</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>NAME OF THE IMPORTER</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>DESCRIPTION OF GOODS</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>NO OF PKGS</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>WT.IN. KGS</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>ACCESIBLE VALUE</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>DUTY</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>TOTAL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Storage Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Insurance Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Location</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>AREA IN SQ. MT</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;'>CHA</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;'>Remarks</th></tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");

                lstData.ForEach(item =>
                {

                    Value = item.Value;
                    Duty = item.Duty;
                    Total = Math.Round((Value + Duty), 2);


                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BondNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BondDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.ItemDesc + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Units + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Weight + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Value + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + (item.Value + item.Duty) + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.StorageAmount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.InsuranceAmount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Location + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CHA + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-bottom:1px solid #000;text-align:left;'>Total :</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Units) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Value) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Duty) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + (lstData.Sum(x => x.Value) + lstData.Sum(x => x.Duty)) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.StorageAmount) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.InsuranceAmount) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'></th>");
                Pages.Append("<th colspan='3' style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area) + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region Accrued Income Statement of Bond In Excel
        public ActionResult AccruedIncomeStatementBondInExcel()
        {
            HDBMasterRepository ObjYR = new HDBMasterRepository();
            ObjYR.GetAllGodown();
            if (ObjYR.DBResponse.Data != null)
            {
                ViewBag.ListOfGodown = (List<CwcExim.Areas.Master.Models.HDBGodown>)ObjYR.DBResponse.Data;
            }
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetBondCargoInExcel(string AsOnDate, string GodownId, string GodownName)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetBondCargoInExcel(AsOnDate, GodownId, GodownName);
                string Path = "";
                string excelName = "AccruredIncomeStatementBond.xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            else
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "AccruredIncomeStatement.xls");
                }
            }
        }

        #endregion

        #region Bulk UPI Receipt

        [HttpPost]
        public JsonResult GetBulkReceiptReportUPI(BulkReceiptReport ObjBulkReceiptReport)
        {
            Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
            ObjRR.GetBulkCashreceiptUPI(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulk(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        #endregion

        //Added by Susmita-23-04-2024
        #region Tds Deduction Report
        
        public ActionResult TdsDeductionReport()
        {
            return View();
        }
               


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetTdsDeductionReport(HdbTdsDeductionReport vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=TDSDeductionReport.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            Hdb_ReportRepository obj = new Hdb_ReportRepository();
            obj.TdsDeductionExcelRpt(vm.PeriodFrom, vm.PeriodTo);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(TdsDeductionReportExcelPDF(ds, vm.PeriodFrom, vm.PeriodTo));
            Response.End();


            return Content("xc");
        }

        private string TdsDeductionReportExcelPDF(DataSet ds, string FromDate, string ToDate)
        {

            
            List<dynamic> lstTdsDeductionRptSummary = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            var i = 1;
            var FileName = "TdsDeductionReport.pdf";
            string html = "<html><body>";

            //Report of TDS Deduction Report
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>TDS Deduction Report</h1></td></tr>";
            html += "<tr><td colspan='10' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION, DELHI : RO HYDERABAD(" + FromDate + " to " + ToDate + ") </h1></td></tr>";            
            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='15' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";

            html += "<thead>";            

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SL NO.</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Branch Name</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Name Of Depositor</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TAN Number of Depositor</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice No</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice Date</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice Amount</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TDS Amount</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TDS Deduction Date</th>";         
           
            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";
            int totalInvAmt = 0;
            int totalTdsAmt = 0;
          
            lstTdsDeductionRptSummary.ToList().ForEach(item =>
            {
                    try
                    {
                       
                            html += "<tr>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + i + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.BranchName + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.DepositorName + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.TanNumber + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.InvoiceNo + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.InvoiceDate + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.Amount + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.TDS + "</td>";
                            html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ReceiptDate + "</td>";                           
                            html += "</tr>";
                            
                            totalInvAmt = totalInvAmt + Convert.ToInt32(item.Amount);
                            totalTdsAmt = totalTdsAmt + Convert.ToInt32(item.TDS);
                          
                            i++;      

                    }
                    catch (Exception Ex)
                    {

                    }
                });               
          
            html += "<tr>";            
            html += "<th colspan='6' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>TOTAL :</th>";           
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + totalInvAmt + "</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + totalTdsAmt + "</th>";
            html += "<th style='border-top: 1px solid #000; text-align: center;'></th>";
            html += "</tr>";
            html += "</tbody>";
            html += "</table></td></tr>";
            html += "</tbody></table>";

            html += "</body></html>";
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }
        #endregion
    }
}