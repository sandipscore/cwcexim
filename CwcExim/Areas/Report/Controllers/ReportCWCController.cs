using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CwcExim.Areas.Report.Models;
using CwcExim.Controllers;
using CwcExim.Models;
using CwcExim.Repositories;
using CwcExim.Filters;
using System.IO;
using CwcExim.UtilityClasses;
using System.Reflection;
using System.Text;
using System.Globalization;
using System.Data;
using EinvoiceLibrary;
using System.Threading.Tasks;
using CwcExim.Areas.Import.Controllers;
using CwcExim.Areas.CashManagement.Controllers;
using CwcExim.Areas.CashManagement.Models;



namespace CwcExim.Areas.Report.Controllers
{
    public class ReportCWCController : BaseController
    {
        private static readonly log4net.ILog log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);

        #region Invoice Report Details

        private string HeadOffice { get; set; }
        private string HOAddress { get; set; }
        public string ZonalOffice { get; set; }
        public string ZOAddress { get; set; }

        public decimal Version { get; set; }

        public string Effectlogofile { get; set; }

        public ReportCWCController()
        {
            /*
             * CALL PROCEDURE AND SET VALUE OF PROPERTIES
             */
            CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.getCompanyDetails();
            objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
            HeadOffice = ""; //objCompanyDetails.CompanyName;
            HOAddress = "";//objCompanyDetails.RoAddress;
            ZonalOffice = objCompanyDetails.CompanyName;
            ZOAddress = objCompanyDetails.CompanyAddress;
            Version = objCompanyDetails.EffectVersion;
            Effectlogofile = objCompanyDetails.VersionLogoFile;





        }

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult InvoiceReportDetails()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}
             
            return PartialView("InvoiceReportDetails");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetInvoiceReportList(InvoiceReportDetails ObjInvoiceReportDtls)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<InvoiceReportDetails> LstInvoiceReportDetails = new List<InvoiceReportDetails>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceReportDetails(ObjInvoiceReportDtls);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<InvoiceReportDetails>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateInvoiceReportDetailsPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "InvoiceReportDetails.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/InvoiceReportDetails/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.Effectlogofile = this.Effectlogofile;
                    ObjPdf.Version = this.Version;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //"/"+ SubDomain + 
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/InvoiceReportDetails/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region Invoice Details Report Excel
        
        [HttpGet]
        public ActionResult InvoiceReportDetailsExcel()
        { 
            return PartialView("InvoiceReportDetailsExcel");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetInvoiceReportListExcel(InvoiceReportDetails ObjInvoiceReportDtls)
        {
            var excelName = "";
            try
            {
                ReportRepository ObjRR = new ReportRepository();
                List<InvoiceReportDetails> LstInvoiceReportDetails = new List<InvoiceReportDetails>();
                Login objLogin = (Login)Session["LoginUser"];
                ObjRR.GetInvoiceReportDetailsExcel(ObjInvoiceReportDtls);//, objLogin.Uid

                excelName = "InvoiceReportDetail" + "_" + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }

            catch (Exception e)
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "InvoiceReportDetail.xlsx");
                }
            }

        }


        #endregion


        #region Exemted Service (Without Tax) for a month



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ExemptedService()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetExemptedServiceList(ExemptedService ObjExemptedService)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<ExemptedService> LstInvoiceReportDetails = new List<ExemptedService>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetExemptedService(ObjExemptedService);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<ExemptedService>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateExemptedServicePDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ExemptedServiceWithoutTax.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ExemptedServiceWithoutTax/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ExemptedServiceWithoutTax/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region service code wise Invoice Details

        [HttpGet]
        public ActionResult ServiceCodeWiseInvDtls()
        {
            ReportRepository ObjRR = new ReportRepository();
            List<SACList> LstSAC = new List<SACList>();
            ObjRR.GetSAC();
            if (ObjRR.DBResponse.Data != null)
            {
                LstSAC = (List<SACList>)ObjRR.DBResponse.Data;
            }
            ViewBag.SACList = LstSAC;

            return PartialView();
        }

        [HttpPost]
        //   [ValidateAntiForgeryToken]
        public JsonResult GetServiceCodeWiseInvDtls(Kol_ServiceCodeWiseInvDtls ObjServiceCodeWiseInvDtls)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<Kol_ServiceCodeWiseInvDtls> LstInvoiceReportDetails = new List<Kol_ServiceCodeWiseInvDtls>();
            Login objLogin = (Login)Session["LoginUser"];
            string Path = "";
            ObjRR.ServiceCodeWiseInvDtls(ObjServiceCodeWiseInvDtls);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<Kol_ServiceCodeWiseInvDtls>)ObjRR.DBResponse.Data;
                Path = GeneratePDFServicecodewise(LstInvoiceReportDetails, ObjServiceCodeWiseInvDtls.PeriodFrom, ObjServiceCodeWiseInvDtls.PeriodTo);
                //return Json(ObjRR.DBResponse);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {

                return Json(new { Status = 0, Data = "No Record Found" }, JsonRequestBehavior.AllowGet);
            }

        }
        /*   [HttpPost, ValidateInput(false)]
           [CustomValidateAntiForgeryToken]
           public JsonResult GenerateServiceCodeWiseInvDtlsPDF(FormCollection fc)
           {
               try
               {

                   string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                   // string FtpIdPath = "";
                   //string LocalIdPath = "";
                   var Pages = new string[1];
                   var FileName = "ServiceCodeWiseInvoiceDetails.pdf";
                   Pages[0] = fc["Page"].ToString();
                   // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                   //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                   //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                   //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                   // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                   string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/";
                   if (!Directory.Exists(LocalDirectory))
                       Directory.CreateDirectory(LocalDirectory);
                   using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                   {
                       ObjPdf.HeadOffice = this.HeadOffice;
                       ObjPdf.HOAddress = this.HOAddress;
                       ObjPdf.ZonalOffice = this.ZonalOffice;
                       ObjPdf.ZOAddress = this.ZOAddress;
                       ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                   }
                   var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/" + FileName };
                   return Json(ObjResult);

               }
               catch (Exception ex)
               {
                   return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
               }

           }*/
        [NonAction]
        public string GeneratePDFServicecodewise(List<Kol_ServiceCodeWiseInvDtls> lstData, string FromDate, string ToDate)
        {
            try
            {
                //  var FileName = "";
                var location = "";
                var SEZis = "";


                List<string> lstSB = new List<string>();
                String RemarksValue = "";
                string Container = "";
                var FileName = "ServiceCodeWise.pdf";
                StringBuilder Pages = new StringBuilder();
                //    string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>CONTAINER FREIGHT STATION 18 COAL DOCK ROAD KOLKATA700043</label><br/><span style='font-size:7pt;'></span><br/><label style='font-size: 7pt; font-weight:bold;'><label style='font-size: 8pt; font-weight:bold;'>Service Code Wise Invoice Details</label></label><span style='font-size:8pt;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span><br/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                Pages.Append("<table cellspacing='0' cellpadding='0' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt;'>");
                Pages.Append("<thead><tr><th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>SAC</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Invoice No.</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Date</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>CGST</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>SGST</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>IGST</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;width:10%;'>Total Value </th>");
                // Pages.Append("</tr></thead></table></th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal grandtotal = 0; decimal grandcgst = 0; decimal grandsgst = 0; decimal grandigst = 0;
                var grandtotals = 0; var grandcgsts = 0; var grandsgsts = 0; var grandigsts = 0;
                lstData.ForEach(elem =>
                    {
                        Pages.Append("<tr>");
                        Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.SAC + "</td>");
                        Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.InvoiceNumber + "</td>");
                        Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%'>" + elem.Date + "</td>");
                        Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.CGST + "</td>");
                        Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.SGST + "</td>");
                        Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.IGST + "</td>");
                        Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;width:10%'>" + elem.TotalValue + "</td>");

                        Pages.Append("</tr>");
                    });
                //  Pages.Append("</tbody>");
                //   Pages.Append("</tr>");
                //  i++;


                Pages.Append("<tr>");
                // Pages.Append("<th colspan='2' style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.CGST) + "</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.SGST) + "</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.IGST) + "</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.TotalValue) + "</th>");
                Pages.Append("<td colspan='3'cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;width:10%; font-size:7pt;'>GRAND TOTAL :</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;width:10%; font-size:7pt;'>" + lstData.Sum(x => x.CGST) + "</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.SGST) + "</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.IGST) + "</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.TotalValue) + "</td>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Total + "</th>");
                // Pages.Append("<th style='border-bottom: 1px solid #000;'>" + Tues + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:50%; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt; margin-top:20px;'>");
                Pages.Append("<thead>");
                //Pages.Append("<tr><th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 300px;'>Total</th>");
                //Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; width: 100px;'>Total Container</th>");
                //Pages.Append("<th rowspan='2' style='text-align: center; width: 100px;'>Teus</th></tr>");

                Pages.Append("<tr><th style='border-right: 1px solid #000; width: 100px;'>HSNCode</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>IGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>Total Value</th></tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");
                lstData.Select(x => new { x.SAC }).Distinct().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SAC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.CGST) + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.SGST) + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center; width: 100px;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.IGST) + "</td>");
                    Pages.Append("<td style='border-top: 1px solid #000;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.TotalValue) + "</td></tr>");

                });
                Pages.Append("</tbody></table>");
                lstSB.Add(Pages.ToString());
                //  FileName = "ServiceCodeWise" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                //  location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                FileName = "ServiceCodeWiseInvoiceDetails" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
                /* if (!Directory.Exists(LocalDirectory))
                 {
                     Directory.CreateDirectory(LocalDirectory);
                 }
                 if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                 {
                     System.IO.File.Delete(LocalDirectory + "/" + FileName);
                 }*/

                /*if (System.IO.File.Exists(location))
                {
                    System.IO.File.Delete(location);
                }*/
                /* using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                 {
                     ObjPdf.HeadOffice = this.HeadOffice;
                     ObjPdf.HOAddress = this.HOAddress;
                     ObjPdf.ZonalOffice = this.ZonalOffice;
                     ObjPdf.ZOAddress = this.ZOAddress;
                     ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                 }*/
                // string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/";
                // if (!Directory.Exists(LocalDirectory))
                //    Directory.CreateDirectory(LocalDirectory);
                // string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = "";
                    ObjPdf.HOAddress = "";
                    ObjPdf.ZonalOffice = "";
                    ObjPdf.ZOAddress = "";
                    //   ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                    ObjPdf.GeneratePDF(location, lstSB);

                }
                return "/Docs/All/" + Session.SessionID + "/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Debtor Report

        [HttpGet]
        public ActionResult DebtorReport()
        {
            ReportRepository ObjRR = new ReportRepository();
            List<EximTraderWithInvoice> LstEximTraderWithInvoice = new List<EximTraderWithInvoice>();
            ObjRR.GetEximTraderWithInvoice();
            if (ObjRR.DBResponse.Data != null)
            {
                LstEximTraderWithInvoice = (List<EximTraderWithInvoice>)ObjRR.DBResponse.Data;
            }
            ViewBag.EximTraderWithInvoice = LstEximTraderWithInvoice;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDebtorReport(DebtorReport ObjDebtorReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<DebtorReport> LstInvoiceReportDetails = new List<DebtorReport>();
            //  Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DebtorReport(ObjDebtorReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<DebtorReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDebtorReportPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DebtorReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DebtorReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DebtorReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Collection Report
        [HttpGet]
        public ActionResult CollectionReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}
            ViewBag.TotalCash = 0;
            ViewBag.TotalPDA = 0;
            ViewBag.TotalBank = 0;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCollectionReport(CollectionReport ObjDebtorReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<CollectionReport> LstInvoiceReportDetails = new List<CollectionReport>();
            FinalCollectionReportTotal objFinalCollectionReportTotal = new FinalCollectionReportTotal();
            CollectionReportTotal objCollectionReportTotal = new CollectionReportTotal();
            //  Login objLogin = (Login)Session["LoginUser"];
            ObjRR.CollectionReport(ObjDebtorReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                objFinalCollectionReportTotal = (FinalCollectionReportTotal)ObjRR.DBResponse.Data;
                LstInvoiceReportDetails = objFinalCollectionReportTotal.listCollectionReport.ToList();
                objCollectionReportTotal = objFinalCollectionReportTotal.objCollectionReportTotal;

                ViewBag.TotalCash = objCollectionReportTotal.TotalCash;
                ViewBag.TotalPDA = objCollectionReportTotal.TotalPDA;
                ViewBag.TotalBank = objCollectionReportTotal.TotalBank;

                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCollectionReportPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "CollectionReport.pdf";
                Pages[0] = fc["Page"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CollectionReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CollectionReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion



        #region Invoice Report Summary



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult InvoiceReportSummary()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView("InvoiceReportSummary");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetInvoiceReportSummary(InvoiceReportSummary ObjInvoiceReportSummary)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<InvoiceReportSummary> LstInvoiceReportSummary = new List<InvoiceReportSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceReportSummary(ObjInvoiceReportSummary);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportSummary = (List<InvoiceReportSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateInvoiceReportSummaryPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "InvoiceReportSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/InvoiceReportSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //"/"+ SubDomain + 
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/InvoiceReportSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region TDSReport


        [HttpGet]
        public ActionResult TDSReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}
            ReportRepository ObjRR = new ReportRepository();
            List<PartyLedgerList> LstParty = new List<PartyLedgerList>();
            ObjRR.GetEximTraderForPartyLedger();
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.PartyList = new SelectList((List<PartyLedgerList>)ObjRR.DBResponse.Data, "PartyId", "PartyName");
            }
            else
            {
                ViewBag.PartyList = null;
            }
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetTDSReport(TDSReport ObjTDSReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            TDSMain LstITDSMain = new TDSMain();
            //  Login objLogin = (Login)Session["LoginUser"];
            ObjRR.TdsReport(ObjTDSReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstITDSMain = (TDSMain)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateTDSReportPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "TDSReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/TDSReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/TDSReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion



        #region DailyPdaActivityReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult DailyPdaActivityReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyPdaActivityReport(DailyPdaActivityReport ObjDailyPdaActivityReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<DailyPdaActivityReport> LstDailyPdaActivityReport = new List<DailyPdaActivityReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DailyPdaActivity(ObjDailyPdaActivityReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyPdaActivityReport = (List<DailyPdaActivityReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyPdaActivityReportPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DailyPdActivityReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyPdActivityReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyPdActivityReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region DailyCashBookReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult DailyCashBookReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyCashBookReport(DailyCashBook ObjDailyCashBook)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<DailyCashBook> LstDailyCashBook = new List<DailyCashBook>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DailyCashBook(ObjDailyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyCashBook = (List<DailyCashBook>)ObjRR.DBResponse.Data;
                LstDailyCashBook = LstDailyCashBook.OrderBy(o => o.ReceiptDate).ThenBy(o => o.CRNo).ToList();

                LstDailyCashBook.Add(new DailyCashBook()
                {
                    ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",
                    Depositor = "",
                    CwcChargeTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeTAX)).ToString(),
                    CwcChargeNonTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeNonTAX)).ToString(),
                    CustomRevenueTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueTAX)).ToString(),
                    CustomRevenueNonTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueNonTAX)).ToString(),
                    InsuranceTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceTAX)).ToString(),
                    InsuranceNonTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceNonTAX)).ToString(),
                    PortTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortTAX)).ToString(),
                    PortNonTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortNonTAX)).ToString(),
                    //LWB = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)).ToString(),
                    LWBTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBTAX)).ToString(),
                    LWBNonTAX = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBNonTAX)).ToString(),
                    CWCCGST = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCCGST)).ToString(),
                    CWCSGST = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCSGST)).ToString(),
                    CWCISGT = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCISGT)).ToString(),
                    HtTax = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtTax)).ToString(),
                    HtNonTax = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtNonTax)).ToString(),
                    HtCGST = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtCGST)).ToString(),
                    HtSGST = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtSGST)).ToString(),
                    HtISGT = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtISGT)).ToString(),
                    RoPdRefund = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoPdRefund)).ToString(),
                    MISC = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MISC)).ToString(),
                    NonMISC = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.NonMISC)).ToString(),
                    PdaPLus = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaPLus)).ToString(),
                    TDSPlus = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSPlus)).ToString(),
                    PdaMinus = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaMinus)).ToString(),
                    Exempted = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Exempted)).ToString(),
                    TDSMinus = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSMinus)).ToString(),
                    HtAdjust = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtAdjust)).ToString(),
                    RoundOff = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoundOff)).ToString(),
                    RowTotal = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowTotal)).ToString(),
                    //  RowCreditNote = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowCreditNote)).ToString()
                });
                ObjRR.DBResponse.Data = LstDailyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyCashBookReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DailyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages[0] = Pages[0].ToString().Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "" }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region MonthlyCashBookReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult MonthlyCashBookReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyCashBookReport(MonthlyCashBook ObjMonthlyCashBook)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<MonthlyCashBook> LstMonthlyCashBook = new List<MonthlyCashBook>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.MOnthlyCashBook(ObjMonthlyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {

                LstMonthlyCashBook = (List<MonthlyCashBook>)ObjRR.DBResponse.Data;
                LstMonthlyCashBook[0].OpeningBalance = Math.Ceiling((Convert.ToDecimal(LstMonthlyCashBook[0].Balance) + Convert.ToDecimal(LstMonthlyCashBook[0].BankDeposit)) - Convert.ToDecimal(LstMonthlyCashBook[0].RowTotal)).ToString();
                LstMonthlyCashBook[0].ClosingBalance = Math.Ceiling(Convert.ToDecimal(LstMonthlyCashBook[LstMonthlyCashBook.Count - 1].Balance)).ToString();
                LstMonthlyCashBook.Add(new MonthlyCashBook()
                {
                    ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",
                    Depositor = "",
                    CwcChargeTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeTAX)).ToString(),
                    CwcChargeNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeNonTAX)).ToString(),
                    CustomRevenueTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueTAX)).ToString(),
                    CustomRevenueNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueNonTAX)).ToString(),
                    InsuranceTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceTAX)).ToString(),
                    InsuranceNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceNonTAX)).ToString(),
                    PortTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortTAX)).ToString(),
                    PortNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortNonTAX)).ToString(),
                    //LWB = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)).ToString(),
                    LWBTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBTAX)).ToString(),
                    LWBNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBNonTAX)).ToString(),
                    CWCCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCCGST)).ToString(),
                    CWCSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCSGST)).ToString(),
                    CWCISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCISGT)).ToString(),
                    HtTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtTax)).ToString(),
                    HtNonTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtNonTax)).ToString(),
                    HtCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtCGST)).ToString(),
                    HtSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtSGST)).ToString(),
                    HtISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtISGT)).ToString(),
                    RoPdRefund = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoPdRefund)).ToString(),
                    MISC = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MISC)).ToString(),
                    NonTaxMISC = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.NonTaxMISC)).ToString(),
                    PdaPLus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaPLus)).ToString(),
                    TDSPlus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSPlus)).ToString(),
                    PdaMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaMinus)).ToString(),
                    Exempted = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Exempted)).ToString(),
                    TDSMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSMinus)).ToString(),
                    HtAdjust = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtAdjust)).ToString(),
                    BankDeposit = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.BankDeposit)).ToString(),
                    RoundOff = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoundOff)).ToString(),
                    RowTotal = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowTotal)).ToString(),
                    //  RowCreditNote = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowCreditNote)).ToString(),

                    Balance = " "
                });
                ObjRR.DBResponse.Data = LstMonthlyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlyCashBookPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 20f, 20f, 20f, 20f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region MonthlyCashBookReport New Format



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult MonthlyCashBookReportNewFormat()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyCashBookReportNewFormat(MonthlyCashBook ObjMonthlyCashBook)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<MonthlyCashBook> LstMonthlyCashBook = new List<MonthlyCashBook>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.MOnthlyCashBookNewFormat(ObjMonthlyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {

                LstMonthlyCashBook = (List<MonthlyCashBook>)ObjRR.DBResponse.Data;
                LstMonthlyCashBook[0].OpeningBalance = Math.Ceiling((Convert.ToDecimal(LstMonthlyCashBook[0].Balance) + Convert.ToDecimal(LstMonthlyCashBook[0].BankDeposit)) - Convert.ToDecimal(LstMonthlyCashBook[0].RowTotal)).ToString();
                LstMonthlyCashBook[0].ClosingBalance = Math.Ceiling(Convert.ToDecimal(LstMonthlyCashBook[LstMonthlyCashBook.Count - 1].Balance)).ToString();
                LstMonthlyCashBook.Add(new MonthlyCashBook()
                {
                    ReceiptDate = "<strong>Total(A+B)</strong>",
                    CRNo = "",
                    Depositor = "",
                    CwcChargeTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeTAX)).ToString(),
                    CwcChargeNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeNonTAX)).ToString(),
                    CustomRevenueTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueTAX)).ToString(),
                    CustomRevenueNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueNonTAX)).ToString(),
                    InsuranceTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceTAX)).ToString(),
                    InsuranceNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceNonTAX)).ToString(),
                    PortTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortTAX)).ToString(),
                    PortNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortNonTAX)).ToString(),
                    //LWB = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)).ToString(),
                    LWBTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBTAX)).ToString(),
                    LWBNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBNonTAX)).ToString(),
                    CWCCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCCGST)).ToString(),
                    CWCSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCSGST)).ToString(),
                    CWCISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCISGT)).ToString(),
                    HtTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtTax)).ToString(),
                    HtNonTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtNonTax)).ToString(),
                    HtCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtCGST)).ToString(),
                    HtSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtSGST)).ToString(),
                    HtISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtISGT)).ToString(),
                    RoPdRefund = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoPdRefund)).ToString(),
                    MISC = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MISC)).ToString(),
                    PdaPLus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaPLus)).ToString(),
                    TDSPlus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSPlus)).ToString(),
                    PdaMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaMinus)).ToString(),
                    Exempted = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Exempted)).ToString(),
                    TDSMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSMinus)).ToString(),
                    HtAdjust = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtAdjust)).ToString(),
                    BankDeposit = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.BankDeposit)).ToString(),
                    RoundOff = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoundOff)).ToString(),
                    RowTotal = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowTotal)).ToString(),
                    //  RowCreditNote = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowCreditNote)).ToString(),

                    Balance = " ",
                    CurrentMonth = 2
                });
               
                    LstMonthlyCashBook.Add(new MonthlyCashBook()
                    {
                        ReceiptDate = "<strong>Total(B)</strong>",
                        CRNo = "",
                        Depositor = "",
                        CwcChargeTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.CwcChargeTAX)).ToString(),
                        CwcChargeNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.CwcChargeNonTAX)).ToString(),
                        CustomRevenueTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.CustomRevenueTAX)).ToString(),
                        CustomRevenueNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.CustomRevenueNonTAX)).ToString(),
                        InsuranceTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.InsuranceTAX)).ToString(),
                        InsuranceNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.InsuranceNonTAX)).ToString(),
                        PortTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.PortTAX)).ToString(),
                        PortNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.PortNonTAX)).ToString(),
                        //LWB = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)).ToString(),
                        LWBTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.LWBTAX)).ToString(),
                        LWBNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.LWBNonTAX)).ToString(),
                        CWCCGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.CWCCGST)).ToString(),
                        CWCSGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.CWCSGST)).ToString(),
                        CWCISGT = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.CWCISGT)).ToString(),
                        HtTax = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.HtTax)).ToString(),
                        HtNonTax = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.HtNonTax)).ToString(),
                        HtCGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.HtCGST)).ToString(),
                        HtSGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.HtSGST)).ToString(),
                        HtISGT = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.HtISGT)).ToString(),
                        RoPdRefund = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.RoPdRefund)).ToString(),
                        MISC = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.MISC)).ToString(),
                        PdaPLus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.PdaPLus)).ToString(),
                        TDSPlus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.TDSPlus)).ToString(),
                        PdaMinus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.PdaMinus)).ToString(),
                        Exempted = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.Exempted)).ToString(),
                        TDSMinus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.TDSMinus)).ToString(),
                        HtAdjust = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.HtAdjust)).ToString(),
                        BankDeposit = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.BankDeposit)).ToString(),
                        RoundOff = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.RoundOff)).ToString(),
                        RowTotal = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 0).Sum(o => Convert.ToDecimal(o.RowTotal)).ToString(),
                        //  RowCreditNote = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowCreditNote)).ToString(),

                        Balance = " ",
                        CurrentMonth = 0
                    });
              
                    LstMonthlyCashBook.Add(new MonthlyCashBook()
                    {
                        ReceiptDate = "<strong>Total(A)</strong>",
                        CRNo = "",
                        Depositor = "",
                        CwcChargeTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.CwcChargeTAX)).ToString(),
                        CwcChargeNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.CwcChargeNonTAX)).ToString(),
                        CustomRevenueTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.CustomRevenueTAX)).ToString(),
                        CustomRevenueNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.CustomRevenueNonTAX)).ToString(),
                        InsuranceTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.InsuranceTAX)).ToString(),
                        InsuranceNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.InsuranceNonTAX)).ToString(),
                        PortTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.PortTAX)).ToString(),
                        PortNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.PortNonTAX)).ToString(),
                        //LWB = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)).ToString(),
                        LWBTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.LWBTAX)).ToString(),
                        LWBNonTAX = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.LWBNonTAX)).ToString(),
                        CWCCGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.CWCCGST)).ToString(),
                        CWCSGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.CWCSGST)).ToString(),
                        CWCISGT = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.CWCISGT)).ToString(),
                        HtTax = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.HtTax)).ToString(),
                        HtNonTax = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.HtNonTax)).ToString(),
                        HtCGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.HtCGST)).ToString(),
                        HtSGST = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.HtSGST)).ToString(),
                        HtISGT = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.HtISGT)).ToString(),
                        RoPdRefund = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.RoPdRefund)).ToString(),
                        MISC = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.MISC)).ToString(),
                        PdaPLus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.PdaPLus)).ToString(),
                        TDSPlus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.TDSPlus)).ToString(),
                        PdaMinus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.PdaMinus)).ToString(),
                        Exempted = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.Exempted)).ToString(),
                        TDSMinus = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.TDSMinus)).ToString(),
                        HtAdjust = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.HtAdjust)).ToString(),
                        BankDeposit = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.BankDeposit)).ToString(),
                        RoundOff = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.RoundOff)).ToString(),
                        RowTotal = LstMonthlyCashBook.ToList().Where(o => o.CurrentMonth == 1).Sum(o => Convert.ToDecimal(o.RowTotal)).ToString(),
                        //  RowCreditNote = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowCreditNote)).ToString(),

                        Balance = " ",
                        CurrentMonth = 1
                    });
              
              
                ObjRR.DBResponse.Data = LstMonthlyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlyCashBookPDFNewFormat(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyCashBookReportNewFormat/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 20f, 20f, 20f, 20f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyCashBookReportNewFormat/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region ContainerMovementRegister



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerMovementRegister()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerMovementRegister(ContainerMovementRegister ObjContainerMovementRegister)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<ContainerMovementRegister> LstContainerMovementRegister = new List<ContainerMovementRegister>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerMovementRegister(ObjContainerMovementRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerMovementRegister = (List<ContainerMovementRegister>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerMovementRegisterPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerMovementRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region StatementOfEmptyContainer



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult StatementOfEmptyContainer()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetStatementOfEmptyContainer(StatementOfEmptyContainer ObjStatementOfEmptyContainer)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<StatementOfEmptyContainer> LstStatementOfEmptyContainer = new List<StatementOfEmptyContainer>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.StatementOfEmptyContainer(ObjStatementOfEmptyContainer);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstStatementOfEmptyContainer = (List<StatementOfEmptyContainer>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateStatementOfEmptyContainerPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "StatementOfEmptyContainer.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region ContainerArrivalReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerArrivalReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerArrivalReport(ContainerArrivalReport ObjContainerArrivalReport)
        {

            ReportRepository ObjRR = new ReportRepository();
            ContainerArrivalReport LstContainerArrivalReport = new ContainerArrivalReport();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerArrivalReport(ObjContainerArrivalReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerArrivalReport = (ContainerArrivalReport)ObjRR.DBResponse.Data;
                //if (LstContainerArrivalReport.Count > 1)
                //{
                //    LstContainerArrivalReport.ToList().ForEach(m =>
                //    {
                //        if (m.Size == "20" && m.Size != null && m.Size != "")
                //        {
                //            sizeTwenty += 1;
                //        }
                //        if (m.Size == "40" && m.Size != null && m.Size != "")
                //        {
                //            sizeFourty += 1;
                //        }

                //    });
                //}
                //ViewBag.sizeTwenty = sizeTwenty;
                //ViewBag.sizeFourty = sizeFourty;

                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerArrivalReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerArrivalReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ContainerArrivalReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ContainerArrivalReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region SealClosingReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult SealClosingReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetSealClosingReport(SealClosingReport ObjSealClosingReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<SealClosingReport> LstSealClosingReport = new List<SealClosingReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.SealClosingReport(ObjSealClosingReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstSealClosingReport = (List<SealClosingReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateSealClosingReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "SealClosingReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/SealClosingReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SealClosingReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region De-stuffing Report



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult DeStuffingReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDeStuffingReport(DeStuffingReport ObjDeStuffingReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<DeStuffingReport> LstDeStuffingReport = new List<DeStuffingReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DeStuffingReport(ObjDeStuffingReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDeStuffingReport = (List<DeStuffingReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDeStuffingReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DeStuffingReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DeStuffingReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DeStuffingReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Bulk Invoice

        [HttpGet]
        public ActionResult BulkInvoiceReport()
        {
            Kol_ImportRepository objImport = new Kol_ImportRepository();

            objImport.ListOfShippingLine();
            if (objImport.DBResponse.Data != null)
                ViewBag.ShippingLineList = JsonConvert.SerializeObject((List<Import.Models.ShippingLine>)objImport.DBResponse.Data);
            else
                ViewBag.ShippingLineList = null;


            objImport.ListOfCHA();
            if (objImport.DBResponse.Data != null)
                ViewBag.CHAList = JsonConvert.SerializeObject((List<Import.Models.CHA>)objImport.DBResponse.Data);
            else
                ViewBag.CHAList = null;


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBulkInvoiceReport(BulkInvoiceReport ObjBulkInvoiceReport)
        {
            if (ObjBulkInvoiceReport.InvoiceNumber == null)
            {
                ObjBulkInvoiceReport.InvoiceNumber = "";
            }
            ReportRepository ObjRR = new ReportRepository();
            List<BulkInvoiceReport> LstContainerMovementRegister = new List<BulkInvoiceReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.BulkInvoiceReport(ObjBulkInvoiceReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                IList<string> pages = new List<string>();
                var htmls = (List<string>)ObjRR.DBResponse.Data;
                htmls.ForEach(item =>
                {
                    if (!string.IsNullOrEmpty(item) || item != "")
                    {
                        try
                        {
                            var orginalHtml = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                            var ImgLeft = Server.MapPath("~/Content/Images/CWCPDF.PNG");
                            var ImgRight = Server.MapPath("~/Content/Images/SwachhBharat-Logo.png");
                            orginalHtml = orginalHtml.Replace("IMGLeft", ImgLeft).Replace("IMGRight", ImgRight);
                            pages.Add(orginalHtml.Replace("|_br_|", "<br/>").Replace("<>", " ").Split(' ')[0]);
                            pages.Add(orginalHtml.Replace("|_br_|", "<br/>").Replace("<>", " ").Split(' ')[1]);

                        }
                        catch { }
                    }
                });
                if (htmls.Count() > 0)
                {
                    var type = "bulkreport";
                    var id = "bi" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var fileName = id + ".pdf";
                    //  var fileName = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                    string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
                    if (!Directory.Exists(PdfDirectory))
                        Directory.CreateDirectory(PdfDirectory);
                    using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                    {
                        rh.Effectlogofile = Effectlogofile;
                        rh.Version = Version;
                        rh.GeneratePDF(PdfDirectory + fileName, pages.ToArray());
                    }



                    return Json(new { Status = 1, Message = "../../Docs/bulkreport/" + id + ".pdf" }, JsonRequestBehavior.DenyGet);
                }
                else
                {
                    return Json(ObjRR.DBResponse);
                }
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateBulkInvoiceReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "BulkInvoice.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/BulkInvoice/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                {

                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/BulkInvoice/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }


        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfInvoiceDateWise(string FromDate, string ToDate, string Module = "All", int ShippingLineId = 0, int CHAId = 0)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceList(FromDate, ToDate, Module, ShippingLineId, CHAId);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }

        # endregion

        #region cargoInStock



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult cargoInStockReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetcargoInStockReport(CargoInStockReport ObjCargoInStockReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<CargoInStockReport> LstCargoInStockReport = new List<CargoInStockReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.CargoInstockReport(ObjCargoInStockReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstCargoInStockReport = (List<CargoInStockReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratecargoInStockReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "CargoInStockReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CargoInStockReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoInStockReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }



        #endregion



        #region PDSummary



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult PDASummaryReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetPdSummaryReport(PdSummary ObjPdSummary)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<PdSummary> LstPdSummary = new List<PdSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.PdSummaryReport(ObjPdSummary);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstPdSummary = (List<PdSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePdSummaryPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "PdSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/PdSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/PdSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion 



        //#region cargoInStock



        ///*Invoice Report Detai;s Section-06.11.2017*/
        //[HttpGet]
        //public ActionResult cargoInStockReport()
        //{
        //    //Login ObjLogin = (Login)Session["LoginUser"];
        //    //ViewBag.DistList = null;
        //    //ReportRepository ObjReport = new ReportRepository();
        //    //ObjReport.GetDistricts(ObjLogin.Uid);
        //    //if (ObjReport.DBResponse.Data != null)
        //    //{
        //    //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
        //    //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
        //    //}

        //    return PartialView();
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult GetcargoInStockReport(PdSummary ObjPdSummary)
        //{
        //    ReportRepository ObjRR = new ReportRepository();
        //    List<PdSummary> LstPdSummary = new List<PdSummary>();
        //    Login objLogin = (Login)Session["LoginUser"];
        //    ObjRR.PdSummaryReport(ObjPdSummary);//, objLogin.Uid
        //    if (ObjRR.DBResponse.Data != null)
        //    {
        //        LstPdSummary = (List<PdSummary>)ObjRR.DBResponse.Data;
        //        return Json(ObjRR.DBResponse);
        //    }
        //    else
        //    {
        //        return Json(ObjRR.DBResponse);
        //    }

        //}

        //[HttpPost, ValidateInput(false)]
        //[CustomValidateAntiForgeryToken]
        //public JsonResult GeneratecargoInStockReportPDF(FormCollection fc)
        //{
        //    try
        //    {

        //        //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
        //        // string FtpIdPath = "";
        //        //string LocalIdPath = "";
        //        var Pages = new string[1];
        //        var FileName = "PdSummary.pdf";
        //        Pages[0] = fc["Page"].ToString();
        //        // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
        //        //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
        //        //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
        //        //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
        //        // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
        //        string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/PdSummary/";
        //        if (!Directory.Exists(LocalDirectory))
        //            Directory.CreateDirectory(LocalDirectory);
        //        using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
        //        {

        //            ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

        //        }
        //        var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/PdSummary/" + FileName };
        //        return Json(ObjResult);

        //    }
        //    catch (Exception ex)
        //    {
        //        return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
        //    }

        //}

        //#endregion 



        #region ContainerOutReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerOutReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerOutReport(ContainerOutReport ObjContainerOutReport)
        {


            ReportRepository ObjRR = new ReportRepository();
            ContainerOutReport LstContainerOutReport = new ContainerOutReport();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerOutport(ObjContainerOutReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                // LstContainerOutReport.lstContainerOutReport = (List<ContainerOutReportList>)ObjRR.DBResponse.Data;
                //LstContainerOutReport = (ContainerOutReport)ObjRR.DBResponse.Data;
                //if (LstContainerOutReport.lstContainerOutReport.Count > 1)
                //{
                //    LstContainerOutReport.lstContainerOutReport.ToList().ForEach(m =>
                //    {
                //        if (m.Size == "20" && m.Size != null && m.Size != "")
                //        {
                //            sizeTwenty += 1;
                //        }
                //        if (m.Size == "40" && m.Size != null && m.Size != "")
                //        {
                //            sizeFourty += 1;
                //        }

                //    });
                //}
                //ViewBag.sizeTwenty = sizeTwenty;
                //ViewBag.sizeFourty = sizeFourty;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerOutReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerOutReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ContainerOutReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ContainerOutReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region GatePassReport




        [HttpGet]
        public ActionResult GatePassReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetGatePassReport(GatePassReport ObjGatePassReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<GatePassReport> LstContainerOutReport = new List<GatePassReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GatePassReport(ObjGatePassReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerOutReport = (List<GatePassReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateGatePassReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "GatePassReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/GatePassReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/GatePassReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion




        #region IssueSlipReport




        [HttpGet]
        public ActionResult IssueSlipReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetIssueSlipReport(IssueSlipReport ObjIssueSlipReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<IssueSlipReport> LstContainerOutReport = new List<IssueSlipReport>();
            // Login objLogin = (Login)Session["LoginUser"];
            ObjRR.IssueSlipReport(ObjIssueSlipReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerOutReport = (List<IssueSlipReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateIssueSlipReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "IssueSlipReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/IssueSlipReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/IssueSlipReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region De_stuffingReportBig




        [HttpGet]
        public ActionResult DeStuffingReportBig()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDeStuffingReportBig(DeStuffingReportBig ObjDeStuffingReportBig)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<DeStuffingReportBig> LstContainerOutReport = new List<DeStuffingReportBig>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DeStuffingReportBig(ObjDeStuffingReportBig);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerOutReport = (List<DeStuffingReportBig>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDeStuffingReportBigPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DeStuffingReportDetails.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/IssueSlipReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/IssueSlipReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion




        #region CargoStuffingRegister



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult CargoStuffingRegister()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCargoStuffingRegister(CargoStuffingRegister ObjCargoStuffingRegister)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<CargoStuffingRegister> LstCargoStuffingRegister = new List<CargoStuffingRegister>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.CargoStuffingRegister(ObjCargoStuffingRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstCargoStuffingRegister = (List<CargoStuffingRegister>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCargoStuffingRegisterPDF(FormCollection fc)
        {
            try
            {


                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "CargoStuffingRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CargoStuffingRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoStuffingRegister/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion



        #region Shipping line cha importer wise daily activity report



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult SlineChaImpDailyActivity()
        {

            ReportRepository ObjRR = new ReportRepository();
            List<SlineImpCHAList> LstSlineImpCHAList = new List<SlineImpCHAList>();
            ObjRR.ShippingLChaImpList();
            if (ObjRR.DBResponse.Data != null)
            {
                LstSlineImpCHAList = (List<SlineImpCHAList>)ObjRR.DBResponse.Data;
            }
            ViewBag.SlineImpCHAList = LstSlineImpCHAList;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetSlineChaImpDailyActivity(SlineChaImpDailyActivity ObjSlineChaImpDailyActivity)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<SlineChaImpDailyActivity> LstSlineChaImpDailyActivity = new List<SlineChaImpDailyActivity>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.SlineChaImpDailyActivity(ObjSlineChaImpDailyActivity);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstSlineChaImpDailyActivity = (List<SlineChaImpDailyActivity>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateSlineChaImpDailyActivityPDF(FormCollection fc)
        {
            try
            {


                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "SlineChaImpDailyActivity.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CargoStuffingRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoStuffingRegister/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region Bulk Receipt

        [HttpGet]
        public ActionResult BulkReceiptReport()
        {


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReport(BulkReceiptReport ObjBulkReceiptReport)
        {
            if (ObjBulkReceiptReport.ReceiptNumber == null)
            {
                ObjBulkReceiptReport.ReceiptNumber = "";
            }

            ReportRepository ObjRR = new ReportRepository();
            List<BulkReceiptReport> LstContainerMovementRegister = new List<BulkReceiptReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.BulkReceiptReport(ObjBulkReceiptReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                IList<string> pages = new List<string>();
                var htmls = (List<string>)ObjRR.DBResponse.Data;
                htmls.ForEach(item =>
                {
                    if (!string.IsNullOrEmpty(item) || item != "")
                    {
                        try
                        {
                            var orginalHtml = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                            var ImgLeft = Server.MapPath("~/Content/Images/CWCPDF.PNG");
                            var ImgRight = Server.MapPath("~/Content/Images/SwachhBharat-Logo.png");
                            orginalHtml = orginalHtml.Replace("IMGLeft", ImgLeft).Replace("IMGRight", ImgRight);
                            pages.Add(orginalHtml.Replace("|_br_|", "<br/>").Replace("<>", " ").Split(' ')[0]);
                            pages.Add(orginalHtml.Replace("|_br_|", "<br/>").Replace("<>", " ").Split(' ')[1]);
                        }
                        catch (Exception e)
                        {
                            string error = e.Message.ToString();
                        }
                    }
                });

                if (pages.Count > 0)
                {

                    var type = "bulkreport";
                    var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var fileName = id + ".pdf";
                    //  var fileName = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                    string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
                    if (!Directory.Exists(PdfDirectory))
                        Directory.CreateDirectory(PdfDirectory);
                    using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                    {
                        rh.GeneratePDF(PdfDirectory + fileName, pages.ToArray());
                    }



                    return Json(new { Status = 1, Message = "../../Docs/bulkreport/" + id + ".pdf" }, JsonRequestBehavior.DenyGet);
                }
                else
                {
                    return Json(ObjRR.DBResponse);
                }
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateBulkReceiptReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "BulkReceipt.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/BulkReceipt/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                {

                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/BulkReceipt/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }


        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfReceiptDateWise(string FromDate, string ToDate)
        {
            ReportRepository ObjRR = new ReportRepository();
            //List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            //Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetReceiptList(FromDate, ToDate);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }

        # endregion



        #region ChequeSummaryReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ChequeSummaryReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetChequeSummaryReport(ChequeSummary ObjChequeSummary)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<ChequeSummary> LstChequeSummary = new List<ChequeSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ChequeSummary(ObjChequeSummary);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstChequeSummary = (List<ChequeSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateChequeSummaryReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ChequeSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ChequeSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ChequeSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Bay Wise Register
        [HttpGet]
        public ActionResult GetBayWiseRegister()
        {
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetBayWiseRegisterDetails(FormCollection fc)
        {
            ReportRepository objRR = new ReportRepository();
            List<BayWiseRegister> lstBay = new List<BayWiseRegister>();
            objRR.BayWiseRegister(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            if (objRR.DBResponse.Data != null)
            {
                lstBay = (List<BayWiseRegister>)objRR.DBResponse.Data;
                string Path = BayWiseRegisterPDF(lstBay);
                return Json(new { Status = 1, Message = Path });
            }
            else
                return Json(new { Status = -1, Message = "No Data" });
        }
        [NonAction]
        public string BayWiseRegisterPDF(List<BayWiseRegister> lstBay)
        {
            string Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th style='width:30%;text-align:left;'><img src='imgMODEL' style='width:50%;' /></th><th style='width:40%;font-weight:600;text-align:center;'><span style='font-size:12pt;'>CENTRAL WAREHOUSING CORPORATION</span><br/>(A GOVERNMENT OF INDIA UNDERTAKING)<br/><span style='font-size:10pt;'>BAY WISE REGISTER</span></th><th style='text-align:right;'>F/CD/CFS CAL/PMR/04</th></tr></thead><tbody><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Sl.No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Date & Shift of Destufing</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Container no.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Shipping Line/Name of the Vessel/Voyage/Line No/Rotation</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>CFS Code</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>No. of Pkgs.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Grid No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Cargo Details</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>No. of Grids Occupied</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>OBL No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Name of the consignee / Importers</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Date of Delivery</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Gate Pass No.</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>No. of pkgs. Delivered</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Closing Balance</th><th style='border:1px solid #000;padding:3px;text-align:center;font-weight:600;'>Remarks</th></tr></thead><tbody>";
            string html2 = "";
            int Count = 1;
            lstBay.ToList().ForEach(item =>
            {
                html2 += "<tr><td style='border:1px solid #000;padding:3px;text-align:center;'>" + Count + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.DestuffingEntryDate + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.ContainerNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.SLine + "<br/>" + item.Vessel + "<br/>" + item.Voyage + "<br/>" + item.LineNo + "<br/>" + item.Rotation + "<br/>" + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.CFSCode + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.NoOfPackages + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.GodownWiseLctnNames + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.CargoDescription + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'></td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.BOLNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.ImporterName + "</td><td style='border:1px solid #000;padding:3px;text-align:center;'>" + item.DeliveryDate + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.GatePassNo + "</td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.NoOfPackagesDeli + "</td><td style='border:1px solid #000;padding:3px;text-align:right;'></td><td style='border:1px solid #000;padding:3px;text-align:left;'>" + item.Remarks + "</td></tr>";
                Count++;
            });
            html2 += "</tbody></table></td></tr></tbody></table>";
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/BayWiseRegister.pdf";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(Path))
            {
                System.IO.File.Delete(Path);
            }
            Html = (Html + html2).ToString().Replace("imgMODEL", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            using (var rh = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 20f))
            {
                rh.GeneratePDF(Path, Html);
            }
            return "/Docs/" + Session.SessionID + "/BayWiseRegister.pdf";
        }
        #endregion

        #region Bulk Credit Note
        [HttpGet]
        public ActionResult GetBulkCreditNote()
        {
            return PartialView();
        }
        /*   [HttpPost]
           [CustomValidateAntiForgeryToken]
           public JsonResult GetBulkCreditNoteReport(FormCollection fc)
           {
               ReportRepository objRR = new ReportRepository();
               objRR.GetBulkCreditNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
               List<string> lststring = new List<string>();
               if (objRR.DBResponse.Data != null)
               {
                   lststring = (List<string>)objRR.DBResponse.Data;
                   List<string> pdfPages = new List<string>();
                   /*PDF Gneration*/
        /*   string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/";
           string FileName = "BulkCRNote" + "CR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
           if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
               Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
           lststring.ForEach(item =>
           {
               if (!string.IsNullOrEmpty(item) && item != "")
               {
                   item = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                   pdfPages.Add(item.Replace("|_br_|", "<br/>"));
               }
           });
           //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
           //{
           //    rh.GeneratePDF(Path + FileName, pdfPages.ToArray());
           //}
           using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
           {
               ObjPdf.HeadOffice = this.HeadOffice;
               ObjPdf.HOAddress = this.HOAddress;
               ObjPdf.ZonalOffice = this.ZonalOffice;
               ObjPdf.ZOAddress = this.ZOAddress;
               ObjPdf.GeneratePDF(Path + FileName, pdfPages.ToArray());

           }
           return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/" + FileName });
       }
       else
           return Json(new { Status = -1, Message = "No Data" });
   }*/
        public string ConvertNumbertoWords(long number)
        {
            if (number == 0) return "ZERO";
            if (number < 0) return "minus " + ConvertNumbertoWords(Math.Abs(number));
            string words = "";
            if ((number / 1000000) > 0)
            {
                words += ConvertNumbertoWords(number / 100000) + " LAKHS ";
                number %= 1000000;
            }
            if ((number / 1000) > 0)
            {
                words += ConvertNumbertoWords(number / 1000) + " THOUSAND ";
                number %= 1000;
            }
            if ((number / 100) > 0)
            {
                words += ConvertNumbertoWords(number / 100) + " HUNDRED ";
                number %= 100;
            }
            //if ((number / 10) > 0)  
            //{  
            // words += ConvertNumbertoWords(number / 10) + " RUPEES ";  
            // number %= 10;  
            //}  
            if (number > 0)
            {
                //if (words != "") words += "AND ";
                var unitsMap = new[]
                {
            "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE", "TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN", "FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN"
        };
                var tensMap = new[]
                {
            "ZERO", "TEN", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY", "SEVENTY", "EIGHTY", "NINETY"
        };
                if (number < 20) words += unitsMap[number];
                else
                {
                    words += tensMap[number / 10];
                    if ((number % 10) > 0) words += " " + unitsMap[number % 10];
                }
            }
            return words;
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintCRNote(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            ReportRepository objRepo = new ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            string Note = "CREDIT NOTE";

            objRepo.PrintDetailsForBulkCRNote(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "C");
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateCRNotePDF(objCR, Note);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "NO DATA FOUND" });
            }
        }

        [NonAction]
        public string GenerateCRNotePDF(PrintModelOfBulkCrCompany objCR, string Note)
        {
            Einvoice obj = new Einvoice();

            List<string> lstSB = new List<string>();

            string SACCode = "";
            objCR.lstCharges.Select(x => new { SACCode = x.SACCode }).Distinct().ToList().ForEach(item =>
            {
                if (SACCode == "")
                    SACCode = item.SACCode;
                else
                    SACCode = SACCode + "," + item.SACCode;
            });

            objCR.lstCrParty.ToList().ForEach(item =>
            {

                //    /*Header Part*/
                StringBuilder html = new StringBuilder();

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr>");

                html.Append("<td width='90%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                // html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label></td>");
                //html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td width='800%' valign='top' align='center'><label style='font-size: 10pt; font-weight: bold;'>Principle Place of Business: <span style='border-bottom: 1px solid #000;'>______________________</span></label><br /><label style='font-size: 10pt; font-weight: bold;'>" + Note + "</label></td></tr>");

                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + "  </td></tr>");
                html.Append("</tbody></table></td>");

                if (item.SignedQRCode == "")
                { }
                else
                {
                    if (item.SupplyType == "B2C")
                    {
                        html.Append("<td align='left' valign='top'><img width='150px' height='150px' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                    else
                    {
                        html.Append("<td align='left' valign='top'><img width='150px' height='150px' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                }







                html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src=''/> </td>");

                html.Append("</tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //html.Append("<td colspan='8' width='90%' width='100%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCR.CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span>");
                //html.Append("<br /><label style='font-size: 14px; font-weight:bold;'></label>");
                //html.Append("</td></tr>");

                html.Append("</tbody></table>");

                html.Append("<table cellpadding='0' cellspacing='0' style='table-layout: fixed; width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif;'><tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='6' cellspacing='0' style='width:50%; border-right: 1px solid #000;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Provider</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b>" + objCR.CompanyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Warehouse Address:</b>" + objCR.CompanyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + objCR.CompCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + objCR.CompStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b>" + objCR.CompStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN:</b> " + objCR.CompGstIn + "</td></tr>");
                html.Append("<tr><td cellpadding='10'><b>PAN:</b>" + objCR.CompPan + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' cellspacing='0' Valign='top' style='width:50%;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Receiver</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b> " + item.PartyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Address:</b> " + item.PartyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + item.PartyCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + item.PartyStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b> " + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN(if registered):</b> " + item.PartyGSTIN + "</td></tr>");
                html.Append("<tr><td cellpadding='10'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='6' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'><tbody>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Debit/Credit Note Serial No :</b> " + item.CRNoteNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Accounting Code of</b> " + SACCode + "</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Date of Issue :</b> " + Convert.ToDateTime(item.CRNoteDate).ToString("dd/MM/yyyy") + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Description of Services :</b> Other Storage & Warehousing Services</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Original Bill of Supply/Tax Invoice No :</b>  " + item.InvoiceNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Date :</b>  " + Convert.ToDateTime(item.InvoiceDate).ToString("dd/MM/yyyy") + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Sl No.</th>");
                html.Append("<th colspan='1' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Particulars</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Value</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>Total Amount</th></tr>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Reason for increase/decrease in original invoice</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                int i = 1;
                decimal IGSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0;
                decimal total = 0;
                objCR.lstCharges.Where(y => y.CRNoteId == item.CRNoteId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + data.ChargeName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTAmt + "</td>");

                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + data.Total + "</td></tr>");
                    i = i + 1;
                    IGSTAmt += data.IGSTAmt;
                    CGSTAmt += data.CGSTAmt;
                    SGSTAmt += data.SGSTAmt;
                    total += data.Total;
                });

                html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + CGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + SGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + IGSTAmt + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + total + "</td></tr>");

                string AmountInWord = ConvertNumbertoWords((long)item.GrandTotal);
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in figure):</b>" + item.GrandTotal + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in words):</b> " + AmountInWord + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Remarks:</b>" + item.Remarks + "</td></tr>");

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><th>Note:</th></tr>");
                html.Append("<tr><td colspan='12'><b>1.</b> The invoice issued earlier can be modified/cancelled by way of Debit Note/Credit Note.</td></tr>");
                html.Append("<tr><td colspan='12'><b>2.</b> Credit Note is to be issued where excess amount cliamed in original invoice.</td></tr>");
                html.Append("<tr><td colspan='12'><b>3.</b> Debit Note is to be issued where less amount claimed in original invoice.</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><td colspan='6' width='80%'></td>");
                html.Append("<th colspan='5' width='50%'>Signature: ____________________________ <br/><br/> Name of the Signatory: __________________ <br/><br/> Designation/Status: ____________________</th></tr>");

                html.Append("<tr><td colspan='6' width='50%'>To, <br/> ____________________________ <br/>____________________________<br/>____________________________<br/><br/> Copy To: <br/> Duplicate Copy for RM, CWC,RO - <br/> 2.Triplicate Copy for Warehouse</td>");
                html.Append("<th colspan='6' width='50%'></th></tr>");


                html.Append("</tbody></table>");
                // html.Append("<div style='margin-top:10px;'><br/><br/><br/><br/></div>");
                // html.Append("<div style='margin-top:10px;'><br/><br/></div>");

                //html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());

            });



            var FileName = "BulkDebitReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region Party Wise Ledger

        [HttpGet]
        public ActionResult PartyWiseLedger()
        {
            ReportRepository ObjRR = new ReportRepository();
            List<PartyLedgerList> LstParty = new List<PartyLedgerList>();
            ObjRR.GetEximTraderForPartyLedger();
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.PartyList = new SelectList((List<PartyLedgerList>)ObjRR.DBResponse.Data, "PartyId", "PartyName");
            }
            else
            {
                ViewBag.PartyList = null;
            }
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPartyWiseLedgerDetail(PartyWiseLedger ObjPartyLedger)
        {
            if (ModelState.IsValid)
            {
                ReportRepository ObjRR = new ReportRepository();
                ObjRR.GetPartyWiseLedger(ObjPartyLedger.FromDate, ObjPartyLedger.ToDate, ObjPartyLedger.PartyId);
                return Json(ObjRR.DBResponse);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFOfPartyWiseLedger(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "PartyWiseLedger.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/PartyWiseLedger/";
                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }

                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/PartyWiseLedger/" + FileName });
            }
            catch
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }
        }
        #endregion

        #region Work Slip Report

        [HttpGet]
        public ActionResult WorkSlip()
        {
            return PartialView("WorkSlip");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetWorkSlipReportList(WorkSlipReport ObjWorkSlipReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetWorkSlipReportList(ObjWorkSlipReport);//, objLogin.Uid
            return Json(ObjRR.DBResponse);
        }


        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateWorkSlipPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[2];
                string FileName = "WorkSlipReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[1] = fc["nPage"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/WorkSlipReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/WorkSlipReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Container Balance In CFS Report



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerBalanceInCFSReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerBalanceInCFS(ContainerBalanceInCFS ObjContainerBalanceInCFS)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<ContainerBalanceInCFS> LstContainerBalanceInCFS = new List<ContainerBalanceInCFS>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerBalanceInCFS(ObjContainerBalanceInCFS);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerBalanceInCFS = (List<ContainerBalanceInCFS>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerBalanceInCFSPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerBalanceInCFS.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ContainerBalanceInCFS/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ContainerBalanceInCFS/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Daily Transaction Report

        [HttpGet]
        public ActionResult DailyTransaction()
        {
            return PartialView("DailyTransaction");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyTransactionReportList(DailyTransactionReport ObjDailyTransactionReport)
        {
            ReportRepository ObjRR = new ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetDailyTransactionReportList(ObjDailyTransactionReport);//, objLogin.Uid
            return Json(ObjRR.DBResponse);
        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyTransactionPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[12];
                string FileName = "DailyTransactionReport.pdf";
                Pages[0] = fc["Page1"].ToString();
                Pages[1] = fc["Page2"].ToString();
                Pages[2] = fc["Page3"].ToString();
                Pages[3] = fc["Page4"].ToString();
                Pages[4] = fc["Page5"].ToString();
                Pages[5] = fc["Page6"].ToString();
                Pages[6] = fc["Page7"].ToString();
                Pages[7] = fc["Page8"].ToString();
                Pages[8] = fc["Page9"].ToString();
                Pages[9] = fc["Page10"].ToString();
                Pages[10] = fc["Page11"].ToString();
                Pages[11] = fc["Page12"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyTransactionReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyTransactionReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region CFS_ECO Report

        private StringBuilder CreateFieldToBrowse(MonthlyEconomyReport item, StringBuilder sb)
        {
            if (item.FieldType == (int)FieldType.NonValuedField)
            {
                sb.Append("<tr>");

                if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print)
                {
                    sb.Append("<td style='padding-left:5px;'><span>" + item.ItemCodeNo + "</span></td>");
                    sb.Append("<td colspan='2'><span>" + item.ItemLabel + "</span></td>");
                }
                else if (item.ItemType == ItemType.AnnexureEstablishment)
                {
                    sb.Append("<td colspan='3'><span>" + item.ItemLabel + "</span></td>");
                }
                else
                {
                    sb.Append("<td colspan='2'><span>" + item.ItemLabel + "</span></td>");
                }

                sb.Append("</tr>");
            }
            else if (item.FieldType > (int)FieldType.NonValuedField)
            {
                if (item.ItemType == ItemType.AnnexureEstablishment || item.ItemType == ItemType.AnnexureTotal)
                {
                    sb.Append("<tr>");
                    sb.Append("<td style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");

                    sb.Append("<td>");

                    if (item.FieldType == (int)FieldType.TextBoxWithoutJs)
                    {
                        sb.Append("<input class='Numeric' onblur='IsEmpy(this);' style='width: 100%;' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                    }
                    else if (item.FieldType == (int)FieldType.TextBoxWithJs)
                    {
                        sb.Append("<input class='Numeric' style='width: 100%;' onblur='IsEmpy(this);" + item.Script + ";' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                    }
                    else if (item.FieldType > (int)FieldType.TextBoxWithJs)
                    {
                        if (item.FieldType == (int)FieldType.ReadOnlyTextBoxWithJsResult)
                        {
                            sb.Append("<input  class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                        }
                        else
                        {
                            sb.Append("<input  class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPost_" + item.IncomeExpHeadId + "' name='txtNoPost_" + item.IncomeExpHeadId + "' value='" + item.NoOfPosts + "'>");
                        }
                    }
                    sb.Append("</td>");

                    sb.Append("<td>");

                    if (item.FieldType == (int)FieldType.TextBoxWithoutJs)
                    {
                        sb.Append("<input  class='Numeric'  onblur='IsEmpy(this);' style='width: 100%;' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType == (int)FieldType.TextBoxWithJs)
                    {
                        sb.Append("<input  class='Numeric' style='width: 100%;' onblur='IsEmpy(this);" + item.Script + ";' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType > (int)FieldType.TextBoxWithJs)
                    {
                        if (item.FieldType == (int)FieldType.ReadOnlyTextBoxWithJsResult)
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                        else
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txtNoPostAmt_" + item.IncomeExpHeadId + "' name='txtNoPostAmt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                    }
                    sb.Append("</td>");


                    sb.Append("</tr>");
                }
                else
                {
                    sb.Append("<tr>");
                    if (item.ItemType == ItemType.Income)
                    {
                        sb.Append("<td style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");
                    }
                    else if (item.ItemType == ItemType.AnnexureHead)
                    {
                        sb.Append("<td colspan='2' style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print || item.ItemType == ItemType.Expense_Other)
                    {
                        sb.Append("<td style='padding-left:5px;'><span>" + item.ItemCodeNo + "</span></td>");
                        sb.Append("<td style='padding-left:15px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    sb.Append("<td>");

                    if (item.FieldType == (int)FieldType.TextBoxWithoutJs)
                    {
                        sb.Append("<input class='Numeric'  onblur='IsEmpy(this);' style='width: 100%;' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType == (int)FieldType.TextBoxWithJs)
                    {
                        sb.Append("<input class='Numeric'  style='width: 100%;' onblur='IsEmpy(this);" + item.Script + ";' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                    }
                    else if (item.FieldType > (int)FieldType.TextBoxWithJs)
                    {
                        if (item.FieldType == (int)FieldType.ReadOnlyTextBoxWithJsResult)
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                        else
                        {
                            sb.Append("<input class='Numeric'  style='width: 100%;' readonly='true' type='text' id='txt_" + item.IncomeExpHeadId + "' name='txt_" + item.IncomeExpHeadId + "' value='" + item.Amount + "'>");
                        }
                    }

                    sb.Append("</td>");

                    sb.Append("</tr>");
                }
            }

            return sb;
        }

        private StringBuilder CreateFieldToPrint(MonthlyEconomyReport item, StringBuilder sb)
        {
            if (item.FieldType == (int)FieldType.NonValuedField)
            {
                sb.Append("<tr>");

                if (item.ItemType == ItemType.Income)
                {
                    sb.Append("<td colspan='4' style='border:1px solid #000;text-align:left;padding:3px;'><span>" + item.ItemLabel + "</span></td>");
                }
                else if (item.ItemType == ItemType.AnnexureEstablishment || item.ItemType == ItemType.AnnexureTotal || item.ItemType == ItemType.AnnexureHead)
                {
                    sb.Append("<td colspan='3' style='border:1px solid #000;text-align:left;padding:3px;'><span>" + item.ItemLabel + "</span></td>");
                }
                else if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print)
                {
                    sb.Append("<td style='padding-left:5px;border:1px solid #000;text-align:center;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemCodeNo + "</span></td>");
                    sb.Append("<td colspan='4' style='border:1px solid #000;text-align:left;padding:3px;'><span>" + item.ItemLabel + "</span></td>");
                }
                //else
                //{
                //    sb.Append("<td colspan='2' style='border:1px solid #000;text-align:left;'><span>" + item.ItemLabel + "</span></td>");
                //}

                sb.Append("</tr>");
            }
            else if (item.FieldType > (int)FieldType.NonValuedField)
            {
                if (item.ItemType == ItemType.AnnexureEstablishment || item.ItemType == ItemType.AnnexureTotal)
                {
                    sb.Append("<tr>");
                    sb.Append("<td style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");

                    sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                    sb.Append("<label>" + item.NoOfPosts + "</label>");
                    sb.Append("</td>");

                    sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                    sb.Append("<label>" + item.Amount + "</label>");
                    sb.Append("</td>");

                    sb.Append("</tr>");
                }
                else
                {
                    sb.Append("<tr>");
                    if (item.ItemType == ItemType.Income)
                    {
                        sb.Append("<td style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");
                    }
                    else if (item.ItemType == ItemType.AnnexureHead)
                    {
                        sb.Append("<td colspan='2' style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    if (item.ItemType == ItemType.Expense_Rent || item.ItemType == ItemType.Expense_Print || item.ItemType == ItemType.Expense_Other || item.ItemType == ItemType.Expense_Total)
                    {
                        sb.Append("<td style='padding-left:5px;border:1px solid #000;text-align:center;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemCodeNo + "</span></td>");
                        sb.Append("<td style='padding-left:15px;border:1px solid #000;text-align:left;padding-top:3px;padding-bottom:3px;'><span>" + item.ItemLabel + "</span></td>");
                    }

                    sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                    sb.Append("<label>" + item.Amount + "</label>");
                    sb.Append("</td>");

                    if (!(item.ItemType == ItemType.AnnexureHead || item.ItemType == ItemType.AnnexureEstablishment))
                    {
                        sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                        sb.Append("<label>" + item.CumAmountSinceApril + "</label>");
                        sb.Append("</td>");

                        sb.Append("<td style='border:1px solid #000;text-align:right;padding:3px;'>");
                        sb.Append("<label>" + item.ProrataCumAmount + "</label>");
                        sb.Append("</td>");
                    }

                    sb.Append("</tr>");
                }
            }


            return sb;
        }

        public ActionResult CFSEcoReport()
        {
            return PartialView();
        }

        [HttpGet]
        public ActionResult PopulateDataForMonthlyReport(string monthNo, string yearNo)
        {

            ReportRepository ObjRR = new ReportRepository();
            int dataExistStatus;
            List<MonthlyEconomyReport> LstMonthlyEconomyReport = ObjRR.GetMonthlyEconomyReportData(Convert.ToInt32(monthNo), Convert.ToInt32(yearNo), out dataExistStatus).Where(x => x.FieldType > (int)FieldType.NotRequiredField).ToList();

            List<string> Tabs = new List<string>();

            StringBuilder sb_Income = new StringBuilder();
            StringBuilder sb_ExpensesHead = new StringBuilder();
            StringBuilder sb_Rent = new StringBuilder();
            StringBuilder sb_Print = new StringBuilder();

            ///////////////////////////////// Income Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_Income = CreateFieldToBrowse(item, sb_Income);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_Income = CreateFieldToBrowse(subItem, sb_Income);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Income = CreateFieldToBrowse(subSubItem, sb_Income);
                        foreach (var subSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_Income = CreateFieldToBrowse(subSubSubItem, sb_Income);
                            foreach (var subSubSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_Income = CreateFieldToBrowse(subSubSubSubItem, sb_Income);
                            }
                        }
                    }
                }

            }

            ///////////////////////////////// Income End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Head Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.AnnexureHead).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_ExpensesHead = CreateFieldToBrowse(item, sb_ExpensesHead);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.AnnexureHead).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_ExpensesHead = CreateFieldToBrowse(subItem, sb_ExpensesHead);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.AnnexureHead).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_ExpensesHead = CreateFieldToBrowse(subSubItem, sb_ExpensesHead);
                    }
                }

            }

            ///////////////////////////////// Expense Head End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Establish and Total Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal)).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_ExpensesHead = CreateFieldToBrowse(item, sb_ExpensesHead);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal)).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_ExpensesHead = CreateFieldToBrowse(subItem, sb_ExpensesHead);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_ExpensesHead = CreateFieldToBrowse(subSubItem, sb_ExpensesHead);
                    }
                }

            }

            ///////////////////////////////// Expense Establish and Total End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Rent Start /////////////////////////////////////////////////////////////////

            foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print)).OrderBy(x => x.ItemSortOrder).ToList())
            {
                sb_Rent = CreateFieldToBrowse(item, sb_Rent);
                foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print)).OrderBy(x => x.ItemSortOrder).ToList())
                {
                    sb_Rent = CreateFieldToBrowse(subItem, sb_Rent);
                    foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Rent = CreateFieldToBrowse(subSubItem, sb_Rent);
                    }
                }

            }

            ///////////////////////////////// Expense Rent End /////////////////////////////////////////////////////////////////

            ///////////////////////////////// Expense Print Start /////////////////////////////////////////////////////////////////

            //foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.Expense_Print).ToList())
            //{
            //    sb_Print = CreateFieldToBrowse(item, sb_Print);
            //    foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Expense_Print).ToList())
            //    {
            //        sb_Print = CreateFieldToBrowse(subItem, sb_Print);
            //        foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Expense_Print).ToList())
            //        {
            //            sb_Print = CreateFieldToBrowse(subSubItem, sb_Print);
            //        }
            //    }

            //}

            /////////////////////////////////// Expense Print End /////////////////////////////////////////////////////////////////


            Tabs.Add(sb_Income.ToString());
            Tabs.Add(sb_ExpensesHead.ToString());
            Tabs.Add(sb_Rent.ToString());
            Tabs.Add(sb_Print.ToString());

            var ObjResult = new { Status = dataExistStatus, Data = Tabs };
            return Json(ObjResult, JsonRequestBehavior.AllowGet);

        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult SaveMonthlyReportDetails(FormCollection fc)
        {
            Login ObjLogin = (Login)Session["LoginUser"];

            ReportRepository ObjRR = new ReportRepository();
            List<MonthlyEconomyReport> objMonthlyEconomyReportList = new List<MonthlyEconomyReport>();

            foreach (var texkey in fc.AllKeys.Where(x => x.StartsWith("txt_")).ToList())
            {
                int incomeExpHeadId = Convert.ToInt32(texkey.Split('_')[1]);
                MonthlyEconomyReport objMonthlyEconomyReport = new MonthlyEconomyReport();
                objMonthlyEconomyReport.MonthNo = Convert.ToInt32(fc["MonthNo"]);
                objMonthlyEconomyReport.YearNo = Convert.ToInt32(fc["YearNo"]);
                objMonthlyEconomyReport.IncomeExpHeadId = incomeExpHeadId;

                if (String.IsNullOrWhiteSpace(fc[texkey]))
                {
                    objMonthlyEconomyReport.Amount = 0;
                }
                else
                {
                    objMonthlyEconomyReport.Amount = Convert.ToDecimal(fc[texkey]);
                }

                objMonthlyEconomyReport.CreatedBy = ObjLogin.Uid;

                objMonthlyEconomyReportList.Add(objMonthlyEconomyReport);
            }

            foreach (var texkey in fc.AllKeys.Where(x => x.StartsWith("txtNoPostAmt_")).ToList())
            {
                int incomeExpHeadId = Convert.ToInt32(texkey.Split('_')[1]);
                string noOfPosttxt = "txtNoPost_" + incomeExpHeadId;
                MonthlyEconomyReport objMonthlyEconomyReport = new MonthlyEconomyReport();
                objMonthlyEconomyReport.IncomeExpHeadId = incomeExpHeadId;

                if (String.IsNullOrWhiteSpace(fc[texkey]))
                {
                    objMonthlyEconomyReport.Amount = 0;
                }
                else
                {
                    objMonthlyEconomyReport.Amount = Convert.ToDecimal(fc[texkey]);
                }

                if (String.IsNullOrWhiteSpace(fc[noOfPosttxt]))
                {
                    objMonthlyEconomyReport.NoOfPosts = 0;
                }
                else
                {
                    objMonthlyEconomyReport.NoOfPosts = Convert.ToInt32(fc[noOfPosttxt]);
                }

                objMonthlyEconomyReportList.Add(objMonthlyEconomyReport);
            }

            string XML = Utility.CreateXML(objMonthlyEconomyReportList);
            ObjRR.SaveMonthlyReportDetails(Convert.ToInt32(fc["MonthNo"]), Convert.ToInt32(fc["YearNo"]), XML);
            return Json(ObjRR.DBResponse);
        }

        [HttpGet]
        public ActionResult PrintDataForMonthlyReport(string monthNo, string yearNo)
        {
            try
            {
                int dataExistStatus;
                var Pages = new string[3];
                string FileName = "MonthlyReport.pdf";

                ReportRepository ObjRR = new ReportRepository();
                List<MonthlyEconomyReport> LstMonthlyEconomyReport = ObjRR.GetMonthlyEconomyReportDataToPrint(Convert.ToInt32(monthNo), Convert.ToInt32(yearNo), out dataExistStatus).Where(x => x.FieldType > (int)FieldType.NotRequiredField).ToList();

                if (dataExistStatus == 1)
                {
                    List<string> Tabs = new List<string>();

                    StringBuilder sb_Income = new StringBuilder();
                    StringBuilder sb_ExpensesHead = new StringBuilder();
                    StringBuilder sb_Rent = new StringBuilder();

                    string MonthName = DateTimeFormatInfo.CurrentInfo.GetMonthName(Convert.ToInt32(monthNo));



                    ///////////////////////////////// Income Start /////////////////////////////////////////////////////////////////

                    sb_Income.Append("<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_Income.Append("<thead>");
                    sb_Income.Append("<tr>");
                    sb_Income.Append("<th style='padding:5px;text-align:center;'>");
                    sb_Income.Append("<span style='font-size:10pt;text-align:center;'>CENTRAL WAREHOUSING CORPORATION</span><br/>(A GOVT. OF INDIA UNDERTAKING)<br/><br/>");
                    sb_Income.Append("</th>");
                    sb_Income.Append("</tr>");
                    sb_Income.Append("</thead>");
                    sb_Income.Append("</table>");
                    sb_Income.Append("<br/>");

                    sb_Income.Append("<table style='width:100%;font-size:10pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_Income.Append("<thead>");
                    sb_Income.Append("<tr>");
                    sb_Income.Append("<th style='text-align:center;width:80%;padding:3px;'>MONTHLY ECONOMY REPORT</th>");
                    sb_Income.Append("<th style='text-align:center;padding:3px;font-size:8pt'>Month: <span>" + MonthName + "-" + yearNo + "</span></th>");
                    sb_Income.Append("</tr>");
                    sb_Income.Append("</thead>");
                    sb_Income.Append("</table><br/><br/>");

                    sb_Income.Append("<table style='repeat-header: yes;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_Income.Append("<thead>");
                    sb_Income.Append("<tr>");
                    sb_Income.Append("<th rowspan='2' style='text-align:center;border:1px solid #000;padding:5px;'>Head of Income</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Amount</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Cumulative since 1st April BE/RE</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Prorata Cumulative BE/RE</th>");
                    sb_Income.Append("</tr>");

                    sb_Income.Append("<tr>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Income.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Income.Append("</tr>");
                    sb_Income.Append("</thead>");
                    sb_Income.Append("<tbody>");
                    foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Income = CreateFieldToPrint(item, sb_Income);
                        foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_Income = CreateFieldToPrint(subItem, sb_Income);
                            foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_Income = CreateFieldToPrint(subSubItem, sb_Income);
                                foreach (var subSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                                {
                                    sb_Income = CreateFieldToPrint(subSubSubItem, sb_Income);
                                    foreach (var subSubSubSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subSubSubItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && x.ItemType == ItemType.Income).OrderBy(x => x.ItemSortOrder).ToList())
                                    {
                                        sb_Income = CreateFieldToPrint(subSubSubSubItem, sb_Income);
                                    }
                                }
                            }
                        }

                    }

                    sb_Income.Append("</tbody>");
                    sb_Income.Append("</table>");

                    ///////////////////////////////// Income End /////////////////////////////////////////////////////////////////

                    ///////////////////////////////// Expense Head Start /////////////////////////////////////////////////////////////////

                    sb_ExpensesHead.Append("<table style='repeat-header: yes;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_ExpensesHead.Append("<thead>");
                    sb_ExpensesHead.Append("<tr>");
                    sb_ExpensesHead.Append("<th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;'>Head of Expense</th>");
                    sb_ExpensesHead.Append("<th rowspan='2' style='border:1px solid #000;text-align:center;width:10%;padding:5px;'>No Of Post</th>");
                    sb_ExpensesHead.Append("<th style='border:1px solid #000;text-align:center;width:15%;padding:5px;'>Amount</th>");
                    sb_ExpensesHead.Append("</tr>");

                    sb_ExpensesHead.Append("<tr>");
                    sb_ExpensesHead.Append("<th style='border:1px solid #000;text-align:center;padding:5px;'>Rs.</th>");
                    sb_ExpensesHead.Append("</tr>");

                    sb_ExpensesHead.Append("</thead>");
                    sb_ExpensesHead.Append("<tbody>");

                    foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal || x.ItemType == ItemType.AnnexureHead)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_ExpensesHead = CreateFieldToPrint(item, sb_ExpensesHead);
                        foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal || x.ItemType == ItemType.AnnexureHead)).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_ExpensesHead = CreateFieldToPrint(subItem, sb_ExpensesHead);
                            foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.AnnexureEstablishment || x.ItemType == ItemType.AnnexureTotal || x.ItemType == ItemType.AnnexureHead)).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_ExpensesHead = CreateFieldToPrint(subSubItem, sb_ExpensesHead);
                            }
                        }

                    }

                    sb_ExpensesHead.Append("</tbody>");
                    sb_ExpensesHead.Append("</table>");

                    ///////////////////////////////// Expense Head End /////////////////////////////////////////////////////////////////

                    ///////////////////////////////// Expense Rent Start /////////////////////////////////////////////////////////////////

                    sb_Rent.Append("<table style='repeat-header: yes;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb_Rent.Append("<thead>");
                    sb_Rent.Append("<tr>");
                    sb_Rent.Append("<th rowspan='2' style='text-align:center;border:1px solid #000;width:7%;'>Code No.</th>");
                    sb_Rent.Append("<th rowspan='2' style='text-align:center;border:1px solid #000;'>Head of Expense</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Amount</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Cumulative since 1st April BE/RE</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;width:15%;padding:5px;'>Prorata Cumulative BE/RE</th>");
                    sb_Rent.Append("</tr>");

                    sb_Rent.Append("<tr>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Rent.Append("<th style='text-align:center;border:1px solid #000;padding:5px;'>Rs.</th>");
                    sb_Rent.Append("</tr>");

                    sb_Rent.Append("</thead>");
                    sb_Rent.Append("<tbody>");

                    foreach (var item in LstMonthlyEconomyReport.Where(x => x.IncomeExpHeadId == x.ParentId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print || x.ItemType == ItemType.Expense_Other || x.ItemType == ItemType.Expense_Total)).OrderBy(x => x.ItemSortOrder).ToList())
                    {
                        sb_Rent = CreateFieldToPrint(item, sb_Rent);
                        foreach (var subItem in LstMonthlyEconomyReport.Where(x => x.ParentId == item.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print || x.ItemType == ItemType.Expense_Other || x.ItemType == ItemType.Expense_Total)).OrderBy(x => x.ItemSortOrder).ToList())
                        {
                            sb_Rent = CreateFieldToPrint(subItem, sb_Rent);
                            foreach (var subSubItem in LstMonthlyEconomyReport.Where(x => x.ParentId == subItem.IncomeExpHeadId && x.IncomeExpHeadId != item.IncomeExpHeadId && (x.ItemType == ItemType.Expense_Rent || x.ItemType == ItemType.Expense_Print || x.ItemType == ItemType.Expense_Other || x.ItemType == ItemType.Expense_Total)).OrderBy(x => x.ItemSortOrder).ToList())
                            {
                                sb_Rent = CreateFieldToPrint(subSubItem, sb_Rent);
                            }
                        }

                    }

                    sb_Rent.Append("</tbody>");
                    sb_Rent.Append("</table>");

                    Pages[0] = sb_Income.ToString();
                    Pages[1] = sb_ExpensesHead.ToString();
                    Pages[2] = sb_Rent.ToString();

                    string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyReport/";
                    if (!Directory.Exists(LocalDirectory))
                        Directory.CreateDirectory(LocalDirectory);
                    //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                    //{
                    //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                    //}
                    using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                    {
                        ObjPdf.HeadOffice = this.HeadOffice;
                        ObjPdf.HOAddress = this.HOAddress;
                        ObjPdf.ZonalOffice = this.ZonalOffice;
                        ObjPdf.ZOAddress = this.ZOAddress;
                        ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                    }
                    var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyReport/" + FileName };
                    return Json(ObjResult, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    var ObjResult = new { Status = 0, Message = "No Data Available for this month. Please generate to print." };
                    return Json(ObjResult, JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }
        }

        #endregion

        #region Monthly Performance Report

        public ActionResult MonthlyPerformanceReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyPerformanceReportList(MonthlyPerformaceReport ObjMonthlyPerformaceReport)
        {
            try
            {
                var Pages = new string[1];
                string FileName = "MonthlyPerformanceRepor.pdf";
                ReportRepository ObjRR = new ReportRepository();
                StringBuilder sb = new StringBuilder();
                List<MonthlyPerformaceReport> LstMonthlyPerformaceReport = ObjRR.GetMonthlyPerformanceReportDataToPrint(ObjMonthlyPerformaceReport.MonthNo, ObjMonthlyPerformaceReport.YearNo);

                if (LstMonthlyPerformaceReport != null && LstMonthlyPerformaceReport.Count > 0)
                {

                    string MonthName = DateTimeFormatInfo.CurrentInfo.GetMonthName(ObjMonthlyPerformaceReport.MonthNo);

                    sb.Append("<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb.Append("<thead>");
                    sb.Append("<tr>");
                    sb.Append("<th style='padding:5px;text-align:center;'>");
                    sb.Append("<span style='font-size:10pt;text-align:center;'>CENTRAL WAREHOUSING CORPORATION</span><br/>(A GOVT. OF INDIA UNDERTAKING)<br/><br/>");
                    sb.Append("</th>");
                    sb.Append("</tr>");
                    sb.Append("</thead>");
                    sb.Append("</table>");
                    sb.Append("<br/>");

                    sb.Append("<table style='width:100%;font-size:10pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    sb.Append("<thead>");
                    sb.Append("<tr>");
                    sb.Append("<th style='text-align:center;width:80%;padding:3px;'>MONTHLY PERFORMANCE REPORT</th>");
                    sb.Append("<th style='text-align:center;padding:3px;font-size:8pt'>Month: <span>" + MonthName + "-" + ObjMonthlyPerformaceReport.YearNo + "</span></th>");
                    sb.Append("</tr>");
                    sb.Append("</thead>");
                    sb.Append("</table><br/><br/>");

                    sb.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;repeat-header: yes;'>");
                    sb.Append("<thead>");
                    sb.Append("<tr>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;padding:5px;'>Particulars</th>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Month Under Report</th>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Previous Month</th>");
                    sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Corresponding Month of Previous Year</th>");
                    sb.Append("</tr>");
                    sb.Append("</thead>");
                    sb.Append("<tbody>");

                    foreach (var item in LstMonthlyPerformaceReport.OrderBy(x => x.DescriptionId).ToList())
                    {
                        if (item.IsHeader)
                        {
                            sb.Append("<tr>");
                            sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                            sb.Append("<strong>" + item.Particulars + "</strong>");
                            sb.Append("</td>");
                            sb.Append("</tr>");
                        }
                        else
                        {
                            sb.Append("<tr>");
                            sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                            sb.Append("<span>" + item.Particulars + "</span>");
                            sb.Append("</td>");
                            sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + item.MonthUnderReport + "</span></td>");
                            sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + item.PrevMonth + "</span></td>");
                            sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + item.CorresMonthPrevYear + "</span></td>");
                            sb.Append("</tr>");
                        }
                    }

                    sb.Append("<tr>");
                    sb.Append("<td colspan='2'style='padding:3px;vertical-align:top;'>");
                    sb.Append("<span>To:</span>");
                    sb.Append("<table style='width:35%;border:1px solid #000;'><tbody><tr><td><br/><br/><br/></td></tr></tbody></table>");
                    sb.Append("</td>");
                    sb.Append("<td colspan='2'style='padding:3px;vertical-align:bottom;text-align:center;'>");
                    sb.Append("<strong>Signature of Manager CFS/ICD</strong>");
                    sb.Append("</td>");
                    sb.Append("</tr>");
                    sb.Append("</tbody>");
                    sb.Append("</table>");


                    //sb.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                    //sb.Append("<thead>");
                    //sb.Append("<tr>");
                    //sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;padding:5px;'>Particulars</th>");
                    //sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Month Under Report</th>");
                    //sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Previous Month</th>");
                    //sb.Append("<th style='text-align:center;border:1px solid #000;text-align:center;width:15%;padding:5px;'>Corresponding Month of Previous Year</th>");
                    //sb.Append("</tr>");
                    //sb.Append("</thead>");
                    //sb.Append("<tbody>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>1. Import Container Received</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) From ICD</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 1).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) From Gateway ports by Road</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 2).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>2.Import Container Handled (Including reefers)</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Containers Destuffed</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 3).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) Containers despatched factor for destuffing</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 4).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>c) ");
                    //sb.Append("Total Containers Handled 2(a+b) </span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 5).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>3.Export Container Handled (Including reefers)</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Containers Stuffing at CFS/ICD</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 6).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) Containers moved/Shifted to rail head/ICD</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 7).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>c) Containers moved to Gateway Ports by Road</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 8).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>d)  Containers Shifted at factories and moved</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 9).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>e) Total Export Containers Handled 3(b+c+d)  </span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 10).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>4.Export Container Handled (Including reefers)</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<span style='padding-left:10px;'>a) Empty Containers received at ICD/CFS</span>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span style='padding-left:20px;'>a) From other ICD</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 11).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span style='padding-left:20px;'>b) From Gate way ports by Road</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 12).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 12).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 12).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<span style='padding-left:10px;'>b) Empty Containers dispatched/moved out from ICD/CFS</span>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span style='padding-left:20px;'>a) To other ICD/Yards</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 13).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span style='padding-left:20px;'>b) To Gate way ports by road</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 14).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span style='padding-left:20px;'>c) Total Export containers handled 4(a+b) </span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 15).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>5.Total Containers Handles during the month</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Import</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 16).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 16).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 16).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) Export</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 17).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>c) Empty</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 18).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>Total (a+b+c) </span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 19).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>6. Exported</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Quantity(MT)</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 20).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) FOB Value (Rs.In Lacs)</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 21).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>7.Cargo Exported</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Quantity(MT)</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 22).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 22).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 22).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) FOB Value (Rs.In Lacs)</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 23).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>8.Income from Refer Containers</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Export(Rs.)</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 24).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) Import(Rs.)</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 25).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>9.Progressive total of containers handled</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Import i) Dry ii) Refer</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 26).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b)  Export i) Dry ii) Refer</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 27).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>c)  Empty</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 28).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>Total (a+b+c) </span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 29).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='4'style='text-align:center;border:1px solid #000;text-align:left;padding:3px;'>");
                    //sb.Append("<strong>10.Financial Performance</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>a) Income</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 30).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>b) Expenditure</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 31).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:left;padding:3px;padding-left:15px;'>");
                    //sb.Append("<span>c) Profit and Loss</span>");
                    //sb.Append("</td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 32).Select(x => x.MonthUnderReport).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 32).Select(x => x.PrevMonth).FirstOrDefault() + "</span></td>");
                    //sb.Append("<td style='text-align:center;border:1px solid #000;text-align:right;padding:3px;'><span>" + LstMonthlyPerformaceReport.Where(x => x.DescriptionId == 32).Select(x => x.CorresMonthPrevYear).FirstOrDefault() + "</span></td>");
                    //sb.Append("</tr>");
                    //sb.Append("<tr>");
                    //sb.Append("<td colspan='2'style='padding:3px;vertical-align:top;'>");
                    //sb.Append("<span>To:</span>");
                    //sb.Append("<table style='width:35%;border:1px solid #000;'><tbody><tr><td><br/><br/><br/></td></tr></tbody></table>");
                    //sb.Append("</td>");
                    //sb.Append("<td colspan='2'style='padding:3px;vertical-align:bottom;text-align:center;'>");
                    //sb.Append("<strong>Signature of Manager CFS/ICD</strong>");
                    //sb.Append("</td>");
                    //sb.Append("</tr>");
                    //sb.Append("</tbody>");
                    //sb.Append("</table>");
                }

                Pages[0] = sb.ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyPerformanceRepor/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyPerformanceRepor/" + FileName };
                return Json(ObjResult, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }
        }

        #endregion

        #region Bulk Debit Note
        [HttpGet]
        public ActionResult GetBulkDeditNote()
        {
            return PartialView();
        }
        /*  [HttpPost]
          [CustomValidateAntiForgeryToken]
          public JsonResult GetBulkDebitNoteReport(FormCollection fc)
          {
              ReportRepository objRR = new ReportRepository();
              objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
              List<string> lststring = new List<string>();
              if (objRR.DBResponse.Data != null)
              {
                  lststring = (List<string>)objRR.DBResponse.Data;
                  List<string> pdfPages = new List<string>();
                  /*PDF Gneration*/
        /* string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/";
         string FileName = "BulkDRNote" + "DR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
         if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
             Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
         lststring.ForEach(item =>
         {
             if (!string.IsNullOrEmpty(item) && item != "")
             {
                 item = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                 pdfPages.Add(item.Replace("|_br_|", "<br/>"));
             }
         });
         //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
         //{
         //    rh.GeneratePDF(Path + FileName, pdfPages.ToArray());
         //}
         using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
         {
             ObjPdf.HeadOffice = this.HeadOffice;
             ObjPdf.HOAddress = this.HOAddress;
             ObjPdf.ZonalOffice = this.ZonalOffice;
             ObjPdf.ZOAddress = this.ZOAddress;
             ObjPdf.GeneratePDF(Path + FileName, pdfPages.ToArray());

         }
         return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/" + FileName });
     }
     else
         return Json(new { Status = -1, Message = "No Data" });
 }*/
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintDRNote(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            Wlj_ReportRepository objRepo = new Wlj_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            string Note = "DEBIT NOTE";

            objRepo.PrintDetailsForBulkCRNote(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "D");
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateCRNotePDF(objCR, Note);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "NO DATA FOUND" });
            }
        }
        #endregion


        #region register of outward supply

        [HttpGet]
        public ActionResult RegisterOfOutwardSupply()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfOutwardSupply(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var ObjRR = new ReportRepository();
                ObjRR.GetRegisterofOutwardSupply(date1, date2);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                }
            }
            // return null;
        }

        #endregion

        #region register of outward supply

        [HttpGet]
        public ActionResult UnpaidInvoiceList()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult UnpaidInvoiceList(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var ObjRR = new ReportRepository();
                ObjRR.GetUnpaidInvoiceList(date1, date2);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "UnpaidInvoiceList.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "UnpaidInvoiceList.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "UnpaidInvoiceList.xlsx");
                }
            }
            // return null;
        }

        #endregion

        #region CartingOrderRegister

        [HttpGet]
        public ActionResult CartingOrderRegisterReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCartingOrderRegister(CartingOrderRegister ObjCartingOrderRegister)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<CartingOrderRegister> LstCartingOrderRegister = new List<CartingOrderRegister>();
            // Login objLogin = (Login)Session["LoginUser"];


            ObjRR.CartingOrderRegister(ObjCartingOrderRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstCartingOrderRegister = (List<CartingOrderRegister>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCartingOrderRegisterPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "CartingOrderRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CartingOrderRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CartingOrderRegister/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion


        #region CartingOrderRegister

        [HttpGet]
        public ActionResult StuffingRegisterReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetStuffingRegister(StuffingRegister ObjStuffingRegister)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<StuffingRegister> LstStuffingRegister = new List<StuffingRegister>();
            // Login objLogin = (Login)Session["LoginUser"];


            ObjRR.StuffingRegister(ObjStuffingRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstStuffingRegister = (List<StuffingRegister>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateStuffingRegisterPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "StuffingRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/StuffingRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/StuffingRegister/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region-- WEEKLY REPORT --

        [HttpGet]
        public ActionResult WeeklyVCReport()
        {
            return PartialView();
        }

        [HttpGet]
        public JsonResult GetVCDetails(string date1, string date2)
        {
            try
            {
                var dt1 = DateTime.ParseExact(date1, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                var dt2 = DateTime.ParseExact(date2, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                /*if (dt2.DayOfWeek.ToString().ToLower() != System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString().ToLower())
                {
                    return Json(new { Status = 2, Message = "Report Only Show on " + System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString() }, JsonRequestBehavior.AllowGet);
                }
                else
                {*/
                var doa = Enumerable.Range(0, 1 + dt2.Subtract(dt1).Days).Select(offset => dt1.AddDays(offset)).ToArray();
                IList<string> formatted = new List<string>();
                doa.ToList().ForEach(item =>
                {
                    formatted.Add(item.ToString("yyyyMMdd"));
                });
                var XMLText = Utility.CreateXML(formatted);
                var reportRepo = new ReportRepository();
                reportRepo.VCCapacityDetailsforKolkata(XMLText, date1, date2);

                return Json(new { Status = 1, Message = "Data Detected", Data = reportRepo.DBResponse.Data }, JsonRequestBehavior.AllowGet);
                /*}*/
            }
            catch (Exception e)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!" }, JsonRequestBehavior.AllowGet);
            }
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult WeeklyVCReport(FormCollection fc)
        {
            var date = Convert.ToDateTime(fc["VCTdate"].ToString());
            var cfscap = Convert.ToDecimal(fc["TWcfscap"].ToString());
            var bndcap = Convert.ToDecimal(fc["TWbndcap"].ToString());
            var total1 = Convert.ToDecimal(fc["TWtotalcap"].ToString());
            var cfsutl = Convert.ToDecimal(fc["TWcfsutl"].ToString());
            var bndutl = Convert.ToDecimal(fc["TWbndutl"].ToString());
            var total2 = Convert.ToDecimal(fc["TWtotalutl"].ToString());
            var reportRepo = new ReportRepository();
            reportRepo.AddVCDetails(date, cfscap, bndcap, cfsutl, bndutl);

            return Json(new { Status = 1, Message = "VC Report Saved Succesfully", Data = reportRepo.DBResponse.Data }, JsonRequestBehavior.DenyGet);
        }

        [HttpPost, ValidateInput(false)]
        public JsonResult GeneratePDF(FormCollection fc)
        {
            try
            {
                var pages = new string[2];
                var type = fc["type"].ToString();
                var id = fc["id"].ToString();
                pages[0] = fc["page"].ToString();
                if (id == "")
                {
                    //string ad = "AB1CE12354F";
                    //Random rnd = new Random();
                    //id = new string(Enumerable.Repeat(ad, ad.Length).Select(s => s[rnd.Next(ad.Length)]).ToArray());
                    id = ((Login)(Session["LoginUser"])).Uid.ToString() + "" + DateTime.Now.ToString().Replace('/', '_').Replace(' ', '_').Replace(':', '_');
                }
                id = id.Replace('/', '_');
                var fileName = id + ".pdf";
                //  var fileName = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
                if (!Directory.Exists(PdfDirectory))
                    Directory.CreateDirectory(PdfDirectory);
                //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    rh.GeneratePDF(PdfDirectory + fileName, pages);
                //}

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(PdfDirectory + fileName, pages);

                }
                return Json(new { Status = 1, Message = "/Docs/" + type + "/" + fileName }, JsonRequestBehavior.DenyGet);// Data = fileName 
            }
            catch (Exception ex)
            {
                return Json(new { Status = "1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Stock Position Report
        [HttpGet]
        public ActionResult StockPositionReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetStockPositionReport(StockPositionReportModel ObjStockPosition)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<StockPositionReportModel> LstStockPosition = new List<StockPositionReportModel>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.StockPositionReport(ObjStockPosition);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockPosition = (List<StockPositionReportModel>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateStockPositionReportPDF(FormCollection fc)
        {
            try
            {

                var Pages = new string[1];
                var FileName = "StockPositionReport.pdf";
                Pages[0] = fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ChequeSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ChequeSummary/" + FileName };
                return Json(ObjResult);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region Inventory Report Of Cargo & Container
        [HttpGet]
        public ActionResult InventoryReportCargoContainer()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetInventoryReportCargoContainer(InventoryReportModel ObjInventoryReportModel)
        {
            ReportRepository ObjRR = new ReportRepository();
            InventoryReportModel ObjLstInventoryReportModel = new InventoryReportModel();
            //Login objLogin = (Login)Session["LoginUser"];
            ObjRR.InventoryReportCargoContainer(ObjInventoryReportModel);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                ObjLstInventoryReportModel = (InventoryReportModel)ObjRR.DBResponse.Data;

                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateInventoryReportCargoContainerPDF(FormCollection fc)
        {
            try
            {


                var Pages = new string[1];
                var FileName = "InventoryReportCargoContainer.pdf";
                Pages[0] = fc["Page"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/InventoryReportCargoContainer/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/InventoryReportCargoContainer/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region Daily valuation Report of Import Cargo
        [HttpGet]
        public ActionResult DailyValuationReport()
        {
            ReportRepository objRR = new ReportRepository();
            objRR.GetAllEnteredContainer();
            if (objRR.DBResponse.Data != null)
                ViewBag.ContainerList = objRR.DBResponse.Data;
            else ViewBag.ContainerList = null;
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetDailyValuationReport(string ContainerNo, string BOL, string BOE)
        {
            ReportRepository objRR = new ReportRepository();
            objRR.DailyvaluationReport(ContainerNo, BOL, BOE);
            return Json(objRR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region Container Status

        [HttpGet]
        public ActionResult LoadContainerStatus()
        {
            bool ShippingLine;
            ContainerStatus ObjContainer = new ContainerStatus();
            ReportRepository ObjRR = new ReportRepository();
            ExportRepository ObjER = new ExportRepository();
            ShippingLine = ((Login)Session["LoginUser"]).ShippingLine;
            if (ShippingLine == true)
            {
                ObjContainer.ShippingLineName = ((Login)Session["LoginUser"]).Name;
                ObjContainer.ShippingLineId = ((Login)Session["LoginUser"]).EximTraderId;
                List<ShippingLineList> LstShippingLine = new List<ShippingLineList>();
                LstShippingLine.Add(new ShippingLineList
                {
                    ShippingLineName = ((Login)Session["LoginUser"]).Name,
                    ShippingLineId = ((Login)Session["LoginUser"]).EximTraderId
                });
                ViewBag.ShippingLineList = new SelectList(LstShippingLine, "ShippingLineId", "ShippingLineName");
                ObjRR.GetContainerNoForContStatus(ObjContainer.ShippingLineId);
                if (ObjRR.DBResponse.Data != null)
                    ViewBag.ContainerList = new SelectList((List<ContainerList>)ObjRR.DBResponse.Data, "ContainerNo", "ContainerNo");
                else
                    ViewBag.ContainerList = null;
            }
            else
            {
                ViewBag.ContainerList = null;
                ObjER.GetShippingLine();
                if (ObjER.DBResponse.Data != null)
                    ViewBag.ShippingLineList = new SelectList((List<Areas.Export.Models.ShippingLine>)ObjER.DBResponse.Data, "ShippingLineId", "ShippingLineName");
                else
                    ViewBag.ShippingLineList = null;
            }

            return PartialView(ObjContainer);
        }

        [HttpGet]
        public JsonResult GetContainerNoList(int ShippingLineId)
        {
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.GetContainerNoForContStatus(ShippingLineId);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult GetContainerStatusDetail(int ShippingLineId, string ContainerNo)
        {
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.GetContainerDetForContStatus(ShippingLineId, ContainerNo);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion


        #region Stuffing Request Report

        [HttpGet]
        public ActionResult LoadStuffingReqReport()
        {
            return PartialView("StuffingReqReport");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetStuffingReqDetails(StuffingRequest ObjStuffingRequest)
        {
            if (ModelState.IsValid)
            {
                ReportRepository ObjRR = new ReportRepository();
                ObjRR.GetStuffingReqReport(ObjStuffingRequest.FromDate, ObjStuffingRequest.ToDate);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForStuffingReq(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "StuffingRequestReport.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/StuffingRequest/";
                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/StuffingRequest/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }
        #endregion


        #region Job Order Sheet Report
        [HttpGet]
        public ActionResult JobOrderSheetReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetJobOrderSheetReport(JobOrderSheet ObjJobOrderSheet)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<JobOrderSheet> LstJobOrderSheet = new List<JobOrderSheet>();
            // Login objLogin = (Login)Session["LoginUser"];


            ObjRR.JobOrderSheet(ObjJobOrderSheet);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstJobOrderSheet = (List<JobOrderSheet>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateJobOrderSheetPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "JobOrderSheet.pdf";
                Pages[0] = fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/JobOrderSheet/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{
                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/JobOrderSheet/" + FileName };
                return Json(ObjResult);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region Carting Work Order Report
        [HttpGet]
        public ActionResult CartingWorkOrderReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCartingWorkOrderReport(CartingWorkOrder ObjCartingWorkOrder)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<CartingWorkOrder> LstCartingWorkOrder = new List<CartingWorkOrder>();
            ObjRR.CartingWorkOrder(ObjCartingWorkOrder);
            if (ObjRR.DBResponse.Data != null)
            {
                LstCartingWorkOrder = (List<CartingWorkOrder>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCartingWorkOrderPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "CartingWorkOrder.pdf";
                Pages[0] = fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CartingWorkOrder/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CartingWorkOrder/" + FileName };
                return Json(ObjResult);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region Delivery Order Register
        [HttpGet]
        public ActionResult LoadDeliveryOrderReport()
        {
            return PartialView("DeliveryOrderReg");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetDeliveryOrderDetails(DeliveryOrderReg ObjStuffingRequest)
        {
            if (ModelState.IsValid)
            {
                ReportRepository ObjRR = new ReportRepository();
                ObjRR.DeliveryOrderRegisterReport(ObjStuffingRequest.FromDate, ObjStuffingRequest.ToDate);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForDeliveryOrder(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "DeliveryOrderReport.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/DeliveryOrder/";
                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                // Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", "");
                using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    Rh.HeadOffice = this.HeadOffice;
                    Rh.HOAddress = this.HOAddress;
                    Rh.ZonalOffice = this.ZonalOffice;
                    Rh.ZOAddress = this.ZOAddress;
                    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DeliveryOrder/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        #endregion


        #region BTT
        [HttpGet]
        public ActionResult GetBTTReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBTTReportDetails(BTTDate objBTT)
        {
            ReportRepository objRR = new ReportRepository();
            List<BTT> lstBTT = new List<BTT>();
            objRR.GetBTTDetails(objBTT.FromDate, objBTT.ToDate);
            if (objRR.DBResponse.Data != null)
            {
                lstBTT = (List<BTT>)objRR.DBResponse.Data;
                string html = "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='9' style='font-weight:600;font-size:10pt;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:5px;'>Excess Cargo (Back to Town) Daily Report <br/>From <span>" + objBTT.FromDate + "</span> To <span>" + objBTT.ToDate + "</span></th></tr><tr><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Ship Bill No/ Check List/ Commercial Invoice</th><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:10%;'>Date</th><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Commodity</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:10%;'>Received</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Exported</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Back To Town</th></tr><tr><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:8%;'>No of Packages</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:8%;'>WT</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:8%;'>No of Pkg</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:8%;'>WT</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:8%;'>No of Pkg</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:8%;'>WT</th></tr></thead><tbody>";
                lstBTT.ForEach(item =>
                {
                    html += "<tr><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ShippingBillNo + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.BTTCargoEntryDate + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.CommName + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.NoOfUnits + "</td><td style='text-align:right;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.GrossWeight + "</td><td style='text-align:right;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ENoOfUnits + "</td><td style='text-align:right;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.EGrossWeight + "</td><td style='text-align:right;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.BTTQuantity + "</td><td style='text-align:right;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.BTTWeight + "</td></tr>";
                });
                html += "</tbody></table>";
                if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report"))
                    Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID + "/Report");
                if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/BTTReport.pdf"))
                    System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/BTTReport.pdf");
                using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    rh.HeadOffice = this.HeadOffice;
                    rh.HOAddress = this.HOAddress;
                    rh.ZonalOffice = this.ZonalOffice;
                    rh.ZOAddress = this.ZOAddress;
                    rh.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/BTTReport.pdf", html);
                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/BTTReport.pdf" });
            }
            else return Json(new { Status = -1, Message = "Error" });
        }
        #endregion

        #region Cargo Daily Report

        [HttpGet]
        public ActionResult LoadCargoDailyReport()
        {
            return PartialView("CargoDailyReport");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetCargoReportDetails(CargoDailyReport ObjCargoDailyReport)
        {
            if (ModelState.IsValid)
            {
                ReportRepository ObjRR = new ReportRepository();
                ObjRR.GetCargoDailyReport(ObjCargoDailyReport.FromDate, ObjCargoDailyReport.ToDate);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForCargoReport(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "CargoDailyReport.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/CargoDaily/";
                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoDaily/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        #endregion     



        #region Export Loaded Container Out

        [HttpGet]
        public ActionResult LoadExpLoadedContainerOut()
        {
            return PartialView("LoadedContainerOut");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetExpLoadedContrDet(ExpLoadedContrOut ObjLoadedContr)
        {
            if (ModelState.IsValid)
            {
                ReportRepository ObjRR = new ReportRepository();
                ObjRR.GetExpLoadedContrOut(ObjLoadedContr.FromDate, ObjLoadedContr.ToDate);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForExpLoadedContr(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "LoadedContainerOutReport.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ExportLoadedContainer/";
                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    Rh.HeadOffice = this.HeadOffice;
                    Rh.HOAddress = this.HOAddress;
                    Rh.ZonalOffice = this.ZonalOffice;
                    Rh.ZOAddress = this.ZOAddress;
                    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ExportLoadedContainer/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        #endregion

        #region Daily valuation report of export cargo
        [HttpGet]
        public ActionResult GetValuationReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetValuationReportDet(BTTDate date)
        {
            ReportRepository objRR = new ReportRepository();
            objRR.DailyValuationofExp(date.FromDate, date.ToDate);
            if (objRR.DBResponse.Data != null)
            {
                List<DailyValuationOfExpCrgo> lstExp = new List<DailyValuationOfExpCrgo>();
                lstExp = (List<DailyValuationOfExpCrgo>)objRR.DBResponse.Data;
                if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report"))
                    Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID + "/Report");
                if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ExportCargo.pdf"))
                    System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ExportCargo.pdf");
                string html = "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='7' style='font-size:11pt;font-family:Verdana,Arial,San-serif;text-align:center;'>Daily Valuation Report of Export Cargo<br/> From " + date.FromDate + " To " + date.ToDate + "</th></tr><tr><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Shipping Bill No/Comm. Inv No/Packing List No</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Commodity</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>No of Packages</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>WT</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Value [FOB]</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Party</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Insurance By</th></tr></thead><tbody>";
                lstExp.ForEach(item =>
                {
                    html += "<tr><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ShippingBillNo + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.CommodityName + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Units + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Weight + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.FobValue + "</td><td style='text-align:right;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.CHAName + "</td><td style='text-align:right;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.InsuredBy + "</td></tr>";
                });
                html += "</tbody></table>";
                //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    rh.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ExportCargo.pdf", html);
                //}

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ExportCargo.pdf", html);

                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ExportCargo.pdf" });
            }
            return Json(new { Status = -1, Message = "No Data" });
        }
        #endregion

        #region Statement of Reefer Container 
        [HttpGet]
        public ActionResult GetStmtRefContReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetStmtRefContReportDet(BTTDate date)
        {
            ReportRepository objRR = new ReportRepository();
            objRR.StatementOfReeferContainer(date.FromDate, date.ToDate);
            if (objRR.DBResponse.Data != null)
            {
                List<StmtRefCont> lstCont = new List<StmtRefCont>();
                lstCont = (List<StmtRefCont>)objRR.DBResponse.Data;
                if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report"))
                    Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID + "/Report");
                if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/StmtOfRefCont.pdf"))
                    System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/StmtOfRefCont.pdf");
                string html = "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='6' style='font-size:11pt;font-family:Verdana,Arial,San-serif;text-align:center;'>Statement of Reefer Container<br/> From " + date.FromDate + " To " + date.ToDate + "</th></tr><tr><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Container No</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Size</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Shipping Line</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Loaded / Empty</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Date of Arrival</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Date of Exit</th></tr></thead><tbody>";
                lstCont.ForEach(item =>
                {
                    html += "<tr><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ContainerNo + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Size + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ShippingLineName + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ContainerType + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.GateEntryDate + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.GateExitDate + "</td></tr>";
                });
                html += "</tbody></table>";
                using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    rh.HeadOffice = this.HeadOffice;
                    rh.HOAddress = this.HOAddress;
                    rh.ZonalOffice = this.ZonalOffice;
                    rh.ZOAddress = this.ZOAddress;
                    rh.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/StmtOfRefCont.pdf", html);
                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/StmtOfRefCont.pdf" });
            }
            return Json(new { Status = -1, Message = "No Data" });
        }
        #endregion



        #region Cargo Stock Register
        [HttpGet]
        public ActionResult CargoStockRegister()
        {
            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCargoStockRegister(CargoStockRegister ObjCargoStockRegister)
        {
            ReportRepository ObjRR = new ReportRepository();
            CargoStockRegister _objCargoStockRegister = new CargoStockRegister();


            ObjRR.CargoStockRegister(ObjCargoStockRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //_objCargoStockRegister.exportCargoStocklst = (List<exportCargoStock>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCargoStockRegisterPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "CargoStockRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CargoStockRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoStockRegister/" + FileName };
                return Json(ObjResult);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region Container Master Register
        [HttpGet]
        public ActionResult GetContainerMasterRegister()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetContainerMasterRegisterDet(BTTDate date)
        {
            ReportRepository objRR = new ReportRepository();
            objRR.ContainerMasterRegister(date.FromDate, date.ToDate);
            if (objRR.DBResponse.Data != null)
            {
                List<ContainerMstReg> lstCont = new List<ContainerMstReg>();
                lstCont = (List<ContainerMstReg>)objRR.DBResponse.Data;
                if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report"))
                    Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID + "/Report");
                if (System.IO.File.Exists(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ContainerMstReg.pdf"))
                    System.IO.File.Delete(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ContainerMstReg.pdf");
                string html = "<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='17' style='text-align:center;font-size:10pt;'>Container Master Register From <span>" + date.FromDate + "</span> To <span>" + date.ToDate + "</span><br/><br/></th></tr><tr><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Date of Arrival</th><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>CFS Code</th><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Container No.</th><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Size</th><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Loaded /Empty</th><th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Shipping Line</th> <th rowspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Source</th><th colspan='2' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Import</th><th colspan='4' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Empty Movement</th><th colspan='4' style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>Export</th></tr><tr><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Date of Destuffing</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Date of Delivery</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Received Date </th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Utilization</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Out Date</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Destination</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Stuffing Date</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Exit Date</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Destination</th><th style='font-weight:600;text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;width:7%;'>Remarks</th></tr></thead><tbody>";
                lstCont.ForEach(item =>
                {
                    html += "<tr><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.EntryDate + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.CFSCode + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ContainerNo + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Size + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ContainerType + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ShippingLine + "</td><td style='text-align:left;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'></td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.DestuffingDate + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.DeliveryDate + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.ReceivedDate + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Utilization + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.OExitDate + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'></td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.Stuffingdate + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'>" + item.EExitDate + "</td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'></td><td style='text-align:center;border:1px solid #000;border-bottom:1px solid #000;padding:3px;'></td></tr>";
                });
                html += "</tbody></table>";
                using (var rh = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    rh.HeadOffice = this.HeadOffice;
                    rh.HOAddress = this.HOAddress;
                    rh.ZonalOffice = this.ZonalOffice;
                    rh.ZOAddress = this.ZOAddress;
                    rh.GeneratePDF(Server.MapPath("~/Docs/") + Session.SessionID + "/Report/ContainerMstReg.pdf", html);
                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ContainerMstReg.pdf" });
            }
            else return Json(new { Status = -1, Message = "No Data" });
        }
        #endregion

        #region PD A/c Statement

        [HttpGet]
        public ActionResult LoadPDAStatement()
        {
            var Months = new Dictionary<int, string>();
            for (Int16 i = 1; i <= 12; i++)
            {
                Months.Add(i, System.Globalization.DateTimeFormatInfo.InvariantInfo.MonthNames[i - 1]);
            }
            ViewBag.Months = new SelectList((IEnumerable)Months, "Key", "Value", DateTime.Today.Month);
            return PartialView("PDAStatement");
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPDAStatement(PDAStatement ObjPDA)
        {
            if (ModelState.IsValid)
            {
                ReportRepository ObjRR = new ReportRepository();
                ObjRR.GetPDAStatement(ObjPDA.Month, ObjPDA.Year);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForPDAStatement(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "PDAStatement.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/PDAStatement/";
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    Rh.HeadOffice = this.HeadOffice;
                    Rh.HOAddress = this.HOAddress;
                    Rh.ZonalOffice = this.ZonalOffice;
                    Rh.ZOAddress = this.ZOAddress;
                    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/PDAStatement/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        #endregion

        #region TDS Statement
        [HttpGet]
        public ActionResult TDSStatement()
        {
            return PartialView();
        }
        [HttpPost, ValidateAntiForgeryToken]
        public JsonResult GetTDSStatement(BTTDate objDt)
        {
            if (ModelState.IsValid)
            {
                ReportRepository objRR = new ReportRepository();
                objRR.TdsStatement(objDt.FromDate, objDt.ToDate);
                if (objRR.DBResponse.Data != null)
                {
                    List<TDSStatement> lstTds = new List<TDSStatement>();
                    lstTds = (List<TDSStatement>)objRR.DBResponse.Data;
                    string html = GeneratePDFForTDSStmt(lstTds, objDt);
                    return Json(new { Status = 1, Message = html });
                }
                return Json(new { Status = -1, Message = "No Data" });
            }
            else
                return Json(new { Status = -1, Message = "No Data" });
        }
        [NonAction]
        public string GeneratePDFForTDSStmt(List<TDSStatement> lstTds, BTTDate objDt)
        {
            int[] ArrayParty = lstTds.Select(x => x.PartyId).Distinct().ToArray();
            string html = "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='8' style='font-weight:600;text-align:center;border:1px solid #000;padding:5px;'>TDS Statement for the period <span>" + objDt.FromDate + "</span> To <span>" + objDt.ToDate + "</span></th></tr><tr><th colspan='2' style='border-left: 1px solid #000;'></th><th colspan='6' style='font-weight:600;text-align:center;border-bottom:1px solid #000;border-left:1px solid #000;border-right:1px solid #000;padding:5px;'>TDS</th></tr><tr><th style='border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 5px;'>Date</th><th style='border-bottom: 1px solid #000;padding: 5px;'>CR. No.</th><th colspan='2' style='border-bottom: 1px solid #000;border-right: 1px solid #000;border-left: 1px solid #000;padding: 5px;'>Collection</th><th style='border-bottom: 1px solid #000;border-right: 1px solid #000;padding: 5px;'>CWC</th><th style='border-bottom: 1px solid #000;border-right: 1px solid #000;padding: 5px;'>H &amp; T</th><th style='border-bottom: 1px solid #000;border-right: 1px solid #000;padding: 5px;'>Received TDS</th><th style='border-bottom: 1px solid #000;border-right: 1px solid #000;padding: 5px;'>Total</th></tr></thead><tbody>";
            for (int i = 0; i < ArrayParty.Length; i++)
            {
                decimal TdsCol, CWCTds, HTTds, Tds = 0, ReceivedTDS = 0;
                html += "<tr><td colspan='8' style='text-align: left;padding: 4px;'><br/>" + lstTds.Where(x => x.PartyId == ArrayParty[i]).FirstOrDefault().PartyName.ToString() + "</td></tr>";
                lstTds.Where(x => x.PartyId == ArrayParty[i]).ToList().ForEach(item =>
                {
                    TdsCol = item.TDSCol;
                    Tds = Math.Round(item.TDS, 2);
                    CWCTds = Math.Round(item.CWCTDS, 2);
                    HTTds = Math.Round(item.HTTDS, 2);
                    ReceivedTDS = Math.Round(item.ReceivedTDS, 2);
                    html += "<tr><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: left;'>" + item.ReceiptDate + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: left;'>" + item.ReceiptNo + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: left;'></td><td style='border-top: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + TdsCol + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + CWCTds + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + HTTds + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-right: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + ReceivedTDS + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-right: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Tds + "</td></tr>";
                });
                html += "<tr><td colspan='8'></td></tr><tr><td colspan='2'></td><td colspan='2' style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.TDSCol).Sum(), 2) + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.CWCTDS).Sum(), 2) + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.HTTDS).Sum(), 2) + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;border-right: 1px solid #000; padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.ReceivedTDS).Sum(), 2) + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;border-right: 1px solid #000; padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.TDS).Sum(), 2) + "</td></tr>";
            }
            html += "</tbody><tfoot><tr><td colspan='8'></td></tr><tr><td colspan='3' style='text-align: left;'>Total:</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + lstTds.Select(x => x.TDSCol).Sum() + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + Math.Round(lstTds.Select(x => x.CWCTDS).Sum(), 2) + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + Math.Round(lstTds.Select(x => x.HTTDS).Sum(), 2) + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + lstTds.Select(x => x.ReceivedTDS).Sum() + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + Math.Round(lstTds.Select(x => x.TDS).Sum(), 2) + "</td></tr></tfoot></table>";
            if (!Directory.Exists(Server.MapPath("~/Docs/Report/") + Session.SessionID))
                Directory.CreateDirectory(Server.MapPath("~/Docs/Report/") + Session.SessionID);
            if (System.IO.File.Exists(Server.MapPath("~/Docs/Report/") + Session.SessionID + "/TdsStatement.pdf"))
                System.IO.File.Delete(Server.MapPath("~/Docs/Report/") + Session.SessionID + "/TdsStatement.pdf");
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
            {
                rh.HeadOffice = this.HeadOffice;
                rh.HOAddress = this.HOAddress;
                rh.ZonalOffice = this.ZonalOffice;
                rh.ZOAddress = this.ZOAddress;
                rh.GeneratePDF(Server.MapPath("~/Docs/Report/") + Session.SessionID + "/TdsStatement.pdf", html);
            }
            return "/Docs/Report/" + Session.SessionID + "/TdsStatement.pdf";
        }
        #endregion

        #region PaymentVoucher Statement (Imprest Cash / Temporary Advance Report)
        [HttpGet]
        public ActionResult PaymentVoucherReport()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetPaymentVoucherReport(string Fdt, string Tdt, string Purpose)
        {
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.GetPaymentVoucherReport(Fdt, Tdt, Purpose);
            if (ObjRR.DBResponse.Data != null)
            {
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }
        #endregion

        #region Seis Data
        public ActionResult SEIS()
        {
            return PartialView("");
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult DownloadSeisData(SEISDataViewModel vm)
        {
            try
            {
                var PeriodFrom = Convert.ToDateTime(vm.PeriodFrom);
                var PeriodTo = Convert.ToDateTime(vm.PeriodTo);
                var ObjRR = new ReportRepository();
                ObjRR.GetSeisData(PeriodFrom, PeriodTo, vm.IsImportExport);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "SEIS.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "SEIS.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "SEIS.xlsx");
                }
            }

        }

        #endregion
        #region OUTWardreristerKolkatta
        [HttpGet]
        public ActionResult RegisterOfOutwardSupplyByType()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfOutwardSupplyByType(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new ReportRepository();
                ObjRR.GetRegisterofOutwardSupplybyINVTYPE(date1, date2, Type);

                if (Type == "Inv") { Type = "Invoice"; }
                if (Type == "C") { Type = "Credit"; }
                if (Type == "D") { Type = "Debit"; }
                if (Type == "Unpaid") { Type = "Unpaid"; }
                if (Type == "CancelInv") { Type = "Cancel Invoice"; }

                excelName = "RegisterofOutwardSupply" + "_" + Type + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                }
            }
            // return null;
        }
        #endregion

        [HttpPost]
        public JsonResult GetMiscPrint(string InvoiceNo)
        {
            string FilePath = "";

            ReportRepository obj = new ReportRepository();
            obj.GenericMISCForPrint(InvoiceNo);
            if (obj.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)obj.DBResponse.Data;
                FilePath = GeneratingBulkPDFMisc(ds);
                return Json(new { Status = 1, Data = FilePath });
            }
            else
                return Json(new { Status = -1, Data = "No Record Found." });

        }



        [NonAction]
        public string GeneratingBulkPDFMisc(DataSet ds)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";

            var SEZis = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            List<string> lstSB = new List<string>();
            String RemarksValue = "";
            string Container = "";
            //Decimal totamt = 0;

            lstInvoice.ToList().ForEach(item =>
            {
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);

                if (!System.IO.File.Exists(BQRlocation))
                {

                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "/UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "/UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);


                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    // Add Chranjit Das
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    Hdb_ReportRepository hdbObj = new Hdb_ReportRepository();
                    hdbObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    //IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom:1px solid #000; padding-bottom: 5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom:1px solid #000; padding-bottom: 5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><th colspan='6' width='50%'></th><th>:</th><td colspan='6' width='50%'></td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                /*************/
                /*Container Bind*/

                int i = 1;

                /***************/

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt;margin: 0;'>Container / CBT Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                //  if (InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT")
                //  {

                //  }
                //  else
                // {
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                // }
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                Decimal totamt = 0;
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");

                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");

                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                    totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");

                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + totamt.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");

                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/><br/><br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            FileName = "Miscellaneous" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
            }

            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/All/" + Session.SessionID + "/" + FileName;
        }




        #region MonthlyCashBookReportCompanyGST



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult MonthlyCashBookReportGst()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyCashBookReportGst(MonthlyCashBook ObjMonthlyCashBook)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<MonthlyCashBook> LstMonthlyCashBook = new List<MonthlyCashBook>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.MOnthlyCashBookGst(ObjMonthlyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {

                LstMonthlyCashBook = (List<MonthlyCashBook>)ObjRR.DBResponse.Data;
                LstMonthlyCashBook[0].OpeningBalance = Math.Ceiling((Convert.ToDecimal(LstMonthlyCashBook[0].Balance) + Convert.ToDecimal(LstMonthlyCashBook[0].BankDeposit)) - Convert.ToDecimal(LstMonthlyCashBook[0].RowTotal)).ToString();
                LstMonthlyCashBook[0].ClosingBalance = Math.Ceiling(Convert.ToDecimal(LstMonthlyCashBook[LstMonthlyCashBook.Count - 1].Balance)).ToString();
                LstMonthlyCashBook.Add(new MonthlyCashBook()
                {
                    ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",
                    Depositor = "",
                    CwcChargeTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeTAX)).ToString(),
                    CwcChargeNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CwcChargeNonTAX)).ToString(),
                    CustomRevenueTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueTAX)).ToString(),
                    CustomRevenueNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CustomRevenueNonTAX)).ToString(),
                    InsuranceTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceTAX)).ToString(),
                    InsuranceNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.InsuranceNonTAX)).ToString(),
                    PortTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortTAX)).ToString(),
                    PortNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PortNonTAX)).ToString(),
                    //LWB = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWB)).ToString(),
                    LWBTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBTAX)).ToString(),
                    LWBNonTAX = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.LWBNonTAX)).ToString(),
                    CWCCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCCGST)).ToString(),
                    CWCSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCSGST)).ToString(),
                    CWCISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CWCISGT)).ToString(),
                    HtTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtTax)).ToString(),
                    HtNonTax = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtNonTax)).ToString(),
                    HtCGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtCGST)).ToString(),
                    HtSGST = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtSGST)).ToString(),
                    HtISGT = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtISGT)).ToString(),
                    RoPdRefund = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoPdRefund)).ToString(),
                    MISC = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MISC)).ToString(),
                    PdaPLus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaPLus)).ToString(),
                    TDSPlus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSPlus)).ToString(),
                    PdaMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.PdaMinus)).ToString(),
                    Exempted = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Exempted)).ToString(),
                    TDSMinus = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TDSMinus)).ToString(),
                    HtAdjust = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.HtAdjust)).ToString(),
                    BankDeposit = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.BankDeposit)).ToString(),
                    RoundOff = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RoundOff)).ToString(),
                    RowTotal = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowTotal)).ToString(),
                    //  RowCreditNote = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.RowCreditNote)).ToString(),

                    Balance = " "
                });
                ObjRR.DBResponse.Data = LstMonthlyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlyCashBookPDFGst(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 20f, 20f, 20f, 20f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region register of outward supply for Company Gst

        [HttpGet]
        public ActionResult RegisterOfOutwardSupplyGst()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfOutwardSupplyGst(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var ComGST = fc["CompanyGST"].ToString();
                var ObjRR = new ReportRepository();
                ObjRR.GetRegisterofOutwardSupplyGst(date1, date2, ComGST);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                }
            }
            // return null;
        }

        #endregion



        #region Bulk Invoice

        [HttpGet]
        public ActionResult BulkInvoiceReportNew()
        {

            Kol_ImportRepository objImport = new Kol_ImportRepository();

            objImport.ListOfShippingLine();
            if (objImport.DBResponse.Data != null)
                ViewBag.ShippingLineList = JsonConvert.SerializeObject((List<Import.Models.ShippingLine>)objImport.DBResponse.Data);
            else
                ViewBag.ShippingLineList = null;


            objImport.ListOfCHA();
            if (objImport.DBResponse.Data != null)
                ViewBag.CHAList = JsonConvert.SerializeObject((List<Import.Models.CHA>)objImport.DBResponse.Data);
            else
                ViewBag.CHAList = null;
            return PartialView();
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkInvoiceReportNew(BulkInvoiceReport ObjBulkInvoiceReport)
        {
            if (ObjBulkInvoiceReport.InvoiceNumber == null)
            {
                ObjBulkInvoiceReport.InvoiceNumber = "";
            }
            ReportRepository ObjRR = new ReportRepository();





            Login objLogin = (Login)Session["LoginUser"];
            //When Module is selected All Condition against a party


            if (ObjBulkInvoiceReport.InvoiceModule == "All")
            {
                string ModuleName = "";
                //delete all the files in the folder before creating it
                if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
                    DeleteDirectory(deletelocation);
                }

                //get all the distinct invoice module and invoices list with respect to party and date range 
                ObjRR.ModuleListWithInvoice(ObjBulkInvoiceReport);
                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    List<dynamic> lstModule = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                    IList lstDistModule = lstModule.Select(x => x.Module).Distinct().ToList();

                    string FilePath = "";


                    foreach (string Mod in lstDistModule)
                    {
                        //lstModule.Where(x => x.Module == Mod).ToList().ForEach(itemInv =>
                        //{
                        //    String ModuleName= itemInv.Module;
                        switch (Mod)
                        {
                            //Here ds is list of invoice of a module between two dates 
                            case "IMPYard":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET FCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPDeli":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET LCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforGodown((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPLod":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "LOADED CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEXPLod((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXP":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER MOVEMENT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEXP((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPDest":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CCIN ENTRY";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforIMPDest((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BTT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BTT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTT((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "RAK":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "RAK";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforRAK((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "ECYard":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EMPTY CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforECYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "ECGodn":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "SEAL CUTTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforECGodn((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "CC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CARGO SHIFTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCC((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BND":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "FUMIGATION";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBND((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BNDadv":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EXPORT CONTAINER STUFFING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainerBNDadv((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BNDUnld":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "IMPORT TRAIN SUMMARY";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBNDUnld((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "MiscInv":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER DEBIT INVOICE";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforMiscInv((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "AUC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "Auction";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforAuc((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "Empty Container";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEC((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;


                        }


                    }
                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }

            else
            {

                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid

                if (ObjRR.DBResponse.Status == 1)
                {

                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                    string FilePath = "";
                    switch (ObjBulkInvoiceReport.InvoiceModule)
                    {
                        case "IMPYard":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDeli":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforGodown(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPLod":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEXPLod(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXP":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEXP(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDest":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforIMPDest(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTT":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTT(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "RAK":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforRAK(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "ECYard":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforECYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "ECGodn":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforECGodn(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "CC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCC(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BND":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDadv":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainerBNDadv(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDUnld":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBNDUnld(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "MiscInv":
                            ObjBulkInvoiceReport.All = "";
                            ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            FilePath = GeneratingBulkPDFforMiscInv(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "AUC":
                            ObjBulkInvoiceReport.All = "";
                            ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            FilePath = GeneratingBulkPDFforAuc(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EC":
                            ObjBulkInvoiceReport.All = "";
                            ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            FilePath = GeneratingBulkPDFforEC(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                    }

                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }
        }

        [NonAction]
        public string GeneratingBulkPDFforMiscInv(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";


            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 10px;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'></td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date </td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());

            });



            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforEC(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";


            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 10px;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>"+ elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date </td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());

            });



            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        [NonAction]
        public string GeneratingBulkPDFforContainerBNDadv(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";


            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            lstInvoice.ToList().ForEach(item =>
            {

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "/" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date </td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
                /***************/
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        [NonAction]
        public string GeneratingBulkPDFforBND(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";


            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "/" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date </td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforCC(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";


            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date </td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 0;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforECGodn(DataSet ds, string InvoiceModuleName, string All)
        {

            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";


            var BQRFileName = "";
            var BQRlocation = "";


            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            string Container = "";
            string cfscode = "";



            lstInvoice.ToList().ForEach(item =>
            {

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Arrival (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.ArrivalDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
                /***************/
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        [NonAction]
        public string GeneratingBulkPDFforYard(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<string> lstSB = new List<string>();


            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            string Container = "";
            string cfscode = "";



            lstInvoice.ToList().ForEach(item =>
            {

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Arrival (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.ArrivalDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>TCS :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.TCS.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7.5pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7.5pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7.5pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("IMG_QR", Server.MapPath("~/Content/Images/MyQRImage.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforGodown(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");

            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";


            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            string Container = "";
            string cfscode = "";



            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Arrival (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.ArrivalDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>TCS :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.TCS.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7.5pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7.5pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7.5pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforEXP(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";



            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------



                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + lstInvoice[0].irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:7pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "/" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>S.B. No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size:7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforEXPLod(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    //objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                    objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "/" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>S.B. No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 0;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Effectlogofile = Effectlogofile;
                rp.Version = Version;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforIMPDest(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");

            /*Header Part*/
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";


            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            string Container = "";
            string cfscode = "";



            lstInvoice.ToList().ForEach(item =>
            {

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size:7pt; margin-top: 0; margin-bottom:0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Arrival (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.ArrivalDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                //Added by Susmita Patra-08-05-2024

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>TCS :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.TCS.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7.5pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7.5pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7.5pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBTT(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size:7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "/" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>S.B. No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-top: 0; margin-bottom: 0;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
                /***************/
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforRAK(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    //  objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);
                    objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);


                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size:7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "/" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>S.B. No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-top: 0; margin-bottom: 0;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
                /***************/
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforECYard(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";

            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            string Container = "";
            string cfscode = "";



            lstInvoice.ToList().ForEach(item =>
            {

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Arrival (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.ArrivalDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 6pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Effectlogofile = Effectlogofile;
                rp.Version = Version;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        //Update Auction Report

        [NonAction]
        public string GeneratingBulkPDFforBNDUnld(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");

            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";


            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstShipBill = null;

            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    ReportRepository wfldObj = new ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------


                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Carting (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.CartingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "/" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Exporter/Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date </td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied(CBM)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Stuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.StuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforAuc(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            string Container = "";
            string cfscode = "";



            lstInvoice.ToList().ForEach(item =>
            {
                upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                Einvoice Eobj = new Einvoice();
                B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);
                IrnResponse objERes = new IrnResponse();
                objERes.SignedQRCode = objresponse.QrCodeBase64;
                objERes.SignedInvoice = objresponse.QrCodeJson;
                objERes.SignedQRCode = objresponse.QrCodeJson;
                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='SWACHBHARAT'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + "</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>YES</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Date</th><th>:</th><td colspan='6' width='65%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State</th><th>:</th><td colspan='6' width='65%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>State Code</th><th>:</th><td colspan='6' width='65%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Invoice Generated By</th><th>:</th><td colspan='6' width='65%'></td></tr>");
                html.Append("<tr><th colspan='6' width='35%'>Supply Type</th><th>:</th><td colspan='6' width='65%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / OBL / Shipbill Details:</b></td></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='8'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Container No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Arrival Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + " " + elem.ArrivalTime + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%' valign='top'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>Shipping Line</td><td>:</td><td colspan='6' width='50%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>CFS Code No</td><td>:</td><td colspan='6' width='50%'>" + item.CFSCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Arrival (FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.ArrivalDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing (FN/AN)/ Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of Importer</td><td>:</td><td colspan='6' width='50%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>BOE No./Date</td><td>:</td><td colspan='6' width='50%'>" + item.BOENo + "/" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Name of CHA</td><td>:</td><td colspan='6' width='50%'>" + item.CHAName + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%' style='border-left:1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='50%'>No of Packages</td><td>:</td><td colspan='6' width='50%'>" + item.TotalNoOfPackages + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Total Gross Weight</td><td>:</td><td colspan='6' width='50%'>" + item.TotalGrossWt + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Gross Weight per Package</td><td>:</td><td colspan='6' width='50%'>" + item.TotalWtPerUnit + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Storage space occupied</td><td>:</td><td colspan='6' width='50%'>" + item.TotalSpaceOccupied + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date & Time of Destuffing(FN/AN)</td><td>:</td><td colspan='6' width='50%'>" + item.DestuffingDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Date of Delivery</td><td>:</td><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Customs Examination Date</td><td>:</td><td colspan='6' width='50%'>" + item.CstmExaminationDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='50%'>Value of Cargo (CIF Value + Duty + Penalty)</td><td>:</td><td colspan='6' width='50%'>" + item.TotalValueOfCargo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Charges :</h3> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                //LOOP START
                lstCharges.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 140px;'>" + elem.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 24%;'>" + elem.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>" + elem.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 80px;'>" + elem.Rate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 130px;'>" + elem.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50px;'>" + elem.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 50px;'>" + elem.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width: 100px;'>" + elem.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                    //LOOP END
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>TCS :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.TCS.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; border-top:0; width:100%; font-size:6pt; text-align: center;' cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='width: 150px; text-align:left;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='width: 100px; text-align:right;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th></tr>");
                html.Append("<tr><th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td colspan='12'><b>Payer Name : </b> " + item.PayeeName + "</td></tr>");
                html.Append("<tr><td colspan='12'><b>Payer Code : </b> " + item.PayerCode + "</td></tr>");
                html.Append("<tr><td colspan='2' width='10%' valign='top'><b>Remarks : </b></td><td colspan='9' width='90%' align='left'>" + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width:100%; border: 1px solid #333;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left; width: 50%; vertical-align: bottom;'>");
                html.Append("<p style='display: block; margin:0;'>Company's Bank Details</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Bank Name:</span>" + objCompany[0].BankName + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>A/c No:</span>" + objCompany[0].AccountNo + "</p>");
                html.Append("<p style='display: block; margin:0; font-weight: bold;'><span style='display: inline-block; width: 150px; font-weight: normal;'>Branch & IFS Code:</span>" + objCompany[0].BranchIFSC + "</p>");
                html.Append("</td>");
                html.Append("<td style='width: 50%; padding-right: 0; padding-bottom: 0;'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='border-left: 1px solid #333; padding: 0 15px;'>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0; font-weight: bold;'>For Central Warehousing Corporation.</p>");
                html.Append("<span><br/><br/></span>");
                html.Append("<p style='text-align: right; font-size: 7pt; margin:0;'>Authorized Signatories</p>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/
                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("IMG_QR", Server.MapPath("~/Content/Images/MyQRImage.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = Version;
                rp.Effectlogofile = Effectlogofile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        //[HttpGet]
        //[CustomValidateAntiForgeryToken]
        //public ActionResult ListOfInvoiceDateWise(string FromDate, string ToDate, string invoiceType)
        //{
        //    Ppg_ReportRepository ObjRR = new Ppg_ReportRepository();
        //    List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
        //    Login objLogin = (Login)Session["LoginUser"];
        //    ObjRR.GetInvoiceList(FromDate, ToDate, invoiceType);//, objLogin.Uid
        //    if (ObjRR.DBResponse.Data != null)
        //    {
        //        //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
        //        return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        //    }
        //    else
        //    {
        //        return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        //    }

        //}



        public JsonResult Download()
        {
            String session = Session.SessionID;
            ReportCWCController obj = new ReportCWCController();
            //////int CurrentFileID = Convert.ToInt32(FileID); 
            string fileSavePath = "";
            fileSavePath = Server.MapPath("~/Docs/All/") + Session.SessionID;
            var filesCol = obj.GetFile(fileSavePath).ToList();
            string FileList = "";
            //string FileList = "/Docs/All/" + Session.SessionID + "/";
            for (int i = 0; i < filesCol.Count; i++)
            {
                FileList = FileList + "/Docs/All/" + Session.SessionID + "/" + (filesCol[i].FileName) + ",";
            }
            var ObjResult = new { Status = 1, Message = FileList };
            return Json(ObjResult);
        }

        [NonAction]
        public List<FileList> GetFile(string fileSavePath)
        {
            List<FileList> listFiles = new List<FileList>();
            DirectoryInfo dirInfo = new DirectoryInfo(fileSavePath);
            int i = 0;
            foreach (var item in dirInfo.GetFiles())
            {
                listFiles.Add(new FileList()
                {
                    FileId = i + 1,
                    FileName = item.Name,
                    FilePath = dirInfo.FullName + "/" + item.Name
                });
                i = i + 1;
            }
            return listFiles;
        }

        private void DeleteDirectory(string path)
        {
            if (Directory.Exists(path))
            {
                //Delete all files from the Directory
                foreach (string file in Directory.GetFiles(path))
                {
                    System.IO.File.Delete(file);
                }
                //Delete all child Directories
                //foreach (string directory in Directory.GetDirectories(path))
                //{
                //    DeleteDirectory(directory);
                //}
                ////Delete a Directory
                //Directory.Delete(path);
            }
        }

        #endregion

        public string LoadImage(string img)
        {

            if (img != "")
            {

                string strm = img;

                //this is a simple white background image
                var myfilename = string.Format(@"{0}", Guid.NewGuid());

                //Generate unique filename
                string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                var bytess = Convert.FromBase64String(strm);
                using (var imageFile = new FileStream(filepath, FileMode.Create))
                {
                    imageFile.Write(bytess, 0, bytess.Length);
                    imageFile.Flush();
                }


                string targetpath = Server.MapPath("~/Docs/QRCode/") + myfilename + "crop" + ".jpeg";
                String newfilepath = Utility.ResizeImage(filepath, targetpath);
                return newfilepath;
            }
            else
            {
                return "";

            }
        }

        #region E-Invoice Excel Generation

        [HttpGet]
        public ActionResult RegisterOfEInvoice()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult EInvoiceExcel(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var excelName = "";
                var ObjRR = new ReportRepository();
                ObjRR.GetRegisterofEInvoice(date1, date2);

                excelName = "EInvoice.xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "EInvoice.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Bulk IRN Generation

        [HttpGet]
        public ActionResult BulkIRNGeneration()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetBulkIrnDetails()
        {
            ReportRepository objPpgRepo = new ReportRepository();
            objPpgRepo.GetBulkIrnDetails();
            var Output = (KOL_BulkIRN)objPpgRepo.DBResponse.Data;

            return Json(Output, JsonRequestBehavior.AllowGet);
        }

        public async Task<JsonResult> AddEditBulkIRN(FormCollection objForm)
        {
            CWCImportController objPpgIrn = new CWCImportController();
            Kol_CashManagementController objKolCash = new Kol_CashManagementController();

            try
            {

                var invoiceData = JsonConvert.DeserializeObject<KOL_BulkIRN>(objForm["PaymentSheetModelJson"]);

                foreach (var item in invoiceData.lstPostPaymentChrg)
                {
                    try
                    {
                        if (item.InvoiceType == "Inv")
                        {
                            var result = await objPpgIrn.GetIRNForYardInvoice(item.InvoiceNo, item.SupplyType);
                        }
                        else if (item.InvoiceType == "C")
                        {
                            var result1 = await objKolCash.GetGenerateIRNCreditNote(item.InvoiceNo, item.SupplyType, "CRN", "C");
                        }
                        else if (item.InvoiceType == "D")
                        {
                            var result2 = await objKolCash.GetGenerateIRNCreditNote(item.InvoiceNo, item.SupplyType, "DBN", "D");
                        }
                    }
                    catch (Exception ex)
                    {
                        continue;
                    }
                }
                //foreach (var item in invoiceData.lstOperationContwiseAmt)
                //{
                //    if (item.DocumentDate != "")
                //        item.DocumentDate = Convert.ToDateTime(item.DocumentDate).ToString("yyyy-MM-dd");
                //} 
                return Json(new { Status = 1, Message = "IRN Generated" });

            }
            catch (Exception ex)
            {
                var Err = new { Status = -1, Message = "Error" };
                return Json(Err);
            }
        }

        #endregion

        #region E04
        public ActionResult E04DetailsReport()
        {
            return PartialView();
        }

        [HttpGet]
        public ActionResult GetE04List()
        {
            ReportRepository ObjER = new ReportRepository();
            List<Kol_E04Report> LstE04 = new List<Kol_E04Report>();
            ObjER.ListofE04Report(0);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Kol_E04Report>)ObjER.DBResponse.Data;
            }
            return PartialView("ListOfE04DetailsReport", LstE04);
        }
        [HttpGet]
        public JsonResult LoadMoreE04List(int Page)
        {
            ReportRepository ObjER = new ReportRepository();
            var LstE04 = new List<Kol_E04Report>();
            ObjER.ListofE04Report(Page);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Kol_E04Report>)ObjER.DBResponse.Data;
            }
            return Json(LstE04, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult ViewE04DetailsReport(int ID)
        {
            Kol_E04Report ObjE04 = new Kol_E04Report();
            ReportRepository ObjER = new ReportRepository();
            ObjER.GetE04DetailById(ID);
            if (ObjER.DBResponse.Data != null)
            {
                ObjE04 = (Kol_E04Report)ObjER.DBResponse.Data;
            }
            return PartialView(ObjE04);
        }


        [HttpGet]
        public JsonResult GetE04Search(string SB_No = "", string SB_Date = "", string Exp_Name = "")
        {
            ReportRepository ObjER = new ReportRepository();
            List<Kol_E04Report> LstE04 = new List<Kol_E04Report>();
            ObjER.GetE04DetailSearch(SB_No, SB_Date, Exp_Name);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Kol_E04Report>)ObjER.DBResponse.Data;
            }
            //return PartialView("ListOfE04DetailsReport", LstE04);
            return Json(ObjER.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion
        #region Stuffing Acknowledgement Search       

        [HttpGet]
        public ActionResult StfAckSearch()
        {
            ReportRepository ObjGR = new ReportRepository();

            ObjGR.GetAllContainerNoForContstufserach("", 0);

            if (ObjGR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstStuffing = Jobject["LstStuffing"];
                ViewBag.StateCont = Jobject["State"];
            }
            else
            {
                ViewBag.LstStuffing = null;
            }


            ObjGR.GetAllShippingBillNoForContstufserach("", 0);
            if (ObjGR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstStuff = Jobject["LstStuff"];
                ViewBag.StateShipbill = Jobject["State"];
            }
            else
            {
                ViewBag.LstStuff = null;
            }

            return PartialView();
        }
        [HttpGet]
        public JsonResult SearchContainerNo(string cont)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetAllContainerNoForContstufserach(cont, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult SearchShipbill(string shipbill)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetAllShippingBillNoForContstufserach(shipbill, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult LoadContainerLists(string cont, int Page)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetAllContainerNoForContstufserach(cont, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }


        [HttpGet]
        public JsonResult LoadShipbillLists(string shipbill, int Page)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetAllShippingBillNoForContstufserach(shipbill, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getcontstuffingacksearch(string container, string shipbill, string cfscode)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_ContStufAckRes> Lststufack = new List<Kol_ContStufAckRes>();
            ObjGR.GetStufAckResult(container, shipbill, cfscode);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_ContStufAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion
        #region ASR Acknowledgement Search       

        [HttpGet]
        public ActionResult StuffingASRAckSearch()
        {
            ReportRepository ObjGR = new ReportRepository();

            //ObjGR.GetAllShippingBillNoForASRACK("", 0);
            //if (ObjGR.DBResponse.Data != null)
            //{
            //    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
            //    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
            //    ViewBag.LstStuff = Jobject["LstStuff"];
            //    ViewBag.StateShipbill = Jobject["State"];
            //}
            //else
            //{
            //    ViewBag.LstStuff = null;
            //}

            return PartialView();
        }

        [HttpGet]
        public JsonResult ASRSearchContainerNo(string cont)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetCotainerNoForASRAck(cont, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult ASRLoadContainerLists(string cont, int Page)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetCotainerNoForASRAck(cont, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult ASRSearchShipbill(string shipbill)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetAllShippingBillNoForASRACK(shipbill, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult ASRLoadShipbillLists(string shipbill, int Page)
        {
            ReportRepository ObjGR = new ReportRepository();
            ObjGR.GetAllShippingBillNoForASRACK(shipbill, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult GetASRACKStatusSearch(string shipbill, string CFSCode, string container)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_ContStufAckRes> Lststufack = new List<Kol_ContStufAckRes>();
            ObjGR.GetASRAckResult(shipbill, CFSCode, container);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_ContStufAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion

        #region DP Acknowledment Serach  

        [HttpGet]
        public ActionResult DPAckSearch()
        {
            return PartialView();
        }

        public JsonResult GetGatePassNoDPForAckSearch(string GatePassNo = "", int Page = 0)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_GatePassDPAckSearch> lstDPGPAck = new List<Kol_GatePassDPAckSearch>();
            ObjGR.GetGatePassNoDPForAckSearch(GatePassNo, Page);
            //if (ObjGR.DBResponse.Data != null)
            //{
            //    lstDTGPAck = (List<Kol_GatePassDTAckSearch>)ObjGR.DBResponse.Data;
            //}
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetContainerNoForDPAckSearch(string ContainerNo = "", int Page = 0)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_ContDPAckSearch> lstDPContACK = new List<Kol_ContDPAckSearch>();
            ObjGR.GetContainerNoForDPAckSearch(ContainerNo, Page);
            //if (ObjGR.DBResponse.Data != null)
            //{
            //    lstDTContACK = (List<Kol_ContDTAckSearch>)ObjGR.DBResponse.Data;
            //}
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetDPAckSearch(int GatePassId, string ContainerNo, int GatePassdtlId = 0)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_DPAckRes> lstDPAckRes = new List<Kol_DPAckRes>();
            ObjGR.GetDPAckSearch(GatePassId, ContainerNo, GatePassdtlId);

            if (ObjGR.DBResponse.Data != null)
            {
                lstDPAckRes = (List<Kol_DPAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region DT Acknowledment Serach  

        [HttpGet]
        public ActionResult DTAckSearch()
        {
            return PartialView();
        }

        public JsonResult GetGatePassNoDTForAckSearch(string GatePassNo = "", int Page = 0)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_GatePassDTAckSearch> lstDTGPAck = new List<Kol_GatePassDTAckSearch>();
            ObjGR.GetGatePassNoDTForAckSearch(GatePassNo, Page);

            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetContainerNoForDTAckSearch(string ContainerNo = "", int Page = 0)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_ContDTAckSearch> lstDTContACK = new List<Kol_ContDTAckSearch>();
            ObjGR.GetContainerNoForDTAckSearch(ContainerNo, Page);

            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        public JsonResult GetDTAckSearch(int GatePassId, string ContainerNo)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_DTAckRes> lstDTAckRes = new List<Kol_DTAckRes>();
            ObjGR.GetDTAckSearch(GatePassId, ContainerNo);

            if (ObjGR.DBResponse.Data != null)
            {
                lstDTAckRes = (List<Kol_DTAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region Stuffing Loaded Search
        [HttpGet]
        public ActionResult StfLoadSearch()
        {
            ReportRepository ObjGR = new ReportRepository();

            /* ObjGR.GetAllContainerNoForContstufserach("", 0);

             if (ObjGR.DBResponse.Data != null)
             {
                 var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                 var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                 ViewBag.LstStuffing = Jobject["LstStuffing"];
                 ViewBag.StateCont = Jobject["State"];
             }
             else
             {
                 ViewBag.LstStuffing = null;
             }


             ObjGR.GetAllShippingBillNoForContstufserach("", 0);
             if (ObjGR.DBResponse.Data != null)
             {
                 var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                 var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                 ViewBag.LstStuff = Jobject["LstStuff"];
                 ViewBag.StateShipbill = Jobject["State"];
             }
             else
             {
                 ViewBag.LstStuff = null;
             }*/

            return PartialView();
        }
        /* [HttpGet]
         public JsonResult SearchContainerNo(string cont)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllContainerNoForContstufserach(cont, 0);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }
         [HttpGet]
         public JsonResult SearchShipbill(string shipbill)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllShippingBillNoForContstufserach(shipbill, 0);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }
         [HttpGet]
         public JsonResult LoadContainerLists(string cont, int Page)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllContainerNoForContstufserach(cont, Page);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }


         [HttpGet]
         public JsonResult LoadShipbillLists(string shipbill, int Page)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllShippingBillNoForContstufserach(shipbill, Page);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }*/
        [HttpGet]
        public JsonResult getloadstufsearch(string jobno)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_loadstuf> Lststufack = new List<Kol_loadstuf>();
            ObjGR.GetStufloadResult(jobno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstuf>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufasrsearch(string jobasrno)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_loadstufasr> Lststufack = new List<Kol_loadstufasr>();
            ObjGR.GetStufloadasrResult(jobasrno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstufasr>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufdpsearch(string jobdpno)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_loadstufdp> Lststufack = new List<Kol_loadstufdp>();
            ObjGR.GetStufloaddpResult(jobdpno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstufdp>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufdtsearch(string jobdtno)
        {
            ReportRepository ObjGR = new ReportRepository();
            List<Kol_loadstufdt> Lststufack = new List<Kol_loadstufdt>();
            ObjGR.GetStufloaddpResult(jobdtno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Kol_loadstufdt>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region  Bond STORAGE COLLECTION REPORT 
        [HttpGet]
        public ActionResult BondStorageCollectionReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult BondStorageCollectionReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new ReportRepository();
                ObjRR.BondStorageCollectionReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = BondStorageCollectionReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string BondStorageCollectionReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "BondStorageCollectionReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["EmailAddress"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Bond Storage Collection REGISTER</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                decimal StoAmount = 0;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt; text-align: center;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Storage Amount</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[0].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Date"].ToString() + " </td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["Amount"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    StoAmount = StoAmount + Convert.ToDecimal(item["Amount"]);
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + StoAmount + "</th></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion

        #region Party Wise Ledger

        [HttpGet]
        public ActionResult PartyWiseLedgerForContainer()
        {
            ReportRepository ObjRR = new ReportRepository();
            List<PartyLedgerList> LstParty = new List<PartyLedgerList>();
            ObjRR.GetEximTraderForPartyLedger();
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.PartyList = new SelectList((List<PartyLedgerList>)ObjRR.DBResponse.Data, "PartyId", "PartyName");
            }
            else
            {
                ViewBag.PartyList = null;
            }
            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult PartyWiseLedgerForContainerDetail(string FromDate, string ToDate, int PartyId)
        {
            try
            {
                var ObjRR = new ReportRepository();
                ObjRR.GetRptPartyWiseLedgerForContainer(FromDate, ToDate, PartyId);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = GeneratePDFOfPartyWiseLedgerForContainer(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }


        [NonAction]
        public string GeneratePDFOfPartyWiseLedgerForContainer(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "PartyWiseLedgerForContainer.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/PartyWiseLedgerForContainer/";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["EmailAddress"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Party Wise Ledger </label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                int totalConatiner20 = 0, totalConatiner40 = 0;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt; text-align: center;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Invoice No. & Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CR No. & Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Name of the CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Name of the Importer/Exporter </th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;border-right: 1px solid #000; '>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["InvoiceAndDate"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CRNoAndDate"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHA"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExporterImporterName"].ToString() + " </td>");

                    Pages.Append("</tr>");
                    if (!string.IsNullOrEmpty(item["Size"].ToString()))
                    {
                        int size = Convert.ToInt32(item["Size"]);
                        if (size == 40)
                        {
                            totalConatiner40++;
                        }
                        else if (size == 20)
                        {
                            totalConatiner20++;
                        }
                    }

                    i++;
                });


                Pages.Append("<tr><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>Total No. of Containers : " + totalConatiner20 + " x 20’</th></tr>");
                Pages.Append("<tr><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>                        : " + totalConatiner40 + " x 40’</th></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/PartyWiseLedgerForContainer/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion
        #region  Party wise Tax invoice/Bill of Supply Summary

        public ActionResult Partywisetaxinvbill()
        {
            ReportRepository ObjRR = new ReportRepository();
            List<PartyLedgerList> LstParty = new List<PartyLedgerList>();
            ObjRR.GetEximTraderForPartyLedger();
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.PartyList = new SelectList((List<PartyLedgerList>)ObjRR.DBResponse.Data, "PartyId", "PartyName");
            }
            else
            {
                ViewBag.PartyList = null;
            }
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetPartywiseInvbill(Kol_InvBillRpt vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=PartyWiseInvoiceBillOfSummary.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            ReportRepository obj = new ReportRepository();
            obj.GetpartywiseinvbillsmyExcel(vm.PeriodFrom, vm.PeriodTo, vm.PartyId);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(GetPartwiseTaxBillExcelPDF(ds, vm.PeriodFrom, vm.PeriodTo, vm.PartyName));
            Response.End();


            return Content("xc");
        }


        private string GetPartwiseTaxBillExcelPDF(DataSet ds, string FromDate, string ToDate, string PartyName)
        {
            int SLNo = 0;

            List<dynamic> lstBTTGatePassDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);

            var FileName = "PartyWiseSummary.pdf";
            string html = "<html><body>";

            int i = 1;

            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td colspan='8' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><label style='font-size:7pt;'>" + "CONTAINER FREIGHT STATION 18 COAL DOCK ROAD KOLKATA700043" + "<br/>Email : " + " manager_cfs@yahoo.in" + "</label><h5 style='font-weight: bold;'>Party wise Tax invoice/Bill of Supply Summary</h5><label style='font-size:7pt;'>From " + FromDate + "  To " + ToDate + " </label></h5></td></tr>";
            html += "<tr><td colspan='8'><table cellspacing='0' cellpadding='5' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";
            html += "<thead><tr>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Sl No.</th>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Party Name</th>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Invoice No</th>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Invoice Date</th>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Cash receipt No</th>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Cash Receipt Date</th>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Amount Excl. GST</th>";
            html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>Amount Incl. GST </th>";
            html += "</tr></thead>";
            html += "<tbody>";
            //  int i = 1;
            lstBTTGatePassDetails.ToList().ForEach(item =>
            {
                try
                {
                    html += "<tr>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + i + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.partyname + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.invoiceno + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.invoicedate + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ReceiptNo + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ReceiptDate + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.TotalTaxable + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.InvoiceAmt + "</td>";


                    html += "</tr>";

                    i++;
                }
                catch (Exception Ex)
                {

                }
            });
            html += "</tbody>";
            html += "</table></td></tr>";
            html += "</tbody></table>";


            html += "</body></html>";


            //html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><thead>";
            //html += "<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td></tr>";
            //html += "<tr><td colspan='12' width='300px' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><label style='font-size:7pt;'>" + "CONTAINER FREIGHT STATION 18 COAL DOCK ROAD KOLKATA700043" + "<br/>Email : " + " manager_cfs@yahoo.in" + "</label><h5 style='font-weight: bold;'>Party wise Tax invoice/Bill of Supply Summary</h5><label style='font-size:7pt;'>'  From ' " + FromDate + "+ ' to' " + ToDate + " </label></td></tr>";
            //html += "</thead></table>";

            //html += "<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:7pt; text-align: center;'>";
            //html += "<thead><tr>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Invoice No</th>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Invoice Date</th>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cash receipt No</th>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cash Receipt Date</th>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Amount Excl. GST</th>";
            //html += "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Amount Incl. GST </th>";
            //html += "</tr></thead>";
            //html += "<tbody>";
            ////  int i = 1;
            //lstBTTGatePassDetails.ToList().ForEach(item =>
            //{
            //    try
            //    {
            //        html += "<tr>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + i + "</td>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.partyname + "</td>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.invoiceno + "</td>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.invoicedate + "</td>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ReceiptNo + "</td>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ReceiptDate + "</td>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.TotalTaxable + "</td>";
            //        html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.InvoiceAmt + "</td>";


            //        html += "</tr>";

            //        i++;
            //    }
            //    catch (Exception Ex)
            //    {

            //    }
            //});
            //html += "</tbody>";
            //html += "</table></td></tr>";
            //html += "</tbody></table>";


            //    html += "</body></html>";

            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);


            html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }

        #endregion


        #region PDA Receipt Print

        [HttpPost]
        // [ValidateAntiForgeryToken]
        public JsonResult GetPDAReceiptReportNew(BulkReceiptReport ObjBulkReceiptReport)
        {
            Kdl_ReportRepository ObjRR = new Kdl_ReportRepository();
            ObjRR.GetBulkPDACashreceipt(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GeneratePDAReceiptReport(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GeneratePDAReceiptReport(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();

            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);

            List<string> lstSB = new List<string>();

            int i = 0;
            
                StringBuilder html = new StringBuilder();

                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:8pt;'><tbody>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:8pt;'><tbody>");
                html.Append("<tr><th style='width:20%;'><img style='width:50%;' src='ImgLeft'/></th><th style='width:60%;'></th><th style='width:20%;'><img style='width:70%;' src='ImgRight'/></th></tr><tr><th colspan='3' style='text-align:center;vertical-align:bottom;'>CENTRAL WAREHOUSING CORPORATION<br />(A GOVT. OF INDIA UNDERTAKING)</th></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12' width='50%' style='text-align:center;'>Cash Deposit to PD Account Voucher</td></tr>");
                //   html.Append("<td colspan='6' width='50%' align='right'>" + objCompany[0].CompanyAddress + "</td></tr>");



                html.Append("<tr>");
                html.Append("<td colspan='4' width='33.33333333333333%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>");
                html.Append("<tr><td><b>Receipt No. : </b>" + lstInvoice[0].PdaTranRecNo + "</td></tr>");
                html.Append("<tr><td><b>Payee Name :</b>" + lstInvoice[0].EximTraderName + "</td></tr>");
                html.Append("<tr><td><b>Address: </b>" + lstInvoice[0].Address + "</td></tr>");
                html.Append("<tr><td><b>Folio No. : </b>" + lstInvoice[0].FolioNo + "</td></tr>");
                html.Append("</tbody></table></td>");
                html.Append("<td colspan='6' width='50%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>");
                html.Append("<tr><th>Dated : :</th> <td>" + lstInvoice[0].PdaTransDate + "</td></tr>");

                html.Append("</tbody></table></td>");
                html.Append("</tr>");



                html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7.5pt;'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000;'>Mode</th>");
                html.Append("<th style='border-right: 1px solid #000;'>Drawee Bank</th>");
                html.Append("<th style='border-right: 1px solid #000;'>Instrument No</th>");
                html.Append("<th style='border-right: 1px solid #000;'>Date</th>");
                html.Append("<th style='text-align:right;'>Amount</th></tr></thead>");
                html.Append("<tbody>");
            lstInvoice.ToList().ForEach(item =>
            {
                html.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaPayType + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaDrawBank + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaInsNo + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.PdaChequeDate + "</td>");
                html.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item.Amount + "</td></tr>");
            });
            html.Append("</tbody>");
                html.Append("</table></td></tr>");

                //   html.Append("<tr><td colspan='12'><b>CASHIER REMARKS :</b> " + item.Remarks + "</td></tr>");

                html.Append("<tr><td><br/><br/><br/><br/></td></tr>");
                html.Append("<tr>");
                html.Append("<th colspan='4' width='33.33333333333333%' align='left'>Received By :</th>");
                //html.Append("<th colspan='4' width='33.33333333333333%' align='center'>AM (A/cs)</th>");
                //html.Append("<th colspan='4' width='33.33333333333333%' align='right'>Manager (CFS)</th>");
                html.Append("</tr>");

                html.Append("</tbody></table>");

                html = html.Replace("ImgLeft", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ImgRight", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
           
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }

        #endregion



        #region Bulk Receipt New


        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReportNew(BulkReceiptReport ObjBulkReceiptReport)
        {
            if (ObjBulkReceiptReport.ReceiptNumber == null)
            {
                ObjBulkReceiptReport.ReceiptNumber = "";
            }

            Kol_CashManagementRepository ObjRR = new Kol_CashManagementRepository();
            List<BulkReceiptReport> LstContainerMovementRegister = new List<BulkReceiptReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkReceiptReport.ReceiptNumber);//, objLogin.Uid
            //ObjRR.DBResponse.Data = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = new DataSet();
                ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulkReceiptReportPDFNew(ds);
                return Json(new { Status = 1, Message = Path }, JsonRequestBehavior.DenyGet);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }


        public string GenerateBulkReceiptReportPDFNew(DataSet ds)
        {
            try
            {
                CurrencyToWordINR objCurr = new CurrencyToWordINR();

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                // List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
                List<dynamic> lstCwcCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
                List<dynamic> lstHTCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
                List<dynamic> lstCashReceipt = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
                List<dynamic> lstCashReceiptDtl = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[5]);
                List<string> lstSB = new List<string>();
                StringBuilder html = new StringBuilder();
                //var Pages = new string[1];
                var FileName = "BulkReceipt.pdf";
                html.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th style='width:20%;'><img style='width:50%;' src='IMGLeft'/></th><th style='width:60%;'></th><th style='width:20%;'><img style='width:70%;' src='IMGRight' /></th></tr><tr><th colspan='3' style='text-align:center;vertical-align:bottom;'>CENTRAL WAREHOUSING CORPORATION<br />(A GOVT. OF INDIA UNDERTAKING)</th></tr></thead><tbody><tr><td colspan='2' style='font-weight:600;'>REGIONAL OFFICE, KOLKATA<br />CMC BUILDING, PHASE-1, 6TH FLOOR, NEW MARKET COMPLEX,<br />15 N, NELLIE SENGUPTA SARANI, KOLKATA - 700087</td><td style='font-weight:600;'>CONTAINER FREIGHT STATION<br />18, COAL DOCK ROAD,<br />KOLKATA - 700043<br />E-mail ID : manager_cfs@yahoo.in</td></tr><tr><td colspan='3' style='text-align:center;padding-bottom:20pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>CASH RECEIPT</span></td></tr><tr><td colspan='3'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><tbody><tr><td style='width:30%;'>GSTIN-<span> " + lstInvoice[0].CompGST + " </span><br />PAN NO.- <span> " + lstInvoice[0].CompPAN + " </span><br />STATE CODE : <span> " + lstInvoice[0].CompStateCode + " </span></td><td style='width:50%;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;'><thead><tr><th colspan='2' style='text-align:left;'>Details of Receiver ( Billed to)</th></tr></thead><tbody><tr><td style='width:45%;'>Name</td>");
                html.Append("<td><span>" + lstInvoice[0].PartyName + "  </span></td></tr><tr><td>" + lstInvoice[0].PartyAddress + " </td><td><span> " + lstInvoice[0].PartyAddress + " <br/> " + lstInvoice[0].PartyAddress + " <br/> " + lstInvoice[0].PartyState + " <br/>  </span></td></tr><tr><td></td><td><span>  " + lstInvoice[0].PartyStateCode + " </span></td></tr><tr><td>State Code</td><td><span> " + lstInvoice[0].PartyStateCode + " </span></td></tr><tr><td>GSTIN/ Unique ID</td><td><span>" + lstInvoice[0].GSTNo + " </span></td></tr></tbody></table>");
                html.Append("</td><td></td></tr><tr><td colspan='2'><b>Invoice No. <span> " + lstInvoice[0].InvoiceNo + " </span></b><br/><br/><b>Cash Receipt No.<span> " + lstCashReceipt[0].ReceiptNo + " </span></b></td><td style='vertical-align:top;text-align: center;'><b>Date: <span> " + lstCashReceipt[0].ReceiptDate + " </span></b></td>");
                html.Append("</tr><tr><td colspan='2'><table><tr><td style='vertical-align:top;width:50%;'><table style='width:100%;float: left;font-size:8pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;margin-top:20pt;'><thead><tr><th style='border:1px solid #000;'>CONTAINER NO.</th><th style='border:1px solid #000;'>SIZE</th><th style='border:1px solid #000;'>ARRIVAL DT.</th><th style='border:1px solid #000;'>CARGO TYPE</th></tr></thead><tbody>");

                lstContainer.ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border:1px solid #000;text-align:center;'><span>" + elem.ContainerNo + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + elem.Size + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + elem.ArrivalDate + "</span></td><td style='border:1px solid #000;text-align:center;'><span>" + elem.CargoType + "</span></td></tr>");
                });


                html.Append("</tbody></table></td><td style='vertical-align:top;width:50%;'><table style='width:100%;float:right;font-size:8pt;font-family:Verdana,Arial,San-serif;border:1px solid #000;border-collapse:collapse;margin-top:20pt;border-left-style: none;'><tbody><tr><td>");
                html.Append("Shipping Line. <span> " + lstInvoice[0].ShippingLinaName + " </span><br/>CFS Code No. <span> " + lstInvoice[0].CFSCode + " </span><br/>Date & Time of Arrival (FN/AN): <span>" + lstInvoice[0].ArrivalDate + " </span><br/>   <span>" + lstInvoice[0].DestuffingDate + " </span><br/> <span> " + lstInvoice[0].ExporterImporterName + "  </span><br/> " + lstInvoice[0].InvoiceType + "  <span> " + lstInvoice[0].BOEDate + " </span><br/>Name of CHA. <span>  " + lstInvoice[0].CHAName + " </span><br/>No of Packages. <span> " + lstInvoice[0].TotalNoOfPackages + "</span><br/>Total Gross Weight. <span> " + lstInvoice[0].TotalGrossWt + " </span><br/>Gross Weight per Package. <span> " + lstInvoice[0].TotalWtPerUnit + "</span><br/>Storage space occupied( " + lstInvoice[0].TotalSpaceOccupied + " ) <span> " + lstInvoice[0].TotalSpaceOccupiedUnit + " </span><br/>Chargeable period for Storage space.");
                html.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;margin-top:10pt;'><tr><td>(a)" + lstInvoice[0].StuffingReqDate + "  </td></tr><tr><td>(b) Date of Delivery " + lstInvoice[0].DeliveryDate + " </td></tr><tr><td>(c) Customs Examination Date  </td></tr></table></td></tr></tbody></table></td></tr></table></td></tr></tbody></table></td></tr>");
                html.Append("<tr><td colspan='3'>Value of Cargo (CIF Value + Duty + Penalty) Rs.<span>" + lstInvoice[0].TotalValueOfCargo + " </span></td></tr></tbody></table>");

                html.Append("<table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th colspan='6' style='vertical-align:top;text-align:left;'>Invoice No. <span> " + lstInvoice[0].InvoiceNo + "  </span><b><br/>Cash Receipt No.<span>" + lstCashReceipt[0].ReceiptNo + "  </span></b></th><th colspan='6' style='text-align:right;padding-right:20pt;padding-bottom:50pt;'>Date: <span>  " + lstCashReceipt[0].ReceiptDate + " </span></th></tr><tr><th style='border:1px solid #000;text-align:center;'>Particulars</th><th style='border:1px solid #000;text-align:center;'>SAC</th><th style='border:1px solid #000;text-align:center;'>Value</th><th style='border:1px solid #000;text-align:center;'>TDS</th><th style='border:1px solid #000;text-align:center;'>Discount</th><th colspan='6' style='border:1px solid #000;text-align:center;'>Taxes</th><th style='border:1px solid #000;text-align:center;'>Total Amount</th></tr><tr><th style='border:1px solid #000;border-bottom:none;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th rowspan='2' style='border:1px solid #000;'></th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>CGST</th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>SGST</th><th style='border:1px solid #000;'>Rate</th><th style='border:1px solid #000;'>IGST</th><th style='border:1px solid #000;'></th></tr><tr><th style='border:1px solid #000;border-top:none;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th><th style='border:1px solid #000;'></th></tr></thead><tbody>");

                //cwcw
                lstCwcCharges.ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border:1px solid #000;'>" + elem.Clause + ". " + elem.ChargeName + "</td><td style='border:1px solid #000;'><span>" + elem.SACCode + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.Amount + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:center;'><span>0</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.CGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.CGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.SGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.SGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.IGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.IGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.Total + "</span></td></tr>");
                });



                html.Append("<tr><td style='border:1px solid #000;padding-left:25px;'>CWC TDS</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:center;'> actualJson.CWCTDS </td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td></tr>");

                //var htCharges = $.grep(actualJson.lstPostPaymentChrg, function(item) { return item.ChargeType == 'HT'; });
                //$.each(htCharges, function(i, item) {
                //        html2 += "<tr><td style='border:1px solid #000;'>" + item.Clause + ". " + item.ChargeName + "</td><td style='border:1px solid #000;'><span>" + item.SACCode + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.Amount.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:center;'><span>" + item.Discount.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.CGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.CGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.SGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.SGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.IGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.IGSTAmt.toFixed(2) + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + item.Total.toFixed(2) + "</span></td></tr>";
                //    });
                lstHTCharges.ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border:1px solid #000;'>" + elem.Clause + ". " + elem.ChargeName + "</td><td style='border:1px solid #000;'><span>" + elem.SACCode + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.Amount + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:center;'><span>0</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.CGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.CGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.SGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.SGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.IGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.IGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.Total + "</span></td></tr>");
                });



                html.Append("<tr><td style='border:1px solid #000;padding-left:25px;'>H&T TDS</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:center;'> " + lstInvoice[0].HTTDS + "  </td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;'></td></tr>");
                html.Append("<tr><td colspan='12'>&nbsp;</td></tr><tr><td>Grand Total</td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span> " + lstInvoice[0].TotalAmt + "  </span></td><td style='border:1px solid #000;text-align:right;'><span>" + /*actualJson.TDS.toFixed(2) +*/ "</span></td><td style='border:1px solid #000;text-align:right;'>" + lstInvoice[0].TotalDiscount + "   </td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span> " + lstInvoice[0].TotalCGST + "   </span></td><td style='border:1px solid #000;'></td><td style='border:1px solid #000;text-align:right;'><span>" + lstInvoice[0].TotalSGST + "  </span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:right;'><span>" + lstInvoice[0].TotalIGST + "  </span></td><td style='border:1px solid #000;text-align:right;'><span>" + lstInvoice[0].AllTotal + "  </span></td></tr>");
                html.Append("<tr><td>Round Up</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style='border:1px solid #000;text-align:right;'><span>" + lstInvoice[0].RoundUp + "  </span></td></tr>");
                html.Append("<tr><td>Grand Total(Rounded)</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td style='border:1px solid #000;text-align:right;'><span> " + lstInvoice[0].InvoiceAmt + " </span></td></tr>");
                html.Append("<tr><td colspan='12'>TDS Deduction : AddTds <br/>TDS Collection : " + lstInvoice[0].TDSCol + "  <br/><br/>FIGURE IN WORDS: <span> " + objCurr.changeCurrencyToWords(lstInvoice[0].InvoiceAmt.ToString("0.00")) + " </span></td></tr><tr><td colspan='12' style='padding:50pt 0pt;'><b>Remarks:<span>" + lstInvoice[0].Remarks + "  </span></b></td></tr></tbody></table>");

                html.Append("<table style='width:100%;font-size:8pt;font-family:verdana,sans-serif;margin-top:30px;border:1px solid #000;border-collapse: collapse;'> <thead><tr><th style='border:1px solid #000;padding:10px;text-align:center;'>Mode</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Drawee Bank</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Instrument No</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Date</th><th style='border:1px solid #000;padding:10px;text-align:center;'>Amount</th></tr></thead><tbody>");

                lstCashReceiptDtl.ToList().ForEach(elem =>
                {
                    html.Append("<tr>");
                    html.Append("<td style = 'border:1px solid #000;' > " + elem.PayMode + " </td>");
                    html.Append("<td style = 'border:1px solid #000;' > " + elem.DraweeBank + " </td>");
                    html.Append("<td style = 'border:1px solid #000;' > " + elem.InstrumentNo + " </td>");
                    html.Append("<td style = 'border:1px solid #000;' > " + elem.Date + " </td>");
                    html.Append("<td style = 'border:1px solid #000;' > " + elem.Amount + " </td>");

                    html.Append("</tr>");



                    // html.Append("<tr><td style='border:1px solid #000;'>" + elem.Clause + ". " + elem.ChargeName + "</td><td style='border:1px solid #000;'><span>" + elem.SACCode + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.Amount + "</span></td><td style='border:1px solid #000;text-align:right;'><span></span></td><td style='border:1px solid #000;text-align:center;'><span>0</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.CGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.CGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.SGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.SGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.IGSTPer + "%</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.IGSTAmt + "</span></td><td style='border:1px solid #000;text-align:right;'><span>" + elem.Total + "</span></td></tr>");
                });


                //    var t1 = '';
                //$('#TblPaymentMode tbody tr').each(function(i, item) {
                //        t1 += "<tr><td style='border:1px solid #000;padding:5px;'>" + $(item).find('td').eq(0).children('select').val() + "</td>";
                //        t1 += "<td style='border:1px solid #000;padding:5px;'>" + $(item).find('td').eq(1).children('input[type="text"]').val() + "</td>";
                //        t1 += "<td style='border:1px solid #000;padding:5px;'>" + $(item).find('td').eq(2).children('input[type="text"]').val() + "</td>";
                //        t1 += "<td style='border:1px solid #000;padding:5px;text-align:center;'>" + $(item).find('td').eq(3).children('input[type="text"]').val() + "</td>";
                //        t1 += "<td style='border:1px solid #000;padding:5px;text-align:right;'>" + $(item).find('td').eq(4).children('input[type="text"]').val() + "</td></tr>";
                //    });
                //if ($('#PdaAdjust').is(':checked')) {
                //    var t2 = "<tr><td colspan='4' style='border:1px solid #000;padding:5px;text-align:right;'><b>PDA Adjusted:</b></td><td style='border:1px solid #000;padding:5px;text-align:right;'>" + $("#Adjusted").val() + "</td></tr>";
                //    t1 += t2;
                //}                

                //    if ($('#PdaAdjust').is(':checked')) {
                //        html4 += t1 + "</tbody></table></td></tr></table><b>PDA Opening:</b> <span>" + $("#Opening").val() + "</span><br/><br/><b>PDA Closing:</b> <span>" + $("#Closing").val() + "</span><br/><b>CASHIER REMARKS:<span>" + $('#Remarks').val() + "</span></b>";
                //    }
                //else {
                //        html4 += t1 + "</tbody></table></td></tr></table><br/><b>CASHIER REMARKS:<span>" + $('#Remarks').val() + "</span></b>";
                //    }


                //html.Append("<tr><td colspan='12'> html4 </td></tr>");

                html.Append("</tbody><tfoot><tr><td colspan='4'><br/><br/><br/><br/><br/><br/>CASHIER</td><td colspan='4'><br/><br/><br/><br/><br/><br/>AM (A/cs)</td><td colspan='4' style='text-align:center;'><br/><br/><br/><br/><br/><br/>Manager (CFS)</td></tr></tfoot></table>");

                lstSB.Add(html.ToString());
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/BulkReceipt/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                {

                    ObjPdf.GeneratePDF(LocalDirectory + FileName, lstSB);

                }
                var ObjResult = "/Docs/" + Session.SessionID + "/Report/BulkReceipt/" + FileName;
                return ObjResult;

            }
            catch (Exception ex)
            {
                return "";
            }

        }




        #endregion


        #region Bulk Invoice For ExterNal User

        [HttpGet]
        public ActionResult BulkInvoiceReportForExternalUser()
        {

            Kol_ImportRepository objImport = new Kol_ImportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ViewBag.CHAID = objLogin.EximTraderId;
            ViewBag.CHAName = objLogin.Name;
            ViewBag.ShippingId = objLogin.EximTraderId;
            ViewBag.ShippingName = objLogin.Name;

            //objImport.ListOfShippingLine();
            //if (objImport.DBResponse.Data != null)
            //    ViewBag.ShippingLineList = JsonConvert.SerializeObject((List<Import.Models.ShippingLine>)objImport.DBResponse.Data);
            //else
            //    ViewBag.ShippingLineList = null;


            //objImport.ListOfCHA();
            //if (objImport.DBResponse.Data != null)
            //    ViewBag.CHAList = JsonConvert.SerializeObject((List<Import.Models.CHA>)objImport.DBResponse.Data);
            //else
            //    ViewBag.CHAList = null;
            return PartialView();
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkInvoiceReportForExternalUser(BulkInvoiceReport ObjBulkInvoiceReport)
        {
            if (ObjBulkInvoiceReport.InvoiceNumber == null)
            {
                ObjBulkInvoiceReport.InvoiceNumber = "";
            }
            ReportRepository ObjRR = new ReportRepository();





            Login objLogin = (Login)Session["LoginUser"];
            //When Module is selected All Condition against a party
            ObjBulkInvoiceReport.CHAId = objLogin.EximTraderId;
            ObjBulkInvoiceReport.PartyId = objLogin.EximTraderId;
            ObjBulkInvoiceReport.PayeeId = objLogin.EximTraderId;
            ObjBulkInvoiceReport.ShippingLineId = objLogin.EximTraderId;


            if (ObjBulkInvoiceReport.InvoiceModule == "All")
            {
                string ModuleName = "";
                //delete all the files in the folder before creating it
                if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
                    DeleteDirectory(deletelocation);
                }

                //get all the distinct invoice module and invoices list with respect to party and date range 
                ObjRR.ModuleListWithInvoice(ObjBulkInvoiceReport);
                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    List<dynamic> lstModule = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                    IList lstDistModule = lstModule.Select(x => x.Module).Distinct().ToList();

                    string FilePath = "";


                    foreach (string Mod in lstDistModule)
                    {
                        //lstModule.Where(x => x.Module == Mod).ToList().ForEach(itemInv =>
                        //{
                        //    String ModuleName= itemInv.Module;
                        switch (Mod)
                        {
                            //Here ds is list of invoice of a module between two dates 
                            case "IMPYard":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET FCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPDeli":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET LCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforGodown((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPLod":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "LOADED CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEXPLod((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXP":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER MOVEMENT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEXP((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPDest":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CCIN ENTRY";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforIMPDest((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BTT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BTT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTT((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "ECYard":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EMPTY CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforECYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "ECGodn":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "SEAL CUTTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforECGodn((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "CC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CARGO SHIFTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCC((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BND":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "FUMIGATION";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBND((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BNDadv":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EXPORT CONTAINER STUFFING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainerBNDadv((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BNDUnld":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "IMPORT TRAIN SUMMARY";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBNDUnld((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "MiscInv":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER DEBIT INVOICE";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforMiscInv((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "AUC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "Auction";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforAuc((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;


                        }


                    }
                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }

            else
            {

                ObjRR.GenericBulkInvoiceDetailsForPrintForExternalUser(ObjBulkInvoiceReport);//, objLogin.Uid

                if (ObjRR.DBResponse.Status == 1)
                {

                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                    string FilePath = "";
                    switch (ObjBulkInvoiceReport.InvoiceModule)
                    {
                        case "IMPYard":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDeli":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforGodown(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPLod":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEXPLod(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXP":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEXP(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDest":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforIMPDest(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTT":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTT(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                        case "ECYard":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforECYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "ECGodn":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforECGodn(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "CC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCC(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BND":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDadv":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainerBNDadv(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDUnld":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBNDUnld(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "MiscInv":
                            ObjBulkInvoiceReport.All = "";
                            ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            FilePath = GeneratingBulkPDFforMiscInv(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "AUC":
                            ObjBulkInvoiceReport.All = "";
                            ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                            FilePath = GeneratingBulkPDFforAuc(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                    }

                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }
        }

        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfInvoiceDateWiseForExternalUser(string FromDate, string ToDate, string Module = "All", int ShippingLineId = 0, int CHAId = 0)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceListForExternalUser(FromDate, ToDate, Module, objLogin.EximTraderId);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }


        #endregion


        #region Bulk Debit Note For External User
        [HttpGet]
        public ActionResult GetBulkDeditNoteForExternalUser()
        {
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintDRNoteForExternalUser(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
           ReportRepository objRepo = new ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            Login objLogin = (Login)Session["LoginUser"];
            objRepo.PrintDetailsForBulkCRNoteForExternalUser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "D", objLogin.EximTraderId);
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "NO Data Found" });
            }
        }
        /*  [HttpPost]
          [CustomValidateAntiForgeryToken]
          public JsonResult GetBulkDebitNoteReportForExternalUser(FormCollection fc)
          {
              Login objLogin = (Login)Session["LoginUser"];
              //When Module is selected All Condition against a party
              //ObjBulkInvoiceReport.CHAId = ;
              ReportRepository objRR = new ReportRepository();
              objRR.GetBulkDebitNoteReportForExternalUser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), objLogin.EximTraderId);
              List<string> lststring = new List<string>();
              if (objRR.DBResponse.Data != null)
              {
                  lststring = (List<string>)objRR.DBResponse.Data;
                  List<string> pdfPages = new List<string>();
                  /*PDF Gneration*/
        /*  string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/";
          string FileName = "BulkDRNote" + "DR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
          if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
          lststring.ForEach(item =>
          {
              if (!string.IsNullOrEmpty(item) && item != "")
              {
                  item = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                  pdfPages.Add(item.Replace("|_br_|", "<br/>"));
              }
          });
          //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
          //{
          //    rh.GeneratePDF(Path + FileName, pdfPages.ToArray());
          //}
          using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
          {
              ObjPdf.HeadOffice = this.HeadOffice;
              ObjPdf.HOAddress = this.HOAddress;
              ObjPdf.ZonalOffice = this.ZonalOffice;
              ObjPdf.ZOAddress = this.ZOAddress;
              ObjPdf.GeneratePDF(Path + FileName, pdfPages.ToArray());

          }
          return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/" + FileName });
      }
      else
          return Json(new { Status = -1, Message = "No Data" });
  }*/
        #endregion


        #region Bulk Credit Note
        [HttpGet]
        public ActionResult GetBulkCreditNoteForExternalUser()
        {
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintCRNoteForExternalUser(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            ReportRepository objRepo = new ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            Login objLogin = (Login)Session["LoginUser"];
            objRepo.PrintDetailsForBulkCRNoteForExternalUser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "C", objLogin.EximTraderId);
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "NO DATA FOUND" });
            }
        }
        /*  [HttpPost]
          [CustomValidateAntiForgeryToken]
          public JsonResult GetBulkCreditNoteReportForExternalUser(FormCollection fc)
          {
              Login objLogin = (Login)Session["LoginUser"];
              ReportRepository objRR = new ReportRepository();
              objRR.GetBulkCreditNoteReportForExternalUser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), objLogin.EximTraderId);
              List<string> lststring = new List<string>();
              if (objRR.DBResponse.Data != null)
              {
                  lststring = (List<string>)objRR.DBResponse.Data;
                  List<string> pdfPages = new List<string>();
                  /*PDF Gneration*/
        /*  string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/";
          string FileName = "BulkCRNote" + "CR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
          if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
              Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
          lststring.ForEach(item =>
          {
              if (!string.IsNullOrEmpty(item) && item != "")
              {
                  item = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                  pdfPages.Add(item.Replace("|_br_|", "<br/>"));
              }
          });
          //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
          //{
          //    rh.GeneratePDF(Path + FileName, pdfPages.ToArray());
          //}
          using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
          {
              ObjPdf.HeadOffice = this.HeadOffice;
              ObjPdf.HOAddress = this.HOAddress;
              ObjPdf.ZonalOffice = this.ZonalOffice;
              ObjPdf.ZOAddress = this.ZOAddress;
              ObjPdf.GeneratePDF(Path + FileName, pdfPages.ToArray());

          }
          return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/" + FileName });
      }
      else
          return Json(new { Status = -1, Message = "No Data" });
  }*/
      
        [NonAction]
        public string GenerateDRNotePDF(PrintModelOfBulkCrCompany objCR)
        {
            Einvoice obj = new Einvoice();

            List<string> lstSB = new List<string>();

            string SACCode = "";
            objCR.lstCharges.Select(x => new { SACCode = x.SACCode }).Distinct().ToList().ForEach(item =>
            {
                if (SACCode == "")
                    SACCode = item.SACCode;
                else
                    SACCode = SACCode + "," + item.SACCode;
            });

            objCR.lstCrParty.ToList().ForEach(item =>
            {

                //    /*Header Part*/
                StringBuilder html = new StringBuilder();

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr>");

                html.Append("<td width='90%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - manager_cfs@yahoo.in</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + "  </td></tr>");
                html.Append("</tbody></table></td>");

                if (item.SignedQRCode == "")
                { }
                else
                {
                    if (item.SupplyType == "B2C")
                    {
                        html.Append("<td align='left' valign='top'><img width='150px' height='150px' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                    else
                    {
                        html.Append("<td align='left' valign='top'><img width='150px' height='150px' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                }







                html.Append("<td align='left' valign='top'><img width='150px' height='150px' valign='top' align='right' src=''/> </td>");

                html.Append("</tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //html.Append("<td colspan='8' width='90%' width='100%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCR.CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCR.CompanyAddress + "</span>");
                //html.Append("<br /><label style='font-size: 14px; font-weight:bold;'></label>");
                //html.Append("</td></tr>");

                html.Append("</tbody></table>");

                html.Append("<table cellpadding='0' cellspacing='0' style='table-layout: fixed; width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif;'><tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='6' cellspacing='0' style='width:50%; border-right: 1px solid #000;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Provider</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b>" + objCR.CompanyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Warehouse Address:</b>" + objCR.CompanyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + objCR.CompCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + objCR.CompStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b>" + objCR.CompStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN:</b> " + objCR.CompGstIn + "</td></tr>");
                html.Append("<tr><td cellpadding='10'><b>PAN:</b>" + objCR.CompPan + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' cellspacing='0' Valign='top' style='width:50%;'>");
                html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;'><tbody>");
                html.Append("<tr><th cellpadding='10' style='border-bottom: 1px solid #000;'>Details of Service Receiver</th></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Name:</b> " + item.PartyName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>Address:</b> " + item.PartyAddress + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>City:</b>" + item.PartyCityName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State:</b>" + item.PartyStateName + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>State Code:</b> " + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><td cellpadding='10' style='border-bottom: 1px solid #000;'><b>GSTIN(if registered):</b> " + item.PartyGSTIN + "</td></tr>");
                html.Append("<tr><td cellpadding='10'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='6' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'><tbody>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Debit/Credit Note Serial No :</b> " + item.CRNoteNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Accounting Code of</b> " + SACCode + "</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Date of Issue :</b> " + Convert.ToDateTime(item.CRNoteDate).ToString("dd/MM/yyyy") + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Description of Services :</b> Other Storage & Warehousing Services</td></tr>");
                html.Append("<tr><td colspan='6' style='width:50%;'><b>Original Bill of Supply/Tax Invoice No :</b>  " + item.InvoiceNo + "</td> <td colspan='6' style='width:50%; text-align: right;'><b>Date :</b>  " + Convert.ToDateTime(item.InvoiceDate).ToString("dd/MM/yyyy") + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Sl No.</th>");
                html.Append("<th colspan='1' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Particulars</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Value</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>Total Amount</th></tr>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>Reason for increase/decrease in original invoice</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                int i = 1;
                decimal IGSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0;
                decimal total = 0;
                objCR.lstCharges.Where(y => y.CRNoteId == item.CRNoteId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + data.ChargeName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.CGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SGSTAmt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTPer + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.IGSTAmt + "</td>");

                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + data.Total + "</td></tr>");
                    i = i + 1;
                    IGSTAmt += data.IGSTAmt;
                    CGSTAmt += data.CGSTAmt;
                    SGSTAmt += data.SGSTAmt;
                    total += data.Total;
                });

                html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + CGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + SGSTAmt + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + IGSTAmt + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + total + "</td></tr>");

                string AmountInWord = ConvertNumbertoWords((long)item.GrandTotal);
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in figure):</b>" + item.GrandTotal + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total Debit/Credit Note Value (in words):</b> " + AmountInWord + "</td></tr>");
                html.Append("<tr><td style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Remarks:</b>" + item.Remarks + "</td></tr>");

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><th>Note:</th></tr>");
                html.Append("<tr><td colspan='12'><b>1.</b> The invoice issued earlier can be modified/cancelled by way of Debit Note/Credit Note.</td></tr>");
                html.Append("<tr><td colspan='12'><b>2.</b> Credit Note is to be issued where excess amount cliamed in original invoice.</td></tr>");
                html.Append("<tr><td colspan='12'><b>3.</b> Debit Note is to be issued where less amount claimed in original invoice.</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt; margin-top:20px;'><tbody>");
                html.Append("<tr><td><span><br/></span></td></tr>");
                html.Append("<tr><td colspan='6' width='80%'></td>");
                html.Append("<th colspan='5' width='50%'>Signature: ____________________________ <br/><br/> Name of the Signatory: __________________ <br/><br/> Designation/Status: ____________________</th></tr>");

                html.Append("<tr><td colspan='6' width='50%'>To, <br/> ____________________________ <br/>____________________________<br/>____________________________<br/><br/> Copy To: <br/> Duplicate Copy for RM, CWC,RO - <br/> 2.Triplicate Copy for Warehouse</td>");
                html.Append("<th colspan='6' width='50%'></th></tr>");


                html.Append("</tbody></table>");
                // html.Append("<div style='margin-top:10px;'><br/><br/><br/><br/></div>");
                // html.Append("<div style='margin-top:10px;'><br/><br/></div>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());

            });



            var FileName = "BulkDebitReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region Bulk Receipt For External

        [HttpGet]
        public ActionResult BulkReceiptReportForExternalUser()
        {


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReportForExternalUser(BulkReceiptReport ObjBulkReceiptReport)
        {
            if (ObjBulkReceiptReport.ReceiptNumber == null)
            {
                ObjBulkReceiptReport.ReceiptNumber = "";
            }

            ReportRepository ObjRR = new ReportRepository();
            List<BulkReceiptReport> LstContainerMovementRegister = new List<BulkReceiptReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.BulkReceiptReportForExternalUser(ObjBulkReceiptReport,objLogin.EximTraderId);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                IList<string> pages = new List<string>();
                var htmls = (List<string>)ObjRR.DBResponse.Data;
                htmls.ForEach(item =>
                {
                    if (!string.IsNullOrEmpty(item) || item != "")
                    {
                        try
                        {
                            var orginalHtml = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                            var ImgLeft = Server.MapPath("~/Content/Images/CWCPDF.PNG");
                            var ImgRight = Server.MapPath("~/Content/Images/SwachhBharat-Logo.png");
                            orginalHtml = orginalHtml.Replace("IMGLeft", ImgLeft).Replace("IMGRight", ImgRight);
                            pages.Add(orginalHtml.Replace("|_br_|", "<br/>").Replace("<>", " ").Split(' ')[0]);
                            pages.Add(orginalHtml.Replace("|_br_|", "<br/>").Replace("<>", " ").Split(' ')[1]);
                        }
                        catch (Exception e)
                        {
                            string error = e.Message.ToString();
                        }
                    }
                });

                if (pages.Count > 0)
                {

                    var type = "bulkreport";
                    var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var fileName = id + ".pdf";
                    //  var fileName = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                    string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
                    if (!Directory.Exists(PdfDirectory))
                        Directory.CreateDirectory(PdfDirectory);
                    using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                    {
                        rh.GeneratePDF(PdfDirectory + fileName, pages.ToArray());
                    }



                    return Json(new { Status = 1, Message = "../../Docs/bulkreport/" + id + ".pdf" }, JsonRequestBehavior.DenyGet);
                }
                else
                {
                    return Json(ObjRR.DBResponse);
                }
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

      


        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfReceiptDateWiseForExternalUser(string FromDate, string ToDate)
        {
            ReportRepository ObjRR = new ReportRepository();
            //List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetReceiptListForExternaluser(FromDate, ToDate, objLogin.EximTraderId);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }

        #endregion


        #region service code wise DebitNote Credit Note Details

        [HttpGet]
        public ActionResult ServiceCodeWiseDebCreDtls()
        {
            ReportRepository ObjRR = new ReportRepository();
            List<SACList> LstSAC = new List<SACList>();
            ObjRR.GetSAC();
            if (ObjRR.DBResponse.Data != null)
            {
                LstSAC = (List<SACList>)ObjRR.DBResponse.Data;
            }
            ViewBag.SACList = LstSAC;

            return PartialView();
        }

        [HttpPost]
        //   [ValidateAntiForgeryToken]
        public JsonResult GetServiceCodeWiseDebCreDtls(Kol_ServiceCodeWiseInvDtls ObjServiceCodeWiseInvDtls)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<Kol_ServiceCodeWiseInvDtls> LstInvoiceReportDetails = new List<Kol_ServiceCodeWiseInvDtls>();
            Login objLogin = (Login)Session["LoginUser"];
            string Path = "";
            ObjRR.ServiceCodeWiseCrDrDtls(ObjServiceCodeWiseInvDtls);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstInvoiceReportDetails = (List<Kol_ServiceCodeWiseInvDtls>)ObjRR.DBResponse.Data;
                Path = GeneratePDFServicecodewiseDebCre(LstInvoiceReportDetails, ObjServiceCodeWiseInvDtls.PeriodFrom, ObjServiceCodeWiseInvDtls.PeriodTo);
                //return Json(ObjRR.DBResponse);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {

                return Json(new { Status = 0, Data = "No Record Found" }, JsonRequestBehavior.AllowGet);
            }

        }
        /*   [HttpPost, ValidateInput(false)]
           [CustomValidateAntiForgeryToken]
           public JsonResult GenerateServiceCodeWiseInvDtlsPDF(FormCollection fc)
           {
               try
               {

                   string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                   // string FtpIdPath = "";
                   //string LocalIdPath = "";
                   var Pages = new string[1];
                   var FileName = "ServiceCodeWiseInvoiceDetails.pdf";
                   Pages[0] = fc["Page"].ToString();
                   // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                   //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                   //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                   //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                   // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                   string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/";
                   if (!Directory.Exists(LocalDirectory))
                       Directory.CreateDirectory(LocalDirectory);
                   using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                   {
                       ObjPdf.HeadOffice = this.HeadOffice;
                       ObjPdf.HOAddress = this.HOAddress;
                       ObjPdf.ZonalOffice = this.ZonalOffice;
                       ObjPdf.ZOAddress = this.ZOAddress;
                       ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                   }
                   var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/" + FileName };
                   return Json(ObjResult);

               }
               catch (Exception ex)
               {
                   return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
               }

           }*/
        [NonAction]
        public string GeneratePDFServicecodewiseDebCre(List<Kol_ServiceCodeWiseInvDtls> lstData, string FromDate, string ToDate)
        {
            try
            {
                //  var FileName = "";
                var location = "";
                var SEZis = "";


                List<string> lstSB = new List<string>();
                String RemarksValue = "";
                string Container = "";
                var FileName = "ServiceCodeWise.pdf";
                StringBuilder Pages = new StringBuilder();
                //    string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>CONTAINER FREIGHT STATION 18 COAL DOCK ROAD KOLKATA700043</label><br/><span style='font-size:7pt;'></span><br/><label style='font-size: 7pt; font-weight:bold;'><label style='font-size: 8pt; font-weight:bold;'>Service Code Wise DebitNote AND CreditNote Details</label></label><span style='font-size:8pt;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span><br/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                Pages.Append("<table cellspacing='0' cellpadding='0' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt;'>");
                Pages.Append("<thead><tr><th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>SAC</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Invoice No.</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Date</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>CGST</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>SGST</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>IGST</th>");
                Pages.Append("<th cellpadding='7' style='border-bottom:1px solid #000;width:10%;'>Total Value </th>");
                // Pages.Append("</tr></thead></table></th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal grandtotal = 0; decimal grandcgst = 0; decimal grandsgst = 0; decimal grandigst = 0;
                var grandtotals = 0; var grandcgsts = 0; var grandsgsts = 0; var grandigsts = 0;
                lstData.ForEach(elem =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.SAC + "</td>");
                    Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.InvoiceNumber + "</td>");
                    Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%'>" + elem.Date + "</td>");
                    Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.CGST + "</td>");
                    Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.SGST + "</td>");
                    Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%'>" + elem.IGST + "</td>");
                    Pages.Append("<td cellpadding='7' style='border-bottom:1px solid #000;width:10%'>" + elem.TotalValue + "</td>");

                    Pages.Append("</tr>");
                });
                //  Pages.Append("</tbody>");
                //   Pages.Append("</tr>");
                //  i++;


                Pages.Append("<tr>");
                // Pages.Append("<th colspan='2' style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.CGST) + "</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.SGST) + "</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.IGST) + "</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;'>" + lstData.Sum(x => x.TotalValue) + "</th>");
                Pages.Append("<td colspan='3'cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;width:10%; font-size:7pt;'>GRAND TOTAL :</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;width:10%; font-size:7pt;'>" + lstData.Sum(x => x.CGST) + "</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.SGST) + "</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.IGST) + "</td>");
                Pages.Append("<td cellpadding='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.TotalValue) + "</td>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Total + "</th>");
                // Pages.Append("<th style='border-bottom: 1px solid #000;'>" + Tues + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:50%; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt; margin-top:20px;'>");
                Pages.Append("<thead>");
                //Pages.Append("<tr><th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 300px;'>Total</th>");
                //Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; width: 100px;'>Total Container</th>");
                //Pages.Append("<th rowspan='2' style='text-align: center; width: 100px;'>Teus</th></tr>");

                Pages.Append("<tr><th style='border-right: 1px solid #000; width: 100px;'>HSNCode</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>IGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'>Total Value</th></tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");
                lstData.Select(x => new { x.SAC }).Distinct().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SAC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.CGST) + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.SGST) + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center; width: 100px;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.IGST) + "</td>");
                    Pages.Append("<td style='border-top: 1px solid #000;'>" + lstData.Where(y => y.SAC == item.SAC).Sum(y => y.TotalValue) + "</td></tr>");

                });
                Pages.Append("</tbody></table>");
                lstSB.Add(Pages.ToString());
                //  FileName = "ServiceCodeWise" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                //  location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                FileName = "ServiceCodeWiseInvoiceDetails" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
                /* if (!Directory.Exists(LocalDirectory))
                 {
                     Directory.CreateDirectory(LocalDirectory);
                 }
                 if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                 {
                     System.IO.File.Delete(LocalDirectory + "/" + FileName);
                 }*/

                /*if (System.IO.File.Exists(location))
                {
                    System.IO.File.Delete(location);
                }*/
                /* using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                 {
                     ObjPdf.HeadOffice = this.HeadOffice;
                     ObjPdf.HOAddress = this.HOAddress;
                     ObjPdf.ZonalOffice = this.ZonalOffice;
                     ObjPdf.ZOAddress = this.ZOAddress;
                     ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                 }*/
                // string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ServiceCodeWiseInvoiceDetails/";
                // if (!Directory.Exists(LocalDirectory))
                //    Directory.CreateDirectory(LocalDirectory);
                // string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = "";
                    ObjPdf.HOAddress = "";
                    ObjPdf.ZonalOffice = "";
                    ObjPdf.ZOAddress = "";
                    //   ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                    ObjPdf.GeneratePDF(location, lstSB);

                }
                return "/Docs/All/" + Session.SessionID + "/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region BOEWise Destuffing Entry Print
        [HttpGet]
        public ActionResult BoewiseDestufprint()
        {
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.GetAllboenoindestuffing("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.lstInvcNo = Jobject["lstInvcNo"];
                ViewBag.StateCr = Jobject["State"];
            }
            else
            {
                ViewBag.lstInvcNo = null;
            }
            return PartialView();
        }
        [HttpGet]
        public JsonResult Searchboelist(string boeno)
        {
            ReportRepository ObjRR = new ReportRepository();
            //  List<SealCutting> LstJO = new List<SealCutting>();
            ObjRR.GetAllboenoindestuffing(boeno, 0);
            // var jsonResult = Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);

            if (ObjRR.DBResponse.Data != null)
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            else
                return Json(new { Status = -1, Message = "Error" });
        }
        [HttpGet]
        public JsonResult Loadboelist(string boeno, int Page)
        {
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.GetAllboenoindestuffing(boeno, Page);
            // return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
            var jsonResult = Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            jsonResult.MaxJsonLength = int.MaxValue;
            return jsonResult;
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult PrintDestuffingSheet(int DestuffingEntryId, string boeno)
        {
            ReportRepository ObjIR = new ReportRepository();
              ObjIR.GetBoeDestuffEntryForPrint(boeno);
            if (ObjIR.DBResponse.Data != null)
            {
                boedestuffing ObjDestuff = new boedestuffing();
                ObjDestuff = (boedestuffing)ObjIR.DBResponse.Data;
                string Path = GeneratePDFForDestuffSheet(ObjDestuff, DestuffingEntryId, boeno);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        [NonAction]
        public string GeneratePDFForDestuffSheet(boedestuffing ObjDestuff, int DestuffingEntryId, string boeno)
        {
            // DestuffingEntry ObjDestuff = new DestuffingEntry();
            // ObjDestuff=ObjDestuffing.LstDestuffingEntry[0];
            string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/DestuffingSheet" + DestuffingEntryId + ".pdf";
            string Html = "";
            //string ContainerNo = "", Size = "", Serial = "", BOEDate = "", BOLDate = "", BOENo = "", Vessel = "", CHA = "", Importer = "", ShippingLine = "",
            //CargoDescription = "", MarksNo = "", Weight = "", LineNo = "", Rotation = "", ArrivalDate = "", DestuffingDate = "", Location = "";
            if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            //if (System.IO.File.Exists(Path))
            //{
            //    System.IO.File.Delete(Path);
            //}
            //  Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;'>CONTAINER FREIGHT STATION<br/>DESTUFFING SHEET FCL/LCL</th></tr></thead><tbody><tr><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>MODEL</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th style='border:1px solid #000;text-align:center;padding:5px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Duty</th></tr></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            //Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;'>CONTAINER FREIGHT STATION<br/>DESTUFFING SHEET FCL/LCL</th></tr></thead><tbody><tr><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container no.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>CFS Code</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>MODEL</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Container Size</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>MODEL</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><th style='border:1px solid #000;text-align:center;padding:5px;'>Line No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOE Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>BOL Date</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Marks & No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CHA</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Importer</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Desc.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Commodity</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Cargo Type</th><th style='border:1px solid #000;text-align:center;padding:5px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Duty</th></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:right;padding:5px;'>MODEL</td><td style='border:1px solid #000;text-align:left;padding:5px;'>MODEL</td></tr></tbody></table></td></tr><tr><td colspan='2' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            Html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;'>CENTRAL WAREHOUSING CORPORATION<br/>(A Govt. of India Undertaking)<br/>CONTAINER FREIGHT STATION<br/>DESTUFFING SHEET FCL/LCL</th></tr></thead><tbody><tr><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing no.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.DestuffingEntryNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>Line no.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.LineNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>BOE No</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.BOENo + "</td></tr> <tr><td style='text-align:left;padding:5px;'>BOL No</td><td colspan='3' style='text-align:left;padding:5px;'>"+ObjDestuff.BOLNo+"</td></tr><tr><td style='text-align:left;padding:5px;'>Vessel</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Vessel + "</td><td style='text-align:left;padding:5px;'>Voyage</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Voyage + "</td></tr><tr><td style='text-align:left;padding:5px;'>S/L Seal No.</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.SealNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>Marks & No.</td><td colspan='3' style='text-align:left;padding:5px;'>"+ObjDestuff.MarksNo+"</td></tr><tr><td style='text-align:left;padding:5px;'>Importer</td><td colspan='3' style='text-align:left;padding:5px;'>"+ObjDestuff.Importer+ "</td></tr><tr><td style='text-align:left;padding:5px;vertical-align:top'>Commodity</td><td colspan='3' style='text-align:left;padding:5px;'>" + ObjDestuff.Commodity+"</td></tr></tbody></table></td><td style='width:50%;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr><td style='text-align:left;padding:5px;width:30%;'>De-Stuffing Date</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.DestuffingEntryDate + "</td></tr><tr><td style='text-align:left;padding:5px;'>BOE Date</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.BOEDate + "</td></tr><tr><td style='text-align:left;padding:5px;'>BOL Date</td><td style='text-align:left;padding:5px;'>"+ObjDestuff.BOLDate+"</td></tr><tr><td style='text-align:left;padding:5px;'>Shipping Line</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.ShippingLine + "</td></tr><tr><td style='text-align:left;padding:5px;'>Rotation</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.Rotation + "</td></tr><tr><td style='text-align:left;padding:5px;'>Custom Seal No.</td><td style='text-align:left;padding:5px;'>" + ObjDestuff.CustomSealNo + "</td></tr><tr><td style='text-align:left;padding:5px;'>CHA</td><td style='text-align:left;padding:5px;'>"+ObjDestuff.CHA+"</td></tr><tr><td style='text-align:left;padding:5px;vertical-align:top'>Cargo Desc.</td><td style='text-align:left;padding:5px;'>"+ObjDestuff.CargoDescription+"</td></tr><tr><td style='text-align:left;padding:5px;'>Cargo Type</td><td style='text-align:left;padding:5px;'>"+ObjDestuff.Cargo+"</td></tr></tbody></table></td></tr><tr><td colspan='2'><table style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;'><thead><tr><th style='border:1px solid #000;text-align:center;padding:5px;'>Container No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Size</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CFS Code</th><th style='border:1px solid #000;text-align:center;padding:5px;'>No of pack</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Bay No.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Grid Occup</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Gross Wt.</th><th style='border:1px solid #000;text-align:center;padding:5px;'>CIF Value</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Duty</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Area</th><th style='border:1px solid #000;text-align:center;padding:5px;'>Volume</th></tr></thead><tbody>";
            Html = Html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            string html2 = "";
            ObjDestuff.Lstbode.ToList().ForEach(item =>
            {
                html2 += "<tr><td style='border:1px solid #000;text-align:left;padding:5px;'>"+item.ContainerNo+"</td><td style='border:1px solid #000;text-align:left;padding:5px;'>"+item.Size+"</td><td style='border:1px solid #000;text-align:left;padding:5px;'>"+item.CFSCode+"</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.NoOfPackages + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GodownName + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.GodownWiseLctnNames + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + item.GrossWeight + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + item.CIFValue + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.Duty + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.SQM + "</td><td style='border:1px solid #000;text-align:left;padding:5px;'>" + item.CUM + "</td></tr>";
            });
            string html3 = "<tr><th style='border:1px solid #000;text-align:left;padding:5px;'> Total </th><th style ='border:1px solid #000;text-align:left;padding:5px;'> </th><th style='border:1px solid #000;text-align:left;padding:5px;'></th><th style ='border:1px solid #000;text-align:left;padding:5px;' >" + ObjDestuff.Lstbode.Sum(x => x.NoOfPackages) + " </th><th style='border:1px solid #000;text-align:right;padding:5px;'>  </th><th style='border:1px solid #000;text-align:right;padding:5px;'>  </th><th style='border:1px solid #000;text-align:left;padding:5px;'> " + ObjDestuff.Lstbode.Sum(x => x.GrossWeight) + " </th><th style ='border:1px solid #000;text-align:left;padding:5px;'> " + ObjDestuff.Lstbode.Sum(x => x.CIFValue) + "</th><th style='border:1px solid #000;text-align:left;padding:5px;'>" + ObjDestuff.Lstbode.Sum(x => x.Duty) + "</th ><th style='border:1px solid #000;text-align:left;padding:5px;'> " + ObjDestuff.Lstbode.Sum(x => x.SQM) + " </th><th style='border:1px solid #000;text-align:left;padding:5px;'>" + ObjDestuff.Lstbode.Sum(x => x.CUM) + "</th></tr>";
            string html4 = "</tbody></table></td></tr><tr><td colspan='2' style='padding-top:100px;'><table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border-top:1px dotted #000;'><tbody><tr><td style='text-align:left;width:25%;'>Variations observed if any<br/>Signature and Designation<br/>with date and seal of<br/>Rep. / Surveyor / S.Agent <br/> Live / CHA</td><td style='text-align:left;width:25%;'>Shed Asstt CWC,CFS</td><td style='text-align:left;width:25%;'>Shed I/C CWC,CFS</td><td style='text-align:left;width:25%;'>Rap./Surveyor of Handling & Transport Contractor</td></tr></tbody></table></td></tr></tbody></table>";
            Html = Html + html2 + html3+html4;
            using (var RH = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
            {
                RH.GeneratePDF(Path, Html);
            }

            return "/Docs/" + Session.SessionID + "/DestuffingSheet" + DestuffingEntryId + ".pdf";
        }
        #endregion



        #region Account Report Export Cargo In General Carting
        [HttpGet]
        public ActionResult ExportCargoReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetCargoReport(string AsOnDate)
        {
            if (ModelState.IsValid)
            {
                DSR_ReportRepository ObjRR = new DSR_ReportRepository();
                ObjRR.GetCargoExport(AsOnDate);
                string Path = "";
                List<Hdb_ExpCargo> lstData = new List<Hdb_ExpCargo>();
                lstData = (List<Hdb_ExpCargo>)ObjRR.DBResponse.Data;
                Path = GeneratePDFExpCarReport(lstData, AsOnDate);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFExpCarReport(List<Hdb_ExpCargo> lstData, string Date)
        {
            try
            {
                var FileName = "ExportCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 14px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 14px; padding-bottom: 10px;'></span><br/><span style='font-size: 14px; padding-bottom: 10px;'>CONTAINER FREIGHT STATION 18 COAL DOCK ROAD KOLKATA - 700043</span><br/><label style='font-size: 14px;'></label><br/><label style='font-size: 14px;'>As On Date - " + Date + "</label><br/><label style='font-size: 14px;'></label>");
                Pages.Append("<br /><label style='font-size: 16px; font-weight:bold;'>Accrued Income Report for Export Cargo In General Carting</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Kukatpally-Hyderabad</span><br/><span style='font-size:12px;'><b>As On Date - </b> " + Date + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Account Report for Export Cargo In General Carting</label></td></tr>");
                //Pages.Append("</tbody></table>");
                //Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sb No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sb Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Shed</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Storage Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>FCL / LCL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>No Of Days</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>No Of Week</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Storage Amt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>Insurance Amt</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SbNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SbDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Shed + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.StorageType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.FCLLCL + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.NoOfDays + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.NoOfWeek + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.GeneralAmount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.InsuranceAmount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>" + lstData.AsEnumerable().Sum(item => item.Area) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfDays) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfWeek) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.GeneralAmount) + "</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + lstData.AsEnumerable().Sum(item => item.InsuranceAmount) + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region Accounts Report for Import Cargo
        [HttpGet]
        public ActionResult ImportCargoAccountsReport()
        {
            HDBMasterRepository ObjYR = new HDBMasterRepository();
            ObjYR.GetAllGodown();
            if (ObjYR.DBResponse.Data != null)
            {
                ViewBag.ListOfGodown = (List<CwcExim.Areas.Master.Models.HDBGodown>)ObjYR.DBResponse.Data;
            }
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetImpCargo(string AsOnDate, string GodownId, string GodownName)
        {
            if (ModelState.IsValid)
            {
                Hdb_ReportRepository ObjRR = new Hdb_ReportRepository();
                ObjRR.GetImpCargo(AsOnDate, GodownId);
                string Path = "";
                List<Hdb_ImpCargo> lstData = new List<Hdb_ImpCargo>();
                lstData = (List<Hdb_ImpCargo>)ObjRR.DBResponse.Data;
                Path = GeneratePDFImpCargo(lstData, AsOnDate, GodownName);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImpCargo(List<Hdb_ImpCargo> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "ImpCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 14px;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 14px; padding-bottom: 10px;'></span><br/><span style='font-size: 14px; padding-bottom: 10px;'>CONTAINER FREIGHT STATION 18 COAL DOCK ROAD KOLKATA-700043</span><br/><label style='font-size: 14px;'></label><br/><label style='font-size: 14px;'>As On Date - " + Date + "</label><br/><label style='font-size: 14px;'>Shed Cd - " + GodownName + "</label>");
                Pages.Append("<br /><label style='font-size: 16px; font-weight:bold;'>Account Report for Import Cargo</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                //Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                //Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>CFS Kukatpally-Hyderabad</span><br/><span style='font-size:14px;'><b>As On Date - </b> " + Date + "</span><br/><span style='font-size:14px;'><b>Shed Cd - </b>" + GodownName + "</span><br/><label style='font-size: 16px; font-weight:bold;'>Account Report for Import Cargo</label></td></tr>");
                //Pages.Append("</tbody></table>");
                //Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>OBL No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Dstf Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Entry Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>FCL / LCL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Storage Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Item No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Rcvd Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Gr Wt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Slot No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Remarks</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Total Wk</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Storage Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>Insurance Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>" + item.BOLNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.DestuffingEntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.CFSCode + "</td>");

                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.EntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.LCLFCL + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.StorageArea + "</td>");

                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.CommodityAlias + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.NoOfUnits + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.NoOfUnitsRec + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Weight.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Area.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.LocationName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Remarks + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.TotWk + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.Amount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.InsuranceAmount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='width:6%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:4%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:4%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfUnits) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:4%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfUnitsRec) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>" + lstData.AsEnumerable().Sum(item => item.Weight) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'>" + lstData.AsEnumerable().Sum(item => item.Area) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:5%;'>" + lstData.AsEnumerable().Sum(item => item.TotWk) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:5%;'>" + lstData.AsEnumerable().Sum(item => item.Amount) + "</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + lstData.AsEnumerable().Sum(item => item.InsuranceAmount) + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region OBL/ShipBill Information
        [HttpGet]
        public ActionResult OBlSBinformation()
        {
            

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetOBlSBinformation(OblSbinformation ObjOblSbinformation)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<OblSbinformation> LstOblSbinformation = new List<OblSbinformation>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.OblSbinformation(ObjOblSbinformation);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstOblSbinformation = (List<OblSbinformation>)ObjRR.DBResponse.Data;
                string FilePath = "";
                if (ObjOblSbinformation.Ref=="SB")
                {
                    FilePath = GeneratePDFForSBInformationReport(LstOblSbinformation);
                }
                else
                {
                    FilePath = GeneratePDFForOBLInformationReport(LstOblSbinformation);
                }

                var ObjResult = new { Status = 1, Message = FilePath };
                return Json(ObjResult);
              //  return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }


        [NonAction]
        public string GeneratePDFForSBInformationReport(List<OblSbinformation> oblSbinformation)
        {
            try
            {

                var FileName = "ShippingBillInformationReport.pdf";
                StringBuilder Pages = new StringBuilder();
               // string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
            
             //   List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000;  text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>SR No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>DATE</ th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>SB NO/ CTD NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>EXPORTER NAME</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CHA NAME	</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>UNIT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>WEIGHT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>FOB VALUE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CONTAINER NO.</th>");

                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                decimal NoOfPackages = 0M;
                decimal GrossWeight = 0M;
                decimal FobValue = 0M;

                


                int i = 1;
                oblSbinformation.ToList().ForEach(item =>
                {
                        Pages.Append("<tr>");

                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i.ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Date + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ImporterName + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHAName + " </td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPackages + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrossWeight + " </td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FobValue + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                        Pages.Append("</tr>");


                     NoOfPackages = NoOfPackages+Convert.ToDecimal(item.NoOfPackages);
                     GrossWeight = GrossWeight+ Convert.ToDecimal(item.GrossWeight);
                     FobValue = FobValue + Convert.ToDecimal(item.FobValue);


                    i = i + 1;

                });
                Pages.Append("<tr>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>Total</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>"+ NoOfPackages + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>"+ GrossWeight + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>"+ FobValue +"</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                 
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/OblSbinformation/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages.ToString());

                }

                return   "/Docs/" + Session.SessionID + "/Report/OblSbinformation/" + FileName; ;

            }
            catch (Exception ex)
            {
                return "";
            }
        }

        [NonAction]
        public string GeneratePDFForOBLInformationReport(List<OblSbinformation> oblSbinformation)
        {
            try
            {

                var FileName = "OBLInformationReport.pdf";
                StringBuilder Pages = new StringBuilder();
                // string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                //   List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000;  text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>SR No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>DATE</ th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>BL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>BOE NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>IMPORTER NAME</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CHA NAME</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>UNIT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>WEIGHT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>CIF VALUE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>DUTY</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CONTAINER NO.</th>");

                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                decimal NoOfPackages = 0M;
                decimal GrossWeight = 0M;
                decimal FobValue = 0M;
                decimal Duty = 0M;




                int i = 1;
                oblSbinformation.ToList().ForEach(item =>
                {
                    Pages.Append("<tr>");

                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i.ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Date + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BEO + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ImporterName + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHAName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPackages + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrossWeight + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FobValue + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Duty + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + " </td>");
                    Pages.Append("</tr>");


                    NoOfPackages = NoOfPackages + Convert.ToDecimal(item.NoOfPackages);
                    GrossWeight = GrossWeight + Convert.ToDecimal(item.GrossWeight);
                    FobValue = FobValue + Convert.ToDecimal(item.FobValue);
                    Duty = FobValue + Convert.ToDecimal(item.Duty);


                    i = i + 1;

                });
                Pages.Append("<tr>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>Total</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
              

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>" + NoOfPackages + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>" + GrossWeight + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>" + FobValue + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'>" + Duty + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;font-weight: bold;'></th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");


                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/OblSbinformation/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages.ToString());

                }

                return  "/Docs/" + Session.SessionID + "/Report/OblSbinformation/" + FileName;

            }
            catch (Exception ex)
            {
                return "";
            }
        }


        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateOblSbinformationPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "OblSbinformation.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/OblSbinformation/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/OblSbinformation/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion


        #region   Tally Response Report 
        //25-OCT-2021
        public ActionResult TallyResponseReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult TallyResponseReport(TallyResponse vm)
        {
            ReportRepository ObjRR = new ReportRepository();
            List<TallyResponse> lstData = new List<TallyResponse>();

            ObjRR.GetTallyResponse(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<TallyResponse>)ObjRR.DBResponse.Data;
                Path = GenerateTallyResponseReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateTallyResponseReport(List<TallyResponse> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                ReportRepository ObjRR = new ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "TallyResponseReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top' width='10%'><img align='right' src='IMGSRC'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Tally Response Report</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td width='10%' valign='top'><img align='right' src='ISO_IMG'/></td>");
                Pages.Append("<td width='10%' valign='top'><img align='right' src='SWACHBHARAT'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>Bill Of Supply</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>Tax Invoice</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Debit Note</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>Credit Note</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>Receipt Voucher</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {

                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Date + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Bill + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Invoice + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Dr + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cr + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Receipt + "</td>");
                    Pages.Append("</tr>");
                    i++;

                });

                // Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='font-size:10pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td><br/></td></tr>");
                Pages.Append("<tr><th colspan='12' style='text-align:left;'>* Contact with Helpdesk (CWC) team for resolution.</th></tr>");
                Pages.Append("</thead></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                Pages.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));



                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 20f, 30f, 20f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        //Added by Susmita-24-04-2024
        #region Tds Deduction Report
        public ActionResult TdsDeductionReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetTdsDeductionReport(Kol_TdsDeductionReport vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=TDSDeductionReport.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            ReportRepository obj = new ReportRepository();
            obj.TdsDeductionExcelRpt(vm.PeriodFrom, vm.PeriodTo);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(TdsDeductionReportExcelPDF(ds, vm.PeriodFrom, vm.PeriodTo));
            Response.End();

            return Content("xc");
        }

        private string TdsDeductionReportExcelPDF(DataSet ds, string FromDate, string ToDate)
        {


            List<dynamic> lstTdsDeductionRptSummary = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            var i = 1;
            var FileName = "TdsDeductionReport.pdf";
            string html = "<html><body>";

            //Report of TDS Deduction Report
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>TDS Deduction Report</h1></td></tr>";
            html += "<tr><td colspan='10' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION, DELHI : RO KOLKATA(" + FromDate + " to " + ToDate + ") </h1></td></tr>";
            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='15' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";

            html += "<thead>";

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SL NO.</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Branch Name</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Name Of Depositor</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TAN Number of Depositor</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice No</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice Date</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice Amount</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TDS Amount</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TDS Deduction Date</th>";

            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";
            int totalInvAmt = 0;
            int totalTdsAmt = 0;

            lstTdsDeductionRptSummary.ToList().ForEach(item =>
            {
                try
                {

                    html += "<tr>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + i + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.BranchName + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.DepositorName + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.TanNumber + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.InvoiceNo + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.InvoiceDate + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.Amount + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.TDS + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + item.ReceiptDate + "</td>";
                    html += "</tr>";

                    totalInvAmt = totalInvAmt + Convert.ToInt32(item.Amount);
                    totalTdsAmt = totalTdsAmt + Convert.ToInt32(item.TDS);

                    i++;

                }
                catch (Exception Ex)
                {

                }
            });

            html += "<tr>";
            html += "<th colspan='6' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>TOTAL :</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + totalInvAmt + "</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + totalTdsAmt + "</th>";
            html += "<th style='border-top: 1px solid #000; text-align: center;'></th>";
            html += "</tr>";
            html += "</tbody>";
            html += "</table></td></tr>";
            html += "</tbody></table>";

            html += "</body></html>";
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }
        #endregion

    }
}