using Newtonsoft.Json;
using Newtonsoft.Json.Linq;   
using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CwcExim.Areas.Report.Models;
using CwcExim.Controllers;
using CwcExim.Models;
using CwcExim.Repositories;
using CwcExim.Filters;
using CwcExim.UtilityClasses;
using System.Reflection;
using System.Text;
using CwcExim.Areas.Import.Models;
using System.Data;
using CwcExim.Areas.Export.Models;
using CwcExim.Areas.CashManagement.Models;
using System.Drawing;
using EinvoiceLibrary;
using System.Threading.Tasks;

namespace CwcExim.Areas.Report.Controllers
{

    public class VIZ_ReportCWCController : BaseController
    {
        private static readonly log4net.ILog log = log4net.LogManager.GetLogger(System.Reflection.MethodBase.GetCurrentMethod().DeclaringType);
        private string HeadOffice { get; set; }
        private string HOAddress { get; set; }
        public string ZonalOffice { get; set; }
        public string ZOAddress { get; set; }
        public decimal EffectVersion { get; set; }
        public string EffectVersionLogoFile { get; set; }
           
        public VIZ_ReportCWCController()
        {
            /*
             * CALL PROCEDURE AND SET VALUE OF PROPERTIES
             */
            CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.getCompanyDetails();
            objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
            HeadOffice = ""; //objCompanyDetails.CompanyName;
            HOAddress = "";//objCompanyDetails.RoAddress;
            ZonalOffice = objCompanyDetails.CompanyName;
            ZOAddress = objCompanyDetails.CompanyAddress;
            EffectVersion = Convert.ToDecimal(objCompanyDetails.EffectVersion);
            EffectVersionLogoFile = objCompanyDetails.VersionLogoFile.ToString();

        }

        #region ChequeSummaryReport

        /*Invoice Report Details Section-21.08.2018*/
        [HttpGet]
        public ActionResult PpgChequeSummaryReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetChequeSummaryReport(WFLD_ChequeSummary ObjChequeSummary)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ChequeSummary> LstChequeSummary = new List<WFLD_ChequeSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ChequeSummary(ObjChequeSummary);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstChequeSummary = (List<WFLD_ChequeSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateChequeSummaryReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ChequeSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ChequeSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ChequeSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        //-----------------for update ChequeSummaryReport

        [HttpGet]
        public ActionResult PpgChequeDdPoSdSummaryReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetChequeDdPoSdSummaryReport(WFLD_CashChequeDDSummary ObjChequeSummary)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_CashChequeDDSummary> LstChequeSummary = new List<WFLD_CashChequeDDSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ChequeCashDDPOSummary(ObjChequeSummary);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstChequeSummary = (List<WFLD_CashChequeDDSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateChequeDdPoSdSummaryReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ChequeSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ChequeSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ChequeSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        //END 





        #endregion

        #region Invoice Containerwise


        [HttpGet]
        public ActionResult ContainerwiseInvoiceReport()
        {

            VIZ_ReportRepository objExport = new VIZ_ReportRepository();
            objExport.GetContainer();
            if (objExport.DBResponse.Status > 0)
                ViewBag.ContainerNo = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            else
                ViewBag.ContainerNo = null;
            return PartialView();
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetContainerReport(WFLDContainerInvoiceReport ObjContaiunerReport)
        {
            if (ObjContaiunerReport.ContainerNo == null)
            {
                ObjContaiunerReport.ContainerNo = "";
            }
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            // List<WFLDInvoiceGate> WFLDInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
            ObjRR.ContainerInvoiceDetailsForPrint(ObjContaiunerReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                //string FilePath = GeneratingBulkPDF(WFLDInvoiceGateList, ObjBulkInvoiceReport.InvoiceModuleName);
                string FilePath = "";


                FilePath = GeneratingContainerInvoice(ds);

                return Json(new { Status = 1, Data = FilePath });
            }
            else
                return Json(new { Status = -1, Data = "No Record Found." });

        }



        [NonAction]
        public string GeneratingContainerInvoice(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            // List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<string> lstSB = new List<string>();
            String CWC = "CWC";
            String GST = "";
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + ZonalOffice + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + ZOAddress + "</span>");
                html.Append("<br />");
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + GST + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Container wise Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>ICD Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                //html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                // html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    //     html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.FromDate + "</td>");
                    //    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Clause</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.Clause + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>");
                html.Append("*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/
                lstSB.Add(html.ToString());
            });
            var FileName = "ContainerReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        #endregion

        #region GatePassReport
        [HttpGet]
        public ActionResult GatePassReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetGatePassReport(GatePassReport ObjGatePassReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<GatePassReport> LstContainerOutReport = new List<GatePassReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GatePassReport(ObjGatePassReport, objLogin.Uid);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerOutReport = (List<GatePassReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateGatePassReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "GatePassReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/GatePassReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/GatePassReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region Bulk Invoice

        [HttpGet]
        public ActionResult BulkInvoiceReport()
        {

            ExportRepository objExport = new ExportRepository();
            objExport.GetPaymentParty();
            if (objExport.DBResponse.Status > 0)
                ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            else
                ViewBag.PaymentParty = null;
            VIZ_ReportRepository objRR = new VIZ_ReportRepository();
            objRR.GetInvoicePayeeList();
            if (objRR.DBResponse.Status > 0)
                ViewBag.PayeeList = JsonConvert.SerializeObject(objRR.DBResponse.Data);
            else
                ViewBag.PayeeList = null;

            return PartialView();
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkInvoiceReport(VIZ_BulkInvoiceReport ObjBulkInvoiceReport)
        {
            if (ObjBulkInvoiceReport.InvoiceNumber == null)
            {
                ObjBulkInvoiceReport.InvoiceNumber = ""; 
            }
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            //When Module is selected All Condition against a party

            if (ObjBulkInvoiceReport.InvoiceModule == "All")
            {
                string ModuleName = "";
                //delete all the files in the folder before creating it
                if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
                    DeleteDirectory(deletelocation);
                }

                //get all the distinct invoice module and invoices list with respect to party and date range 
                ObjRR.ModuleListWithInvoice(ObjBulkInvoiceReport);
                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    List<dynamic> lstModule = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                    IList lstDistModule = lstModule.Select(x => x.Module).Distinct().ToList();
                    string FilePath = "";


                    foreach (string Mod in lstDistModule)
                    {
                        //lstModule.Where(x => x.Module == Mod).ToList().ForEach(itemInv =>
                        //{
                        //    String ModuleName= itemInv.Module;
                        switch (Mod)
                        {
                            //Here ds is list of invoice of a module between two dates 
                            case "IMPYard":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET FCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                                
                            case "IMPDestuff":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "LCL INVOICE AFTER DESTUFFING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforDESTUFFING((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPDeli":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET LCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforGodown((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPLod":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "LOADED CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforLoadContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXP": //Change For Mode EXPMovement
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER MOVEMENT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "CCIN":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CCIN ENTRY";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCCINEntry((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BTT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BTT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTT((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "AUC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "Auction";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforAuction((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EMPTY CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEmptyContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "ECTrns":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EMPTY CONTAINER TRANSFER";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEmptyContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPSC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "SEAL CUTTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforSealCutting((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPCRGSHFT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CARGO SHIFTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCargoSF((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "Fumigation":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "FUMIGATION";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforFumigationInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                          /*  case "EXPCS":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EXPORT CONTAINER STUFFING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainerStuffingInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;*/
                            case "BTTCon":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EXPORT BTT CONTAINER ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTContainerInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            ////// written by vineet dated 08/06/2020

                            case "BND":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND DELIVERY PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBND((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "BNDadv":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND ADVANCED PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondWhiteField((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "BNDAdvance":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND ADVANCED PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondAdvanceWhiteField((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "BNDUnloading":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND UNLOADING PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBonUnloadingInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "EXPREF":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "REEFER PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforReefer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "RESINDIV":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "RESERVATION INVOICE (INDIVIDUAL) ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingReservationBulkPDFforREV((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "RESERV":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "RESERVATION ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingReservationBulkPDFforGE((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "Pallatisation":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "Pallatisation ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GenerateBulkPdfForPallatisation((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPCSI": 
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER STUFFING PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainerStuffing((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            // end of vineet code



                            default:
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                //case statement for printing name of invoices                                
                                if (Mod == "GE") { ModuleName = "GATE ENTRY"; }
                                else if (Mod == "IMPFCLLCL") { ModuleName = "FCL To LCL CONVERSION"; }
                                else if (Mod == "MiscInv") { ModuleName = "MISCELLANEOUS"; }
                                /*  else if (Mod == "EXPCS") { ModuleName = "EXPORT CONTAINER STUFFING"; }*/
                                else if (Mod == "RENT") { ModuleName = "RENT"; }
                                /*else if (Mod == "RESERV") { ModuleName = "RESERVATION"; }*/ // commented by vineet
                                else if (Mod == "IRR") { ModuleName = "IRR"; }
                                else if (Mod == "INVDEBT") { ModuleName = "CONTAINER DEBIT INVOICE"; }
                                else if (Mod == "EXPRRCD") { ModuleName = "EXPORT RR CREDIT DEBIT"; }
                                else ModuleName = Mod;
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforGE((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                        }
                        //});

                    }
                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }

            else
            {
                // List<WFLDInvoiceGate> WFLDInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
                ObjRR.GenericBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid

                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    //string FilePath = GeneratingBulkPDF(WFLDInvoiceGateList, ObjBulkInvoiceReport.InvoiceModuleName);
                    string FilePath = "";
                    switch (ObjBulkInvoiceReport.InvoiceModule)
                    {
                        case "IMPYard":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDestuff":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforDESTUFFING(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDeli":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforGodown(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPLod":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforLoadContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXP":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "CCIN":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCCINEntry(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTT":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTT(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "AUC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforAuction(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEmptyContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "ECTrns":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEmptyContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPSC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforSealCutting(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPCRGSHFT":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCargoSF(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "Fumigation":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforFumigationInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                       /* case "EXPCS":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainerStuffingInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;*/
                        case "BND":
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "bnd":
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDadv":
                            FilePath = GeneratingBulkPDFforBondWhiteField(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDAdv":
                            FilePath = GeneratingBulkPDFforBondWhiteField(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDAdvance":
                            FilePath = GeneratingBulkPDFforBondAdvanceWhiteField(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDUnloading":
                            FilePath = GeneratingBulkPDFforBonUnloadingInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            //FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName);
                            break;
                        case "BTTCon":

                            FilePath = GeneratingBulkPDFforBTTContainerInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                        case "RESERV":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingReservationBulkPDFforGE(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                        case "RESINDIV":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingReservationBulkPDFforREV(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPREF":
                            FilePath = GeneratingBulkPDFforReefer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "Pallatisation":
                            FilePath = GenerateBulkPdfForPallatisation(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPCSI":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainerStuffing(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        default:
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforGE(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                    }

                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }
        }



        #region Reservation Invoice
        [NonAction]
        public string GeneratingReservationBulkPDFforGE(DataSet ds, string InvoiceModuleName, string All)
        {
            var FileName = "";
            var location = "";
            var SEZis = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);

            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstGodownDetais = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);

            List<string> lstSB = new List<string>();
            String RemarksValue = "";
            string Container = "";
            lstInvoice.ToList().ForEach(item =>
            {
                DSR_ReportRepository rep = new DSR_ReportRepository();
                DSRSDBalancePrint objSDBalance = new DSRSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }

                RemarksValue = "";//item.Remarks;
                Decimal totamt = 0;
                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (DSRSDBalancePrint)rep.DBResponse.Data;
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span> <br/><span style='font-size: 7pt; padding-bottom: 10px;'>Email - cwcwfdcfs@gmail.com</span>");
                html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>" + InvoiceModuleName + "</label><br/><label style='font-size: 7pt; font-weight:bold;'>" + Container + "</label>");
                html.Append("</td>");
                html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                html.Append("</tr>");

                html.Append("<tr><td colspan='12' style='text-align: right;'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%; 'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th style='text-align: left; font-size: 7pt;margin-top: 10px;'><b>Godown Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size: 6pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 20%;'>Godown Name</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>GF</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>MF</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Area</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; width: 15%;'>Godown Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/

                int i = 1;

                lstGodownDetais.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.GodownName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.GF + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.MF + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Area + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.FromDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ToDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + elem.OperationType + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });

                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt;margin: 0;'>Reservation Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 80px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Rate.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 80px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 180px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                   // totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 110px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + " </ th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 7pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }


                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 7pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 7pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 7pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><td style='font-size: 7pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 7pt; text-align: left;' colspan='6' width='50%'>SAM(A/C)</td></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion


        #region Reservation Invoice Individual

        public string GeneratingReservationBulkPDFforREV(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);

            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstGodownDetais = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            String RemarksValue = "";
            string Container = "";
            lstInvoice.ToList().ForEach(item =>
            {
                DSR_ReportRepository rep = new DSR_ReportRepository();
                DSRSDBalancePrint objSDBalance = new DSRSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                RemarksValue = "";//item.Remarks;

                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (DSRSDBalancePrint)rep.DBResponse.Data;
                }
                upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                Einvoice Eobj = new Einvoice();
                B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);
                IrnResponse objERes = new IrnResponse();
                objERes.SignedQRCode = objresponse.QrCodeBase64;
                objERes.SignedInvoice = objresponse.QrCodeJson;
                objERes.SignedQRCode = objresponse.QrCodeJson;
                StringBuilder html = new StringBuilder();
                Decimal totamt = 0;
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");                

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Godown Details :</b> </th></tr>");

                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size:7pt; text-align: center;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 20%;'>Godown Name</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Space Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Area</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; width: 15%;'>Godown Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/

                int i = 1;

                lstGodownDetais.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.GodownName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.SpaceType + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Area + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.FromDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ToDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + elem.OperationType + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });

                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin: 0;'>Reservation Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 20%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 120px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 80px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 20%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 120px;'>" + data.Rate.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 80px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 180px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                   // totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 110px;'></th>");
                html.Append("<th rowspan='2' style='width: 20%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 120px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 20%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 120px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 20%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 120px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 7pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 7pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 7pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td></tr>");

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        #endregion


        [NonAction]
        public string GeneratingBulkPDFforBonUnloadingInvoice(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";


            var BQRFileName = "";
            var BQRlocation = "";

            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstHeader = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[7]);
            List<dynamic> BondApplication = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[12]);
            List<dynamic> Areadetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[13]);

            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            String RemarksValue = "";
            string Container = "";
            lstHeader.ForEach(item =>
            {
                if (item.ContainerType == "Empty" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Empty Container Gate In";
                else if (item.ContainerType == "Loaded" && item.TransportMode == 2 && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Road";
                else if (item.ContainerType == "Loaded" && item.TransportMode == 1 && item.TransportFrom == "L" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD Loni)";
                else if (item.ContainerType == "Loaded" && item.TransportMode == 1 && item.TransportFrom == "T" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD TKD)";
                else if (item.ContainerType == "LoadedVehicle" && item.TransportMode == 1 && item.TransportFrom == "T" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD TKD)";
                else if (item.ContainerType == "LoadedVehicle" && item.TransportMode == 1 && item.TransportFrom == "L" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD Loni)";
                else if (item.CBT == " 1" && InvoiceModuleName == "GATE ENTRY")
                    Container = "CBT";

            });
            lstInvoice.ToList().ForEach(item =>
            {
                var sumNoofpac = 0;
                decimal Grwt = 0.00M;
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                RemarksValue = item.Remarks;

                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }
                Decimal totamt = 0;

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Bond Unloding Invoice(IN BOND)</h2> </td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place of supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='30%'>SEZ</th><th>:</th><td colspan='6' width='70%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Supply Type</th><th>:</th><td colspan='6' width='70%'>" + item.SupplyType + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                // html.Append("<tr><th colspan='6' width='50%'>Calculation Date</th><th>:</th><td colspan='6' width='50%'>" + item.DeliveryDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Payment Type</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Vehicle No</th><th>:</th><td colspan='6' width='50%'>" + item.VehicleNo + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                int i = 1;                

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                BondApplication.Where(app => app.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><th colspan='6' width='30%'>Application No.</th><th>:</th><td colspan='6' width='70%'>" + data.ApplicationNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>SAC No.</th><th>:</th><td colspan='6' width='70%'>" + data.SacNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Unloading No.</th><th>:</th><td colspan='6' width='70%'>" + data.DepositNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>BOE No.</th><th>:</th><td colspan='6' width='70%'>" + data.BOENo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>IGM No.</th><th>:</th><td colspan='6' width='70%'>" + data.IGMNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Bond No.</th><th>:</th><td colspan='6' width='70%'>" + data.BondNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Importer</th><th>:</th><td colspan='6' width='70%'>" + data.ImporterName + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Cargo</th><th>:</th><td colspan='6' width='70%'>" + data.CargoType + "</td></tr>");
                });

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td valign='top' colspan='6' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table valign='top' style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                BondApplication.Where(app => app.InvoiceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><th colspan='6' width='50%'>Application Date</th><th>:</th><td colspan='6' width='50%'>" + data.ApplicationDate + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>SAC Date</th><th>:</th><td colspan='6' width='50%'>" + data.SacDate + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>Unloading Date</th><th>:</th><td colspan='6' width='50%'>" + data.UnloadingDate + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>BOE Date</th><th>:</th><td colspan='6' width='50%'>" + data.BOEDate + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>IGM Date</th><th>:</th><td colspan='6' width='50%'>" + data.IGMDate + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Bond Date</th><th>:</th><td colspan='6' width='70%'>" + data.BondDate + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>CHA</th><th>:</th><td colspan='6' width='70%'>" + data.CHAName + "</td></tr>");
                });
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                if (lstCharges.Where(y => y.InoviceId == item.InvoiceId && y.OperationDesc == "Storage").Count() > 0)
                    html.Append("<tr><th colspan='6' width='30%'>Stroage</th><th>:</th><td colspan='6' width='70%'>" + BondApplication.Where(app => app.InvoiceId == item.InvoiceId).FirstOrDefault().StartDate + " - " + BondApplication.Where(app => app.InvoiceId == item.InvoiceId).FirstOrDefault().EndDate + "</td></tr>");
                else
                    html.Append("<tr><th colspan='6' width='30%'>Stroage</th><th>:</th><td colspan='6' width='70%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("<td valign='top' colspan='6' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table valign='top' style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                if (lstCharges.Where(y => y.InoviceId == item.InvoiceId && y.OperationDesc == "Insurance").Count() > 0)
                    html.Append("<tr><th colspan='6' width='50%'>Insurance</th><th>:</th><td colspan='6' width='50%'>" + BondApplication.Where(app => app.InvoiceId == item.InvoiceId).FirstOrDefault().InsuredFromDate + " - " + BondApplication.Where(app => app.InvoiceId == item.InvoiceId).FirstOrDefault().InsuredToDate + "</td></tr>");
                else
                    html.Append("<tr><th colspan='6' width='50%'>Insurance</th><th>:</th><td colspan='6' width='50%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='border:1px solid #000; width:70%; font-size:6pt; text-align:center;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right:1px solid #000; width:8%;'>CONT NO</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>Size</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>No of Pkg</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%; text-align:right;'>Gr Wt</th>");
                html.Append("<th style='width:8%;'>IN Date</th></tr></thead>");
                Grwt = 0;
                sumNoofpac = 0;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tbody>");
                    html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + elem.NoOfPackages + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000; text-align:right;'>" + elem.GrossWt.ToString("0.####") + "</td>");
                    html.Append("<td style='border-top:1px solid #000;'>" + elem.ArrivalDate + "</td></tr>");
                    html.Append("</tbody>");
                    sumNoofpac = sumNoofpac + elem.NoOfPackages;
                    Grwt = Grwt + elem.GrossWt;
                });
                html.Append("</table>");
                html.Append("</td></tr>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table style='border:1px solid #000; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right:1px solid #000; border-bottom:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='16%'>Area</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + Areadetails.Where(x => x.invoiceid == item.InvoiceId).FirstOrDefault().Area.ToString("0.####") + "</td></tr>");
                html.Append("</tbody></table></td>");

                html.Append("<td colspan='4' style='border-right:1px solid #000; border-bottom:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='14%'>Godown</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + Areadetails.Where(x => x.invoiceid == item.InvoiceId).FirstOrDefault().GodownName + "</td></tr>");
                html.Append("</tbody></table></td>");

                html.Append("<td colspan='4' style='border-right:1px solid #000; border-bottom:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='14%'>Location</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + Areadetails.Where(x => x.invoiceid == item.InvoiceId).FirstOrDefault().LocationName + "</td></tr>");
                html.Append("</tbody></table></td>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right:1px solid #000; border-bottom:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='16%'>CIF Value</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + Areadetails.Where(x => x.invoiceid == item.InvoiceId).FirstOrDefault().Value.ToString("0.####") + "</td></tr>");
                html.Append("</tbody></table></td>");

                html.Append("<td colspan='4' style='border-right:1px solid #000; border-bottom:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='14%'>Duty</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + Areadetails.Where(x => x.invoiceid == item.InvoiceId).FirstOrDefault().Duty.ToString("0.####") + "</td></tr>");
                html.Append("</tbody></table></td>");

                decimal total = Convert.ToDecimal(Areadetails.Where(x => x.invoiceid == item.InvoiceId).FirstOrDefault().Duty) + Convert.ToDecimal(Areadetails.Where(x => x.invoiceid == item.InvoiceId).FirstOrDefault().Value);

                html.Append("<td colspan='4' style='border-right:1px solid #000; border-bottom:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='14%'>Total</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + total.ToString("0.####") + "</td></tr>");
                html.Append("</tbody></table></td>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='16%'>Total Pkg</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + sumNoofpac + "</td></tr>");
                html.Append("</tbody></table></td>");

                html.Append("<td colspan='4' style='border-right:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th width='14%'>Total WT</th><th width='3%'>:</th><td width='50%' style='text-align:left;'>" + Grwt.ToString("0.####") + "</td></tr>");
                html.Append("</tbody></table></td>");

                html.Append("<td colspan='4' style='border-right:1px solid #000;'><table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th></th></tr>");
                html.Append("</tbody></table></td>");
                html.Append("</tr>");
                
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td></tr>");

                html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt;margin: 0;'>Container / CBT Charges :</h3></th></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                    //totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                if (InvoiceModuleName == "MISCELLANEOUS" || InvoiceModuleName == "CONTAINER DEBIT INVOICE")
                {
                    html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='12'>Remarks:");
                    html.Append("<label style='font-weight: bold;'>" + RemarksValue + " </label></td></tr>");
                }

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td></tr>");               

                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBND(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";


            var SEZis = "";
            int Vno = 0;
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstStorageDate = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<dynamic> lstSacData = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[5]);
            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {

                VIZ_ReportRepository rep = new VIZ_ReportRepository();

                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }


                rep.GetVehicleforBond(item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    Vno = (Int32)rep.DBResponse.Data;
                }

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");                

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + (item.InvoiceType == "Tax" ? "Tax Invoice" : "Bill Invoice") + " </h2> </td></tr>");

                html.Append("<tr><td colspan='12'><table style='width:100%; font-size: 7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='8' width='70%'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%'><label style='font-weight: bold;'></label> <span></span></td>");
                html.Append("<td colspan='4' width='30%'><label style='font-weight: bold;'>Delivery Date : </label> <span>" + item.DeliveryDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='padding-bottom:5px;'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='padding-bottom:5px;'><label style='font-weight: bold;'>Payer Name :</label> <span>" + item.PayeeName + "</span></td></tr>");

                html.Append("<tr><td colspan='8' width='70%' style='padding-bottom:5px;'><label style='font-weight: bold;'>Place of supply :</label> <span>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</span></td>");
                // html.Append("<td colspan='4' width='30%' style='border-bottom:1px solid #000; padding-bottom:5px;'><label style='font-weight: bold;'>SEZ :</label> <span>" + SEZis + "</span></td></tr>");
                html.Append("<td colspan='4' width='30%' style='padding-bottom:5px;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");

                html.Append("<tr><td colspan='8' width='70%' style='border-bottom:1px solid #000; padding-bottom:5px;'><label style='font-weight: bold;'>Is Service :</label> <span>" + "Yes" + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='border-bottom:1px solid #000; padding-bottom:5px;'><label style='font-weight: bold;'></label> <span></span></td></tr>");

                html.Append("</tbody>");
                html.Append("</table></td></tr>");

                html.Append("<tr><th colspan='8' width='70%'><b style='text-align: left; font-size:7pt; margin-top: 0; margin-bottom: 0;'>Bond No :" + item.StuffingReqNo + "</b></th>");
                html.Append("<td colspan='4' width='30%' style='font-size:7pt;'><label width='15%'><b>SAC validity :</b></label> From <u>" + lstContainer[0].SacApprovedDate + "</u> to <u>" + lstContainer[0].SacValidityDate + "</u></td></tr>");

                html.Append("<tr>");
                html.Append("<th colspan='8' width='80%'><table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<th width='15%' style='text-align: left;'>Storage Period :</th>");
                html.Append("<th width='75%' style='text-align: left;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='0'><tbody>");
                var SacId = 0;
                var DeliId = 0;
                if (lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).Count() > 0)
                {
                    SacId = lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).ToList().Select(y => y.SacId).ToArray()[0];
                    DeliId = lstStorageDate.Where(x => x.InvoiceId == item.InvoiceId).ToList().Select(y => y.SacDelivryId).ToArray()[0];
                }

                lstStorageDate.Where(x => x.SacId == SacId && x.InvoiceId <= item.InvoiceId && x.SacDelivryId <= DeliId).ToList().ForEach(storage =>
                {
                    int j = 1;
                    html.Append("<tr><td colspan='12' cellpadding='5' valign='top'>From <u>" + storage.StorageFromDt + "</u> to <u>" + storage.StorageToDt + "</u></td></tr>");
                    j = j + 1;
                });

                html.Append("</tbody></table>");
                html.Append("</th>");
                html.Append("</tr></tbody></table></th>");

                html.Append("<td colspan='4' width='40%' style='font-size:6pt;'><b>Insurance Period :</b> From " + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().InsuredFromDate + " To " + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().InsuredToDate + "</td>");
                html.Append("</tr>");

                html.Append("<tr><td colspan='12'>");
                int i = 1;
                Decimal totamt = 0;
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Bond No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].BondNo.ToString().TrimEnd(',') + " </td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Bond Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].BondDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOL No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].BOLNo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOL Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].BOLDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].BOENo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].BOEDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>AWB No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].AWBNo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>AWB Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].AWBDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>IGM No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].IGMNo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>IGM Date</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].IGMDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Godown No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].GodownName.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Space Type</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].SpaceType.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Cargo Description</td><td>:</td><td colspan='6' width='70%'>" + lstContainer[0].CargoDescription.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Remaining Units</td><td>:</td><td colspan='6' width='70%'>" + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().ClosingUnits + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Opening Value</td><td>:</td><td colspan='6' width='70%'>" + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().OpeningVal + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Opening Duty</td><td>:</td><td colspan='6' width='70%'>" + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().OpeningDuty + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Opening Total</td><td>:</td><td colspan='6' width='70%'>" + ((decimal)lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().OpeningVal + (decimal)lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().OpeningDuty) + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='40%'>Ex-BOE No.</td><td>:</td><td colspan='6' width='60%'>" + lstContainer[0].ExBOENo.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Ex-BOE Date.</td><td>:</td><td colspan='6' width='60%'>" + lstContainer[0].ExBOEDate.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Importer</td><td>:</td><td colspan='6' width='60%'>" + lstInvoice[0].ExporterImporterName.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>CHA Name</td><td>:</td><td colspan='6' width='60%'>" + lstInvoice[0].CHAName.ToString().TrimEnd(',') + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>CIF Value</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIF)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>DUTY</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIF) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>No Of Pkg</td><td>:</td><td colspan='6' width='60%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>No Of Vehicle</td><td>:</td><td colspan='6' width='60%'>" + Vno + "</td></tr>");
                html.Append("<tr><td colspan='6' width='40%'>Cargo Type</td><td>:</td><td colspan='6' width='60%'>" + lstContainer[0].NatureOfMaterial.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Remaining Weight</td><td>:</td><td colspan='6' width='70%'>" + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().ClosingWeight + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Closing Value</td><td>:</td><td colspan='6' width='70%'>" + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().ClosingVal + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Closing Duty</td><td>:</td><td colspan='6' width='70%'>" + lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().ClosingDuty + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Closing Total</td><td>:</td><td colspan='6' width='70%'>" + ((decimal)lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().ClosingVal + (decimal)lstSacData.Where(sacd => sacd.InvoiceId == item.InvoiceId).FirstOrDefault().ClosingDuty) + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container/Cargo Charges :</h3> </th></tr>");
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        //totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");                

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody> <tr><td style='font-size: 6pt; text-align: left;'colspan='2'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='2'>Party Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Importer</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());

            });
            FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBondWhiteField(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";


            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + (item.InvoiceType == "Tax" ? "Tax Invoice" : "Bill Invoice") + "</h2> </td></tr>");
                html.Append("<tr><td colspan='12'><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt; padding-bottom:5px;'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;  padding-bottom:5px;'><label style='font-weight: bold;'>Payer Name :</label> <span>" + item.PayeeName + "</span></td>");
                html.Append("</tr>");

                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Place of supply :</label> <span>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</span></td>");
                //html.Append("<td colspan='4' width='30%' style='font-size: 7pt; border-bottom: 1px solid #000; padding-bottom:5px;'><label style='font-weight: bold;'>SEZ :</label> <span>" + SEZis + "</span></td></tr>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");

                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt; border-bottom: 1px solid #000;  padding-bottom:5px;'><label style='font-weight: bold;'>Is Service :</label> <span>" + "Yes" + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt; border-bottom: 1px solid #000; padding-bottom:5px;'><label style='font-weight: bold;'></label> <span></span></td></tr>");


                html.Append("</tbody>");
                html.Append("</table></td></tr>");
                html.Append("<tr><th colspan='6' width='50%'><b style='text-align: left; font-size: 7pt; margin-top: 10px;'>SAC No :" + item.StuffingReqNo + "</b></th>");

                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<td colspan='6' width='50%' style='font-size:7pt;'><b>SAC validity :</b> From <u>" + elem.SacApprovedDate + "</u> to <u>" + elem.SacValidityDate + "</u></td></tr>");
                });
                
                /*************/
                /*Container Bind*/                

                html.Append("<tr><td colspan='12'>");

                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                    html.Append("<td colspan='6' width='50%'>");
                    html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><td colspan='6' width='30%'>BOL No.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOLNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOL Date</td><td>:</td><td colspan='6' width='70%'>" + elem.BOLDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOENo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOE Date.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOEDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>AWB No.</td><td>:</td><td colspan='6' width='70%'>" + elem.AWBNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>AWB Date</td><td>:</td><td colspan='6' width='70%'>" + elem.AWBDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>IGM No.</td><td>:</td><td colspan='6' width='70%'>" + elem.IGMNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>IGM Date</td><td>:</td><td colspan='6' width='70%'>" + elem.IGMDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>Godown No.</td><td>:</td><td colspan='6' width='70%'>" + elem.GodownName + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");

                    html.Append("<td colspan='6' width='50%'>");
                    html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><td colspan='6' width='40%'>CHA Name</td><td>:</td><td colspan='6' width='60%'>" + item.CHAName + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>CIF Value</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>DUTY</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>No Of Pkg</td><td>:</td><td colspan='6' width='60%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Space Type</td><td>:</td><td colspan='6' width='60%'>" + elem.SpaceType.ToString() + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Cargo Type</td><td>:</td><td colspan='6' width='60%'>" + elem.NatureOfMaterial.ToString() + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Cargo Description</td><td>:</td><td colspan='6' width='60%'>" + elem.CargoDescription.ToString() + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");

                    html.Append("</tr></tbody></table>");
                    html.Append("</td></tr>");

                    html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container/Cargo Charges :</h3> </th></tr>");
                    html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<thead><tr>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                    //html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px; text-align:right;'>Taxable Amt.</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                    html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px; text-align:right;'>Total</th></tr><tr>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px; text-align:right;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px; text-align:right;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px; text-align:right;'>Amt.</th></tr></thead>");
                    html.Append("<tbody>");
                    i = 1;
                    /*Charges Bind*/
                });
                i = 1;
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 130px; text-align:right;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px; text-align:right;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px; text-align:right;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px; text-align:right;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px; text-align:right;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        //totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top: 0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                //html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align:right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; width: 100px; text-align:right;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align:right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align:right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align:right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align:right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align:right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='5'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody> <tr><td style='font-size: 6pt; text-align: left;'colspan='2'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='2'>Party Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Importer</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }


            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBondAdvanceWhiteField(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";



            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + (item.InvoiceType == "Tax" ? "Tax Invoice" : "Bill Invoice") + "</h2> </td></tr>");
                html.Append("<tr><td colspan='12'><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt; padding-bottom:5px;'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt; padding-bottom:5px;'><label style='font-weight: bold;'>Payer Name :</label> <span>" + item.PayeeName + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt; padding-bottom:5px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt; padding-bottom:5px;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt; border-bottom:1px solid #000; padding-bottom:5px;'><label style='font-weight: bold;'>Is Service :</label> <span>" + "Yes" + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt; border-bottom:1px solid #000; padding-bottom:5px;'><label style='font-weight: bold;'></label> <span></span></td></tr>");
                html.Append("</tbody>");
                html.Append("</table></td></tr>");
                html.Append("<tr><th colspan='6' width='50%'><b style='text-align:left; font-size: 6pt;'>SAC No :" + item.StuffingReqNo + "</b></th>");

                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<td colspan='6' width='50%' style='font-size:6pt;'><b>SAC validity :</b> From <u>" + elem.SacApprovedDate + "</u> to <u>" + elem.SacValidityDate + "</u></td></tr>");
                });
                
                /*************/
                /*Container Bind*/

                html.Append("<tr><td colspan='12'>");
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                    html.Append("<td colspan='6' width='50%'>");
                    html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><td colspan='6' width='30%'>BOL No.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOLNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOL Date</td><td>:</td><td colspan='6' width='70%'>" + elem.BOLDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOENo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>BOE Date.</td><td>:</td><td colspan='6' width='70%'>" + elem.BOEDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>AWB No.</td><td>:</td><td colspan='6' width='70%'>" + elem.AWBNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>AWB Date</td><td>:</td><td colspan='6' width='70%'>" + elem.AWBDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>IGM No.</td><td>:</td><td colspan='6' width='70%'>" + elem.IGMNo.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>IGM Date</td><td>:</td><td colspan='6' width='70%'>" + elem.IGMDate.ToString().TrimEnd(',') + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>Godown No.</td><td>:</td><td colspan='6' width='70%'>" + elem.GodownName + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");

                    html.Append("<td colspan='6' width='50%'>");
                    html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><td colspan='6' width='40%'>CHA Name</td><td>:</td><td colspan='6' width='60%'>" + item.CHAName + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>CIF Value</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>DUTY</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(z => z.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total</td><td>:</td><td colspan='6' width='60%'>" + (lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InvoiceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>No Of Pkg</td><td>:</td><td colspan='6' width='60%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                    html.Append("<tr><td colspan='6' width='40%'>Total Area (In Sqr Mtr)</td><td>:</td><td colspan='6' width='60%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");

                    html.Append("</tr></tbody></table>");
                    html.Append("</td></tr>");

                    html.Append("<tr><th colspan='12'><h3 style='text-align:left; font-size:6pt;'>Container/Cargo Charges :</h3> </th></tr>");
                    html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<thead><tr>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                    html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                    html.Append("<tbody>");
                    i = 1;
                    /*Charges Bind*/
                });
                i = 1;
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                        //totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style=' border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 170px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");


                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; border-top: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'>");
                html.Append("<tbody> <tr><td style='font-size: 6pt; text-align: left; line-height: 30px;'colspan='2'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left; line-height: 30px;' colspan='2'>Party Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");

                html.Append("<tr><td style='font-size: 6pt; text-align: left;'><br/><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/AM Accounts<br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;'><br/><br/>SAM/SIO <br/>(Signature)</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforContainerStuffingInvoice(DataSet ds, string InvoiceModuleName, string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstbreakup = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[6]);
            List<string> lstSB = new List<string>();
            String RemarksValue = "";
            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                RemarksValue = item.Remarks;
                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='90%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>" + InvoiceModuleName + "</label>");
                html.Append("</td></tr>");

                //html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                //html.Append("<br />" + InvoiceModuleName);
                //html.Append("</td></tr>");

                html.Append("<tr><td colspan='12' style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                //html.Append("<span>" + item.PartyName + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party GST :</label> <span>" + item.PartyGSTNo + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>Invoice Generated By :</label> <span>" + item.PaymentMode + "</span></td></tr>");
                //html.Append("</tbody>");
                //html.Append("</table></td></tr>");
                html.Append("<tr><td><hr/></td></tr>");

                if (InvoiceModuleName == "IRR")
                {
                    lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                        html.Append("<thead><tr>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Train No</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Wagon No</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>VIA</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Gross Wt</th>");
                        html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Tare Wt</th>");
                        html.Append("</tr></thead>");
                        html.Append("<tbody><tr>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.TrainNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.WagonNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.VIA + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.GrossWt + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.TareWt + "</td>");
                        html.Append("</tr></tbody>");
                        html.Append("</table></td></tr>");
                    });
                }

                html.Append("<tr><th style='text-align: left; font-size: 13px;margin-top: 10px;'><b>Container / CBT Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>ICD Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/

                //lstbreakup.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                //    {

                //    });


                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 10px;' cellspacing='0' cellpadding='5'> ");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; padding:5px;'>Shipping Bill No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; padding:5px;'>Charge Code</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right; '>Amount</th>");
                html.Append("</tr></thead>");
                html.Append("<tbody>");

                lstbreakup.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; '>" + elem.shippingbillno + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; '>" + elem.chargetype + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; '>" + elem.amount + "</td>");
                    html.Append("</tr>");
                });

                html.Append("</tbody>");
                html.Append("</table></td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 13px;margin: 0;'>Container / CBT Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                // html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");

                //html.Append("<tr><td style='font-size: 12px; text-align: left; line-height: 30px;'colspan='2'></td>");
                //html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;' colspan='2'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");



                if (InvoiceModuleName == "MISCELLANEOUS" || InvoiceModuleName == "CONTAINER DEBIT INVOICE")
                {
                    html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='12'>Remarks:");
                    html.Append("<label style='font-weight: bold;'>" + RemarksValue + " </label></td></tr>");
                }


                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>SAM(A/C)</td></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 9px; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");

                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforGE(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            var SEZis = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstHeader = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[7]);
            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            String RemarksValue = "";
            string Container = "";
            //Decimal totamt = 0;
            lstHeader.ForEach(item =>
            {
                if (item.ContainerType == "Empty" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Empty Container Gate In";
                else if (item.ContainerType == "Loaded" && item.TransportMode == 2 && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Road";
                else if (item.ContainerType == "Loaded" && item.TransportMode == 1 && item.TransportFrom == "L" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD Loni)";
                else if (item.ContainerType == "Loaded" && item.TransportMode == 1 && item.TransportFrom == "T" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD TKD)";
                else if (item.ContainerType == "LoadedVehicle" && item.TransportMode == 1 && item.TransportFrom == "T" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD TKD)";
                else if (item.ContainerType == "LoadedVehicle" && item.TransportMode == 1 && item.TransportFrom == "L" && InvoiceModuleName == "GATE ENTRY")
                    Container = "Loaded Container By Train(By ICD Loni)";
                else if (item.CBT == " 1" && InvoiceModuleName == "GATE ENTRY")
                    Container = "CBT";

            });
            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                RemarksValue = item.Remarks;
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }

                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");                

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom:1px solid #000; padding-bottom: 5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                if (InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT")
                {
                    html.Append("<tr><th colspan='6' width='50%'>Invoice Month & Year</th><th>:</th><td colspan='6' width='50%'>" + item.MonthYr + "</td></tr>");

                }
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom:1px solid #000; padding-bottom: 5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                if (InvoiceModuleName == "IRR")
                {
                    lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:90%; font-size:6pt' cellspacing='0' cellpadding='5'>");
                        html.Append("<thead><tr>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; padding: 5px;'>Train No</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; padding: 5px;'>Wagon No</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; padding: 5px;'>VIA</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; padding: 5px;'>Gross Wt</th>");
                        html.Append("<th style='border-bottom: 1px solid #000; text-align: center;'>Tare Wt</th>");
                        html.Append("</tr></thead>");
                        html.Append("<tbody><tr>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + elem.TrainNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + elem.WagonNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + elem.VIA + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + elem.GrossWt + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; text-align: center;'>" + elem.TareWt + "</td>");
                        html.Append("</tr></tbody>");
                        html.Append("</table></td></tr>");
                    });
                }

                if ((InvoiceModuleName == "Bond Delivery Invoice") || InvoiceModuleName == "Reservation" || InvoiceModuleName == "RESERVATION INVOICE (INDIVIDUAL)" || InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT" || (InvoiceModuleName == "MiscInv" || InvoiceModuleName == "MISCELLANEOUS" || InvoiceModuleName == "MISCELLANEOUS INVOICE"))
                {
                }
                else
                {
                    html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / CBT Details :</b> </th></tr>");
                    html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>SR No.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>CFS Code</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Container / CBT No.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Size</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>From Date</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>To Date</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Cargo Type</th>");
                    html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Gross Wt</th>");

                    html.Append("</tr></thead><tbody>");
                }
                /*************/
                /*Container Bind*/

                int i = 1;
                if ((InvoiceModuleName == "Bond Delivery Invoice") || InvoiceModuleName == "Reservation" || InvoiceModuleName == "RESERVATION INVOICE (INDIVIDUAL)" || InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT" || (InvoiceModuleName == "MiscInv" || InvoiceModuleName == "MISCELLANEOUS" || InvoiceModuleName == "MISCELLANEOUS INVOICE"))
                {
                }
                else
                {
                    lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                    {
                        if (InvoiceModuleName == "GATE ENTRY")
                        {
                            elem.ToDate = elem.ArrivalDate;
                        }
                        if (InvoiceModuleName == "FCL To LCL CONVERSION")
                        {
                            elem.ToDate = item.DeliveryDate;
                        }


                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ToDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GrossWeight + "</td>");

                        html.Append("</tr>");
                        i = i + 1;
                    });

                    html.Append("</tbody></table></td></tr>");
                }

                /***************/

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                //  if (InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT")
                //  {

                //  }
                //  else
                // {
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                // }
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                Decimal totamt = 0;
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");

                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");

                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                   // totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                if (InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT")
                {

                }
                else
                {
                    html.Append("<td rowspan='2' style='font-size: 6pt; text-align: center; width: 100px;'></td>");
                }
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                if (InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT")
                {

                }
                else
                {
                    html.Append("<td style='font-size: 6pt; text-align: center; width: 100px;'></td>");
                }
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                if (InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT")
                {

                }
                else
                {
                    html.Append("<td style='font-size: 6pt; text-align: center; width: 100px;'></td>");
                }
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");                

                if (InvoiceModuleName == "MISCELLANEOUS" || InvoiceModuleName == "CONTAINER DEBIT INVOICE" || InvoiceModuleName == "MISCELLANEOUS INVOICE" || InvoiceModuleName == "Rent" || InvoiceModuleName == "RENT" || InvoiceModuleName == "INVDEBT")
                {
                    html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='12'>Remarks:");
                    html.Append("<label style='font-weight: bold;'>" + RemarksValue + " </label></td></tr>");
                }

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td></tr>");               

                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforFumigationInvoice(DataSet ds, string InvoiceModuleName, string All)
        {
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstCargo = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[5]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='90%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>" + InvoiceModuleName + "</label>");
                html.Append("</td></tr>");

                //html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                //html.Append("<br />" + InvoiceModuleName);
                //html.Append("</td></tr>");

                html.Append("<tr><td colspan='12' style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td><hr/></td></tr>");

                html.Append("<tr><th style='text-align: left; font-size: 13px;margin-top: 10px;'><b>Cargo Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px; width: 2%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px; width: 15%;'>Chemical Name</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 10%;'>Area</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstCargo.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 2%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 15%;'>" + elem.Chemical + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 10%;'>" + elem.Area + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");


                //html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                //html.Append("<span>" + item.PartyName + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party GST :</label> <span>" + item.PartyGSTNo + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>Invoice Generated By :</label> <span>" + item.PaymentMode + "</span></td></tr>");
                //html.Append("</tbody>");
                //html.Append("</table></td></tr>");

                html.Append("<tr><th style='text-align: left; font-size: 13px;margin-top: 10px;'><b>Container / CBT Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>ICD Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.StuffingReqDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 13px;margin: 0;'>Container / CBT Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                // html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");

                //html.Append("<tr><td style='font-size: 12px; text-align: left; line-height: 30px;'colspan='2'></td>");
                //html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;' colspan='2'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");

                if (InvoiceModuleName == "MISCELLANEOUS" || InvoiceModuleName.ToUpper() == "FUMIGATION")
                {
                    html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='12'>Remarks: ");
                    html.Append("<label style='font-weight: bold;'>" + item.Remarks + " </label></td></tr>");
                }


                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>SAM(A/C)</td></tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 9px; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforCargoSF(DataSet ds, string InvoiceModuleName, string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                WFLD_ExportRepository rep = new WFLD_ExportRepository();
                WFLDBTTCargoDet objCargoDet = new WFLDBTTCargoDet();
                List<WFLDBTTCargoDet> SbNoList = new List<WFLDBTTCargoDet>();
                rep.GetCargoDetShiftById(item.InvoiceNo);
                if (rep.DBResponse.Data != null)
                {
                    /// objCargoDet = (WFLDBTTCargoDet)rep.DBResponse.Data;
                    SbNoList = (List<WFLDBTTCargoDet>)rep.DBResponse.Data;
                }

                var exporter = SbNoList.Select(x => x.exporter).Distinct();
                String ExportName = exporter.FirstOrDefault();
                // String Exporter = exporter[0].toString();

                VIZ_ReportRepository repp = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                repp.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (repp.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)repp.DBResponse.Data;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='90%' style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>" + InvoiceModuleName + "</label>");
                html.Append("</td></tr>");
                html.Append("<tr><td colspan='12' style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:9pt; margin:0 0 20px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; font-size:9pt; border:1px solid #333; margin:0 0 20px;' cellspacing='0' cellpadding='5'><tbody><tr>");
                html.Append("<td colspan='4' width='33.33333333333333%'><b>Exporter :</b> " + ExportName + " </td>");
                html.Append("<td colspan='4' width='33.33333333333333%'><b>CHA :</b> </td>");
                html.Append("<td colspan='4' width='33.33333333333333%'><b>Shipping Line :</b></td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                //html.Append("<span>" + item.PartyName + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party GST :</label> <span>" + item.PartyGSTNo + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>Invoice Generated By :</label> <span>" + item.PaymentMode + "</span></td></tr>");
                //html.Append("</tbody> ");
                //html.Append("</table></td></tr>");

                //html.Append("<tr><td><hr/></td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 13px;margin-top: 10px;'>Container / CBT Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%; font-size:8pt;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px;'>ICD Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align:center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center;'></td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align:center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });

                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 13px;margin-top: 10px;'>Cargo Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:8pt;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:5%;'>Entry No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>SB No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>SB Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>Commodity</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>No of pkg</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>GR WT</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align:center; width:10%;'>FOB</th>");
                html.Append("</tr></thead><tbody>");
                i = 1;

                SbNoList.ForEach(elemCargo =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:5%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'> " + elemCargo.ShippingBillNo.ToString() + " </td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elemCargo.ShippingBillDate.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elemCargo.CommodityName.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elemCargo.NoOfUnits.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elemCargo.GrossWeight.ToString() + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align:center; width:10%;'> " + elemCargo.Fob.ToString() + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                html.Append("</tbody></table></td></tr>");


                html.Append("<tr><th><h3 style='text-align: left; font-size: 13px; margin-top: 20px;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                //html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");

                //html.Append("<tr><td style='font-size: 12px; text-align: left; line-height: 30px;'colspan='2'></td>");
                //html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;' colspan='2'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");

                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>SAM(A/C)</td></tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 9px; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforSealCutting(DataSet ds, string InvoiceModuleName, string All)
        {
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                Wfld_ImportRepository rep = new Wfld_ImportRepository();
                WFLDSealCuttingDateForReport objseal = new WFLDSealCuttingDateForReport();
                rep.GetSealCuttingDateId(item.StuffingReqNo);
                if (rep.DBResponse.Data != null)
                {
                    objseal = (WFLDSealCuttingDateForReport)rep.DBResponse.Data;
                }
                VIZ_ReportRepository repp = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                repp.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (repp.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)repp.DBResponse.Data;
                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='90%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>" + InvoiceModuleName + "</label>");
                html.Append("</td></tr>");

                //html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                //html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                //html.Append("<br />" + InvoiceModuleName);
                //html.Append("</td></tr>");

                html.Append("<tr><td colspan='12' style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                //html.Append("<span>" + item.PartyName + "</span></td>");
                //html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                //html.Append("Party GST :</label> <span>" + item.PartyGSTNo + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                //html.Append("<label style='font-weight: bold;'>Invoice Generated By :</label> <span>" + item.PaymentMode + "</span></td></tr>");
                //html.Append("</tbody>");
                //html.Append("</table></td></tr>");

                html.Append("<tr><td><hr/></td></tr>");
                html.Append("<tr><th style='text-align: left; font-size: 13px;margin-top: 10px;'><b>Container / CBT Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>ICD Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objseal.GateInDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + objseal.TranscationDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 13px;margin: 0;'>Container / CBT Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                //html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='4' width='20%'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");

                //html.Append("<tr><td style='font-size: 12px; text-align: left; line-height: 30px;'colspan='2'></td>");
                //html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;' colspan='2'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");

                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>SAM(A/C)</td></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 9px; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        [NonAction]
        public string GeneratingBulkPDFforYard(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";



            var SEZis = "";
            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstReasses = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[9]);
            List<dynamic> lstReassesment = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[10]);
            List<string> lstSB = new List<string>();


            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            string Container = "";
            string cfscode = "";
            int flagdup = 0;
            lstReasses.ForEach(item =>
            {
                if (item.cfscode != "")
                    Container = "(Re-Assessment)";

            });

            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }



                lstContainer.ForEach(dat =>
                {
                    if (dat.InoviceId == item.InvoiceId)

                        cfscode = dat.CFSCode;
                    else

                        cfscode = "";

                });
                Container = "";

                lstReassesment.ForEach(data =>
                {
                    if (data.cfscode == cfscode)
                    {
                        Container = "(Re-Assessment)";
                        dtype = "Previous Delivery Date";
                    }


                });
                Decimal totamt = 0;

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='85%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");


                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Is Service</th><th>:</th><td colspan='6' width='50%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='5' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");
                
                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Assessment No :" + item.StuffingReqNo + "</b></th></tr>");
                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Details :</b></th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + dtype + " </th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>No of Days</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: center; width:8%;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                string OblNo = "";
                string RMS = "";
                int i = 1;
                string SName = "";
                string SCode = "";
                int flagvalue = 0;
                string obldup = "";
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    //get no of days and weeks for IMPYard Payment Sheet
                    WFLDDaysWeeks objDaysWeeks = new WFLDDaysWeeks();

                    if (Container == "(Re-Assessment)")
                    {
                        elem.ArrivalDate = item.StuffingReqDate;
                        flagvalue = 1;
                    }

                    rep.GetDaysWeeksForIMPYard(item.InvoiceId, elem.CFSCode, flagvalue);
                    if (rep.DBResponse.Data != null)
                    {
                        objDaysWeeks = (WFLDDaysWeeks)rep.DBResponse.Data;

                    }

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.GrossWt.ToString("0.000") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + objDaysWeeks.Days + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: center; width:8%;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : elem.CargoType == 2 ? "Non-Haz" : "ODC")) + "</td>");
                    html.Append("</tr>");

                    if (i == 1)
                    {
                        obldup = elem.OBL_No;
                    }

                    if (i == 1)
                        OblNo = elem.OBL_No;
                    else
                    {
                        if (obldup != elem.OBL_No)
                            OblNo = OblNo + elem.OBL_No + ".";
                        else
                            flagdup = 1;
                    }

                    RMS = elem.RMS;
                    SName = elem.ShippingLineName;
                    SCode = elem.ShippingLineCode;
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + SName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'>" + SCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL No.</td><td>:</td><td colspan='6' width='70%'>" + OblNo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InoviceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>RMS</td><td>:</td><td colspan='6' width='70%'>" + RMS + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + (item.TotalGrossWt).ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No of Vehicles</td><td>:</td><td colspan='6' width='70%'>" + item.VehicleNo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Yard to Bond Conversion</td><td>&nbsp;</td><td colspan='6' width='70%'>" + (item.IsYardtoBond == 0 ? "No" : (item.IsYardtoBond == 1 ? "Yes" : "No")) + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                    //totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");

                html.Append("</tr>");

                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='5'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='3' width='25%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");
                
                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Importer</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        [NonAction]
        public string GeneratingBulkPDFforDESTUFFING(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            var SEZis = "";
            string dtype = "Date of Arrival";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstReasses = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[9]);
            List<dynamic> lstReassesment = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[10]);
            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            string Container = "";
            string cfscode = "";
            int flagdup = 0;
            lstReasses.ForEach(item =>
            {
                if (item.cfscode != "")
                    Container = "(Re-Assessment)";

            });

            lstInvoice.ToList().ForEach(item =>
            {
                WFLD_ReportRepository rep = new WFLD_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }



                lstContainer.ForEach(dat =>
                {
                    if (dat.InoviceId == item.InvoiceId)

                        cfscode = dat.CFSCode;
                    else

                        cfscode = "";

                });
                Container = "";

                lstReassesment.ForEach(data =>
                {
                    if (data.cfscode == cfscode)
                    {
                        Container = "(Re-Assessment)";
                        dtype = "Previous Delivery Date";
                    }


                });
                Decimal totamt = 0;

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='85%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");


                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");                

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Is Service</th><th>:</th><td colspan='6' width='50%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='5' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Assessment No :" + item.StuffingReqNo + "</b></th></tr>");
                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Details :</b></th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + dtype + " </th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>No of Days</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: center; width:8%;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                string OblNo = "";
                string RMS = "";
                int i = 1;
                string SName = "";
                string SCode = "";
                int flagvalue = 0;
                string obldup = "";
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    //get no of days and weeks for IMPYard Payment Sheet
                    WFLDDaysWeeks objDaysWeeks = new WFLDDaysWeeks();

                    if (Container == "(Re-Assessment)")
                    {
                        elem.ArrivalDate = item.StuffingReqDate;
                        flagvalue = 1;
                    }

                    rep.GetDaysWeeksForIMPYard(item.InvoiceId, elem.CFSCode, flagvalue);
                    if (rep.DBResponse.Data != null)
                    {
                        objDaysWeeks = (WFLDDaysWeeks)rep.DBResponse.Data;

                    }

                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.GrossWt.ToString("0.000") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + objDaysWeeks.Days + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: center; width:8%;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : elem.CargoType == 2 ? "Non-Haz" : "ODC")) + "</td>");
                    html.Append("</tr>");

                    if (i == 1)
                    {
                        obldup = elem.OBL_No;
                    }

                    if (i == 1)
                        OblNo = elem.OBL_No;
                    else
                    {
                        if (obldup != elem.OBL_No)
                            OblNo = OblNo + elem.OBL_No + ".";
                        else
                            flagdup = 1;
                    }

                    RMS = elem.RMS;
                      SName = elem.ShippingLineName;
                    SCode = elem.ShippingLineCode;
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + SName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'>" + SCode + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL No.</td><td>:</td><td colspan='6' width='70%'>" + OblNo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InoviceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + item.BOEDate + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>RMS</td><td>:</td><td colspan='6' width='70%'>" + RMS + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Total Gr.Wt (In Kg)</td><td>:</td><td colspan='6' width='70%'>" + (item.TotalGrossWt).ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No of Vehicles</td><td>:</td><td colspan='6' width='70%'>" + item.VehicleNo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Yard to Bond Conversion</td><td>&nbsp;</td><td colspan='6' width='70%'>" + (item.IsYardtoBond == 0 ? "No" : (item.IsYardtoBond == 1 ? "Yes" : "No")) + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                  //  totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");

                html.Append("</tr>");

                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='5'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='3' width='25%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");
                
                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Importer</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforGodown(DataSet ds, string InvoiceModuleName, string All)
        {
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            var SEZis = "";
            Einvoice obj = new Einvoice(new HeaderParam(), "");

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstCargoDetail = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<dynamic> lstReassesment = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[8]);
            List<dynamic> lstReassesbulk = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[10]);
            List<string> lstSB = new List<string>();


            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            int cargotype = 0;
            string Container = "";
            string dt = "";
            string dttype = "Date of Seal Cutting";
            Decimal totamt = 0;
            Decimal RevWeight = 0;
            int noofobl = 0;
            lstCargoDetail.ToList().ForEach(item =>
            {
                cargotype = (int)item.CargoType;
                noofobl++;
                RevWeight = RevWeight + (decimal)item.GrossWtRev;
            });

            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                //if (item.ExportUnder == "Yes")
                //{
                //    SEZis = "SEZ";
                //}
                //else if(item.PartyGSTNo!="")
                //{
                //    SEZis = "B2B";
                //}
                //else
                //{
                //    SEZis = "B2C";
                //}

                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }

                lstReassesment.ForEach(itemm =>
                {
                    if ((itemm.cfscode != "") && itemm.invoiceid == item.InvoiceId)
                    {
                        Container = "(Re-Assessment)";

                        VIZ_ReportRepository repp = new VIZ_ReportRepository();
                        dt = repp.GetPreviousInvDate(itemm.cfscode);
                        dttype = "Previous Delivery Date";
                    }
                });

                lstReassesbulk.ForEach(data =>
                {
                    if (data.invoiceid == item.InvoiceId)
                    {
                        Container = "(Re-Assessment)";
                        VIZ_ReportRepository repp = new VIZ_ReportRepository();
                        dt = repp.GetPreviousInvDate(data.cfscode);
                        dttype = "Previous Delivery Date";

                    }
                });


                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='85%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom:1px solid #000;padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Is Service</th><th>:</th><td colspan='6' width='50%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='5' width='40%' style='border-bottom:1px solid #000;padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Assessment No :" + item.StuffingReqNo + "</b></th></tr>");
                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / CBT Details :</b></th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Arrival</th>");
                //html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Carting</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Destuffing</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>No of Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>No of Week</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + dttype + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: center; width:8%;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                string lineNo = "";
                string TSAno = "";
                //  Decimal totamt = 0;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {

                    if (noofobl == 1)
                    {
                        lineNo = elem.Line_no;
                        if (!lineNo.ToArray().Contains(','))
                        {

                        }
                        else
                        {
                            lineNo = lineNo.Substring(0, lineNo.IndexOf(","));
                        }
                    }
                    else
                    {
                        lineNo = elem.Line_no;
                    }


                    if (noofobl == 1)
                    {
                        TSAno = elem.TSA_no;

                        if (!TSAno.ToArray().Contains(','))
                        {

                        }
                        else
                        {
                            TSAno = TSAno.Substring(0, TSAno.IndexOf(","));
                        }
                    }
                    else
                    {
                        TSAno = lstContainer.Where(x => x.InoviceId == item.InvoiceId).Select(x => x.TSA_no).FirstOrDefault();
                    }
                    if (dt != "")
                    {
                        elem.SealCuttingDt = dt;
                    }
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.DestuffingEntryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + ((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.DestuffingEntryDate)).TotalDays + 1).ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + Math.Ceiling(((((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.DestuffingEntryDate)).TotalDays + 1)) / 7)).ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + elem.SealCuttingDt.ToString() + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : elem.CargoType == 2 ? "Non-Haz" : "ODC")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%' style='border-right: 1px solid #000;'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL No.</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.OBLNo).FirstOrDefault() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Godown Name</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.GodownName).FirstOrDefault() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.BOENo).FirstOrDefault() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.BOEDate).FirstOrDefault() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No of Vehicles(Loading)</td><td>:</td><td colspan='6' width='70%'>" + item.VehicleNo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Line No</td><td>:</td><td colspan='6' width='70%'>" + lineNo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Location</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.Location).FirstOrDefault() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Reserved Gr.Wt (KG)</td><td>:</td><td colspan='6' width='70%'>" + RevWeight + "</td></tr>");


                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Max(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InoviceId == item.InvoiceId).Max(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Max(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InoviceId == item.InvoiceId).Max(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Un Reserved Gr.Wt (KG)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Un Reserved Area (SQM)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Reserved Area (SQM)</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.RevArea).FirstOrDefault().ToString("0.00") + " </td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CBM</td><td>:</td><td colspan='6' width='70%'>" + item.SpaceOccupiedCBM.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>TSA No</td><td>:</td><td colspan='6' width='70%'>" + TSAno + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No of Vehicles(UnLoading)</td><td>:</td><td colspan='6' width='70%'>" + item.VehicleNoUn + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                       // totamt = totamt + data.Taxable;
                    }
                    
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size:6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='5'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }


                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='3' width='25%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Importer</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
                Container = "";
                dt = "";
                dttype = "Date of Seal Cutting";
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        //public string LoadImage(string img)
        //{
        //    string strm = img;

        //    //this is a simple white background image
        //    var myfilename = string.Format(@"{0}", Guid.NewGuid());

        //    //Generate unique filename
        //    string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".png";
        //    var bytess = Convert.FromBase64String(strm);



        //    using (var imageFile = new FileStream(filepath, FileMode.Create))
        //    {
        //        imageFile.Write(bytess,0, bytess.Length);
        //        imageFile.Flush();
        //    }
        //    ResizeImage(filepath);
        //    return filepath;
        //}



        public string LoadImage(string img)
        {

            if (img != "")
            {

                string strm = img;

                //this is a simple white background image
                var myfilename = string.Format(@"{0}", Guid.NewGuid());

                //Generate unique filename
                string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                var bytess = Convert.FromBase64String(strm);
                using (var imageFile = new FileStream(filepath, FileMode.Create))
                {
                    imageFile.Write(bytess, 0, bytess.Length);
                    imageFile.Flush();
                }


                string targetpath = Server.MapPath("~/Docs/QRCode/") + myfilename + "crop" + ".jpeg";
                String newfilepath = Utility.ResizeImage(filepath, targetpath);
                return newfilepath;
            }
            else
            {
                return "";

            }
        }



        [NonAction]
        public string GeneratingBulkPDFforContainer(DataSet ds, string InvoiceModuleName, string All)
        {
            try
            {


                Einvoice obj = new Einvoice(new HeaderParam(), "");
                var FileName = "";
                var location = "";
                var SEZis = "";
                CurrencyToWordINR objCurr = new CurrencyToWordINR();
                List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
                List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
                List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
                List<dynamic> lstSBDetails = new List<dynamic>();
                UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
                upiQRInfo.ver = objCompany[0].ver;

                upiQRInfo.tn = objCompany[0].tn;
                upiQRInfo.tier = objCompany[0].tier;
                upiQRInfo.tid = objCompany[0].tid;
                upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
                //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
                upiQRInfo.pn = objCompany[0].pn;
                upiQRInfo.pa = objCompany[0].pa;
                // upiQRInfo.orgId = objCompany[0].orgId;
                upiQRInfo.mtid = objCompany[0].mtid;
                upiQRInfo.msid = objCompany[0].msid;
                upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
                upiQRInfo.mid = objCompany[0].mid;
                upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
                if (ds.Tables.Count > 11)
                {
                    lstSBDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[11]);
                }


                List<string> lstSB = new List<string>();
                lstInvoice.ToList().ForEach(item =>
                {
                    VIZ_ReportRepository rep = new VIZ_ReportRepository();
                    WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                    if (item.ExportUnder == "Yes")
                    {
                        SEZis = "Yes";
                    }
                    else
                    {
                        SEZis = "No";
                    }

                    rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                    if (rep.DBResponse.Data != null)
                    {
                        objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                    }
                    WFLDSDBalancePrint objSbNo = new WFLDSDBalancePrint();

                    rep.GetTotalSBNoforReport(item.InvoiceNo);
                    if (rep.DBResponse.Data != null)
                    {
                        objSbNo = (WFLDSDBalancePrint)rep.DBResponse.Data;
                    }

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);
                    IrnResponse objERes = new IrnResponse();
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;
                    StringBuilder html = new StringBuilder();
                /*Header Part*/

                    html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                    html.Append("<tr><td colspan='12'>");
                    html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                    html.Append("<tr>");
                    html.Append("<td width='85%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                    html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                    html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                    html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                    html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                    html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                    html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                    html.Append("</tbody></table></td>");
                    if (item.SupplyType == "B2C")
                    {
                        html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                    }
                    else if (!string.IsNullOrEmpty(item.SignedQRCode))
                    {
                        html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                    }
                    html.Append("</tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td></tr>");
                    html.Append("</thead></table>");

                    html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                    html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                    html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                    html.Append("<tr><td>");
                    html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                    html.Append("<td colspan='5' width='50%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                    html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Transporter Name</th><th>:</th><td colspan='6' width='70%'>" + objSbNo.TransporterName + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");

                    html.Append("<td colspan='6' width='40%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                    html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                    html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>Total SB No.</th><th>:</th><td colspan='6' width='50%'>" + objSbNo.TotalSbNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>Vehicle No.</th><th>:</th><td colspan='6' width='50%'>" + item.VehicleNo + "</td></tr>");
                    html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                    html.Append("</tbody></table>");
                    html.Append("</td>");
                    html.Append("</tr></tbody></table>");
                    html.Append("</td></tr>");

                    html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Assessment No :" + item.StuffingReqNo + "</b></th></tr>");
                    html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / CBT Details :</b></th></tr>");

                    html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                    html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>CFS Code</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Container / CBT No.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>Size</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Arrival</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Cargo Type</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Container Class</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Outgauge</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Stuffing Date</th>");
                    html.Append("<th style='border-bottom: 1px solid #000; text-align: center; width:8%;'>Move Order Date</th>");

                    html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                    int i = 1;
                    Decimal totamt = 0;
                    lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.ArrivalDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.ContClass + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + (elem.IsOutGauge == 0 ? "No" : "Yes") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.StuffingDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.MoveOrderDate + "</td>");
                        html.Append("</tr>");
                        i = i + 1;

                    });
                /***************/
                    html.Append("</tbody></table></td></tr>");

                //Add Chiranjit Das

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                    html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>SB No</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>SB Date</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:15%;'>Exporter</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Pkg</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Gross Weight</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>CBM</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>U/R</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>In Date</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Port Of Loading</th>");
                    html.Append("<th style='border-bottom: 1px solid #000; text-align: right; width:8%;'>Storage Amount</th>");
                    html.Append("</tr></thead><tbody>");
                /*************/
                /*SB Details Bind*/
                    var Totalpkg = 0M;
                    var TotalGWT = 0M;
                    var TotalCBM = 0M;
                    var TotalStorage = 0M;


                    int k = 1;
                    lstSBDetails.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + k.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.SB + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.SBDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:15%;'>" + elem.EximTraderName + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.NoPkg + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.GrossWeight + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.Reserved + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.AreaType + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.In_Date + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.POL + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width:8%;'>" + elem.Total + "</td>");
                        html.Append("</tr>");
                        Totalpkg += elem.NoPkg;
                        TotalGWT += elem.GrossWeight;
                        TotalCBM += elem.Reserved;
                        TotalStorage += elem.Total;
                        k = k + 1;
                    });

                    html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>TOTAL</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:15%;'></th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + Totalpkg + "</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + TotalGWT + "</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + TotalCBM + "</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'></th>");
                    html.Append("<th style='border-bottom: 1px solid #000; text-align: right; width:8%;'>" + TotalStorage + "</th>");
                    html.Append("</tr>");
                /***************/
                    html.Append("</tbody></table></td></tr>");

                    html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                    html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<thead><tr>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                    html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                    html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                    html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                    html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                    html.Append("<tbody>");
                    i = 1;
                /*Charges Bind*/

                    lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                    {
                        if (data.Taxable > 0)
                        {
                            html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                            html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                            i = i + 1;
                        // totamt = totamt + data.Taxable;
                    }
                    });
                    html.Append("</tbody>");
                    html.Append("</table></td></tr></tbody></table>");

                    html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<tbody>");
                    html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                    html.Append("<th rowspan='2' style='width: 140px;'></th>");
                    html.Append("<th rowspan='2' style='width: 24%;'></th>");
                    html.Append("<th rowspan='2' style='width: 100px;'></th>");
                    html.Append("<th rowspan='2' style='width: 80px;'></th>");
                    html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                    html.Append("</tbody>");
                    html.Append("</table>");

                    html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<tbody>");
                    html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                    html.Append("<th rowspan='2' style='width: 140px;'></th>");
                    html.Append("<th rowspan='2' style='width: 24%;'></th>");
                    html.Append("<th rowspan='2' style='width: 100px;'></th>");
                    html.Append("<th rowspan='2' style='width: 80px;'></th>");
                    html.Append("<th rowspan='2' style='width: 130px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th></tr>");
                    html.Append("</tbody>");
                    html.Append("</table>");

                    html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<tbody>");
                    html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                    html.Append("<th rowspan='2' style='width: 140px;'></th>");
                    html.Append("<th rowspan='2' style='width: 24%;'></th>");
                    html.Append("<th rowspan='2' style='width: 100px;'></th>");
                    html.Append("<th rowspan='2' style='width: 80px;'></th>");
                    html.Append("<th rowspan='2' style='width: 130px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th colspan='2' style='width: 200px;'></th>");
                    html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th>");
                    html.Append("<th style='width: 50px;'></th></tr>");
                    html.Append("</tbody>");
                    html.Append("</table>");

                    html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<tbody>");
                    html.Append("<tr>");
                    html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                    html.Append("</tr>");
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                    html.Append("</tr>");
                    if (SEZis == "Yes")
                    {
                        html.Append("<tr>");
                        html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'>SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                        html.Append("</tr>");
                    }
                    html.Append("</tbody>");
                    html.Append("</table>");

                    html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                    html.Append("<tbody>");
                    html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                    html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                    html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                    html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                    html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Exporter</th>");
                    html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                    html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                    html.Append("<tr>");
                    html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                    html.Append("</tr>");
                    html.Append("</tbody>");
                    html.Append("</table>");
                    html.Append("</td></tr>");

                    if (item.SupplyType != "B2C")
                    {
                        html.Append("<tr>");
                        html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                        html.Append("</tr>");
                    }

                    html.Append("</tbody></table>");
                /***************/

                    html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                    html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                    html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                    lstSB.Add(html.ToString());
                });
                if (All != "All")
                {
                    FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                    location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                    }
                }
                else
                {
                    FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                    location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                    }
                }
                /*if (System.IO.File.Exists(location))
                {
                    System.IO.File.Delete(location);
                }*/
                using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
                {
                    rp.HeadOffice = "";
                    rp.HOAddress = "";
                    rp.ZonalOffice = "";
                    rp.ZOAddress = "";
                    rp.Version = EffectVersion;
                    rp.Effectlogofile = EffectVersionLogoFile;
                    rp.GeneratePDF(location, lstSB);
                }
                return "/Docs/" + Session.SessionID + "/" + FileName;
            }
            catch(Exception ex)
            {
                return "";
            }
        }

        [NonAction]
        public string GeneratingBulkPDFforContainerStuffing(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstSBDetails = new List<dynamic>();
            if (ds.Tables.Count > 11)
            {
                lstSBDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[11]);
            }


            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }

                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }
                WFLDSDBalancePrint objSbNo = new WFLDSDBalancePrint();

                rep.GetTotalSBNoforReport(item.InvoiceNo);
                if (rep.DBResponse.Data != null)
                {
                    objSbNo = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }

                upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                Einvoice Eobj = new Einvoice();
                B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);
                IrnResponse objERes = new IrnResponse();
                objERes.SignedQRCode = objresponse.QrCodeBase64;
                objERes.SignedInvoice = objresponse.QrCodeJson;
                objERes.SignedQRCode = objresponse.QrCodeJson;
                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='85%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Transporter Name</th><th>:</th><td colspan='6' width='70%'>" + objSbNo.TransporterName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Total SB No.</th><th>:</th><td colspan='6' width='50%'>" + objSbNo.TotalSbNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Vehicle No.</th><th>:</th><td colspan='6' width='50%'>" + item.VehicleNo + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Assessment No :" + item.StuffingReqNo + "</b></th></tr>");
                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / CBT Details :</b></th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Cargo Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Container Class</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Outgauge</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Stuffing Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: center; width:8%;'>Move Order Date</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.ContClass + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + (elem.IsOutGauge == 0 ? "No" : "Yes") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.StuffingDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.MoveOrderDate + "</td>");
                    html.Append("</tr>");
                    i = i + 1;

                });
                /***************/
                html.Append("</tbody></table></td></tr>");

                //Add Chiranjit Das

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>SB No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>SB Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:15%;'>Exporter</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Pkg</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Gross Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>SQM</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>CBM</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>U/R</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>In Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Port Of Loading</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right; width:8%;'>Storage Amount</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*SB Details Bind*/
                var Totalpkg = 0M;
                var TotalGWT = 0M;
                var TotalSQM = 0M;
                var TotalCBM = 0M;
                var TotalStorage = 0M;


                int k = 1;
                lstSBDetails.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + k.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.SB + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.SBDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:15%;'>" + elem.EximTraderName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.NoPkg + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.GrossWeight + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.SQM + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.Reserved + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.AreaType + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.In_Date + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.POL + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right; width:8%;'>" + elem.Total + "</td>");
                    html.Append("</tr>");
                    Totalpkg += elem.NoPkg;
                    TotalGWT += elem.GrossWeight;
                    TotalSQM += elem.SQM;
                    TotalCBM += elem.Reserved;
                    TotalStorage += elem.Total;
                    k = k + 1;
                });

                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>TOTAL</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:15%;'></th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + Totalpkg + "</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + TotalGWT + "</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + TotalSQM + "</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + TotalCBM + "</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'></th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right; width:8%;'>" + TotalStorage + "</th>");
                html.Append("</tr>");
                /***************/
                html.Append("</tbody></table></td></tr>");
                
                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                      //  totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");


                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");
                
                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Exporter</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforLoadContainer(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            var BQRFileName = "";
            var BQRlocation = "";


            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);



            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }

                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }


                Decimal totamt = 0;
                WFLDSDBalancePrint objSbNo = new WFLDSDBalancePrint();

                rep.GetTransporterforReport(item.InvoiceNo);
                if (rep.DBResponse.Data != null)
                {
                    objSbNo = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }


                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------


                StringBuilder html = new StringBuilder();
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='85%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Transporter Name</th><th>:</th><td colspan='6' width='70%'>" + objSbNo.TransporterName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>CHA</th><th>:</th><td colspan='6' width='70%'>" + objSbNo.CHAName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Exporter</th><th>:</th><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");                
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th></th><td colspan='6' width='70%'>" + item.PartyState + "(" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th></th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom:1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Vehicle No</th><th>:</th><td colspan='6' width='50%'>" + item.VehicleNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Liner Seal</th><th>:</th><td colspan='6' width='70%'>" + objSbNo.LinerSeal + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Custom Seal Number</th><th>:</th><td colspan='6' width='50%'>" + objSbNo.CustomSeal + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Country</th><th>:</th><td colspan='6' width='50%'>" + objSbNo.Country + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Assessment No :" + item.StuffingReqNo + "</b></th></tr>");
                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / CBT Details :</b></th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Arrival</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>No of Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>No of Week</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Cargo Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Container Class</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>No Of Units</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Fob Value</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Shipping Bill No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Shipping Bill Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>Port Of Discharge</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: center; width:8%;'>Outgauge</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;

                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:10%;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:6%;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:8%;'>" + item.DeliveryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + item.TotDays + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + item.TotWeeks + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : (elem.CargoType == 2 ? "Non-Haz" : "ODC"))) + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.ContClass + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.NoOfUnits + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.FobValue + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.ShippingBillNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.ShippingBillDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width:5%;'>" + elem.PortDischarge + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: center; width:8%;'>" + (elem.IsOutGauge == 0 ? "No" : "Yes") + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");                

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                       // totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");


                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 7pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 7pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 7pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");                
                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Exporter</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 7pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));

                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }



        [NonAction]
        public string GeneratingBulkPDFforCCINEntry(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);

            List<dynamic> lstCCIN = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[(ds.Tables.Count - 1)]);
            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            lstInvoice.ToList().ForEach(item =>
            {
                WFLD_ExportRepository rep = new WFLD_ExportRepository();
                WFLD_CCINEntry objCCINEntry = new WFLD_CCINEntry();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                string cargodesc = "";
                Decimal totamt = 0;
                /*
                rep.GetCCINEntryById(Convert.ToInt32(item.StuffingReqId));
                if (rep.DBResponse.Data != null)
                {
                    objCCINEntry = (WFLD_CCINEntry)rep.DBResponse.Data;
                }

                VIZ_ReportRepository repp = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                repp.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (repp.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)repp.DBResponse.Data;
                }
                // 'SB Types 1. Baggage 2. Duty Free Goods 3. Cargo in Drawback',
                string SBTypeLabel = "";
              

                cargodesc = objCCINEntry.CommodityName;
                int noofvechicle = objCCINEntry.NoOfVehicles;
                if (objCCINEntry.SBType == 1)
                {
                    SBTypeLabel = "Baggage";
                }
                else if (objCCINEntry.SBType == 2)
                {
                    SBTypeLabel = "Duty Free Goods";
                }
                else if (objCCINEntry.SBType == 3)
                {
                    SBTypeLabel = "Cargo in Drawback";
                }
                */

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                int i = 1;
                /*Header Part*/

                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");                

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Total No. Of Vehicle</th><th>:</th><td colspan='6' width='70%'>" + item.NoOfVehicle + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th></th><td colspan='6' width='70%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");

                // html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");
                
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right:1px solid #000; width:8%;'>CCIN NO</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>CCIN DT</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>SB NO</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>SB DATE</th>");
                html.Append("<th style='border-right:1px solid #000; width:7%;'>FOB</th>");
                html.Append("<th style='border-right:1px solid #000; width:15%;'>Cargo Description</th>");
                html.Append("<th style='border-right:1px solid #000; width:6%;'>Cargo Type</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>Country</th>");
                //html.Append("<th style='border-right:1px solid #000; width:8%;'>No. Of Vehicles</th>");
                html.Append("<th style='border-right:1px solid #000; width:12%;'>Exporter</th>");
                html.Append("<th style='border-right:1px solid #000; width:12%;'>CHA Name</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>No Of Pkg</th>");
                html.Append("<th style='border-right:1px solid #000; width:8%;'>Vehicle No.</th>");
                html.Append("<th style='width:8%;'>Gr.Wt (In Kg)</th>");
                html.Append("</tr></thead>");

                html.Append("<tbody>");
                //lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                int k = 0; int Totalpkg = 0; decimal TotalWT = 0; decimal TotalFOB = 0;
                //lstCCIN.ToList().ForEach(ccinitem =>
                lstCCIN.Where(y => y.InvoiceId == item.InvoiceId).ToList().ForEach(ccinitem =>
                {
                    html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.CCINNo + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.CCINDate + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.SBNo + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.SBDate + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.FOB + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.CargoDescription + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.CargoType + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.Country + "</td>");
                    //html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.NoOfVehicle + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.exporter + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.cha + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.Package + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + ccinitem.VehicleNo + "</td>");

                    html.Append("<td style='border-top:1px solid #000;'>" + ccinitem.Weight.ToString("0.000") + "</td>");
                    html.Append("</tr>");
                    Totalpkg += ccinitem.Package;
                    TotalWT += ccinitem.Weight;
                    TotalFOB += ccinitem.FOB;

                    k = k + 1;
                });

                html.Append("<tr><th colspan='2' style='border-right:1px solid #000; border-top:1px solid #000;'>TOTAL :</th>");
                //html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'>" + lstCCIN.Where(z => z.SBNo == z.SBNo).Count() + "</th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'>" + k + "</th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'></th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'>" + TotalFOB + "</th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'></th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'></th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'></th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'></th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'></th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'>" + Totalpkg + "</th>");
                html.Append("<th style='border-right:1px solid #000; border-top:1px solid #000;'></th>");
                html.Append("<th style='border-top:1px solid #000;'>" + TotalWT + "</th>");
                html.Append("</tr>");

                html.Append("</tbody>");

                html.Append("</table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Cargo Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                   // totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + " </th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'></td></tr>");
                
                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/><br/>(Sign. of Exporter / CHA) </th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/><br/>(Sign. of Shed Incharge)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");


                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforBTT(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";


            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            lstInvoice.ToList().ForEach(item =>
            {
                WFLD_ExportRepository rep = new WFLD_ExportRepository();
                List<WFLDBTTCargoDet> objCargoDet = new List<WFLDBTTCargoDet>();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                rep.GetCargoDetBTTById(Convert.ToInt32(item.StuffingReqId));
                if (rep.DBResponse.Data != null)
                {
                    objCargoDet = (List<WFLDBTTCargoDet>)rep.DBResponse.Data;
                }

                VIZ_ReportRepository repp = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                repp.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (repp.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)repp.DBResponse.Data;
                }

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");                

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th>:</th><td colspan='6' width='70%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Supply Type</th><th>:</th><td colspan='6' width='70%'>" + item.SupplyType + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th>:</th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Vehicle No</th><th>:</th><td colspan='6' width='50%'>" + item.VehicleNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Vehicle Number</th><th>:</th><td colspan='6' width='50%'>" + item.VehicleNumber + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");               
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%; font-size:6pt; border:1px solid #333;' cellspacing='0' cellpadding='5'><tbody><tr>");
                html.Append("<td colspan='4' width='33.33333333333333%'><b>Exporter :</b> " + item.ExporterImporterName + " </td>");
                html.Append("<td colspan='4' width='33.33333333333333%'><b>CHA :</b> " + item.CHAName + " </td>");
                html.Append("<td colspan='4' width='33.33333333333333%'><b>Shipping Line :</b>" + item.ShippingLineName + "</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Cargo Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:5%;'>Entry No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>SB No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>SB Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>Carting Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>CBM</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>Commodity</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>No of pkg</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; padding: 5px; width:10%;'>GR WT</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align:center; width:10%;'>FOB</th>");
                html.Append("</tr></thead><tbody>");
                i = 1;

                objCargoDet.ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:5%;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'> " + elem.ShippingBillNo.ToString() + " </td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elem.ShippingBillDate.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elem.CartingDate.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + Convert.ToDecimal(elem.BTTCum).ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elem.CommodityName.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elem.NoOfUnits.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:center; width:10%;'>" + elem.GrossWeight.ToString() + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align:center; width:10%;'> " + elem.Fob.ToString() + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                html.Append("</tbody></table></td></tr>");


                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                   // totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td></tr>");
                
                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforAuction(DataSet ds, string InvoiceModuleName, string All)
        {
            var FileName = "";
            var location = "";
            var SEZis = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }

                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }
                StringBuilder html = new StringBuilder();
                int i = 1;
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='90%' style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                html.Append("<br />" + InvoiceModuleName);
                html.Append("</td></tr>");
                html.Append("<tr><td colspan='12' style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party GST :</label> <span>" + item.PartyGSTNo + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>Invoice Generated By :</label> <span>" + item.PaymentMode + "</span></td></tr>");
                //html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Invoice Generated : By </label> <span>" + item.PaymentMode + "</span></td>");
                html.Append("</tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style=' border: 1px solid #000; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tr><td style='font-size: 12px;'>BID No : " + item.StuffingReqNo + " </td>");
                html.Append("<td style='font-size: 12px;'>BID Date : " + Convert.ToDateTime(item.StuffingReqDate).ToString("dd/MM/yyyy") + "</td></tr>");
                html.Append("</table>");
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0.##") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.##")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }


                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;'colspan='2'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='2'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;'colspan='2'></td></tr>");
                // html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='2'>SD Balance:<label style='font-weight: bold;'>" + objSDBalance.SDBalance.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;' colspan='6' width='50%'>SAM(A/C)</td></tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 9px; text-align: left;' colspan='12' width='100%'><br/><br/>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("</td></tr></tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforEmptyContainer(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";

            var BQRFileName = "";
            var BQRlocation = "";

            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstCargoDetail = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();
            List<dynamic> lstReassesmentec = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[9]);
            List<dynamic> lstReassesmentecbulk = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[9]);

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);


            string Container = "";
            string cfscode = "";

            int flagfordate = 0;

            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }
                cfscode = "";
                lstContainer.ForEach(dat =>
                {
                    if (dat.InoviceId == item.InvoiceId)

                        cfscode = dat.CFSCode;
                });
                Container = "";
                flagfordate = 0;
                Decimal totamt = 0;
                string dt = "";
                string dttype = "Date of Destuffing";
                lstReassesmentec.ForEach(itemm =>
                {
                    if ((itemm.cfscode != "") && itemm.invoiceid == item.InvoiceId)
                    {
                        Container = "(Re-Assessment)";

                        VIZ_ReportRepository repp = new VIZ_ReportRepository();
                        dt = repp.GetPreviousInvDate(itemm.cfscode);
                        dttype = "Previous Delivery Date";
                    }
                });
                lstReassesmentecbulk.ForEach(data =>
                {
                    if (data.invoiceid == item.InvoiceId)
                    {
                        Container = "(Re-Assessment)";
                        VIZ_ReportRepository repp = new VIZ_ReportRepository();
                        dt = repp.GetPreviousInvDate(data.cfscode);
                        dttype = "Previous Delivery Date";
                        flagfordate = 1;
                    }
                });

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");                

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Is Service</th><th>:</th><td colspan='6' width='50%'>" + "Yes" + "</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='5' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                //html.Append("<tr><th colspan='6' width='50%'>SEZ</th><th>:</th><td colspan='6' width='50%'>" + SEZis + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");                

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Assessment No :" + item.StuffingReqNo + "</b></th></tr>");
                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container Details :</b></th></tr>");

                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%; text-align: center; font-size:6pt;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:4%;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:6%;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>Date of Arrival</th>");
                //  html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date of Carting</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>Date of Destuffing</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>Date of Delivery</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>No of Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>No of Week</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:8%;'>Date of Seal Cutting</th>");
                html.Append("<th style='border-bottom: 1px solid #000; width:8%;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;

                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    if (dt != "")
                    {
                        elem.DestuffingEntryDate = dt;
                    }
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.ArrivalDate + "</td>");
                    // html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.CartingDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.DestuffingEntryDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DeliveryDate + "</td>");
                    if (flagfordate == 0)
                    {
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.DestuffingEntryDate)).TotalDays + 1).ToString() + "</td>");
                    }
                    if (flagfordate == 1)
                    {
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.DestuffingEntryDate)).TotalDays).ToString() + "</td>");
                    }
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Math.Ceiling(((((Convert.ToDateTime(item.DeliveryDate) - Convert.ToDateTime(elem.DestuffingEntryDate)).TotalDays + 1)) / 7)).ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + elem.SealCuttingDt.ToString() + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><td>");
                html.Append("<table style='border:1px solid #000; width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line</td><td>:</td><td colspan='6' width='70%'>" + item.ShippingLineName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Shipping Line No.</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>OBL/HBL No.</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.OBLNo).FirstOrDefault() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Godown Name</td><td>:</td><td colspan='6' width='70%'>" + lstCargoDetail.Where(x => x.InvoiceId == item.InvoiceId).Select(x => x.GodownName).FirstOrDefault() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Item No.</td><td>:</td><td colspan='6' width='70%'>" + lstContainer.Where(x => x.InoviceId == item.InvoiceId).Count().ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE No.</td><td>:</td><td colspan='6' width='70%'>" + item.BOENo + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>BOE Date</td><td>:</td><td colspan='6' width='70%'></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='50%'>");
                html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='6' width='30%'>Importer</td><td>:</td><td colspan='6' width='70%'>" + item.ExporterImporterName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Value</td><td>:</td><td colspan='6' width='70%'>" + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(m => (decimal)m.CIFValue)).ToString("0.00") + " + DUTY : " + (lstContainer.Where(z => z.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + " = " + (lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.CIFValue) + lstContainer.Where(m => m.InoviceId == item.InvoiceId).Sum(z => (decimal)z.Duty)).ToString("0.00") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>CHA Name</td><td>:</td><td colspan='6' width='70%'>" + item.CHAName + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>No Of Pkg</td><td>:</td><td colspan='6' width='70%'>" + item.TotalNoOfPackages.ToString() + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Gr.Wt (KG)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalGrossWt.ToString("0.000") + "</td></tr>");
                html.Append("<tr><td colspan='6' width='30%'>Area (SQM)</td><td>:</td><td colspan='6' width='70%'>" + item.TotalSpaceOccupied.ToString("0.000") + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("</tr></tbody></table>");
                
                html.Append("</td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                       // totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top: 0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr>");
                html.Append("<tr><th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='5'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left; line-height: 30px;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left; line-height: 30px;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left; line-height: 30px;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");                
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks:<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Importer</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");

                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html = html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
                Container = "";
                dt = "";
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateBulkInvoiceReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "BulkInvoice.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/BulkInvoice/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                {

                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/BulkInvoice/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }


        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfInvoiceDateWise(string FromDate, string ToDate, string invoiceType)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceList(FromDate, ToDate, invoiceType);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }

        [HttpPost]
        //public ActionResult Download()
        //{
        //    String session = Session.SessionID;
        //    WFLD_ReportCWCController obj = new WFLD_ReportCWCController();
        //    //////int CurrentFileID = Convert.ToInt32(FileID); 
        //    string fileSavePath = "";
        //    fileSavePath = Server.MapPath("~/Docs/All/") + Session.SessionID;
        //    var filesCol = obj.GetFile(fileSavePath).ToList();
        //    using (var memoryStream = new MemoryStream())
        //    {
        //        using (var ziparchive = new ZipArchive(memoryStream, ZipArchiveMode.Create, true))
        //        {
        //            for (int i = 0; i < filesCol.Count; i++)
        //            {
        //                ziparchive.CreateEntryFromFile(filesCol[i].FilePath, filesCol[i].FileName);
        //            }
        //        }
        //        return File(memoryStream.ToArray(), "application/zip", "Attachments.zip");
        //    }
        //}
        [NonAction]
        public string GeneratingBulkPDFforBTTContainerInvoice(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";


            var BQRFileName = "";
            var BQRlocation = "";

            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstbreakup = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[6]);
            List<string> lstSB = new List<string>();

            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            upiQRInfo.gstIn = Convert.ToString(objCompany[0].GstIn);
            upiQRInfo.merchant_id = Convert.ToInt32(objCompany[0].ccavenuemid);

            String RemarksValue = "";
            String SEZis = "";
            lstInvoice.ToList().ForEach(item =>
            {
                VIZ_ReportRepository rep = new VIZ_ReportRepository();
                WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();


                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                RemarksValue = item.Remarks;
                rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
                if (rep.DBResponse.Data != null)
                {
                    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
                }

                // Add for BQR Code Chiranjit das
                IrnResponse objERes = new IrnResponse();
                BQRFileName = item.InvoiceId + ".jpg";
                BQRlocation = Server.MapPath("~/Docs/") + "BQR/" + BQRFileName;
                log.Error("Path:" + BQRlocation);
                if (!System.IO.File.Exists(BQRlocation))
                {


                    upiQRInfo.order_id = Convert.ToInt32(item.InvoiceId);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.billing_name = Convert.ToString(item.PartyName);
                    upiQRInfo.billing_address = Convert.ToString(item.PartyAddress);
                    upiQRInfo.billing_zip = Convert.ToString(item.PinCode);
                    upiQRInfo.billing_tel = Convert.ToString(item.MobileNo);
                    upiQRInfo.billing_email = Convert.ToString(item.Email);

                    upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                    upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                    upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                    upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                    upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                    upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                    upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                    upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                    upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                    upiQRInfo.tr = Convert.ToString(item.InvoiceId);
                    string Site = System.Configuration.ConfigurationManager.AppSettings["WebsiteUrl"];

                    upiQRInfo.redirect_url = Site + "UPIResponse/GetResponseBqr";
                    upiQRInfo.cancel_url = Site + "UPIResponse/CancelResponseBqr";
                    upiQRInfo.merchant_param1 = Convert.ToInt32(System.Configuration.ConfigurationSettings.AppSettings["BranchId"].ToString());


                    Einvoice Eobj = new Einvoice();
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode_Wfld(upiQRInfo);



                    if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + "BQR"))
                    {
                        System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + "BQR");
                    }

                    string strm = objresponse.QrCodeBase64;

                    //this is a simple white background image
                    var myfilename = string.Format(@"{0}", Guid.NewGuid());

                    //Generate unique filename
                    //  string filepath = Server.MapPath("~/Docs/QRCode/") + myfilename + ".jpeg";
                    var bytess = Convert.FromBase64String(strm);
                    using (var imageFile = new FileStream(BQRlocation, FileMode.Create))
                    {
                        imageFile.Write(bytess, 0, bytess.Length);
                        imageFile.Flush();
                    }

                    VIZ_ReportRepository wfldObj = new VIZ_ReportRepository();
                    wfldObj.AddEditBQRCode(item.InvoiceId, BQRFileName, ((Login)(Session["LoginUser"])).Uid);


                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                }

                //------ End Chiranjit Das ------------

                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center; margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");

                html.Append("<tr><td>");
                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr>");
                html.Append("<td colspan='5' width='50%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");                
                html.Append("<tr><th colspan='6' width='30%'>Supply Type </th><th>:</th><td colspan='6' width='70%'>" + item.SupplyType + "</td></tr>");                
                html.Append("</tbody></table>");
                html.Append("</td>");

                html.Append("<td colspan='6' width='40%' style='border-bottom: 1px solid #000; padding-bottom:5px;'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Place Of Supply</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Is Service</th><th>:</th><td colspan='6' width='50%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                if (InvoiceModuleName == "IRR")
                {
                    lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='5'>");
                        html.Append("<thead><tr>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Train No</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Wagon No</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>VIA</th>");
                        html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Gross Wt</th>");
                        html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Tare Wt</th>");
                        html.Append("</tr></thead>");
                        html.Append("<tbody><tr>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.TrainNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.WagonNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.VIA + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GrossWt + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.TareWt + "</td>");
                        html.Append("</tr></tbody>");
                        html.Append("</table></td></tr>");
                    });
                }

                html.Append("<tr><th style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'><b>Container / CBT Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>CFSCode</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Container / CBT No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Arrival Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Delivery Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Days</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>IsODC</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ArrivalDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.SealCuttingDt + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Days + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.IsODC + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container / CBT Charges :</h3></th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.##") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.##") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.##") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top: 0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.##") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 199px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 199px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; border-top: 1px solid #000; font-size: 7pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 7pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='20%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='80%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                
                if (InvoiceModuleName == "MISCELLANEOUS" || InvoiceModuleName == "CONTAINER DEBIT INVOICE" || InvoiceModuleName == "BTT Container")
                {
                    html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='12'>Remarks:");
                    html.Append("<label style='font-weight: bold;'>" + RemarksValue + " </label></td></tr>");
                }


                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>SAM(A/C)</td></tr>");

                html.Append("<tr>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='12' width='100%'>THIS IS A COMPUTER-GENERATED TAX INVOICE AND IT DOES NOT REQUIRE A SIGNATURE</td>");

                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + BQRlocation + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingBulkPDFforReefer(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var SEZis = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                if (item.ExportUnder == "Yes")
                {
                    SEZis = "Yes";
                }
                else
                {
                    SEZis = "No";
                }
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                
                html.Append("<tr><td colspan='3'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 13px;text-align: center;margin: 0; padding: 0;'>" + item.InvoiceType + " Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%;' cellspacing='0'><tbody>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Name : </label><span>" + item.PartyName + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;'><label style='font-weight: bold;'>Party Address :</label> <span>" + item.PartyAddress + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;'><label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyGSTStateCode + " </span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt;  padding-bottom:5px;'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt; padding-bottom:5px;'><label style='font-weight: bold;'>Invoice Generated By :</label> <span>" + item.PaymentMode + "</span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt; padding-bottom:5px;padding-top:8px;'><label style='font-weight: bold;'>Place Of Supply :</label> <span>" + item.PartyState + " (" + item.PartyGSTStateCode + ")" + "</span></td>");
                //html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom: 1px solid #000; padding-bottom:5px;padding-top:8px;'><label style='font-weight: bold;'>SEZ :</label> <span>" + SEZis + " </span></td></tr>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt; padding-bottom:5px;padding-top:8px;'><label style='font-weight: bold;'>Supply Type :</label> <span>" + item.SupplyType + " </span></td></tr>");
                html.Append("<tr><td colspan='8' width='70%' style='font-size: 7pt; border-bottom: 1px solid #000; padding-bottom:5px;padding-top:8px;'><label style='font-weight: bold;'>Is Service :</label> <span>" + "Yes" + "</span></td>");
                html.Append("<td colspan='4' width='30%' style='font-size: 7pt;border-bottom: 1px solid #000; padding-bottom:5px;padding-top:8px;'><label style='font-weight: bold;'></label> <span></span></td></tr>");
                html.Append("</tbody>");
                html.Append("</table></td></tr>");

                html.Append("<tr><th><b style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style='border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>To Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Shift</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>Hour</th>");                
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                Decimal totamt = 0;
                List<string> lstCFSCode = new List<string>();
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    if (!lstCFSCode.Any(y => y == elem.CFSCode))
                    {
                        lstCFSCode.Add(elem.CFSCode);
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.PlugInDatetime + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.PlugOutDatetime + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Shift + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Hour + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    }
                });

                /***************/
                html.Append("</tbody></table></td></tr>");

                html.Append("<tr><th><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    if (data.Taxable > 0)
                    {

                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                        //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                        i = i + 1;
                       // totamt = totamt + data.Taxable;
                    }
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.00") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.00") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 200px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width:100%;'cellspacing='0' cellpadding='5'> ");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice:</th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");
                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='3' width='25%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Remarks<label style='font-weight: bold;'>" + item.Remarks.ToString() + "</label></td></tr>");

                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Signature CHA / Importer</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>Assistant <br/>(Signature)</td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</td>");
                html.Append("</tr></tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType == "B2B")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");

                /***************/
                html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                html.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                lstSB.Add(html.ToString());
            });
            var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        public JsonResult Download()
        {
            String session = Session.SessionID;
            WFLD_ReportCWCController obj = new WFLD_ReportCWCController();
            //////int CurrentFileID = Convert.ToInt32(FileID); 
            string fileSavePath = "";
            fileSavePath = Server.MapPath("~/Docs/All/") + Session.SessionID;
            var filesCol = obj.GetFile(fileSavePath).ToList();
            string FileList = "";
            //string FileList = "/Docs/All/" + Session.SessionID + "/";
            for (int i = 0; i < filesCol.Count; i++)
            {
                FileList = FileList + "/Docs/All/" + Session.SessionID + "/" + (filesCol[i].FileName) + ",";
            }
            var ObjResult = new { Status = 1, Message = FileList };
            return Json(ObjResult);
        }

        [NonAction]
        public List<FileList> GetFile(string fileSavePath)
        {
            List<FileList> listFiles = new List<FileList>();
            DirectoryInfo dirInfo = new DirectoryInfo(fileSavePath);
            int i = 0;
            foreach (var item in dirInfo.GetFiles())
            {
                listFiles.Add(new FileList()
                {
                    FileId = i + 1,
                    FileName = item.Name,
                    FilePath = dirInfo.FullName + "/" + item.Name
                });
                i = i + 1;
            }
            return listFiles;
        }

        private void DeleteDirectory(string path)
        {
            if (Directory.Exists(path))
            {
                //Delete all files from the Directory
                foreach (string file in Directory.GetFiles(path))
                {
                    System.IO.File.Delete(file);
                }
                //Delete all child Directories
                //foreach (string directory in Directory.GetDirectories(path))
                //{
                //    DeleteDirectory(directory);
                //}
                ////Delete a Directory
                //Directory.Delete(path);
            }
        }

        [HttpGet]
        public JsonResult GetSingleInvoiceDtl(string InvoiceNo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetSingleInvoiceDtl(InvoiceNo);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult GetInvoiceBySearch(string InvoiceNo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetInvoiceBySearch(InvoiceNo);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GenerateBulkPdfForPallatisation(DataSet ds, string InvoiceModuleName, string All)
        {
            Einvoice obj = new Einvoice(new HeaderParam(), "");
            var FileName = "";
            var location = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();
            UpiQRCodeInfo upiQRInfo = new UpiQRCodeInfo();
            upiQRInfo.ver = objCompany[0].ver;

            upiQRInfo.tn = objCompany[0].tn;
            upiQRInfo.tier = objCompany[0].tier;
            upiQRInfo.tid = objCompany[0].tid;
            upiQRInfo.qrMedium = Convert.ToInt32(objCompany[0].qrMedium);
            //  upiQRInfo.QRexpire = objCompany[0].QRexpire;
            upiQRInfo.pn = objCompany[0].pn;
            upiQRInfo.pa = objCompany[0].pa;
            // upiQRInfo.orgId = objCompany[0].orgId;
            upiQRInfo.mtid = objCompany[0].mtid;
            upiQRInfo.msid = objCompany[0].msid;
            upiQRInfo.mode = Convert.ToInt32(objCompany[0].mode);
            upiQRInfo.mid = objCompany[0].mid;
            upiQRInfo.mc = Convert.ToString(objCompany[0].mc);
            var SEZis = "";
            Decimal totamt = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                // written by Vineet
                SEZis = "";
                totamt = 0;
                // End by Vineet
                upiQRInfo.InvoiceDate = Convert.ToString(item.DocDt);
                upiQRInfo.invoiceNo = Convert.ToString(item.InvoiceNo);
                upiQRInfo.InvoiceName = Convert.ToString(item.PartyName);
                upiQRInfo.mam = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.am = Convert.ToDecimal(item.InvoiceAmt);
                upiQRInfo.CGST = Convert.ToDecimal(item.CGST);
                upiQRInfo.SGST = Convert.ToDecimal(item.SGST);
                upiQRInfo.IGST = Convert.ToDecimal(item.IGST);
                upiQRInfo.GSTPCT = Convert.ToDecimal(item.IGSTPer);
                upiQRInfo.QRexpire = Convert.ToString(item.DocDt);
                upiQRInfo.tr = Convert.ToString(item.InvoiceId);

                Einvoice Eobj = new Einvoice();
                B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                objresponse = Eobj.GenerateB2cQRCode(upiQRInfo);
                IrnResponse objERes = new IrnResponse();
                objERes.SignedQRCode = objresponse.QrCodeBase64;
                objERes.SignedInvoice = objresponse.QrCodeJson;
                objERes.SignedQRCode = objresponse.QrCodeJson;
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr>");
                html.Append("<td width='83%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompany[0].EmailAddress + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO_IMG'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("<tr><td colspan='12'><span style='display: block; font-size: 7pt; text-transform: uppercase;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("</tbody></table></td>");
                if (item.SupplyType == "B2C")
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                }
                else if (!string.IsNullOrEmpty(item.SignedQRCode))
                {
                    html.Append("<td align='left' valign='top'><img valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");
                }
                html.Append("</tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("</thead></table>");

                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");                

                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; width:100%;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='12'><h2 style='font-size: 13px; padding-bottom: 10px; text-align: center; margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");

                html.Append("<tr><td colspan='12'><table style='width:100%;' cellspacing='0' cellpadding='5'><tbody><tr>");

                html.Append("<td colspan='5' width='50%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='30%'>Invoice No</th><th>:</th><td colspan='6' width='70%'>" + item.InvoiceNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Name</th><th>:</th><td colspan='6' width='70%'>" + item.PartyName + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party Address</th><th>:</th><td colspan='6' width='70%'>" + item.PartyAddress + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Party GST</th><th>:</th><td colspan='6' width='70%'>" + item.PartyGSTNo + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Place Of Supply</th><th></th><td colspan='6' width='70%'>" + item.PartyState + " (" + item.PartyStateCode + ")" + "</td></tr>");
                html.Append("<tr><th colspan='6' width='30%'>Is Service</th><th></th><td colspan='6' width='70%'>" + "Yes" + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");

                if (item.SEZ == "Yes")
                {
                    SEZis = "Yes";
                }

                html.Append("<td colspan='6' width='40%'>");
                html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Date</th><th>:</th><td colspan='6' width='50%'>" + item.InvoiceDate + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State</th><th>:</th><td colspan='6' width='50%'>" + item.PartyState + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>State Code</th><th>:</th><td colspan='6' width='50%'>" + item.PartyStateCode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Invoice Generated By</th><th>:</th><td colspan='6' width='50%'>" + item.PaymentMode + "</td></tr>");
                html.Append("<tr><th colspan='6' width='50%'>Supply Type</th><th>:</th><td colspan='6' width='50%'>" + item.SupplyType + "</td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td>");
                html.Append("</tr></tbody></table></td></tr>");

                html.Append("<tr><th colspan='12'><b style='text-align: left; font-size: 7pt;'>Shipbill Details :</b> </th></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>SB No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>SB Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Godown Name</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Location</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Pallet</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Pkg Type</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Weight</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>No OF PKG</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>Exporter</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; padding: 5px;'>CHA Name</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                int i = 1;
                lstContainer.Where(x => x.InvoiceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.ShippingBillNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.SbDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.GodownName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.LocationName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Units + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.PkgType + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.Weight + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.NOOFPKG + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.PartyName + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center;'>" + elem.CHAName + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });
                /***************/
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th colspan='12'><h3 style='text-align: left; font-size: 7pt; margin-top: 0; margin-bottom: 0;'>Container Charges :</h3> </th></tr>");
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/

                lstCharges.Where(y => y.InoviceId == item.InvoiceId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 130px;'>" + data.Taxable.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.CGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.SGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0.00") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 50px;'>" + data.IGSTAmt.ToString("0.00") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 6pt; text-align: right; width: 150px;'>" + data.Total.ToString("0.00") + "</td></tr>");
                    i = i + 1;
                    //totamt = totamt + data.Taxable;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border: 1px solid #000; border-top: 0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 130px;'>" + item.TotalTaxable.ToString("0.00") + "</th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.AllTotal.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalCGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalSGST.ToString("0.##") + "</th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='font-size: 6pt; text-align: right; width: 50px;'>" + item.TotalIGST.ToString("0.##") + "</th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Round Up :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + lstInvoice[0].RoundUp.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><th rowspan='2' style='font-size: 6pt; text-align: left; width: 150px;'>Total Invoice :</th>");
                html.Append("<th rowspan='2' style='width: 140px;'></th>");
                html.Append("<th rowspan='2' style='width: 24%;'></th>");
                html.Append("<th rowspan='2' style='width: 100px;'></th>");
                html.Append("<th rowspan='2' style='width: 80px;'></th>");
                html.Append("<th rowspan='2' style='width: 130px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th colspan='2' style='width: 200px;'></th>");
                html.Append("<th rowspan='2' style='font-size: 6pt; text-align: right; width: 100px;'>" + item.InvoiceAmt.ToString("0.00") + "</th></tr><tr>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th>");
                html.Append("<th style='width: 50px;'></th></tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border: 1px solid #000; border-top:0; width: 100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 6pt; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(lstCharges[0].Total.ToString("0.00")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                if (SEZis == "Yes")
                {
                    html.Append("<tr>");
                    html.Append("<th style='font-size: 6pt; text-align: left; padding: 5px;' colspan='8'> SUPPLY MEANT FOR EXPORT/ SUPPLY TO SEZ UNIT OR SEZ DEVELOPER FOR AUTHORISED OPERATIONS ON PAYMENT OF INTEGRATED TAX </th>");

                    html.Append("</tr>");
                }

                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 6pt; text-align: left;' colspan='3' width='25%'>Payer Code:<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr>");
                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='8' width='75%'>Payer Name:<label style='font-weight: bold;'>" + item.PayeeName.ToString() + "</label></td></tr>");
                
                html.Append("<tr><th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='4' width='33.33333333333333%'></th>");
                html.Append("<th style='font-size: 6pt; text-align: left;' colspan='5' width='33.33333333333333%'><br/>For Central Warehousing Corporation<br/>(Authorized Signatories)</th></tr>");

                html.Append("<tr><td style='font-size: 6pt; text-align: left;' colspan='6' width='50%'>*Cheques are subject to realisation</td></tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                if (item.SupplyType != "B2C")
                {
                    html.Append("<tr>");
                    html.Append("<td align='left' valign='top' colspan='6' width='50%'><p style='font-size:7pt; font-weight:bold;'>Scan for Payment</p><img style='width:115px; height:115px' valign='top' align='right' src='" + LoadImage(obj.GenerateQCCode(objERes.SignedInvoice)) + "'/> </td>");
                    html.Append("</tr>");
                }

                html.Append("</tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });

            if (All != "All")
            {
                FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                }
            }
            else
            {
                FileName = InvoiceModuleName + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                location = Server.MapPath("~/Docs/All/") + Session.SessionID + "/" + FileName;
                if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/All/") + Session.SessionID);
                }
            }

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.Version = EffectVersion;
                rp.Effectlogofile = EffectVersionLogoFile;
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        #endregion

        #region Invoice Print

        public string ConvertNumbertoWords(long number)
        {
            if (number == 0) return "ZERO";
            if (number < 0) return "minus " + ConvertNumbertoWords(Math.Abs(number));
            string words = "";
            if ((number / 1000000) > 0)
            {
                words += ConvertNumbertoWords(number / 100000) + " LAKHS ";
                number %= 1000000;
            }
            if ((number / 1000) > 0)
            {
                words += ConvertNumbertoWords(number / 1000) + " THOUSAND ";
                number %= 1000;
            }
            if ((number / 100) > 0)
            {
                words += ConvertNumbertoWords(number / 100) + " HUNDRED ";
                number %= 100;
            }
            //if ((number / 10) > 0)  
            //{  
            // words += ConvertNumbertoWords(number / 10) + " RUPEES ";  
            // number %= 10;  
            //}  
            if (number > 0)
            {
                //if (words != "") words += "AND ";
                var unitsMap = new[]
                {
            "ZERO", "ONE", "TWO", "THREE", "FOUR", "FIVE", "SIX", "SEVEN", "EIGHT", "NINE", "TEN", "ELEVEN", "TWELVE", "THIRTEEN", "FOURTEEN", "FIFTEEN", "SIXTEEN", "SEVENTEEN", "EIGHTEEN", "NINETEEN"
        };
                var tensMap = new[]
                {
            "ZERO", "TEN", "TWENTY", "THIRTY", "FORTY", "FIFTY", "SIXTY", "SEVENTY", "EIGHTY", "NINETY"
        };
                if (number < 20) words += unitsMap[number];
                else
                {
                    words += tensMap[number / 10];
                    if ((number % 10) > 0) words += " " + unitsMap[number % 10];
                }
            }
            return words;
        }
        [NonAction]
        private string GeneratingPDF(WFLDInvoiceGate objGP, int InvoiceId, string InvoiceModeleName)
        {
            string html = "";

            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/BulkReport" + InvoiceId.ToString() + ".pdf";
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }
            html = "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>" +
                "<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objGP.CompanyName + "</h1>" +
                "<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />" +
                "<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span><br/>" +
                "<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + InvoiceModeleName + "</span></td></tr>" +
                "<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" +
                "CWC GST No. <label>" + objGP.CompanyGstNo + "</label></span></td></tr>" +
                "<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>" +
                "<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>" +
                "<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>" +
                "<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + objGP.InvoiceNo + "</span></td>" +
                "<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + objGP.InvoiceDate + "</span></td></tr>" +
                "<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>" +
                "<span>" + objGP.PartyName + "</span></td>" +
                "<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + objGP.PartyState + "</span> </td></tr>" +
                "<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>" +
                "Party Address :</label> <span>" + objGP.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>" +
                "<label style='font-weight: bold;'>State Code :</label> <span>" + objGP.PartyStateCode + "</span></td></tr>" +
                "<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + objGP.PartyGstNo + "</span></td>" +
                "</tr></tbody> " +
                "</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>" +
                "<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:80%;' cellspacing='0' cellpadding='10'>" +
                "<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFSCode</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>" +
                "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>" +
                "<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>To Date</th></tr></thead><tbody>";
            int i = 1;
            foreach (var container in objGP.LstContainersGate)
            {
                html = html + "<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.CfsCode + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ContainerNo + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.Size + "</td>" +
                "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.FromDate + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ToDate + "</td></tr>";
                i = i + 1;
            }

            html = html + "</tbody></table></td></tr>" +
            "<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>" +
            "<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>" +
            "<thead><tr>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SR No.</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Charge Code</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Description</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>HSN Code</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Taxable Amt.</th>" +
            "<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>CGST</th>" +
            "<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SGST</th>" +
            "<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>IGST</th>" +
            "<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Total</th></tr><tr>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>" +
            "<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th></tr></thead>" +
            "<tbody>";
            i = 1;
            foreach (var charge in objGP.LstChargesGate)
            {
                html = html + "<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.ChargeSD + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.ChargeDesc + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.HsnCode + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Rate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.TaxableAmt.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTRate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTAmt.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTRate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTAmt.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTRate.ToString("0") + "</td>" +
                    "<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTAmt.ToString("0") + "</td>" +
                    "<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Total.ToString("0") + "</td></tr>";
                i = i + 1;
            }
            html = html + "</tbody>" +
                "</table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='10'> " +
                "<tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total :</th>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'></td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalTax.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalCGST.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalSGST.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalIGST.ToString("0") + "</td>" +
                "<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalAmt.ToString("0") + "</td>" +
                "</tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>" +
                "Total Invoice (In Word) :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='6'>" +
                "" + ConvertNumbertoWords(Convert.ToInt32(objGP.TotalAmt)) + "</td>" +
                "</tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'>Amount of Tax Subject of Reverse :</th>" +
                "<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='6'>0</td>" +
                "</tr></tbody></table><table style='width:100%;' cellspacing='0' cellpadding='10'>" +
                "<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: " +
                "<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:" +
                "<label style='font-weight: bold;'>" + objGP.PartyCode + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>" +
                "*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>" +
                "</td></tr></tbody></table>";
            //html = "<table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 0; '><tbody> <tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>Central Warehousing Corporation</h1><label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span></td></tr><tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CWC GST No. <label>07AAACC1206D1ZI</label></span></td></tr><tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='0'><tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr><tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='0'><tbody><tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>11071/96365</span></td><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>14-MAR-18</span></td></tr><tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label> <span>FREIGHTBRIDGE LOGISTICS PVT LTD</span></td><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>Delhi</span> </td></tr><tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Address :</label> <span>501, 5th Floor, 56 Eros Apartment</span></td><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State Code :</label> <span>DL</span></td></tr><tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>07AAACF8646G1ZJ</span></td></tr></tbody> </table></td></tr><tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</h3> </th></tr><tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='0'><thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>To Date</th></tr></thead><tbody><tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>--</td></tr></tbody></table></td></tr><tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='0'><thead><tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Charge Code</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Description</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>HSN Code</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Taxable Amt.</th><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CGST</th><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SGST</th><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>IGST</th><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Total</th></tr><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amt.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amt.</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Rate</th><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amt.</th></tr></thead><tbody><tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>--</td><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>-</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>--</td></tr></tbody></table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='0'> <tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>7200</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>648</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>648</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>8496</td></tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total Invoice (In Word) :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='4'>Eight Thousand Four Hundred Ninety Six Rupees Only</td></tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'>Amount of Tax Subject of Reverse :</th><td style='font-size: 12px; text-align: left; padding: 5px;' colspan='4'>0</td></tr></table><table style='width:100%;' cellspacing='0' cellpadding='0'><tbody><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>Receipt No.: <label style='font-weight: bold;'></label></td><td style='font-size: 11px; text-align: left; line-height: 30px;'>Party Code: <label style='font-weight: bold;'></label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table></td></tr></tbody></table>";

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f))
            {
                rp.GeneratePDF(location, html);
            }
            return "/Docs/" + Session.SessionID + "/BulkReport" + InvoiceId.ToString() + ".pdf";
        }

        private string GeneratingBulkPDF(List<WFLDInvoiceGate> objGPList, string InvoiceModeleName)
        {

            List<string> HtmlList = new List<string>();

            string currDateTime = DateTime.Now.ToString("ddMMyyyyhhmmtt");

            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/BulkReport_" + currDateTime + ".pdf";
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }

            foreach (WFLDInvoiceGate objGP in objGPList.OrderBy(x => x.InvoiceNo).ToList())
            {
                StringBuilder html = new StringBuilder();
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objGP.CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span><br/>");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + InvoiceModeleName + "</span></td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objGP.CompanyGstNo + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + objGP.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + objGP.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + objGP.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + objGP.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + objGP.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + objGP.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + objGP.PartyGstNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:80%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>ICD Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>To Date</th></tr></thead><tbody>");
                int i = 1;
                foreach (var container in objGP.LstContainersGate)
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.CfsCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.FromDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + container.ToDate + "</td></tr>");
                    i = i + 1;
                }

                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                foreach (var charge in objGP.LstChargesGate)
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.ChargeSD + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.ChargeDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 8px; text-align: center;'>" + charge.HsnCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Rate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.TaxableAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTRate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.CGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTRate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.SGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTRate.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.IGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + charge.Total.ToString("0") + "</td></tr>");
                    i = i + 1;
                }
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table><table style=' border: 1px solid #000; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='10'> ");
                html.Append("<tbody><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Total :</th>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'></td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalTax.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalCGST.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalSGST.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalIGST.ToString("0") + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: right; padding: 5px;'>" + objGP.TotalAmt.ToString("0") + "</td>");
                html.Append("</tr><tr><th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>");
                html.Append("Total Invoice (In Word) :</th><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='6'>");
                html.Append("" + ConvertNumbertoWords(Convert.ToInt32(objGP.TotalAmt)) + "</td>");
                html.Append("</tr><tr><th style='font-size: 12px; text-align: left; padding: 5px;'>Amount of Tax Subject of Reverse :</th>");
                html.Append("<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='6'>0</td>");
                html.Append("</tr></tbody></table><table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + objGP.PartyCode + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>");
                html.Append("*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");

                HtmlList.Add(html.ToString());
            }


            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f))
            {
                rp.GeneratePDF(location, HtmlList);
            }
            return "/Docs/" + Session.SessionID + "/BulkReport_" + currDateTime + ".pdf";
        }
        #endregion

        #region SD A/c Statement

        [HttpGet]
        public ActionResult SDStatement()
        {
            var Months = new Dictionary<int, string>();
            for (Int16 i = 1; i <= 12; i++)
            {
                Months.Add(i, System.Globalization.DateTimeFormatInfo.InvariantInfo.MonthNames[i - 1]);
            }
            ViewBag.Months = new SelectList((IEnumerable)Months, "Key", "Value", DateTime.Today.Month);
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetSDStatement(SDStatement ObjSDStatement)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.GetPDAStatement(ObjSDStatement.Month, ObjSDStatement.Year);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForPDAStatement(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "SDStatement.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/SDStatement/";
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var Rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    Rh.GeneratePDF(LocalDirectory + FileName, Pages);
                //}
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SDStatement/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }

        #endregion

        #region On Account Statement

        [HttpGet]
        public ActionResult OnAccountStatement()
        {
            var Months = new Dictionary<int, string>();
            for (Int16 i = 1; i <= 12; i++)
            {
                Months.Add(i, System.Globalization.DateTimeFormatInfo.InvariantInfo.MonthNames[i - 1]);
            }
            ViewBag.Months = new SelectList((IEnumerable)Months, "Key", "Value", DateTime.Today.Month);
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetOnAccountStatement(WFLDOAStatement ObjOAStatement)
        {
            string Fdt = Convert.ToDateTime(ObjOAStatement.FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ObjOAStatement.ToDate).ToString("yyyy-MM-dd");

            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.GetOnAccountStatement(Fdt, Tdt);
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }


        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForOAStatement(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "OnAccountStatement.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/OnAccountStatement/";
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }

                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/OnAccountStatement/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }
        #endregion

        #region Party Wise On Account Statement Details Report

        public ActionResult PartyWiseOnAccountStatement()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForOADet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }


        [HttpGet]
        public JsonResult OASearchParty(string PartyCode)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForOADet(PartyCode, 0);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult OALoadParty(string PartyCode, int Page)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForOADet(PartyCode, Page);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPartyWiseOnAccountReport(string FromDate, string ToDate, int PartyId)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetPartyWiseOnAccountStatement(PartyId, Fdt, Tdt);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }


        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForOAStatementDetails(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "OnAcStatementPartyWise.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/OnAcStatementPartyWise/";
                Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }

                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/OnAcStatementPartyWise/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }
        #endregion

        //#region Party Wise On Account Statement

        //[HttpGet]
        //public ActionResult PartyWiseOnAccountStatement()
        //{
        //    var Months = new Dictionary<int, string>();
        //    for (Int16 i = 1; i <= 12; i++)
        //    {
        //        Months.Add(i, System.Globalization.DateTimeFormatInfo.InvariantInfo.MonthNames[i - 1]);
        //    }
        //    ViewBag.Months = new SelectList((IEnumerable)Months, "Key", "Value", DateTime.Today.Month);
        //    return PartialView();
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public JsonResult GetPartyWiseOnAccountStatement(WFLDOAStatement ObjOAStatement)
        //{
        //    if (ModelState.IsValid)
        //    {
        //        VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
        //        ObjRR.GetPartyWiseOnAccountStatement(ObjOAStatement.Month, ObjOAStatement.Year);
        //        return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        //    }
        //    else
        //    {
        //        var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
        //        return Json(new { Status = 0, Message = ErrorMessage });
        //    }

        //}

        //[HttpPost, ValidateInput(false)]
        //[CustomValidateAntiForgeryToken]
        //public JsonResult GeneratePDFForOAPartyWiseStatement(FormCollection Fc)
        //{
        //    try
        //    {
        //        var Pages = new string[1];
        //        var FileName = "PartyWiseOnAccountStatement.pdf";
        //        Pages[0] = Fc["Page"].ToString();
        //        string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/PartyWiseOnAccountStatement/";
        //        Pages[0] = Pages[0].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

        //        if (!Directory.Exists(LocalDirectory))
        //        {
        //            Directory.CreateDirectory(LocalDirectory);
        //        }
        //        using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
        //        {
        //            ObjPdf.HeadOffice = this.HeadOffice;
        //            ObjPdf.HOAddress = this.HOAddress;
        //            ObjPdf.ZonalOffice = this.ZonalOffice;
        //            ObjPdf.ZOAddress = this.ZOAddress;
        //            ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

        //        }

        //        return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/PartyWiseOnAccountStatement/" + FileName });
        //    }
        //    catch
        //    {
        //        return Json(new { Status = 0, Message = "Error" });
        //    }
        //}
        //#endregion

        //#region register of outward supply

        //[HttpGet]
        //public ActionResult RegisterOfOutwardSupply()
        //{
        //    return PartialView();
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public FileResult RegisterOfOutwardSupply(FormCollection fc)
        //{
        //    try
        //    {
        //        var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
        //        var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
        //        var Type = fc["ddlType"].ToString();
        //        var excelName = "";
        //        var ObjRR = new VIZ_ReportRepository();
        //        ObjRR.GetRegisterofOutwardSupply(date1, date2, Type);

        //        if (Type == "Inv") { Type = "Invoice"; }
        //        if (Type == "C") { Type = "Credit"; }
        //        if (Type == "D") { Type = "Debit"; }
        //        if (Type == "Unpaid") { Type = "Unpaid"; }
        //        if (Type == "CancelInv") { Type = "Cancel Invoice"; }

        //        excelName = "RegisterofOutwardSupply" + "_" + Type + ".xls";

        //        if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
        //            return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
        //        else
        //        {
        //            string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
        //            var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
        //            using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
        //            {
        //                exl.AddCell("A1", "No data found");
        //                exl.Save();
        //                return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
        //            }
        //        }
        //    }
        //    catch
        //    {
        //        string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
        //        var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
        //        using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
        //        {
        //            exl.AddCell("A1", "No data found");
        //            exl.Save();
        //            return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xls");
        //        }
        //    }
        //    // return null;
        //}

        //#endregion

        #region All Party Credit Status
        [HttpGet]
        public ActionResult GetPartyWiseCreditStatus()
        {
            return PartialView();
        }
        [HttpPost, CustomValidateAntiForgeryToken]
        public JsonResult PartyUnpaidCreditStatus(string AsOnDate)
        {
            VIZ_ReportRepository objIM = new VIZ_ReportRepository();
            objIM.PartyUnpaidCreditStatus(AsOnDate);
            if (objIM.DBResponse.Data != null)
            {
                IList<PartyUnpaidDetails> lstDet = new List<PartyUnpaidDetails>();
                lstDet = (List<PartyUnpaidDetails>)objIM.DBResponse.Data;
                string Path = GeneratePDFforCreditStatus(lstDet);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GeneratePDFforCreditStatus(IList<PartyUnpaidDetails> lstDtl)
        {
            StringBuilder objSB = new StringBuilder();
            objSB.Append("<table style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 0; '>");
            objSB.Append("<tbody><tr><td style='text-align: center;' colspan='2'>");
            objSB.Append("<span style='font-size: 14px; font-weight: bold; line-height: 16px;'>Payer Wise Credit Status</span>");
            objSB.Append("</td></tr><tr><td style='text-align: right;' colspan='2'>");

            objSB.Append("<span style='font-size: 11px; line-height: 22px;padding-bottom: 10px;'>As On: <label>" + lstDtl[0].AsOnDate + "</label>");
            objSB.Append("</span></td><td style='text-align: right;'></td></tr><tr><td colspan='2'><table style='width:100%; margin-bottom: 10px;'><tbody>");
            objSB.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;'><thead>");
            objSB.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Payer</th>");
            objSB.Append("<th style=' border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Unpaid Amount</th></tr>");
            objSB.Append("</thead><tfoot><tr>");
            objSB.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; font-weight: bold; text-align: center; padding: 5px;'>");
            objSB.Append("Total</td><td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Convert.ToDecimal(lstDtl.Sum(x => x.UnpaidAmt)) + "</td>");
            objSB.Append("</tr></tfoot><tbody>");
            int Serial = 1;
            lstDtl.ToList().ForEach(item =>
            {
                objSB.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' >" + Serial + "." + item.PartyName + "</td>");
                objSB.Append("<td style=' border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'> " + item.UnpaidAmt + "</td></tr>");
                Serial++;
            });
            objSB.Append("</tbody></table></td></tr></tbody></table></td></tr></tbody></table>");
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID;
            if (!Directory.Exists(LocalDirectory))
                Directory.CreateDirectory(LocalDirectory);
            if (System.IO.File.Exists(LocalDirectory + "/CreditStatus.pdf"))
                System.IO.File.Delete(LocalDirectory + "/CreditStatus.pdf");
            using (var RH = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
            {
                RH.HeadOffice = this.HeadOffice;
                RH.HOAddress = this.HOAddress;
                RH.ZonalOffice = this.ZonalOffice;
                RH.ZOAddress = this.ZOAddress;
                RH.GeneratePDF(LocalDirectory + "/CreditStatus.pdf", objSB.ToString());
            }
            return "/Docs/" + Session.SessionID + "/CreditStatus.pdf";
        }
        #endregion

        #region Party Wise Unpaid Invoice Details
        [HttpGet]
        public ActionResult GetUnpaidInvoice()
        {
            VIZ_ReportRepository objRR = new VIZ_ReportRepository();
            objRR.GetPayeeNameforUnpaidInvoice();
            if (objRR.DBResponse.Data != null)
                ViewBag.GetPaymentParty = JsonConvert.DeserializeObject(JsonConvert.SerializeObject(objRR.DBResponse.Data));
            else ViewBag.GetPaymentParty = null;
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult PartyWiseUnpaidAmout(PartyWiseUnpaid objUn)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository objIM = new VIZ_ReportRepository();
                objIM.PartyWiseUnpaidAmout(objUn.PartyId, objUn.AsOnDate);
                if (objIM.DBResponse.Data != null)
                {
                    PartyWiseUnpaidDtl objDet = new PartyWiseUnpaidDtl();
                    objDet = (PartyWiseUnpaidDtl)objIM.DBResponse.Data;
                    string Path = GeneratePDFforUnpaidInvoiceDetails(objDet);
                    return Json(new { Status = 1, Message = Path });
                }
                return Json(new { Status = 0, Message = "No Data Found" });
            }
            else return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GeneratePDFforUnpaidInvoiceDetails(PartyWiseUnpaidDtl objDet)
        {
            StringBuilder objSB = new StringBuilder();
            objSB.Append("<table style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 0; '>");
            objSB.Append("<tbody><tr><td style='text-align: center;' colspan='3'>");
            objSB.Append("<span style='font-size: 14px; font-weight: bold; line-height: 16px;'>Payer Unpaid Bill Status</span>");
            objSB.Append("</td></tr><tr><td style='text-align: left;' colspan='2'>");
            objSB.Append("<span style='display: block; font-size: 11px; padding-bottom: 10px;'>Payer Name: <label>" + objDet.PartyName + "</label>");
            objSB.Append("</span></td><td style='text-align: right;'>");
            objSB.Append("<span style='display: block; font-size: 11px; line-height: 22px;padding-bottom: 10px;'>As On: <label>" + objDet.AsOnDate + "</label></span>");
            objSB.Append("</td></tr><tr><td colspan='3'><table style='width:100%; margin-bottom: 10px;' ><tbody><tr>");
            objSB.Append("<td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;'><thead><tr>");
            objSB.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Invoice No.</th>");
            objSB.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Date</th>");
            objSB.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amount</th>");
            objSB.Append("</tr></thead>");
            objSB.Append("<tfoot><tr>");
            objSB.Append("<td colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; font-weight: bold; text-align: center; padding: 5px;'>Total</td>");
            objSB.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + Convert.ToDecimal(objDet.lstDtl.Sum(x => x.InvoiceAmt)) + "</td></tr></tfoot><tbody>");
            objDet.lstDtl.ToList().ForEach(item =>
            {
                objSB.Append("<tr>");
                objSB.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>" + item.InvoiceNo + "</td>");
                objSB.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>" + item.InvoiceDate + "</td>");
                objSB.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + item.InvoiceAmt + "</td></tr>");
            });
            objSB.Append("</tbody></table></td></tr></tbody></table></td></tr></tbody></table>");
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID;
            if (!Directory.Exists(LocalDirectory))
                Directory.CreateDirectory(LocalDirectory);
            if (System.IO.File.Exists(LocalDirectory + "/UnpaidInvoiceDet.pdf"))
                System.IO.File.Delete(LocalDirectory + "/UnpaidInvoiceDet.pdf");
            using (var RH = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
            {
                RH.HeadOffice = this.HeadOffice;
                RH.HOAddress = this.HOAddress;
                RH.ZonalOffice = this.ZonalOffice;
                RH.ZOAddress = this.ZOAddress;
                RH.GeneratePDF(LocalDirectory + "/UnpaidInvoiceDet.pdf", objSB.ToString());
            }
            return "/Docs/" + Session.SessionID + "/UnpaidInvoiceDet.pdf";
        }
        #endregion

        #region Bulk Receipt  Report
        [HttpGet]
        public ActionResult BulkReceiptReport()
        {
            return PartialView();
        }
        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReport(BulkReceiptReport ObjBulkReceiptReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetBulkCashreceipt(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulkReceiptReport(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetTDSDepositReport(BulkReceiptReport ObjBulkReceiptReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetTDSreceipt(ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateTDSDepositReport(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkSDReceiptReport(BulkReceiptReport ObjBulkReceiptReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetBulkCashreceipt(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulkSDReceiptReport(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GenerateBulkReceiptReport(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                


                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 7pt; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>" + (item.fromPDA == "PDR" ? "Cash Receipt - SD" : "CASH RECEIPT") + "</label>");
                html.Append("</td>");
                html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                html.Append("</tr>");


                //Header
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='9' width='80%' style='font-size: 7.5pt; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold; font-size: 8.5pt;'>No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td colspan='3' width='20%' style='font-size: 7pt; line-height: 26px; float:right;'><label style='font-weight: bold; font-size: 7.5pt;'>Date : </label> <span>" + item.ReceiptDate + "</span></td>");
                html.Append("</tr>");
                //html.Append("<tr><td colspan='9' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>By : </label><span>" + item.PartyName + "</span></td><td colspan='3' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Folio No : </label><span>" + item.PartyCode + "</span></td></tr>");
                html.Append("<tr><td colspan='9' style='font-size: 7pt; line-height: 26px;'><label style='font-weight: bold; font-size: 7.5pt;'>By : </label><span>" + item.PartyName + " (" + item.PartyCode + ") </span></td><td colspan='3' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'> </label><span>" + "" + "</span></td></tr>");
                html.Append("<tr><td colspan='12' style='font-size: 7pt; line-height: 26px; border-bottom:1px solid #000; padding-bottom:5px;'><label style='font-weight: bold; font-size: 7.5pt;'>Party Address : </label><span>" + item.PartyAddress + "</span></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                //html.Append("<tr><td><hr/></td></tr>");
                html.Append("<tr><td>");

                //Invoice Nos and Amounts
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:50%;' align='center' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; padding: 5px;'>Invoice No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; padding: 5px;'>Amount</th>");
                html.Append("</tr></thead><tbody>");

                //Loop
                if (item.InvoiceNo.ToString() != "")
                {
                    var InvoiceIds = item.InvoiceId.Split(',');
                    var InvoiceNos = item.InvoiceNo.Split(',');
                    var InvoiceAmts = item.Amt.Split(',');
                    i = 0;
                    foreach (var Invoice in InvoiceNos)
                    {
                        html.Append("<tr>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + InvoiceNos[i] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + InvoiceAmts[i] + "</td>");
                        html.Append("</tr>");

                        i = i + 1;
                    }
                }


                html.Append("</tbody></table></td></tr>");

                //Banks
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 60px;'>Mode</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 100px;'>Instrument</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 80px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 100px;'>Date</th>");
                html.Append("</tr></thead><tbody>");

                //loop
                decimal totalpaymentreceiptAmt = 0;
                i = 1;
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + data.Amount + "</td>");
                    html.Append("</tr>");
                    totalpaymentreceiptAmt = totalpaymentreceiptAmt + data.Amount;

                    i = i + 1;

                });

                //TDS
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: right; font-weight: bold;'>TDS</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 50px;'>" + item.TdsAmount.ToString() + "</td></tr>");


                //Total
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: right; font-weight: bold;'>Total Payment Receipt Amount</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 50px;'>" + totalpaymentreceiptAmt + "</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 7pt; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(totalpaymentreceiptAmt.ToString("0")) + "</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 30px;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td width='10%' valign='top' align='right' style='font-size:7pt;'><b>Remarks : </b></td><td colspan='2' width='85%' style='font-size:12px; line-height:22px;'>" + item.Remarks + "</td></tr>");
                //html.Append("<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'><b>Remarks : </b> " + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<th style='width:60%;'></th>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 7pt; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }

        [NonAction]
        public string GenerateTDSDepositReport(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstMode.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();

                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 7pt; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>TDS DEPOSIT</label></td>");
                html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                html.Append("</tr>");

                //Header
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'><tbody>");

                html.Append("<tr><td colspan='12'><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='9' width='80%' style='font-size: 7.5pt; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold; font-size: 8.5pt;'>No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td colspan='3' width='20%' style='font-size: 7pt; line-height: 26px; float:right;'><label style='font-weight: bold; font-size: 7pt;'>Date : </label> <span>" + item.ReceiptDate + "</span></td>");
                html.Append("</tr>");
                html.Append("<tr><td colspan='12' style='font-size: 7pt; line-height: 26px;'><label style='font-weight: bold; font-size: 7.5pt;'>By : </label><span>" + item.PartyName + "</span></td></tr>");
                html.Append("<tr><td colspan='12' style='font-size: 7pt; line-height: 26px;'><label style='font-weight: bold; font-size: 7.5pt;'>Financial Year : </label><span>" + item.FinYarFrom + " - " + item.FinYarTo + "</span></td></tr>");
                html.Append("<tr><td colspan='12' style='font-size: 7pt; line-height: 26px; border-bottom: 1px solid #000; padding-bottom:5px;'><label style='font-weight: bold; font-size: 7.5pt;'>TDS Quarter : </label><span>" + item.TdsQuarter + "</span></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //html.Append("<tr><td><hr/></td></tr>");

                //Banks
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 60px;'>Mode</th>");
                //html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 100px;'>Certificate No.</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 80px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 100px;'>Date</th>");
                html.Append("</tr></thead>");

                html.Append("<tbody>");
                //loop
                decimal totalpaymentreceiptAmt = 0;
                i = 1;
                //lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                //{
                html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + item.PayMode + "</td>");
                //html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + item.DraweeBank + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + item.CirtificateNo + "</td>");
                html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + item.CirtificateDate + "</td>");
                html.Append("<td style='border-bottom: 1px solid #000; font-size: 7pt; text-align: center;'>" + item.Amount + "</td>");
                html.Append("</tr>");
                totalpaymentreceiptAmt = totalpaymentreceiptAmt + item.Amount;

                i = i + 1;

                //});  

                //Total
                html.Append("<tr>");
                html.Append("<td colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 7pt; text-align: right; font-weight: bold;'>Total Payment Receipt Amount</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 7pt; text-align: center; width: 50px;'>" + totalpaymentreceiptAmt + "</td></tr>");
                html.Append("</tbody></table></td></tr>");


                html.Append("</tbody></table></td></tr>");

                html.Append("</tbody></table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 7pt; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(totalpaymentreceiptAmt.ToString("0.00")) + "</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 30px;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td width='10%' valign='top' align='right' style='font-size:7pt;'><b>Remarks : </b></td><td colspan='2' width='85%' style='font-size:12px; line-height:22px;'>" + item.Remarks + "</td></tr>");
                //html.Append("<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'><b>Remarks : </b> " + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<th style='width:60%;'></th>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 7pt; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }

        [NonAction]
        public string GenerateBulkSDReceiptReport(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                /*
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt Date : </label> <span>" + item.ReceiptDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                */
                /*************/
                /*Container Bind*/
                /*
                int i = 1;
                var InvoceIds = item.InvoiceId.Split(',');
                foreach (var InvId in InvoceIds)
                {
                    lstContainer.Where(x => x.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.FromDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    });
                }
                */
                /***************/
                /*
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 60px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                */
                /*Charges Bind*/
                /*
                foreach (var InvId in InvoceIds)
                {
                    lstCharges.Where(y => y.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(data =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Rate.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Taxable.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Total.ToString("0") + "</td></tr>");
                        i = i + 1;
                    });
                }
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; width: 120px;'>Total :</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; center; width: 144px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 90px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 160px;'>" + item.TotalTaxable.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalCGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalSGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalIGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 120px;'>" + item.InvoiceAmt.ToString("0") + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='12'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code: <label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr></tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Mode</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Drawee Bank</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Instrument No</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Amount</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Amount + "</td>");
                    html.Append("</tr>");
                });
                html.Append("</tbody></table>");
                */
                /***************/



                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='90%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>SD RECEIPT</label>");
                html.Append("</td></tr>");

                //html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                //html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br/>");
                //html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                //html.Append("<h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Cash Receipt</h2> </td></tr>");

                //Header
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='9' width='80%' style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td colspan='3' width='20%' style='font-size: 13px; line-height: 26px; float:right;'><label style='font-weight: bold;'>Date : </label> <span>" + item.ReceiptDate + "</span></td>");
                html.Append("</tr>");
                html.Append("<tr><td colspan='12' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>By : </label><span>" + item.PartyName + " </span></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr><tr><td><hr/></td></tr><tr><td>");

                //Invoice Nos and Amounts
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:50%;' align='center' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Invoice No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amount</th>");
                html.Append("</tr></thead><tbody>");

                //Loop
                if (item.InvoiceNo.ToString() != "")
                {
                    var InvoiceIds = item.InvoiceId.Split(',');
                    var InvoiceNos = item.InvoiceNo.Split(',');
                    var InvoiceAmts = item.Amt.Split(',');
                    i = 0;
                    foreach (var Invoice in InvoiceNos)
                    {
                        html.Append("<tr>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + InvoiceNos[i] + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + InvoiceAmts[i] + "</td>");
                        html.Append("</tr>");

                        i = i + 1;
                    }
                }


                html.Append("</tbody></table></td></tr>");

                //Banks
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Mode</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 100px;'>Instrument</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 80px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 100px;'>Date</th>");
                html.Append("</tr></thead><tbody>");

                //loop
                decimal totalpaymentreceiptAmt = 0;
                i = 1;
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Amount + "</td>");
                    html.Append("</tr>");
                    totalpaymentreceiptAmt = totalpaymentreceiptAmt + data.Amount;

                    i = i + 1;

                });

                //TDS
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>SD Balance</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TdsAmount.ToString() + "</td></tr>");


                //Total
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>Total Payment Receipt Amount</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + totalpaymentreceiptAmt + "</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(totalpaymentreceiptAmt.ToString("0")) + "</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 80px;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td width='10%' valign='top' align='right' style='font-size:13px;'><b>Remarks : </b></td><td colspan='2' width='85%' style='font-size:12px; line-height:22px;'>" + item.Remarks + "</td></tr>");
                //html.Append("<td style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'><b>Remarks : </b> " + item.Remarks + "</td></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<th style='width:60%;'></th>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetChequeBounceReceiptReport(String ReceiptNo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetChequeBounceCashreceipt(ReceiptNo);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulk(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }


        [NonAction]
        public string GenerateBulk(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                /*
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                html.Append("<tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>CFS Whitefield</span>");
                html.Append("</td></tr>");
                html.Append("<tr><td style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Tax Invoice</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Receipt Date : </label> <span>" + item.ReceiptDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>CFS Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                */
                /*************/
                /*Container Bind*/
                /*
                int i = 1;
                var InvoceIds = item.InvoiceId.Split(',');
                foreach (var InvId in InvoceIds)
                {
                    lstContainer.Where(x => x.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(elem =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.FromDate + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                        html.Append("</tr>");
                        i = i + 1;
                    });
                }
                */
                /***************/
                /*
                html.Append("</tbody></table></td></tr>");
                html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr><tr><td>");
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 60px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                */
                /*Charges Bind*/
                /*
                foreach (var InvId in InvoceIds)
                {
                    lstCharges.Where(y => y.InoviceId == Convert.ToInt32(InvId)).ToList().ForEach(data =>
                    {
                        html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i.ToString() + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationSDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.OperationDesc + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SACCode + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Rate.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Taxable.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.CGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.SGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTPer.ToString("0") + "</td>");
                        html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.IGSTAmt.ToString("0") + "</td>");
                        html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Total.ToString("0") + "</td></tr>");
                        i = i + 1;
                    });
                }
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; width: 120px;'>Total :</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; center; width: 144px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 90px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 160px;'>" + item.TotalTaxable.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalCGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalSGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 210px;'>" + item.TotalIGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 10px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: right; width: 120px;'>" + item.InvoiceAmt.ToString("0") + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;' colspan='12'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: <label style='font-weight: bold;'></label></td>");
                html.Append("<td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code: <label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>*Cheques are subject to realisation</td>");
                html.Append("<td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("</td></tr></tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%; border: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead>");
                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Mode</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Drawee Bank</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Instrument No</th>");
                html.Append("<th style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: left; padding: 5px;'>Amount</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; border-right: 1px solid #000; font-size: 12px; text-align: left; line-height: 15px;'>" + data.Amount + "</td>");
                    html.Append("</tr>");
                });
                html.Append("</tbody></table>");
                */
                /***************/



                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '>");
                html.Append("<tbody><tr><td style='text-align: center;'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br/>");
                html.Append("<span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Cash Receipt</h2> </td></tr>");

                //Header
                html.Append("<tr><td><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Date : </label> <span>" + item.ReceiptDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>By : </label><span>" + item.PartyName + "</span></td></tr></tbody></table>");
                html.Append("</td></tr><tr><td><hr/></td></tr><tr><td>");

                //Invoice Nos and Amounts
                html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:50%;' align='center' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Invoice No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Amount</th>");
                html.Append("</tr></thead><tbody>");

                //Loop
                var InvoiceIds = item.InvoiceId.Split(',');
                var InvoiceNos = item.InvoiceNo.Split(',');
                var InvoiceAmts = item.Amt.Split(',');
                i = 0;
                foreach (var Invoice in InvoiceNos)
                {
                    html.Append("<tr>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + InvoiceNos[i] + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + InvoiceAmts[i] + "</td>");
                    html.Append("</tr>");

                    i = i + 1;
                }

                html.Append("</tbody></table></td></tr>");

                //Banks
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Mode</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Instrument</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Date</th>");
                html.Append("</tr></thead><tbody>");

                //loop

                i = 1;
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Amount + "</td>");
                    html.Append("</tr>");

                    i = i + 1;
                });

                //TDS
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>TDS</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TdsAmount.ToString() + "</td></tr>");


                //Total
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>Total</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.InvoiceAmt.ToString() + "</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 80px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th></tr>");
                html.Append("</tbody></table>");
                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<th style='width:60%;'></th>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");


                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }
        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfReceiptDateWise(string FromDate, string ToDate)
        {
            ReportRepository ObjRR = new ReportRepository();
            ObjRR.GetReceiptList(FromDate, ToDate);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region DailyCashBookReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult DailyCashBookReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyCashBookReport(DailyCashBookWFLD ObjDailyCashBook)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DailyCashBookWFLD> LstDailyCashBook = new List<DailyCashBookWFLD>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DailyCashBook(ObjDailyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyCashBook = (List<DailyCashBookWFLD>)ObjRR.DBResponse.Data;
                LstDailyCashBook = LstDailyCashBook.OrderBy(o => o.ReceiptDate).ThenBy(o => o.CRNo).ToList();

                LstDailyCashBook.Add(new DailyCashBookWFLD()
                {
                    /*ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",
                    Depositor = "",*/

                    InvoiceDate = "<strong>Total</strong>",
                    InvoiceNo = "",
                    InvoiceType = "",
                    PartyName = "",
                    PayeeName = "",
                    ModeOfPay = "",
                    ChqNo = "",
                    GenSpace = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GenSpace)).ToString(),
                    StorageCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.StorageCharge)).ToString(),
                    Insurance = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Insurance)).ToString(),
                    GroundRentEmpty = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentEmpty)).ToString(),
                    GroundRentLoaded = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentLoaded)).ToString(),
                    MfCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MfCharge)).ToString(),
                    EntryCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.EntryCharge)).ToString(),
                    Fumigation = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Fumigation)).ToString(),
                    OtherCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.OtherCharge)).ToString(),
                    Misc = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Misc)).ToString(),
                    Cgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Cgst)).ToString(),
                    Sgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Sgst)).ToString(),
                    Igst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Igst)).ToString(),

                    MiscExcess = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MiscExcess)).ToString(),
                    TotalCash = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    TotalCheque = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    TotalOthers = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOthers)).ToString(),
                    Tds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Tds)).ToString(),
                    CrTds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CrTds)).ToString(),
                    TotalPDA = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalPDA)).ToString(),
                    Remarks = ""

                });
                ObjRR.DBResponse.Data = LstDailyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyCashBookReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DailyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult DailyCashBookReportCash()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyCashBookReportCash(DailyCashBookWFLD ObjDailyCashBook)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DailyCashBookWFLD> LstDailyCashBook = new List<DailyCashBookWFLD>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DailyCashBookCash(ObjDailyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyCashBook = (List<DailyCashBookWFLD>)ObjRR.DBResponse.Data;
                //    LstDailyCashBook = LstDailyCashBook.OrderBy(o => o.ReceiptDate).ThenBy(o => o.CRNo).ToList();

                LstDailyCashBook.Add(new DailyCashBookWFLD()
                {
                    ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",

                    PartyName = "",

                    ModeOfPay = "",
                    ChqNo = "",
                    ChqDate = "",
                    TotalOnAccount = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOnAccount)).ToString(),
                    TotalPDA = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalPDA)).ToString(),
                    TotalCash = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    TotalCheque = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    TotalOthers = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOthers)).ToString(),

                    Remarks = ""

                    //InvoiceDate = "<strong>Total</strong>",
                    //InvoiceNo = "",
                    //InvoiceType = "",
                    //PartyName = "",
                    //PayeeName = "",
                    //ModeOfPay = "",
                    //ChqNo = "",
                    //GenSpace = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GenSpace)).ToString(),
                    //StorageCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.StorageCharge)).ToString(),
                    //Insurance = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Insurance)).ToString(),
                    //GroundRentEmpty = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentEmpty)).ToString(),
                    //GroundRentLoaded = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentLoaded)).ToString(),
                    //MfCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MfCharge)).ToString(),
                    //EntryCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.EntryCharge)).ToString(),
                    //Fumigation = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Fumigation)).ToString(),
                    //OtherCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.OtherCharge)).ToString(),
                    //Misc = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Misc)).ToString(),
                    //Cgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Cgst)).ToString(),
                    //Sgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Sgst)).ToString(),
                    //Igst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Igst)).ToString(),

                    //MiscExcess = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MiscExcess)).ToString(),
                    //TotalCash = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    //TotalCheque = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    //TotalOthers = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOthers)).ToString(),
                    //Tds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Tds)).ToString(),
                    //CrTds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CrTds)).ToString(),
                    //TotalPDA = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalPDA)).ToString(),
                    //Remarks = ""

                });
                ObjRR.DBResponse.Data = LstDailyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyCashBookReportPDFCash(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DailyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region MonthlyCashBookReport

        //same model used for daily and monthly cashbook in patparganj

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult MonthlyCashBookReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyCashBookReport(DailyCashBookWFLD ObjMonthlyCashBook)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DailyCashBookWFLD> LstMonthlyCashBook = new List<DailyCashBookWFLD>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.MonthlyCashBook(ObjMonthlyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstMonthlyCashBook = (List<DailyCashBookWFLD>)ObjRR.DBResponse.Data;
                LstMonthlyCashBook.Add(new DailyCashBookWFLD()
                {
                    ReceiptDate = "<strong>Total</strong>",

                    GenSpace = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GenSpace)).ToString(),
                    StorageCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.StorageCharge)).ToString(),
                    Insurance = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Insurance)).ToString(),
                    GroundRentEmpty = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentEmpty)).ToString(),
                    GroundRentLoaded = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentLoaded)).ToString(),
                    MfCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MfCharge)).ToString(),
                    EntryCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.EntryCharge)).ToString(),
                    Fumigation = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Fumigation)).ToString(),
                    OtherCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.OtherCharge)).ToString(),
                    Cgst = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Cgst)).ToString(),
                    Sgst = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Sgst)).ToString(),
                    Igst = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Igst)).ToString(),
                    Misc = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Misc)).ToString(),
                    MiscExcess = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MiscExcess)).ToString(),
                    TotalCash = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    TotalCheque = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    TotalOthers = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOthers)).ToString(),
                    TotalPDA = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalPDA)).ToString(),
                    Tds = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Tds)).ToString(),
                    CrTds = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CrTds)).ToString()
                });
                ObjRR.DBResponse.Data = LstMonthlyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlyCashBookPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }



        #region PDSummary



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult PDASummaryReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult PDASummaryReport(PdSummary ObjPdSummary, int drpType)
        {
            try
            {
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                // VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                List<PdSummary> LstPdSummary = new List<PdSummary>();
                Login objLogin = (Login)Session["LoginUser"];
                ObjRR.PdSummaryReport(ObjPdSummary, drpType);//, objLogin.Uid

                excelName = "PDSummaryExcel" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "PDSummaryExcel.xls");
                }
            }
            // return null;
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetPdSummaryReport(PdSummary ObjPdSummary, int drpType)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<PdSummary> LstPdSummary = new List<PdSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.PdSummaryReport(ObjPdSummary, drpType);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstPdSummary = (List<PdSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePdSummaryPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "SdSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/SdSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SdSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region DailyPdaActivityReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult DailyPdaActivityReport()
        {

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyPdaActivityReport(WFLDDailyPdaActivityReport ObjDailyPdaActivityReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            WFLDDailyPdaActivityReport LstDailyPdaActivityReport = new WFLDDailyPdaActivityReport();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DailyPdaActivity(ObjDailyPdaActivityReport);//, objLogin.Uid
                                                              //if (ObjRR.DBResponse.Data != null)
                                                              //{
                                                              //LstDailyPdaActivityReport = List<WFLDDailyPdaActivityList>ObjRR.DBResponse.Data;
                                                              //return Json(ObjRR.DBResponse);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            //}
            // else
            //{
            // return Json(ObjRR.DBResponse);
            //}

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDailyPdaActivityReportPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                var Pages = new string[1];
                var FileName = "DailySdActivityReport.pdf";
                Pages[0] = fc["Page"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailySdActivityReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailySdActivityReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion


        #region Stock Position Report
        [HttpGet]
        public ActionResult StockPositionReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetStockPositionReport(StockPositionReportModel ObjStockPosition)
        {
            Kdl_ReportRepository ObjRR = new Kdl_ReportRepository();
            List<StockPositionReportModel> LstStockPosition = new List<StockPositionReportModel>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.StockPositionReport(ObjStockPosition);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockPosition = (List<StockPositionReportModel>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateStockPositionReportPDF(FormCollection fc)
        {
            try
            {

                var Pages = new string[1];
                var FileName = "StockPositionReport.pdf";
                Pages[0] = fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/StockPositionReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/StockPositionReport/" + FileName };
                return Json(ObjResult);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #endregion


        #region Monthly SD Book

        [HttpGet]
        public ActionResult MonthlySDBookReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlySDBookReport(DailyCashBookWFLD ObjMonthlyCashBook)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DailyCashBookWFLD> LstMonthlyCashBook = new List<DailyCashBookWFLD>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.MonthSDBookReport(ObjMonthlyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstMonthlyCashBook = (List<DailyCashBookWFLD>)ObjRR.DBResponse.Data;
                LstMonthlyCashBook.Add(new DailyCashBookWFLD()
                {
                    ReceiptDate = "<strong>Total</strong>",

                    GenSpace = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GenSpace)).ToString(),
                    StorageCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.StorageCharge)).ToString(),
                    Insurance = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Insurance)).ToString(),
                    GroundRentEmpty = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentEmpty)).ToString(),
                    GroundRentLoaded = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentLoaded)).ToString(),
                    MfCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MfCharge)).ToString(),
                    EntryCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.EntryCharge)).ToString(),
                    Fumigation = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Fumigation)).ToString(),
                    OtherCharge = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.OtherCharge)).ToString(),
                    Cgst = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Cgst)).ToString(),
                    Sgst = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Sgst)).ToString(),
                    Igst = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Igst)).ToString(),
                    Misc = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Misc)).ToString(),
                    MiscExcess = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MiscExcess)).ToString(),
                    TotalCash = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    TotalCheque = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    Tds = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Tds)).ToString(),
                    CrTds = LstMonthlyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CrTds)).ToString()
                });
                ObjRR.DBResponse.Data = LstMonthlyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlySDBookPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlySDBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlySDBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlySDBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }


        #endregion



        #region ContainerArrivalReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerArrivalReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerArrivalReport(ContainerArrivalReport ObjContainerArrivalReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ContainerArrivalReport LstContainerArrivalReport = new ContainerArrivalReport();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerArrivalReport(ObjContainerArrivalReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerArrivalReport = (ContainerArrivalReport)ObjRR.DBResponse.Data;

                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerArrivalReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerArrivalReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Ppg_Report/ContainerArrivalReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Ppg_Report/ContainerArrivalReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        //#region Stock Position Report
        //[HttpGet]
        //public ActionResult StockPositionReport()
        //{
        //    return PartialView();
        //}

        #region Stock Position Report
        //[HttpGet]
        //public ActionResult StockPositionReport()
        //{
        //    return PartialView();
        //}

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public ActionResult GetStockPositionReport(StockPositionReportModel ObjStockPosition)
        //{
        //    Kdl_ReportRepository ObjRR = new Kdl_ReportRepository();
        //    List<StockPositionReportModel> LstStockPosition = new List<StockPositionReportModel>();
        //    Login objLogin = (Login)Session["LoginUser"];
        //    ObjRR.StockPositionReport(ObjStockPosition);//, objLogin.Uid
        //    if (ObjRR.DBResponse.Data != null)
        //    {
        //        LstStockPosition = (List<StockPositionReportModel>)ObjRR.DBResponse.Data;
        //        return Json(ObjRR.DBResponse);
        //    }
        //    else
        //    {
        //        return Json(ObjRR.DBResponse);
        //    }

        //}

        //[HttpPost, ValidateInput(false)]
        //[CustomValidateAntiForgeryToken]
        //public JsonResult GenerateStockPositionReportPDF(FormCollection fc)
        //{
        //    try
        //    {

        //        var Pages = new string[1];
        //        var FileName = "StockPositionReport.pdf";
        //        Pages[0] = fc["Page"].ToString();
        //        string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ChequeSummary/";
        //        if (!Directory.Exists(LocalDirectory))
        //            Directory.CreateDirectory(LocalDirectory);
        //        using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
        //        {
        //            ObjPdf.HeadOffice = this.HeadOffice;
        //            ObjPdf.HOAddress = this.HOAddress;
        //            ObjPdf.ZonalOffice = this.ZonalOffice;
        //            ObjPdf.ZOAddress = this.ZOAddress;
        //            ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

        //        }
        //        var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ChequeSummary/" + FileName };
        //        return Json(ObjResult);
        //    }
        //    catch (Exception ex)
        //    {
        //        return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
        //    }

        //}
        #endregion
        //}
        //#endregion

        #region CashReceiptInvoiceLedgerReport Partywise
        public ActionResult CashReceiptInvoiceLedgerReport()
        {
            AccessRightsRepository ACCR = new AccessRightsRepository();
            ACCR.GetMenuWiseAccessRight(Convert.ToInt32(Session["MenuId"]), ((Login)Session["LoginUser"]).Role.RoleId, Convert.ToInt32(Session["ModuleId"]),
                Convert.ToInt32(Session["BranchId"]));
            ViewBag.RightsList = JsonConvert.SerializeObject(ACCR.DBResponse.Data);

            ImportRepository objImport = new ImportRepository();
            objImport.GetPaymentParty();
            if (objImport.DBResponse.Status > 0)
                ViewBag.PaymentParty = JsonConvert.SerializeObject(objImport.DBResponse.Data);
            else
                ViewBag.PaymentParty = null;


            return PartialView();
        }

        [HttpPost]
        public JsonResult GetCashReceiptInvoiceLedgerReport(int partyId, string fromdate, string todate)
        {
            try
            {
                VIZ_ReportRepository Repo = new VIZ_ReportRepository();
                Repo.GetCrInvLedgerReport(partyId, Convert.ToDateTime(fromdate).ToString("yyyy-MM-dd"), Convert.ToDateTime(todate).ToString("yyyy-MM-dd"), ZonalOffice, ZOAddress);
                object obj = Repo.DBResponse;
                return Json(obj, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Status = 0, Data = "", Message = ex.Message.ToString() }, JsonRequestBehavior.AllowGet);
            }

        }
        #endregion

        #region WorkSlip
        public ActionResult WorkSlipReport()
        {
            return PartialView();
        }    

        [HttpPost]
        public JsonResult GetWorkSlipReport(string PeriodFrom, string PeriodTo, int CasualLabour)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            string FilePath = "";
            string fdt = Convert.ToDateTime(PeriodFrom).ToString("yyyy-MM-dd");
            string tdt = Convert.ToDateTime(PeriodTo).ToString("yyyy-MM-dd");
            ObjRR.WorkSlipDetailsForPrint(fdt, tdt, CasualLabour, objLogin.Uid);//, objLogin.Uid
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                FilePath = GeneratingPDFforWS(ds, Convert.ToDateTime(PeriodFrom).ToString("dd-MMM-yy"), Convert.ToDateTime(PeriodTo).ToString("dd-MMM-yy"));
                return Json(new { Status = 1, Data = FilePath });
            }
            else
                return Json(new { Status = -1, Data = "No Record Found." });
        }

        [NonAction]
        public string GeneratingPDFforWS(DataSet ds, string dt, string dtt)
        {
            List<dynamic> objWs = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();

            List<dynamic> objImport = objWs.Where(o => o.Operation == "Import").ToList();
            List<dynamic> objExport = objWs.Where(o => o.Operation == "Export").ToList();
            List<dynamic> objBCY = objWs.Where(o => o.Operation == "BCY Operation").ToList();
            List<dynamic> objGeneral = objWs.Where(o => o.Operation == "General").ToList();

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
            html.Append("<tr><td colspan='12'>");

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 12px;'>CFS VIZAG, OPP NAVAL DOCK YARD, NAVAL BASE POST, VISAKHAPATNAM - 14</label><br/><label style='font-size: 12px;'>Inland Container Depot.</label><br/><label style='font-size: 14px; font-weight:bold;'>Workslip</label></td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");

            html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            html.Append("<tr><th align='left' colspan='4' width='33.33333333333333%'>WorkSlip No : " + objImport[0].WorkSlipNo + "</th><th align='center' colspan='4' width='33.33333333333333%'>From Date of Operation : " + dt + "</th><th align='right' colspan='4' width='33.33333333333333%'>To Date of Operation : " + dtt + "</th></tr>");
            html.Append("</tbody></table></td></tr>");
            
           
            int i = 1;
            //IMPORT
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            html.Append("<tr><th colspan='12'>IMPORT OPERATIONS:</th></tr>");
            objImport.ForEach(item =>
            {                
                html.Append("<tr><td colspan='12'>"+i+") Clause " + item.WSClause + ": " + item.Heading + " </td></tr>");

                html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; width:150px;'>SIZE</th>");
                html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
                html.Append("<th>40'</th></tr></thead>");
                html.Append("<tbody>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
                html.Append("</tbody>");
                html.Append("</table></td></tr>");                
                i++;
            });
            html.Append("</tbody>");
            html.Append("</table></td></tr>");
            /*html.Append("<tr><td colspan='12'>2) CLAUSE NO(1a) : LCL MOVEMENT REPO</td></tr>");
            html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
            html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
            html.Append("<th>40'</th></tr></thead>");
            html.Append("<tbody>");

            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");

            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td colspan='12'>3) CLAUSE NO(2) : TRANSPORTAION FROM VCTPL TO CFS</td></tr>");
            html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
            html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
            html.Append("<th>40'</th></tr></thead>");
            html.Append("<tbody>");

            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");

            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td colspan='12'>4) CLAUSE NO(3) : CUSTOM EXAMINATION</td></tr>");
            html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
            html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
            html.Append("<th>40'</th></tr></thead>");
            html.Append("<tbody>");

            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");

            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td colspan='12'>5) CLAUSE NO(3A) : DESTUFFING</td></tr>");
            html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
            html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
            html.Append("<th>40'</th></tr></thead>");
            html.Append("<tbody>");

            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");

            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td colspan='12'>6) CLAUSE NO(3B) : DESTUFFING DELIVERY + EMPTY REPO</td></tr>");
            html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
            html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
            html.Append("<th>40'</th></tr></thead>");
            html.Append("<tbody>");

            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");

            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td colspan='12'>7) CLAUSE NO(4) :  FCL DESTUFFING</td></tr>");
            html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
            html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
            html.Append("<th>40'</th></tr></thead>");
            html.Append("<tbody>");

            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
            html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 +" </ td ></ tr > ");


            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
            html.Append("<td style='border-top: 1px solid #000;'></td></tr>");

            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td colspan='12'>8) CLAUSE NO(4A) :  FCL DESTUFFING WITH REPO</td></tr>");
            html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
            html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
            html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
            html.Append("<th>40'</th></tr></thead>");
            html.Append("<tbody>");

            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
            html.Append("<td style='border-top: 1px solid #000;'> </td></tr>");
            html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
            html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'> </td>");
            html.Append("<td style='border-top: 1px solid #000;'> </td></tr>");

            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("</tbody></table>");
            html.Append("</td></tr>");
        });*/
            int j = 9;
            //EXPORT
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            html.Append("<tr><th colspan='12'>EXPORT OPERATIONS</th></tr>");
            objExport.ForEach(item =>
            {                
                html.Append("<tr><td colspan='12'>"+j+") Clause " + item.WSClause + ": " + item.Heading + " </td></tr>");
                html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; width:150px;'>SIZE</th>");
                html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
                html.Append("<th>40'</th></tr></thead>");
                html.Append("<tbody>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
                html.Append("</tbody>");
                html.Append("</table></td></tr>");                
                j++;
            });
            html.Append("</tbody>");
            html.Append("</table></td></tr>");
            /* html.Append("<tr><td colspan='12'>10) CLAUSE NO(6) : CFS STUFFING & LIFT-ON PARTY'S VEHICLE TO PORT</td></tr>");
             html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
             html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
             html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
             html.Append("<th>40'</th></tr></thead>");
             html.Append("<tbody>");
             if (item.WSClause == "6")
             {
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
             }
             html.Append("</tbody>");
             html.Append("</table></td></tr>");

             html.Append("<tr><td colspan='12'>11) CLAUSE NO(6A) : SHUT OUT CONTAINER MOVEMENT TO CFS</td></tr>");
             html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
             html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
             html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
             html.Append("<th>40'</th></tr></thead>");
             html.Append("<tbody>");
             if (item.WSClause == "6-a")
             {
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
             }
             html.Append("</tbody>");
             html.Append("</table></td></tr>");

             html.Append("<tr><td colspan='12'>12) CLAUSE NO(6B) : SHUT OUT CONTAINER MOVEMENT TO VCTPL</td></tr>");
             html.Append("<tr><td colspan='1' width='50px'></td>");
             html.Append("<td colspan='6' width='50%'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
             html.Append("<thead>");
             html.Append("<tr><th colspan='3' style='border-bottom: 1px solid #000;'>UPTO 25%</th></tr>");
             html.Append("<tr><th style='border-right: 1px solid #000;'>SIZE</th>");
             html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
             html.Append("<th>40'</th></tr>");
             html.Append("</thead>");
             html.Append("<tbody>");
             if (item.WSClause == "6-b")
             {
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
             }
             html.Append("</tbody>");
             html.Append("</table></td>");

             html.Append("<td colspan='5' width='50%'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
             html.Append("<thead>");
             html.Append("<tr><th colspan='3' style='border-bottom: 1px solid #000;'>ABOVE 25%</th></tr>");
             html.Append("<tr><th style='border-right: 1px solid #000;'>SIZE</th>");
             html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
             html.Append("<th>40'</th></tr>");
             html.Append("</thead>");
             html.Append("<tbody>");

                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>Dynamic</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>Dynamic</td></tr>");
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>Dynamic</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>Dynamic</td></tr>");

             html.Append("</tbody>");
             html.Append("</table></td>");
             html.Append("</tr>");

             html.Append("<tr><td colspan='12'>13) CLAUSE NO(6C) : RE-WORKING OF EXPORT CONTAINER</td></tr>");
             html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
             html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
             html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
             html.Append("<th>40'</th></tr></thead>");
             html.Append("<tbody>");
         if (item.WSClause == "6-c")
         {
             html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
             html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
             html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
             html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
             html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
             html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
         }
             html.Append("</tbody>");
             html.Append("</table></td></tr>");

             html.Append("<tr><td colspan='12'>14) CLAUSE NO(7) : EXPORT HUB CONTAINER TRANSPORTATION + DESTUFFING</td></tr>");
             html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
             html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
             html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
             html.Append("<th>40'</th></tr></thead>");
             html.Append("<tbody>");
             if (item.WSClause == "7")
             {
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
             }
             html.Append("</tbody>");
             html.Append("</table></td></tr>");

             html.Append("<tr><td colspan='12'>15) CLAUSE NO(7A) : EXPORT HUB CONTAINER TRANSPORTATION + DESTUFFING + EMPTY REPO</td></tr>");
             html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
             html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
             html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
             html.Append("<th>40'</th></tr></thead>");
             html.Append("<tbody>");
             if (item.WSClause == "7-a")
             {
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                 html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                 html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                 html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
             }
             html.Append("</tbody>");
             html.Append("</table></td></tr>");

             html.Append("</tbody></table>");
             html.Append("</td></tr>");
         });*/

            //BCY OPERATIONS
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            html.Append("<tr><th colspan='12'>BCY OPERATIONS</th></tr>");
            int r = 16;
            objBCY.ForEach(item =>
            {                
                html.Append("<tr><td colspan='12'>"+r+ ") CLAUSE " + item.WSClause + ": " + item.Heading + "</td></tr>");
                html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; width:150px;'>SIZE</th>");
                html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
                html.Append("<th>40'</th></tr></thead>");
                html.Append("<tbody>");
                if (item.WSClause == "8")
                {
                    html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                    html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                    html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                    html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                    html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                    html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
                }
                html.Append("</tbody>");
                html.Append("</table></td></tr>");                
            });
            html.Append("</tbody></table>");
            html.Append("</td></tr>");

            int k = 17;
            //GENERAL
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            html.Append("<tr><th colspan='12'>GENERAL OPERATIONS</th></tr>");
            objGeneral.ForEach(item =>
            {                
              //  html.Append("<tr><td colspan='12'></td></tr>");

                if (item.WSClause != "13" && item.WSClause != "14" && item.WSClause != "15" && item.WSClause != "16")
                {
                    html.Append("<tr><td colspan='12'>"+k+")Clause " + item.WSClause + ": " + item.Heading + "</td></tr>");
                    html.Append("<tr><td colspan='1' width='50px'></td><td colspan = '11'>< table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
                    html.Append("<thead><tr><th style='border-right: 1px solid #000; width:150px;'>SIZE</th>");
                    html.Append("<th style='border-right: 1px solid #000; width:150px;'>20'</th>");
                    html.Append("<th style='width:150px;'>40'</th></tr></thead>");
                    html.Append("<tbody>");

                    html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
                    html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
                    html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
                    html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
                    html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
                    html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
                }
                else if (item.WSClause == "13" || item.WSClause == "14" || item.WSClause == "15")
                {
                    html.Append("<tr><td colspan='12'>"+k+") Clause " + item.WSClause + ": " + item.Heading + " </td></tr>");
                    html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
                    html.Append("<thead><tr><th></th>");
                    html.Append("<th style='border:1px solid #000; border-right:0;'>NO. OF PACKAGES</th>");
                    html.Append("<th style='border:1px solid #000; border-right:0;'>GROSS WEIGHT</th>");
                    html.Append("<th style='border:1px solid #000;'>CHA</th></tr></thead>");
                    html.Append("<tbody>");

                    html.Append("<tr><td></td>");
                    html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.NoOfPackage + "</td>");
                    html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.Wt + "</td>");
                    html.Append("<td style='border:1px solid #000; border-top:0;'>" + item.CH + "</td></tr>");
                    html.Append("<tr><th>TOTAL</th>");
                    html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.NoOfPackage + "</td>");
                    html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.Wt + "</td>");
                    html.Append("<td style='border:1px solid #000; border-top:0;'>" + item.CH + "</td></tr>");
                }
                else if (item.WSClause == "16")
                {
                    // html.Append("<tr></tr>");

                    html.Append("<tr><td colspan='12'>26) CLAUSE NO(16) : SUPPLY OF CASUAL LABOUR</td></tr>");

                    html.Append("<tr><td colspan='1' width='5%'></td> <td colspan='11'>NO. OF CASUAL LABOUR SUPPLIED :" + item.NoOfPackage + "	</td></tr>");
                    html.Append("<tr><td><br/><br/><br/></td></tr>");

                    html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                    html.Append("<tr>");
                    html.Append("<th colspan='6' width='50%'><table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                    html.Append("<tr><th colspan='12'>SIGNATURE OF H&T CONTRACTOR</th></tr>");
                    html.Append("<tr><th colspan='12'>M/s. HIGHWAY ROADLINES  PVT LTD, <br/> H&T CONTRACTOR,<br/> CWC,CFS, VIZAG</th></tr>");
                    html.Append("</tbody></table></th>");
                    html.Append("<th colspan='6' width='50%' align='right'>MANAGER-CFS</th>");
                    html.Append("</tr>");
                    html.Append("</tbody></table></td></tr>");
                }
                html.Append("</tbody>");
                html.Append("</table></td></tr>");
                k++;                
            });
            html.Append("</tbody>");
            html.Append("</table></td></tr>");
            //  html.Append("</tbody>");
            //  html.Append("<tbody>");
            /*  if (item.WSClause == "13" && item.WSClause == "14" && item.WSClause == "15")
              {
                  html.Append("<tr><td></td>");
                  html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.NoOfPackage + "</td>");
                  html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.Wt + "</td>");
                  html.Append("<td style='border:1px solid #000; border-top:0;'>" + item.CH + "</td></tr>");
                  html.Append("<tr><th>TOTAL</th>");
                  html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'></td>");
                  html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'></td>");
                  html.Append("<td style='border:1px solid #000; border-top:0;'></td></tr>");
              }
            //  html.Append("</tbody>");
            //  html.Append("<tbody>");
              if (item.WSClause == "16")
              {
                  html.Append("</table></td></tr>");

                  html.Append("<tr><td colspan='12'>26) CLAUSE NO(16) : SUPPLY OF CASUAL LABOUR</td></tr>");

                  html.Append("<tr><td colspan='1' width='5%'></td> <td colspan='11'>NO. OF CASUAL LABOUR SUPPLIED :" + item.NoOfPackage + "	</td></tr>");
              }*/



            /* html.Append("<tr><td><br/><br/><br/></td></tr>");

              html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
              html.Append("<tr>");
              html.Append("<th colspan='6' width='50%'><table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
              html.Append("<tr><th colspan='12'>SIGNATURE OF H&T CONTRACTOR</th></tr>");
              html.Append("<tr><th colspan='12'>M/s. HIGHWAY ROADLINES  PVT LTD, <br/> H&T CONTRACTOR,<br/> CWC,CFS, VIZAG</th></tr>");
              html.Append("</tbody></table></th>");
              html.Append("<th colspan='6' width='50%' align='right'>MANAGER-CFS</th>");
              html.Append("</tr>");
              html.Append("</tbody></table></td></tr>");

           html.Append("</tbody></table>");*/

            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

            lstSB.Add(html.ToString());

            var FileName = "WorkSlipReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        /*  objGeneral.ForEach(item =>
           {
               html.Append("<tr><td colspan='12'>");
               html.Append("<table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
               html.Append("<tr><th colspan='12'>GENERAL OPERATIONS</th></tr>");
               if (item.WSClause == "13" || item.WSClause == "14" || item.WSClause == "15")
               {
                   html.Append("<tr><td colspan='12'></td></tr>");
               html.Append("<tr><td colspan='1' width='50px'></td>" + item.WSClause + ": " + item.Heading + "  <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
               html.Append("<thead><tr><th></th>");
               html.Append("<th style='border:1px solid #000; border-right:0;'>NO. OF PACKAGES</th>");
               html.Append("<th style='border:1px solid #000; border-right:0;'>GROSS WEIGHT</th>");
               html.Append("<th style='border:1px solid #000;'>CHA</th></tr></thead>");
               html.Append("<tbody>");

                   html.Append("<tr><td></td>");
                   html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.NoOfPackage + "</td>");
                   html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.Wt + "</td>");
                   html.Append("<td style='border:1px solid #000; border-top:0;'>" + item.CH + "</td></tr>");
                   html.Append("<tr><th>TOTAL</th>");
                   html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'></td>");
                   html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'></td>");
                   html.Append("<td style='border:1px solid #000; border-top:0;'></td></tr>");
               }
               html.Append("</tbody>");
               html.Append("</table></td></tr>");
               html.Append("</tbody>");
               html.Append("</table></td></tr>");
           });
           objGeneral.ForEach(item =>
           {
               html.Append("<tr><td colspan='12'>");
               html.Append("<table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
               html.Append("<tr><th colspan='12'>GENERAL OPERATIONS</th></tr>");

               html.Append("<tr><td colspan='12'></td></tr>");
               html.Append("<tr><td colspan='1' width='50px'></td>" + item.WSClause + ": " + item.Heading + "  <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
               html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
               html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
               html.Append("<th>40'</th></tr></thead>");
               html.Append("<tbody>");
               if (item.WSClause == "16")
               {
                   html.Append("<tr><td></td></tr>");

                   html.Append("<tr><td colspan='12'>26) CLAUSE NO(16) : SUPPLY OF CASUAL LABOUR</td></tr>");

                   html.Append("<tr><td colspan='1' width='5%'></td> <td colspan='11'>NO. OF CASUAL LABOUR SUPPLIED :" + item.NoOfPackage + "	</td></tr>");
               }
               html.Append("</tbody>");
               html.Append("</table></td></tr>");
               html.Append("</tbody>");
              html.Append("</table></td></tr>");
           });*/
        /*  html.Append("<tr><td colspan='12'>18) CLAUSE NO(10(i)) : INTERNAL SHIFTING OF LOADED CONT.</td></tr>");
          html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
          html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
          html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
          html.Append("<th>40'</th></tr></thead>");
          html.Append("<tbody>");
          if (item.WSClause == "10-i")
          {
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
          }
          html.Append("</tbody>");
          html.Append("</table></td></tr>");

          html.Append("<tr><td colspan='12'>19) CLAUSE NO(10(ii)) : INTERNAL SHIFTING OF EMPTY CONT.</td></tr>");
          html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
          html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
          html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
          html.Append("<th>40'</th></tr></thead>");
          html.Append("<tbody>");
          if (item.WSClause == "10-ii")
          {
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
          }
          html.Append("</tbody>");
          html.Append("</table></td></tr>");

          html.Append("<tr><td colspan='12'>20) CLAUSE NO(11(i)) : LIFT ON/OFF OF EMPTY CONT.</td></tr>");
          html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
          html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
          html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
          html.Append("<th>40'</th></tr></thead>");
          html.Append("<tbody>");
          if (item.WSClause == "11-i")
          {
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
          }
          html.Append("</tbody>");
          html.Append("</table></td></tr>");

          html.Append("<tr><td colspan='12'>21) CLAUSE NO(11(ii)) : LIFT ON/OFF OF LOADED CONT.</td></tr>");
          html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
          html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
          html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
          html.Append("<th>40'</th></tr></thead>");
          html.Append("<tbody>");
          if (item.WSClause == "11-ii")
          {
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
          }
          html.Append("</tbody>");
          html.Append("</table></td></tr>");

          html.Append("<tr><td colspan='12'>22) CLAUSE NO(12) : INTERNAL SHIFTING OF EMPTY CONT. FOR CLEANING</td></tr>");
          html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
          html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
          html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
          html.Append("<th>40'</th></tr></thead>");
          html.Append("<tbody>");
          if (item.WSClause == "12")
          {
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
          }
          html.Append("</tbody>");
          html.Append("</table></td></tr>");

          html.Append("<tr><td colspan='12'>23) CLAUSE NO(13) : INTERNAL SHIFTING OF CARGO</td></tr>");
          html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
          html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
          html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
          html.Append("<th>40'</th></tr></thead>");
          html.Append("<tbody>");
      /*    if (item.WSClause == "13")
          {
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
          }*/
        /*  html.Append("</tbody>");
          html.Append("</table></td></tr>");

         html.Append("<tr><td colspan='12'>20) CLAUSE NO(11(i)) : LIFT ON/OFF OF EMPTY CONT.</td></tr>");
          html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
          html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
          html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
          html.Append("<th>40'</th></tr></thead>");
          html.Append("<tbody>");
         /* if (item.WSClause == "14")
          {
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
              html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
              html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
              html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
          }*/
        /* html.Append("</tbody>");
         html.Append("</table></td></tr>");

         html.Append("<tr><td colspan='12'>21) CLAUSE NO(11(ii)) : LIFT ON/OFF OF LOADED CONT.</td></tr>");
         html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
         html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
         html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
         html.Append("<th>40'</th></tr></thead>");
         html.Append("<tbody>");
       /*  if (item.WSClause == "15")
         {
             html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
             html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CFSCodeCont20 + "</td>");
             html.Append("<td style='border-top: 1px solid #000;'>" + item.CFSCodeCont40 + "</td></tr>");
             html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
             html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Count20 + "</td>");
             html.Append("<td style='border-top: 1px solid #000;'>" + item.Count40 + "</td></tr>");
         }
         */
        /* html.Append("</tbody>");
         html.Append("</table></td></tr>");

         html.Append("<tr><td colspan='12'>22) CLAUSE NO(12) : INTERNAL SHIFTING OF EMPTY CONT. FOR CLEANING</td></tr>");
         html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='border:1px solid #000; text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
         html.Append("<thead><tr><th style='border-right: 1px solid #000;'>SIZE</th>");
         html.Append("<th style='border-right: 1px solid #000;'>20'</th>");
         html.Append("<th>40'</th></tr></thead>");
         html.Append("<tbody>");
         html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINERS NO.</th>");
         html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>Dynamic</td>");
         html.Append("<td style='border-top: 1px solid #000;'>Dynamic</td></tr>");
         html.Append("<tr><th style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL NO OF CONTAINERS</th>");
         html.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>Dynamic</td>");
         html.Append("<td style='border-top: 1px solid #000;'>Dynamic</td></tr>");
         html.Append("</tbody>");
         html.Append("</table></td></tr>");

         html.Append("<tr><td colspan='12'>23) CLAUSE NO(13) : INTERNAL SHIFTING OF CARGO </td></tr>");
         html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
         html.Append("<thead><tr><th></th>");
         html.Append("<th style='border:1px solid #000; border-right:0;'>NO. OF PACKAGES</th>");
         html.Append("<th style='border:1px solid #000; border-right:0;'>GROSS WEIGHT</th>");
         html.Append("<th style='border:1px solid #000;'>CHA</th></tr></thead>");
        html.Append("<tbody>");
       /*  if (item.WSClause == "13")
         {
             html.Append("<tr><td></td>");

             html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>"+ item.NoOfPackage + "</td>");
             html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>"+item.Wt + "</td>");
             html.Append("<td style='border:1px solid #000; border-top:0;'>"+item.CH+"</td></tr>");
             html.Append("<tr><th>TOTAL</th>");
             html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>Dynamic</td>");
             html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>Dynamic</td>");
             html.Append("<td style='border:1px solid #000; border-top:0;'>Dynamic</td></tr>");
         }*/
        /*   html.Append("</tbody>");
           html.Append("</table></td></tr>");

           html.Append("<tr><td colspan='12'>24) CLAUSE NO(14) : BACK TO TOWN CARGO</td></tr>");
           html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
           html.Append("<thead><tr><th></th>");
           html.Append("<th style='border:1px solid #000; border-right:0;'>NO. OF PACKAGES</th>");
           html.Append("<th style='border:1px solid #000; border-right:0;'>GROSS WEIGHT</th>");
           html.Append("<th style='border:1px solid #000;'>CHA</th></tr></thead>");
           html.Append("<tbody>");
       //    if (item.WSClause == "14")
        //   {
               html.Append("<tr><td></td>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.NoOfPackage + "</td>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.Wt + "</td>");
               html.Append("<td style='border:1px solid #000; border-top:0;'>" + item.CH + "</td></tr>");
               html.Append("<tr><th>TOTAL</th>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>Dynamic</td>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>Dynamic</td>");
               html.Append("<td style='border:1px solid #000; border-top:0;'>Dynamic</td></tr>");
       //    }
           html.Append("</tbody>");
           html.Append("</table></td></tr>");

           html.Append("<tr><td colspan='12'>25) CLAUSE NO(15) : LCL CARGO DELIVERY / CARTING</td></tr>");
           html.Append("<tr><td colspan='1' width='50px'></td> <td colspan='11'><table cellspacing='0' cellpadding='5' style='text-align:center; font-size:12px; width:60%; font-family: Arial, Helvetica, sans-serif; margin: 0;'>");
           html.Append("<thead><tr><th></th>");
           html.Append("<th style='border:1px solid #000; border-right:0;'>NO. OF PACKAGES</th>");
           html.Append("<th style='border:1px solid #000; border-right:0;'>GROSS WEIGHT</th>");
           html.Append("<th style='border:1px solid #000;'>CHA</th></tr></thead>");
           html.Append("<tbody>");
          /// if (item.WSClause == "15")
          // {
               html.Append("<tr><td></td>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.NoOfPackage + "</td>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>" + item.Wt + "</td>");
               html.Append("<td style='border:1px solid #000; border-top:0;'>" + item.CH + "</td></tr>");
               html.Append("<tr><th>TOTAL</th>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>Dynamic</td>");
               html.Append("<td style='border:1px solid #000; border-top:0; border-right:0;'>Dynamic</td>");
               html.Append("<td style='border:1px solid #000; border-top:0;'>Dynamic</td></tr>");
         //  }
           html.Append("</tbody>");
         //  html.Append("<tbody>");
           //if (item.WSClause == "16")
          // {
               html.Append("</table></td></tr>");

           html.Append("<tr><td colspan='12'>26) CLAUSE NO(16) : SUPPLY OF CASUAL LABOUR</td></tr>");

               html.Append("<tr><td colspan='1' width='5%'></td> <td colspan='11'>NO. OF CASUAL LABOUR SUPPLIED :" + item.NoOfPackage + "	</td></tr>");
         //  }
           html.Append("</tbody></table>");
           html.Append("</td></tr>");
       });*/
     /*   html.Append("<tr><td><br/><br/><br/></td></tr>");

            html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");                      
            html.Append("<tr>");
            html.Append("<th colspan='6' width='50%'><table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            html.Append("<tr><th colspan='12'>SIGNATURE OF H&T CONTRACTOR</th></tr>");
            html.Append("<tr><th colspan='12'>M/s. HIGHWAY ROADLINES  PVT LTD, <br/> H&T CONTRACTOR,<br/> CWC,CFS, VIZAG</th></tr>");
            html.Append("</tbody></table></th>");
            html.Append("<th colspan='6' width='50%' align='right'>MANAGER-CFS</th>");
            html.Append("</tr>");            
            html.Append("</tbody></table></td></tr>");

            html.Append("</tbody></table>");

            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

            lstSB.Add(html.ToString());

            var FileName = "WorkSlipReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/

          /*  using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }*/
        #endregion

        #region Job Order by Road Print
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult JobOrderPrint(int JobOrderId)
        {
            Wfld_ImportRepository objIR = new Wfld_ImportRepository();
            objIR.JobOrderPrintDetails(JobOrderId);
            string Path = "";
            int Status = 0;
            if (objIR.DBResponse.Data != null)
            {
                Status = 1;
                Path = JobOrderBind((List<dynamic>)objIR.DBResponse.Data, JobOrderId);
            }
            return Json(new { Message = Path, Status = Status });
        }
        [NonAction]
        public string JobOrderBind(List<dynamic> objList, int JobOrderId)
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
            //sb.Append("<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 12px;'>CFS Whitefield</label><br/><label style='font-size: 14px; font-weight:bold;'>JOB ORDER</label></td></tr>");

            sb.Append("<tr><td colspan='12'>");
            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            sb.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            sb.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>CFS Whitefield</span><br/><label style='font-size: 7pt; font-weight:bold;'>JOB ORDER</label></td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");

            sb.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'><tbody>");
            sb.Append("<tr><td style='width:50%;'><b>Job Order No :</b>" + objList[0].FormOneNo + "</td>");
            sb.Append("<td style='width:50%; text-align:right;'><b>Job Order Date :</b>" + objList[0].FormOneDate + "</td></tr>");
            sb.Append("</tbody></table></td></tr>");
            sb.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Transport by :</b> " + objList[0].TransportBy + "</td></tr>");
            sb.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Container/CBT :</b>" + (objList[0].CONTCBT == "CONT" ? "CONTAINER" : "CBT") + "</td></tr>");

            sb.Append("<tr><td colspan='12'>");
            sb.Append("<table cellpadding='5' style='border:1px solid #000;width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            sb.Append("<thead>");
            sb.Append("<tr>");
            sb.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;width:12%;'>Container/CBT No.</th> ");
            sb.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;width:7%;'>Size</th> ");
            sb.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;width:10%;'>Container Type</th>");
            sb.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;width:10%;'>Shipping Line</th> ");
            sb.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;width:10%;'>Foreign Liner</th> ");
            sb.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;width:10%;'>Vessel Name</th> ");
            sb.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>Vessel No</th> ");
            sb.Append("</tr>");
            sb.Append("</thead>");
            sb.Append("<tbody>");
            objList.ForEach(i =>
            {
                sb.Append("<tr>");
                sb.Append("<td style='text-align:center;border-right:1px solid #000;'>" + i.ContainerNo + "</td>");
                sb.Append("<td style='text-align:center;border-right:1px solid #000;'>" + i.ContainerSize + "</td> ");
                sb.Append("<td style='text-align:center;border-right:1px solid #000;'>" + i.LCLFCL + "</td> ");
                sb.Append("<td style='text-align:center;border-right:1px solid #000;'>" + i.ShippingLine + "</td> ");
                sb.Append("<td style='text-align:center;border-right:1px solid #000;'>" + i.ForeignLiner + "</td> ");
                sb.Append("<td style='text-align:center;border-right:1px solid #000;'>" + i.VesselName + "</td> ");
                sb.Append("<td style='text-align:center;'>" + i.VesselNo + "</td> ");
                sb.Append("</tr>");
            });
            sb.Append("</tbody>");
            sb.Append("</table>");
            sb.Append("</td></tr>");
            //  sb.Append("</tr>");
            sb.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Remarks :</b>" + objList[0].Remarks + " </td></tr>");

            sb.Append("</tbody></table>");


            sb = sb.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID;
            string FileName = "JobOrderByRoad" + JobOrderId + ".pdf";
            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }
            using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                ObjPdf.HeadOffice = this.HeadOffice;
                ObjPdf.HOAddress = this.HOAddress;
                ObjPdf.ZonalOffice = this.ZonalOffice;
                ObjPdf.ZOAddress = this.ZOAddress;
                ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, sb.ToString());

            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region Account Report Export Cargo In General Carting
        [HttpGet]
        public ActionResult ExportCargoReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetCargoReport(WFLD_CarGenCar ObjPC)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.GetCargoExport(ObjPC);
                string Path = "";
                List<WFLD_ExpCarGen> lstData = new List<WFLD_ExpCarGen>();
                lstData = (List<WFLD_ExpCarGen>)ObjRR.DBResponse.Data;
                Path = GeneratePDFExpCarReport(lstData, ObjPC.AsOnDate);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFExpCarReport(List<WFLD_ExpCarGen> lstData, string Date)
        {
            try
            {
                var FileName = "ExportCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>" + lstData[0].CompanyAddress + "</span><br/><span style='font-size:12px;'>" + lstData[0].Email + "</span><br/><span style='font-size:12px;'><b>As On Date - </b> " + Date + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Account Report for Export Cargo In General Carting</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sb No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sb Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Shed</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>No Of Days</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>No Of Week</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>Gen Amt</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SbNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SbDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Shed + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.NoOfDays + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.NoOfWeek + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.GeneralAmount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>" + lstData.AsEnumerable().Sum(item => item.Area) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfDays) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:6%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfWeek) + "</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + lstData.AsEnumerable().Sum(item => item.GeneralAmount) + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region PV Report
        [HttpGet]
        public ActionResult PVReport()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetGodownRightsWise(((Login)Session["LoginUser"]).Uid);
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public JsonResult GetPVReport(WFLD_PV ObjPV)
        //{
        //    if (ModelState.IsValid)
        //    {
        //        VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
        //        if (ObjPV.Module == "Import")
        //            ObjRR.GetPVReportImport(ObjPV);
        //        else if (ObjPV.Module == "Export")
        //            ObjRR.GetPVReportExport(ObjPV);
        //        else
        //            ObjRR.GetPVReportBond(ObjPV);
        //        string Path = "";
        //        if (ObjRR.DBResponse.Data != null && ObjPV.Module == "Import")
        //        {
        //            List<WFLD_ImpPVReport> lstData = new List<WFLD_ImpPVReport>();
        //            lstData = (List<WFLD_ImpPVReport>)ObjRR.DBResponse.Data;
        //            Path = GeneratePDFImpPVReport(lstData, ObjPV.AsOnDate, ObjPV.GodownName);
        //        }
        //        else if (ObjRR.DBResponse.Data != null && ObjPV.Module == "Export")
        //        {
        //            List<WFLD_ExpPVReport> lstData = new List<WFLD_ExpPVReport>();
        //            lstData = (List<WFLD_ExpPVReport>)ObjRR.DBResponse.Data;
        //            Path = GeneratePDFPExpPVReport(lstData, ObjPV.AsOnDate, ObjPV.GodownName);
        //        }
        //        else
        //        {
        //            List<WFLD_BondPVReport> lstData = new List<WFLD_BondPVReport>();
        //            lstData = (List<WFLD_BondPVReport>)ObjRR.DBResponse.Data;
        //            Path = GeneratePDFBondPVReport(lstData, ObjPV.AsOnDate, ObjPV.GodownName);
        //        }
        //        return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        //    }
        //    else
        //    {
        //        var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
        //        return Json(new { Status = 0, Message = ErrorMessage });
        //    }
        //}
        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetPVReport(FormCollection fc)
        {
            try
            {
                //var date1 = Convert.ToDateTime(ObjPV["AsOnDate"].ToString());
                //var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //if (ObjPV.Module == "Import")
                //    ObjRR.GetPVReportImport(ObjPV);
                //else if (ObjPV.Module == "Export")
                //    ObjRR.GetPVReportExport(ObjPV);
                //else
                //    ObjRR.GetPVReportBond(ObjPV);
                // var Type = fc["Module"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                var ObjPV = new VIZ_PV();

             //   var ObjRR = new VIZ_ReportRepository();

                var AsOnDate = fc["AsOnDate"].ToString();
                var Module = fc["Module"].ToString();
                var GodownId = Convert.ToInt32(fc["GodownId"]);
                var GodownName = fc["GodownName"].ToString();
                if (Module == "Import")
                    ObjRR.GetPVReportImport(AsOnDate, Module, GodownId, GodownName);
                else if (Module == "Bond")
                    ObjRR.GetPVReportBond(AsOnDate, Module, GodownId, GodownName);
                else
                    ObjRR.GetPVReportExport(AsOnDate, Module, GodownId, GodownName);

                // if (Type == "ALL") { Type = "ALL"; }
                // if (Type == "Imprest") { Type = "IMPREST"; }
                //  if (Type == "Temporary Advance") { Type = "Temporary Advance"; }

                excelName = "PVReport" + "_" + Module + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "PVReport" + "_" + fc["Module"].ToString() + ".xlsx");
                }
            }
            // return null;
        }
        [NonAction]
        public string GeneratePDFImpPVReport(List<VIZ_ImpPVReport> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "PVReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><span style='font-size:12px;'><b>As On Date - </b> " + Date + "</span><br/><span style='font-size:12px;'><b>Shed Cd - </b>" + GodownName + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Physical Verification Report for Import Cargo</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>S No</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>OBL No</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Dstf Date</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>ICD Code</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Item No</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>No Pkg</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Rcvd Pkg</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Gr W</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Area</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>Slot No</th><th style='border-bottom:1px solid #000;'>Remarks</th></tr></thead><tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BOLNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.DestuffingEntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CommodityAlias + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.NoOfUnits + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.NoOfUnitsRec + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Weight.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Area.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.LocationName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-bottom:1px solid #000;text-align:left;'>Total :</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnits) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnitsRec) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight).ToString("0.00") + "</th>");
                Pages.Append("<th colspan='3' style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area).ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        //[NonAction]
        //public string GeneratePDFPExpPVReport(List<WFLD_ExpPVReport> lstData, string Date, string GodownName)
        //{
        //    try
        //    {
        //        var FileName = "PVReport.pdf";
        //        StringBuilder Pages = new StringBuilder();
        //        string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
        //        Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
        //        Pages.Append("<tr><td colspan='12'>");
        //        Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
        //        Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
        //        Pages.Append("<td width='180%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>CFS Whitefield</span><br/><span style='font-size:14px;'><b>Stock Register of Shed No...</b> " + GodownName + "</span><br/><span style='font-size:14px;'><b>As on Date...</b> " + Date + "</span><br/><label style='font-size: 16px; font-weight:bold;'>Physical Verification Report for Export Cargo</label></td></tr>");
        //        Pages.Append("</tbody></table>");
        //        Pages.Append("</td></tr>");

        //        Pages.Append("<tr><td colspan='12'>");
        //        Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
        //        Pages.Append("<thead><tr><td colspan='12'><table style='border-top:1px solid #000;border-left:1px solid #000;border-right:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:6%;'>Sla Cd</th> ");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:2%;'>Sr.</th> ");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:8%;'>Sb No</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:8%;'>Sb Date</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:10%;'>Entry No</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:8%;'>Carting Date</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:7%;'>No Pkg</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:9%;'>Gr Wt</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:13%;'>Fob</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:8%;'>Slot No</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:5%;'>Area</th>");
        //        Pages.Append("<th style='text-align:left;padding:10px;width:5%;'>Pkg Type(UOM)</th>");
        //        Pages.Append("</tr></tbody></table></td></tr></thead>");

        //        Pages.Append("<tbody>");
        //        //Loop
        //        lstData.Select(x => new { ShippingLineId = x.ShippingLineId, EximTraderName = x.EximTraderName, EximTraderAlias = x.EximTraderAlias }).Distinct().ToList().ForEach(x =>
        //               {
        //                   Pages.Append("<tr><td colspan='12' style='padding:0;'>");
        //                   Pages.Append("<table style='margin:0 0 15px;border:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
        //                   Pages.Append("<tr><td colspan='12'>");
        //                   Pages.Append("<table style='margin:0;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
        //                   Pages.Append("<th style='text-align:left;padding:10px;width:5.5%;'>" + x.EximTraderAlias + "</th> ");
        //                   Pages.Append("<th style='text-align:left;padding:10px;width:90%;'>" + x.EximTraderName + "</th> ");
        //                   Pages.Append("</tr></tbody></table>");
        //                   Pages.Append("</td></tr>");
        //                   //Loop
        //                   int i = 1;
        //                   lstData.Where(y => y.ShippingLineId == x.ShippingLineId).ToList().ForEach(y =>
        //                          {
        //                              Pages.Append("<tr><td colspan='12'>");
        //                              Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:6%;'></td> ");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:2%;'>" + i + "</td> ");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:8%;'>" + y.ShippingBillNo + "</td>");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:8%;'>" + y.ShippingBillDate + "</td> ");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:10%;'>" + y.EntryNo + "</td> ");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:8%;'>" + y.RegisterDate + "</td>");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:7%;'>" + y.Units + "</td> ");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:9%;'>" + y.Weight.ToString("0.00") + "</td>");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:13%;'>" + y.Fob + "</td>");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:8%;'>" + y.LocationName + "</td>");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:5%;'>" + y.Area.ToString("0.00") + "</td>");
        //                              Pages.Append("<td style='text-align:left;padding:10px;width:5%;'>" + y.PkgType.ToString() + "</td>");
        //                              Pages.Append("</tr></tbody></table>");
        //                              Pages.Append("</td></tr>");
        //                              i++;
        //                          });
        //                   //loop end

        //                   Pages.Append("<tr><td colspan='12'>");
        //                   Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:6%;'></th> ");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:2%;'></th> ");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:8%;'>Total :</th>");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:8%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Count() + "</th> ");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:10%;'></th> ");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:8%;'></th>");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:7%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Units) + "</th> ");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:9%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Weight).ToString("0.00") + "</th>");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:13%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Fob) + "</th>");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:8%;'></th>");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:5%;'>" + lstData.Where(z => z.ShippingLineId == x.ShippingLineId).Sum(z => z.Area).ToString("0.00") + "</th>");
        //                   Pages.Append("<th style='text-align:left;border-top:1px solid #000;padding:10px;width:8%;'></th>");
        //                   Pages.Append("</tr></tbody></table>");
        //                   Pages.Append("</td></tr>");

        //                   Pages.Append("</tbody></table>");
        //                   Pages.Append("</td></tr>");
        //               });
        //        //loop  end

        //        Pages.Append("<tr><td colspan='12'>");
        //        Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:6%;'></th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:2%;'></th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'>Total :</th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'>" + lstData.Count() + "</th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:10%;'></th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'></th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:7%;'>" + lstData.Sum(x => x.Units) + "</th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:9%;'>" + lstData.Sum(x => x.Weight).ToString("0.00") + "</th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:13%;'>" + lstData.Sum(x => x.Fob) + "</th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'></th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:5%;'>" + lstData.Sum(x => x.Area).ToString("0.00") + "</th>");
        //        Pages.Append("<th style='text-align:left;border-top:1px solid #000;border-bottom:1px solid #333;padding:10px;width:8%;'></th>");
        //        Pages.Append("</tr></tbody></table>");
        //        Pages.Append("</td></tr>");

        //        Pages.Append("</tbody>");
        //        Pages.Append("</table>");
        //        Pages.Append("</td></tr>");
        //        Pages.Append("</tbody></table>");

        //        Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

        //        if (!Directory.Exists(LocalDirectory))
        //        {
        //            Directory.CreateDirectory(LocalDirectory);
        //        }
        //        if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
        //        {
        //            System.IO.File.Delete(LocalDirectory + "/" + FileName);
        //        }
        //        //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
        //        //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
        //        using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
        //        {
        //            ObjPdf.HeadOffice = this.HeadOffice;
        //            ObjPdf.HOAddress = this.HOAddress;
        //            ObjPdf.ZonalOffice = this.ZonalOffice;
        //            ObjPdf.ZOAddress = this.ZOAddress;
        //            ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
        //        }
        //        return "/Docs/" + Session.SessionID + "/Report/" + FileName;
        //    }
        //    catch
        //    {
        //        return "";
        //    }
        //}

        public string GeneratePDFBondPVReport(List<VIZ_BondPVReport> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "PVReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                decimal Value = 0, Duty = 0, Total = 0;


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 12px;'>(A Govt. of India Undertaking) </label><br />");
                // Pages.Append("<span style='font-size: 12px; padding-bottom: 10px;'>"   "</span><br/><label style='font-size: 12px;'></label><br/><label style='font-size: 12px;'>PV STATEMENT OF LIVE BONDS IN GODOWN NO :</label>");
                Pages.Append("<br /><label style='font-size: 14px; font-weight:bold;'>GODOWN NO : " + GodownName + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'><thead>");
                Pages.Append("<tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>SL. NO</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>BOND NO</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>BOND DATE</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>NAME OF THE IMPORTER</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>DESCRIPTION OF GOODS</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>NO OF PKGS</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>WT.IN. KGS</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>ACCESIBLE VALUE</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>DUTY</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>TOTAL</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>AREA IN SQ. MT</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>CHA</th><th style='border-bottom:1px solid #000;'>Remarks</th></tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");

                lstData.ForEach(item =>
                {

                    Value = item.Value;
                    Duty = item.Duty;
                    Total = Math.Round((Value + Duty), 2);


                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BondNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BondDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.ItemDesc + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Units + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Weight + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Value + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + (item.Value + item.Duty) + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CHA + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;'></td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-bottom:1px solid #000;text-align:left;'>Total :</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Units) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Value) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Duty) + "</th>");
                Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + (lstData.Sum(x => x.Value) + lstData.Sum(x => x.Duty)) + "</th>");
                Pages.Append("<th colspan='3' style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area) + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Daily Transaction Report
        public ActionResult DailyTransactionReport()
        {

            GodownRepository ObjGR = new GodownRepository();
            ObjGR.GetAllGodown();
            List<CwcExim.Models.Godown> LstGodown = new List<CwcExim.Models.Godown>();
            if (ObjGR.DBResponse.Data != null)
            {
                LstGodown = (List<CwcExim.Models.Godown>)ObjGR.DBResponse.Data;
            }
            return PartialView(LstGodown);
        }

        [HttpPost]
        public JsonResult GetDailyTransactioReport(string DTRDate, string Module, string GodownName, int GodownId = 0)
        {
            if (GodownId > 0)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                Login objLogin = (Login)Session["LoginUser"];
                string FilePath = "";
                string dt = Convert.ToDateTime(DTRDate).ToString("yyyy-MM-dd");

                if (Module == "Import")
                {
                    ObjRR.DTRForPrint(dt, GodownId);//, objLogin.Uid
                    if (ObjRR.DBResponse.Status == 1)
                    {
                        DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                        FilePath = GeneratingPDFforDTR(ds, Convert.ToDateTime(dt).ToString("dd-MMM-yy"));
                        return Json(new { Status = 1, Data = FilePath });
                    }
                    else
                        return Json(new { Status = -1, Data = "No Record Found." });
                }
                else
                {
                    ObjRR.DTRForExport(dt, GodownId);//, objLogin.Uid
                    if (ObjRR.DBResponse.Status == 1)
                    {
                        FilePath = GeneratingPDFForDTRExp((WFLDDTRExp)ObjRR.DBResponse.Data, Convert.ToDateTime(dt).ToString("dd-MMM-yy"), GodownName);
                        return Json(new { Status = 1, Data = FilePath });
                    }
                    else
                        return Json(new { Status = -1, Data = "No Record Found." });
                }
            }
            else
            {
                return Json(new { Status = -1, Data = "Select Godown" });
            }
        }

        [NonAction]
        public string GeneratingPDFforDTR(DataSet ds, string dt)
        {
            List<dynamic> lstCont = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstCargo = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            String Shed = "";
            lstCont.Select(x => new { Shed = x.Shed }).Distinct().ToList().ForEach(item =>
            {
                if (Shed == "")
                    Shed = item.Shed;
                else
                    Shed += "," + item.Shed;
            });

            var sumobl = lstCont.AsEnumerable()
                        .Sum(r => r.NoObl);

            var sumNoPkg = lstCont.AsEnumerable()
                        .Sum(r => r.NoPkg);

            var sumGrWt = lstCont.AsEnumerable()
                        .Sum(r => (decimal)r.GrWt);

            var sumNoBoe = lstCont.AsEnumerable()
                        .Sum(r => r.NoBoe);

            var sumArea = lstCont.AsEnumerable()
                        .Sum(r => (decimal)r.Area);


            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

            html.Append("<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 12px;'>CFS Whitefield</label><br/><label style='font-size: 12px;'>For Workslip</label><br/><label style='font-size: 14px; font-weight:bold;'>Daily Transaction Report</label></td></tr>");

            html.Append("<tr><td><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12' style='font-size:13px;'><b>SHED :<span>&nbsp;</span></b>" + Shed + "</td></tr>");
            html.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='0' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin:0;'><tbody>");
            html.Append("<tr><th style='font-size:13px; text-align:left;' width='30%'>Daily Transaction Report (Import Unit) as on date :</th><td style='font-size:12px;' width='57%'>" + dt + "</td>");
            html.Append("<th style='font-size:13px; text-align:right;'>Date : <span>&nbsp;</span></th><td style='font-size:12px;'>" + dt + "</td></tr></tbody></table></td></tr>");

            //html.Append("<tr><td colspan='12' style='font-size:13px;'><b>Daily Transaction Report (Import Unit) as on date :</b> " + dt + "</td></tr>");

            html.Append("<tr><td><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12' style='font-size:13px;'>DESTUFFING OF CONTAINERS :</td></tr>");

            html.Append("<tr><td colspan='12'><table style='border:1px solid #000;width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            html.Append("<thead><tr>");
            html.Append("<th style='text-align:left;padding:10px;border-bottom:1px solid #000;width:3%;'>SL No</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:12%;'>Container No.</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:5%;'>Ct Sz</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:12%;'>ICD Code</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>In Date</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>Sla Cd</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>Origin</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>No Ob</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>No Pkg</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>Gr Wt</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>No Boe</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:11%;'>Shed</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>Area</th>");
            html.Append("<th style='text-align:center;padding:10px;border-bottom:1px solid #000;width:10%;'>Seal Cut.Date</th>");
            html.Append("</tr></thead>");
            html.Append("<tbody>");

            lstCont.ForEach(item =>
            {
                html.Append("<tr>");
                html.Append("<td style='text-align:left;padding:10px;width:3%;'>" + item.SlNo + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:12%;'>" + item.ContainerNo + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:5%;'>" + item.Size + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:12%;'>" + item.CFSCode + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.InDate + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.SlaCd + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.Origin + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.NoObl + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.NoPkg + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.GrWt + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.NoBoe + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:11%;'>" + item.Shed + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.Area + "</td>");
                html.Append("<td style='text-align:center;padding:10px;width:10%;'>" + item.SealCuttingDate + "</td>");
                html.Append("</tr>");
            });
            html.Append("<tr><th colspan='7' style='border-top:1px solid #000;text-align:left;padding:10px;'>Total :-</th>");
            html.Append("<th style='border-top:1px solid #000;text-align:center;padding:10px;width:10%;'>" + sumobl + "</th>");
            html.Append("<th style='border-top:1px solid #000;text-align:center;padding:10px;width:10%;'>" + sumNoPkg + "</th>");
            html.Append("<th style='border-top:1px solid #000;text-align:center;padding:10px;width:10%;'>" + sumGrWt + "</th>");
            html.Append("<th style='border-top:1px solid #000;text-align:center;padding:10px;width:10%;'>" + sumNoBoe + "</th>");
            html.Append("<th style='border-top:1px solid #000;text-align:center;padding:10px;'></th>");
            html.Append("<th style='border-top:1px solid #000;text-align:center;padding:10px;width:10%;'>" + sumArea + "</th>");
            html.Append("<th style='border-top:1px solid #000;text-align:center;padding:10px;'></th></tr>");
            html.Append("</tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12' style='font-size:13px;'>CARGO DELIVERED FROM THE GODOWN :</td></tr>");

            html.Append("<tr><td colspan='12'><table style='border:1px solid #000;border-bottom:none;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            html.Append("<thead><tr>");
            html.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;'>No of Boe</th>");
            html.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;'>No of Pkg</th>");
            html.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;'>Gr Weight</th>");
            html.Append("<th style='text-align:center;padding:10px;border-right:1px solid #000;border-bottom:1px solid #000;'>Area</th>");
            html.Append("</tr></thead>");
            html.Append("<tbody><tr>");

            int cargoNoBoe = 0;
            int cargoNoPkg = 0;
            decimal cargoGrWt = 0;
            decimal cargoArea = 0;
            lstCargo.ForEach(item =>
            {
                cargoNoBoe = item.NoBoe;
                cargoNoPkg = item.NoPkg;
                cargoGrWt = item.GrWt;
                cargoArea = item.Area;
                html.Append("<td style='text-align:left;padding:10px;border-right:1px solid #000;'>" + item.NoBoe + "</td>");
                html.Append("<td style='text-align:center;padding:10px;border-right:1px solid #000;'>" + item.NoPkg + "</td>");
                html.Append("<td style='text-align:center;padding:10px;border-right:1px solid #000;'>" + item.GrWt + "</td>");
                html.Append("<td style='text-align:center;padding:10px;'>" + item.Area + "</td>");

            });
            html.Append("</tr></tbody>");
            html.Append("</table></td></tr>");

            html.Append("<tr><td><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12' style='font-size:13px;'>SUMMARY</td></tr>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table style='border:1px solid #000;width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");

            html.Append("<td colspan='3' width='25%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            html.Append("<thead><tr><th colspan='12' width='100%' style='font-size:14px;text-align:center;border-bottom:1px solid #000;padding:10px;'>OPENING BALANCE</th></tr>");
            html.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Obl</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>No Pkg</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Weight</th>");
            html.Append("<th width='10%' style='text-align:center;padding:10px;'>Area</th></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></thead>");
            html.Append("<tbody><tr><td colspan='12'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td>");
            html.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:10px;'></td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></tbody>");
            html.Append("</table></td>");

            html.Append("<td colspan='3' width='25%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            html.Append("<thead><tr><th colspan='12' width='100%' style='font-size:14px;text-align:center;border-bottom:1px solid #000;padding:10px;'>RECEIPT</th></tr>");
            html.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Obl</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>No Pkg</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Weight</th>");
            html.Append("<th width='10%' style='text-align:center;padding:10px;'>Area</th></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></thead>");
            html.Append("<tbody><tr><td colspan='12'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + sumobl + "</td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + sumNoPkg + "</td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + sumGrWt + "</td>");
            html.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:10px;'>" + sumArea + "</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></tbody>");
            html.Append("</table></td>");

            html.Append("<td colspan='3' width='25%' valign='top' style='padding:0; border-right: 1px solid #000;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            html.Append("<thead><tr><th colspan='12' width='100%' style='font-size:14px;text-align:center;border-bottom:1px solid #000;padding:10px;'>ISSUE</th></tr>");
            html.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Obl</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>No Pkg</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Weight</th>");
            html.Append("<th width='10%' style='text-align:center;padding:10px;'>Area</th></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></thead>");
            html.Append("<tbody><tr><td colspan='12'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + cargoNoBoe + "</td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + cargoNoPkg + "</td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'>" + cargoGrWt + "</td>");
            html.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:10px;'>" + cargoArea + "</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></tbody>");
            html.Append("</table></td>");

            html.Append("<td colspan='3' width='25%' valign='top' style='padding:0;'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
            html.Append("<thead><tr><th colspan='12' width='100%' style='font-size:14px;text-align:center;border-bottom:1px solid #000;padding:10px;'>CLOSING BALANCE</th></tr>");
            html.Append("<tr><td colspan='12' style='padding:0;border-bottom:1px solid #000;'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Obl</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>No Pkg</th> ");
            html.Append("<th width='10%' style='text-align:center;border-right:1px solid #000;padding:10px;'>Weight</th>");
            html.Append("<th width='10%' style='text-align:center;padding:10px;'>Area</th></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></thead>");
            html.Append("<tbody><tr><td colspan='12'>");
            html.Append("<table cellspacing='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td> ");
            html.Append("<td width='10%' style='text-align:center;border-right:1px solid #000;border-bottom:1px solid #000;padding:10px;'></td>");
            html.Append("<td width='10%' style='text-align:center;border-bottom:1px solid #000;padding:10px;'></td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr></tbody>");
            html.Append("</table></td>");

            html.Append("</tr></tbody></table>");
            html.Append("</td></tr>");

            html.Append("<tr><td><br/><br/><br/><br/><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12'><table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
            html.Append("<tr><th colspan='3' width='25%' style='text-align:center;padding:10px;'>WA/JS/TA</th> ");
            html.Append("<th colspan='1' width='8.333333333333333%'></th>");
            html.Append("<th colspan='3' width='25%' style='text-align:center;padding:10px;'>SIO/SUPTD</th>");
            html.Append("<th colspan='1' width='8.333333333333333%'></th>");
            html.Append("<th colspan='3' width='25%' style='text-align:center;padding:10px;'>SAM(IMPORT)</th></tr>");
            html.Append("</tbody></table></td></tr>");

            html.Append("</tbody></table>");
            lstSB.Add(html.ToString());

            var FileName = "DTR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4Landscape, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }

        [NonAction]
        public string GeneratingPDFForDTRExp(WFLDDTRExp obj, string dt, string GodownName)
        {
            StringBuilder sb = new StringBuilder();

            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
            sb.Append("<tr><td colspan='12'>");
            sb.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            sb.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            sb.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>STOCK REGISTER CUM DAILY TRANSACTION REPORT</label></td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");
            sb.Append("<tr><td colspan='12'><br/><br/></td></tr>");
            sb.Append("<tr><td colspan='12'>");
            sb.Append("<table cellspacing='0' cellpadding='0' style='font-size:12px; width:100%;'><tbody>");
            sb.Append("<tr><td colspan='4' width='33.33333333333333%'><b>Shed No :</b> " + GodownName + " </td>  <td colspan='4' width='33.33333333333333%' style='text-align:center;'><b>DATE :</b> " + dt + " </td>  <td colspan='4' width='33.33333333333333%' style='text-align:right;'><b>PRINTED ON :</b> " + DateTime.Now.ToString("dd/MM/yyyy HH:mm") + " </td></tr>");
            sb.Append("</tbody></table>");
            sb.Append("</td></tr>");
            sb.Append("<tr><td colspan='12'><br/></td></tr>");
            sb.Append("</thead></table>");

            sb.Append("<table cellspacing='0' cellpadding='0' style='font-size:8pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif;'><tbody>");
            //LOOP Start//Carting Details
            /*
            obj.lstCartingDetails.Select(a => new { ShippingLineId = a.ShippingLineId, ShippingLineName = a.ShippingLineName, SLA = a.SLA }).Distinct().ToList().ForEach(item =>
            {
                sb.Append("<tr><td colspan='12'>");
                sb.Append("<table cellspacing='0' cellpadding='10' style='font-size:8pt; width:100%;'><tbody>");
                sb.Append("<tr><th width='8%'>Sla</th><th width='8%'>" + item.SLA + "</th><th colspan='10'>" + item.ShippingLineName + "</th></tr>");

                sb.Append("<tr><th width='8%' style='border-bottom: 1px solid #000;'>Entry No</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Sb No</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Sb Date</th>");
                sb.Append("<th width='11%' style='border-bottom: 1px solid #000;'>Exporter</th>");
                sb.Append("<th width='11%' style='border-bottom: 1px solid #000;'>Cargo</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>No PKG</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Gr Wt</th>");
                sb.Append("<th width='11%' style='border-bottom: 1px solid #000;'>Fob</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Slot</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>G/R</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Area</th>");
                sb.Append("<th width='10%' style='border-bottom: 1px solid #000;'>Remarks</th></tr>");

                //LOOP Start//
                obj.lstCartingDetails.Where(m => m.ShippingLineId == item.ShippingLineId).ToList().ForEach(elem =>
                {
                    sb.Append("<tr><td width='8%' style='border-bottom: 1px solid #000;'>" + elem.CFSCode + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ShippingBillNo + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ShippingBillDate + "</td>");
                    sb.Append("<td width='11%' style='border-bottom: 1px solid #000;'>" + elem.ExporterName + "</td>");
                    sb.Append("<td width='11%' style='border-bottom: 1px solid #000;'>" + elem.CargoDescription + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ActualQty + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ActualWeight + "</td>");
                    sb.Append("<td width='11%' style='border-bottom: 1px solid #000;'>" + elem.FobValue + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.Slot + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.GR + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.Area + "</td>");
                    sb.Append("<td width='10%' style='border-bottom: 1px solid #000;'>" + elem.Remarks + "</td></tr>");
                });
                //LOOP End//

                sb.Append("<tr><th width='8%' valign='bottom'>Sub Total :</th>");
                sb.Append("<td width='8%' valign='bottom'></td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='11%'></td>");
                sb.Append("<td width='11%'></td>");
                sb.Append("<td width='8%' valign='bottom'>" + obj.lstCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Sum(y => y.ActualQty) + "</td>");
                sb.Append("<td width='8%' valign='bottom'>" + obj.lstCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Sum(y => y.ActualWeight) + "</td>");
                sb.Append("<td width='11%' valign='bottom'>" + obj.lstCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Sum(y => y.FobValue) + "</td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='10%'></td></tr>");

                sb.Append("<tr><th width='8%' style='border-bottom: 1px solid #000;'>Sub Count :</th>");
                sb.Append("<td colspan='11' style='border-bottom: 1px solid #000;'>" + obj.lstCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Count() + "</td></tr>");

                sb.Append("</tbody></table>");
                sb.Append("</td></tr>");
            });*/
            //LOOP End//

            //LOOP Start//Short Cargo Details
            obj.lstShortCartingDetails.Select(a => new { ShippingLineId = a.ShippingLineId, ShippingLineName = a.ShippingLineName, SLA = a.SLA }).Distinct().ToList().ForEach(item =>
            {
                sb.Append("<tr><td colspan='12'>");
                sb.Append("<table cellspacing='0' cellpadding='10' style='font-size:8pt; width:100%;'><tbody>");
                sb.Append("<tr><th width='8%'>Sla</th><th width='8%'>" + item.SLA + "</th><th colspan='10'>" + item.ShippingLineName + "</th></tr>");

                sb.Append("<tr><th width='8%' style='border-bottom: 1px solid #000;'>Entry No</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Sb No</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Sb Date</th>");
                sb.Append("<th width='11%' style='border-bottom: 1px solid #000;'>Exporter</th>");
                sb.Append("<th width='11%' style='border-bottom: 1px solid #000;'>Cargo</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>No PKG</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Gr Wt</th>");
                sb.Append("<th width='11%' style='border-bottom: 1px solid #000;'>Fob</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Slot</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>G/R</th>");
                sb.Append("<th width='8%' style='border-bottom: 1px solid #000;'>Area</th>");
                sb.Append("<th width='10%' style='border-bottom: 1px solid #000;'>Remarks</th></tr>");

                //LOOP Start//
                obj.lstShortCartingDetails.Where(m => m.ShippingLineId == item.ShippingLineId).ToList().ForEach(elem =>
                {
                    sb.Append("<tr><td width='8%' style='border-bottom: 1px solid #000;'>" + elem.CFSCode + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ShippingBillNo + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ShippingBillDate + "</td>");
                    sb.Append("<td width='11%' style='border-bottom: 1px solid #000;'>" + elem.ExporterName + "</td>");
                    sb.Append("<td width='11%' style='border-bottom: 1px solid #000;'>" + elem.CargoDescription + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ActualQty + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.ActualWeight + "</td>");
                    sb.Append("<td width='11%' style='border-bottom: 1px solid #000;'>" + elem.FobValue + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.Slot + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.GR + "</td>");
                    sb.Append("<td width='8%' style='border-bottom: 1px solid #000;'>" + elem.Area + "</td>");
                    sb.Append("<td width='10%' style='border-bottom: 1px solid #000;'>" + elem.Remarks + "</td></tr>");
                });
                //LOOP End//

                sb.Append("<tr><th width='8%' valign='bottom'>Sub Total :</th>");
                sb.Append("<td width='8%' valign='bottom'></td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='11%'></td>");
                sb.Append("<td width='11%'></td>");
                sb.Append("<td width='8%' valign='bottom'>" + obj.lstShortCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Sum(y => y.ActualQty) + "</td>");
                sb.Append("<td width='8%' valign='bottom'>" + obj.lstShortCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Sum(y => y.ActualWeight) + "</td>");
                sb.Append("<td width='11%' valign='bottom'>" + obj.lstShortCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Sum(y => y.FobValue) + "</td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='8%'></td>");
                sb.Append("<td width='10%'></td></tr>");

                sb.Append("<tr><th width='8%' style='border-bottom: 1px solid #000;'>Sub Count :</th>");
                sb.Append("<td colspan='11' style='border-bottom: 1px solid #000;'>" + obj.lstShortCartingDetails.Where(x => x.ShippingLineId == item.ShippingLineId).Count() + "</td></tr>");

                sb.Append("</tbody></table>");
                sb.Append("</td></tr>");
            });
            //LOOP End//

            sb.Append("<tr cellpadding='10'><th width='8%' valign='bottom' style='font-size:9pt;'>Grand :</th>");
            sb.Append("<th width='8%' valign='bottom' style='font-size:9pt;'>" + obj.lstCartingDetails.Count() + "</th>");
            sb.Append("<th width='8%'></th>");
            sb.Append("<th width='11%'></th>");
            sb.Append("<th width='11%'></th>");
            sb.Append("<th width='8%' valign='bottom' style='font-size:9pt;'>" + (/*obj.lstCartingDetails.Sum(m => m.ActualQty) +*/ obj.lstShortCartingDetails.Sum(x => x.ActualQty)) + "</th>");
            sb.Append("<th width='8%' valign='bottom' style='font-size:9pt;'>" + (/*obj.lstCartingDetails.Sum(m => m.ActualWeight) +*/ obj.lstShortCartingDetails.Sum(x => x.ActualWeight)) + "</th>");
            sb.Append("<th width='11%' valign='bottom' style='font-size:9pt;'>" + (/*obj.lstCartingDetails.Sum(m => m.FobValue) +*/ obj.lstShortCartingDetails.Sum(x => x.FobValue)) + "</th>");
            sb.Append("<th width='8%'></th>");
            sb.Append("<th width='8%'></th>");
            sb.Append("<th width='8%'></th>");
            sb.Append("<th width='10%'></th></tr>");
            sb.Append("</tbody></table>");

            //CARGO SHIFTING DETAIL//
            sb.Append("<table cellspacing='0' cellpadding='10' style='margin-top:20px; font-size:8pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif;'><tbody>");
            sb.Append("<tr><th colspan='15' style='text-align:center; font-size:10pt;'>CARGO SHIFTING DETAIL</th></tr>");
            sb.Append("<tr><th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Entry No</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Sb No</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Sb Date</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Exporter</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Cargo</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>No PKG</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Gr Wt</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Fob</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Slot</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>G/R</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Area</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>F-Shed</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>T-Shed</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>F-Sla</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000;'>T-Sla</th></tr>");
            //LOOP Start//
            obj.lstCargoShifting.ToList().ForEach(item =>
            {
                sb.Append("<tr><td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.CFSCode + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ShippingBillNo + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ShippingBillDate + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ExporterName + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.CargoDescription + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ActualQty + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ActualWeight + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.FobValue + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000;border-right: 1px solid #000;'>" + item.LocationName + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.GR + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.SQM + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.FromGodown + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ToGodown + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.FromShippingLine + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000;'>" + item.ToShippingLine + "</td></tr>");
            });
            //LOOP End//
            sb.Append("<tr><th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Total :</th>");
            sb.Append("<th colspan='4' width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstCargoShifting.Count() + "</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstCargoShifting.Sum(y => y.ActualQty) + "</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstCargoShifting.Sum(y => y.ActualWeight) + "</th>");
            sb.Append("<th colspan='8' width='11%' style='border-top: 1px solid #000;'>" + obj.lstCargoShifting.Sum(y => y.FobValue) + "</th></tr>");
            sb.Append("</tbody></table>");


            //CARGO ACCEPTING DETAIL//
            sb.Append("<table cellspacing='0' cellpadding='10' style='margin-top:20px; font-size:8pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif;'><tbody>");
            sb.Append("<tr><th colspan='15' style='text-align:center; font-size:10pt;'>CARGO ACCEPTING DETAIL</th></tr>");
            sb.Append("<tr><th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Entry No</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Sb No</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Sb Date</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Exporter</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Cargo</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>No PKG</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Gr Wt</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Fob</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Slot</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>G/R</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Area</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>F-Shed</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>T-Shed</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>F-Sla</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000;'>T-Sla</th></tr>");
            //LOOP Start//
            obj.lstCargoAccepting.ToList().ForEach(item =>
            {
                sb.Append("<tr><td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.CFSCode + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ShippingBillNo + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ShippingBillDate + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ExporterName + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.CargoDescription + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ActualQty + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ActualWeight + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.FobValue + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.LocationName + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.GR + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.SQM + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.FromGodown + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ToGodown + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.FromShippingLine + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000;'>" + item.ToShippingLine + "</td></tr>");
            });
            //LOOP End//
            sb.Append("<tr><th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Total :</th>");
            sb.Append("<th colspan='4' width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstCargoAccepting.Count() + "</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstCargoAccepting.Sum(y => y.ActualQty) + "</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstCargoAccepting.Sum(y => y.ActualWeight) + "</th>");
            sb.Append("<th colspan='8' width='11%' style='border-top: 1px solid #000;'>" + obj.lstCargoAccepting.Sum(y => y.FobValue) + "</th></tr>");
            sb.Append("</tbody></table>");


            //BACK TO TOWN DETAIL//
            sb.Append("<table cellspacing='0' cellpadding='10' style='margin-top:20px; font-size:8pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif;'><tbody>");
            sb.Append("<tr><th colspan='11' style='text-align:center; font-size:10pt;'>BACK TO TOWN DETAIL</th></tr>");
            sb.Append("<tr><th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Entry No</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Sb No</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Sb Date</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Exporter</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Cargo</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>No PKG</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Gr Wt</th>");
            sb.Append("<th width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Fob</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Slot</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>G/R</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000;'>Area</th></tr>");
            //LOOP Start//
            obj.lstBTTDetails.ToList().ForEach(item =>
            {
                sb.Append("<tr><td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.CFSCode + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ShippingBillNo + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ShippingBillDate + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ExporterName + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.CargoDescription + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.BTTQuantity + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.BTTWeight + "</td>");
                sb.Append("<td width='11%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.Fob + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.LocationName + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.GR + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000;'>Dynamic</td></tr>");
            });
            //LOOP End//
            sb.Append("<tr><th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Total :</th>");
            sb.Append("<th width='8%' colspan='4' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstBTTDetails.Count() + "</th>");
            sb.Append("<th  width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstBTTDetails.Sum(a => a.BTTQuantity) + "</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstBTTDetails.Sum(a => a.BTTWeight) + "</th>");
            sb.Append("<th width='8%' colspan='4' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstBTTDetails.Sum(a => a.Fob) + "</th></tr>");
            //sb.Append("<th colspan='4' width='11%' style='border-top: 1px solid #000;'>Dynamic</th>");
            sb.Append("</tbody></table>");


            //STUFFING DETAIL//
            sb.Append("<table cellspacing='0' cellpadding='10' style='margin-top:20px; font-size:8pt; border:1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif;'><tbody>");
            sb.Append("<tr><th colspan='11' style='text-align:center; font-size:10pt;'>STUFFING DETAIL</th></tr>");
            sb.Append("<tr><th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>S.R. No</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>S.R. Date</th>");
            sb.Append("<th width='9%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>ICD Code</th>");
            sb.Append("<th width='9%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Container No</th>");
            sb.Append("<th width='5%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Size</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>SLA</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>In Date</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>No SB</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>No of Unit</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Gr Wt</th>");
            sb.Append("<th width='12%' style='border-top: 1px solid #000;'>FOB</th></tr>");
            //LOOP Start//
            obj.lstStuffingDetails.ToList().ForEach(item =>
            {
                sb.Append("<tr><td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.StuffingNo + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.StuffingDate + "</td>");
                sb.Append("<td width='9%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.CFSCode + "</td>");
                sb.Append("<td width='9%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ContainerNo + "</td>");
                sb.Append("<td width='5%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.Size + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.SLA + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.EntryDateTime + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.ShippingBillNo + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.StuffQuantity + "</td>");
                sb.Append("<td width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + item.StuffWeight + "</td>");
                sb.Append("<td width='12%' style='border-top: 1px solid #000;'>" + item.Fob + "</td></tr>");
            });

            //LOOP End//
            sb.Append("<tr><th colspan='7' width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>Total :</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstStuffingDetails.Sum(z => z.ShippingBillNo) + "</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstStuffingDetails.Sum(z => z.StuffQuantity) + "</th>");
            sb.Append("<th width='8%' style='border-top: 1px solid #000; border-right: 1px solid #000;'>" + obj.lstStuffingDetails.Sum(z => z.StuffWeight) + "</th>");
            sb.Append("<th width='12%' style='border-top: 1px solid #000;'>" + obj.lstStuffingDetails.Sum(z => z.Fob) + "</th></tr>");
            sb.Append("</tbody></table>");


            sb.Append("<table cellspacing='0' cellpadding='10' style='margin-top:20px; font-size:8pt;width:100%;'><tbody><tr>");
            sb.Append("<td colspan='6' width='60%' valign='top'>");
            sb.Append("<table cellspacing='0' cellpadding='10' style='font-size:8pt; width:100%;'><tbody>");
            sb.Append("<tr><th colspan='5' style='text-align:center; font-size:10pt;'>SUMMARY</th></tr>");
            sb.Append("<tr><th width='10%' style='border: 1px solid #000; border-right: 0;'>DESC</th>");
            sb.Append("<th width='8%' style='border: 1px solid #000;'>SBS</th>");
            sb.Append("<th width='9%' style='border: 1px solid #000; border-left: 0;'>PKGS</th>");
            sb.Append("<th width='9%' style='border: 1px solid #000; border-left: 0;'>WT</th>");
            sb.Append("<th width='12%' style='border: 1px solid #000; border-left: 0;'>FOB</th></tr>");
            //LOOP Start//
            sb.Append("<tr><td width='10%' style='border: 1px solid #000; border-right: 0; border-top: 0;'>CARGO CARTED</td>");
            sb.Append("<td width='8%' style='border: 1px solid #000; border-top: 0;'>" + obj.lstCartingDetails.Count() + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + (/*obj.lstCartingDetails.Sum(x => x.ActualQty) +*/ obj.lstShortCartingDetails.Sum(x => x.ActualQty)) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + (/*obj.lstCartingDetails.Sum(x => x.ActualWeight) +*/ obj.lstShortCartingDetails.Sum(x => x.ActualWeight)) + "</td>");
            sb.Append("<td width='12%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + (/*obj.lstCartingDetails.Sum(x => x.FobValue) +*/ obj.lstShortCartingDetails.Sum(x => x.FobValue)) + "</td></tr>");

            sb.Append("<tr><td width='10%' style='border: 1px solid #000; border-right: 0; border-top: 0;'>CARGO SHIFTED</td>");
            sb.Append("<td width='8%' style='border: 1px solid #000; border-top: 0;'>" + obj.lstCargoShifting.Count() + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstCargoShifting.Sum(x => x.ActualQty) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstCargoShifting.Sum(x => x.ActualWeight) + "</td>");
            sb.Append("<td width='12%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstCargoShifting.Sum(x => x.FobValue) + "</td></tr>");

            sb.Append("<tr><td width='10%' style='border: 1px solid #000; border-right: 0; border-top: 0;'>CARGO ACCEPTED</td>");
            sb.Append("<td width='8%' style='border: 1px solid #000; border-top: 0;'>" + obj.lstCargoAccepting.Count() + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstCargoAccepting.Sum(x => x.ActualQty) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstCargoAccepting.Sum(x => x.ActualWeight) + "</td>");
            sb.Append("<td width='12%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstCargoAccepting.Sum(x => x.FobValue) + "</td></tr>");

            sb.Append("<tr><td width='10%' style='border: 1px solid #000; border-right: 0; border-top: 0;'>CARGO BTT</td>");
            sb.Append("<td width='8%' style='border: 1px solid #000; border-top: 0;'>" + obj.lstBTTDetails.Count() + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstBTTDetails.Sum(x => x.BTTQuantity) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstBTTDetails.Sum(x => x.BTTWeight) + "</td>");
            sb.Append("<td width='12%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstBTTDetails.Sum(x => x.BTTQuantity) + "</td></tr>");

            sb.Append("<tr><td width='10%' style='border: 1px solid #000; border-right: 0; border-top: 0;'>CARGO STUFFED</td>");
            sb.Append("<td width='8%' style='border: 1px solid #000; border-top: 0;'>" + obj.lstStuffingDetails.Sum(x => x.ShippingBillNo) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstStuffingDetails.Sum(x => x.StuffQuantity) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstStuffingDetails.Sum(x => x.StuffWeight) + "</td>");
            sb.Append("<td width='12%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.lstStuffingDetails.Sum(x => x.Fob) + "</td></tr>");
            //LOOP End//
            sb.Append("</tbody></table>");
            sb.Append("</td>");

            sb.Append("<td colspan='6' width='40%'>");
            sb.Append("<table cellspacing='0' cellpadding='10' style='font-size:8pt; width:100%;'><tbody>");
            sb.Append("<tr><th colspan='4' style='text-align:center; font-size:10pt;'>OPENING BALANCE</th></tr>");
            sb.Append("<tr><th width='8%' style='border: 1px solid #000;border-right: 0;'>SBS</th>");
            sb.Append("<th width='9%' style='border: 1px solid #000;'>PKGS</th>");
            sb.Append("<th width='9%' style='border: 1px solid #000; border-left: 0;'>WT</th>");
            sb.Append("<th width='12%' style='border: 1px solid #000; border-left: 0;'>FOB</th></tr>");
            //LOOP Start//
            sb.Append("<tr><td width='8%' style='border: 1px solid #000; border-right: 0; border-top: 0;'>" + obj.StockOpening.Count() + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-top: 0;'>" + obj.StockOpening.Sum(x => x.Units) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.StockOpening.Sum(x => x.Weight) + "</td>");
            sb.Append("<td width='12%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.StockOpening.Sum(x => x.Fob) + "</td></tr>");
            //LOOP End//

            sb.Append("<tr><th colspan='4' style='text-align:center; font-size:10pt;'>CLOSING BALANCE</th></tr>");
            sb.Append("<tr><th width='8%' style='border: 1px solid #000;border-right: 0;'>SBS</th>");
            sb.Append("<th width='9%' style='border: 1px solid #000;'>PKGS</th>");
            sb.Append("<th width='9%' style='border: 1px solid #000; border-left: 0;'>WT</th>");
            sb.Append("<th width='12%' style='border: 1px solid #000; border-left: 0;'>FOB</th></tr>");

            //LOOP Start//
            sb.Append("<tr><td width='8%' style='border: 1px solid #000; border-right: 0; border-top: 0;'>" + obj.StockClosing.Count() + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-top: 0;'>" + obj.StockClosing.Sum(x => x.Units) + "</td>");
            sb.Append("<td width='9%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.StockClosing.Sum(x => x.Weight) + "</td>");
            sb.Append("<td width='12%' style='border: 1px solid #000; border-left: 0; border-top: 0;'>" + obj.StockClosing.Sum(x => x.Fob) + "</td></tr>");
            //LOOP End//
            sb.Append("</tbody></table>");
            sb.Append("</td>");
            sb.Append("</tr></tbody></table>");

            sb.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

            var FileName = "DTR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4Landscape, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, sb.ToString());
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        #endregion

        #region SealCuttingReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult SealCuttingReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public ActionResult GetSealCuttingReport(String FromDate, String ToDate)
        {

            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            string FilePath = "";
            SealCuttingReport ObjSealCuttingReport = new SealCuttingReport();
            ObjSealCuttingReport.PeriodFrom = FromDate;
            ObjSealCuttingReport.PeriodTo = ToDate;
            ObjRR.SealCuttingReport(ObjSealCuttingReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Status == 1)
            {
                string Fdt = Convert.ToDateTime(ObjSealCuttingReport.PeriodFrom).ToString("dd-MM-yyyy");
                string Tdt = Convert.ToDateTime(ObjSealCuttingReport.PeriodTo).ToString("dd-MM-yyyy");
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                FilePath = GenerateSealCuttingReportPDF(ds, Fdt, Tdt);
                return Json(new { Status = 1, Data = FilePath });
            }
            else
                return Json(new { Status = -1, Data = "No Record Found." });

        }
        public string GenerateSealCuttingReportPDF(DataSet ds, string Fdt, string Tdt)
        {
            List<dynamic> lstGodown = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstGodownWiseDtl = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            int SlNo = 0;

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

            //html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td><td valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 12px;'>CFS Whitefield</label><br/><label style='font-size: 14px; font-weight:bold;'>Seal Cutting Report</label><br/><br/><label style='font-size: 12px;'><b>REPORT FROM DATE</b> " + Fdt + " <b>TO</b> " + Tdt + "</label></td></tr>");
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td width='180%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>" + lstGodown[0].CompanyAddress + "</span><br/><span style='font-size:12px;'>" + lstGodown[0].Email + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Seal Cutting Report</label><br/><br/><label style='font-size: 12px;'><b>REPORT FROM DATE</b> " + Fdt + " <b>TO</b> " + Tdt + "</label></td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");

            html.Append("<tr><td><br/></td></tr>");
            lstGodown.Distinct().ToList().ForEach(item =>
            {
                SlNo = 1;
                html.Append("<tr><td colspan='12' style='font-size:13px;'>Shed Cd " + item.GodownName + "</td></tr>");
                html.Append("<tr><td colspan='12'><table style='border:1px solid #000;width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                html.Append("<thead><tr>");
                html.Append("<th style='text-align:left;padding:10px;border-bottom:1px solid #000;width:3%;'>Sr. No.</th>");
                html.Append("<th style='text-align:left;padding:10px;border-bottom:1px solid #000;width:10%;'>ICD Code</th>");
                html.Append("<th style='text-align:left;padding:10px;border-bottom:1px solid #000;width:10%;'>Container / CBT No.</th>");
                html.Append("<th style='text-align:left;padding:10px;border-bottom:1px solid #000;width:10%;'>Cont Size</th>");
                html.Append("<th style='text-align:left;padding:10px;border-bottom:1px solid #000;width:10%;'>Seal Cut.Date</th>");
                html.Append("</tr></thead>");
                html.Append("<tbody>");
                lstGodownWiseDtl.Where(x => x.GodownID == item.GodownID).ToList().ForEach(item1 =>
                {
                    html.Append("<tr>");
                    html.Append("<td style='text-align:left;padding:10px;width:3%;'>" + SlNo++ + "</td>");
                    html.Append("<td style='text-align:left;padding:10px;width:10%;'>" + item1.CFSCode + "</td>");
                    html.Append("<td style='text-align:left;padding:10px;width:10%;'>" + item1.ContainerNo + "</td>");
                    html.Append("<td style='text-align:left;padding:10px;width:10%;'>" + item1.Size + "</td>");
                    html.Append("<td style='text-align:left;padding:10px;width:10%;'>" + item1.SealCuttingDate + "</td>");
                    html.Append("</tr>");
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr>");
            });
            html.Append("</tbody></table>");

            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            lstSB.Add(html.ToString());

            var FileName = "SealCuttingReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }





        #endregion

        #region Accounts Report for Import Cargo
        [HttpGet]
        public ActionResult ImportCargoAccountsReport()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetGodownRightsWise(((Login)Session["LoginUser"]).Uid);
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetImpCargo(WFLD_PV ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.GetImpCargo(ObjPV);
                string Path = "";
                List<WFLD_ImpPVReport> lstData = new List<WFLD_ImpPVReport>();
                lstData = (List<WFLD_ImpPVReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFImpCargo(lstData, ObjPV.AsOnDate, ObjPV.GodownName);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImpCargo(List<WFLD_ImpPVReport> lstData, string Date, string GodownName)
        {
            try
            {
                var FileName = "ImpCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>" + lstData[0].CompanyAddress + "</span><br/><span style='font-size:14px;'>" + lstData[0].Email + "</span><br/><span style='font-size:14px;'><b>As On Date - </b> " + Date + "</span><br/><span style='font-size:14px;'><b>Shed Cd - </b>" + GodownName + "</span><br/><label style='font-size: 16px; font-weight:bold;'>Account Report for Import Cargo</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>OBL No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Dstf Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Item No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Rcvd Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Gr Wt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>Slot No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Total Wk</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;'>" + item.BOLNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.DestuffingEntryDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.CommodityAlias + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.NoOfUnits + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.NoOfUnitsRec + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Weight.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Area.ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.LocationName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.TotWk + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.Amount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='width:6%;'></th>");
                Pages.Append("<th style='width:7%;'></th>");
                Pages.Append("<th style='width:4%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:4%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfUnits) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:4%;'>" + lstData.AsEnumerable().Sum(item => item.NoOfUnitsRec) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>" + lstData.AsEnumerable().Sum(item => item.Weight) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'>" + lstData.AsEnumerable().Sum(item => item.Area) + "</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'></th>");
                Pages.Append("<th style='border-right:1px solid #000;width:5%;'>" + lstData.AsEnumerable().Sum(item => item.TotWk) + "</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + lstData.AsEnumerable().Sum(item => item.Amount) + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region PV Report Of Import Loaded Container
        [HttpGet]
        public ActionResult PVReportImpLoadedCont()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetImpLoadedCont(WFLD_PVReport ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.GetImpLoadedCont(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_PVReportImpLoadedCont> lstData = new List<WFLD_PVReportImpLoadedCont>();
                    lstData = (List<WFLD_PVReportImpLoadedCont>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFImpLoadedCont(lstData, ObjPV.AsOnDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImpLoadedCont(List<WFLD_PVReportImpLoadedCont> lstData, string Date)
        {
            try
            {
                var FileName = "ImpLoadedContReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><span style='font-size:12px;'><b>As On Date - </b> " + Date + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Physical Verification Report for Import Loaded Container</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;'>Container No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Sla</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Origin</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>No of Days</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;text-align:right;'>GRL Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:20%;'>Remarks</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.EntryDateTime + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.EximTraderAlias + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.TransportFrom + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>" + item.Days + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;text-align:right;'>" + item.Amount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:20%;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='width:11%;'></th>");
                Pages.Append("<th style='width:8%;'></th>");
                Pages.Append("<th style='width:3%;'></th>");
                Pages.Append("<th style='width:5%;'></th>");
                Pages.Append("<th colspan='3' style='width:15%;text-align:right;'>" + lstData.Sum(o => o.Amount).ToString() + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region PV Report Of Empty Container
        [HttpGet]
        public ActionResult PVReportEmptyCont()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetEmptyCont(VIZ_PVReport ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.GetEmptyCont(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<VIZ_PVReportImpEmptyCont> lstData = new List<VIZ_PVReportImpEmptyCont>();
                    lstData = (List<VIZ_PVReportImpEmptyCont>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFEmptyCont(lstData, ObjPV.AsOnDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFEmptyCont(List<VIZ_PVReportImpEmptyCont> lstData, string Date)
        {
            try
            {
                var FileName = "EmptyContReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><span style='font-size:12px;'><b>As On - </b> " + Date + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Physical Verification Report of Empty Containers</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sno</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Entry No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;'>Container No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Sla Cd</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date Ecy</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Out Date Ecy</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Days</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>GRE Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.EntryDateTime + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.EximTraderAlias + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDateEcy + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.OutDateEcy + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.Days + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.Amount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='width:11%;'></th>");
                Pages.Append("<th style='width:8%;'></th>");
                Pages.Append("<th style='width:3%;'></th>");
                Pages.Append("<th style='width:5%;'></th>");
                Pages.Append("<th style='width:8%;'></th>");
                Pages.Append("<th colspan='3' style='width:12%;text-align:right;'>" + lstData.Sum(o => o.Amount).ToString() + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Collection Report
        [HttpGet]
        public ActionResult CollectionReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}
            ViewBag.TotalCash = 0;
            ViewBag.TotalPDA = 0;
            ViewBag.TotalBank = 0;

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCollectionReport(WFLD_CollectionReport ObjDebtorReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_CollectionReport> LstInvoiceReportDetails = new List<WFLD_CollectionReport>();
            WFLD_FinalCollectionReportTotal objFinalCollectionReportTotal = new WFLD_FinalCollectionReportTotal();
            WFLD_CollectionReportTotal objCollectionReportTotal = new WFLD_CollectionReportTotal();
            //  Login objLogin = (Login)Session["LoginUser"];
            ObjRR.CollectionReport(ObjDebtorReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                objFinalCollectionReportTotal = (WFLD_FinalCollectionReportTotal)ObjRR.DBResponse.Data;
                LstInvoiceReportDetails = objFinalCollectionReportTotal.listCollectionReport.ToList();
                objCollectionReportTotal = objFinalCollectionReportTotal.objCollectionReportTotal;

                ViewBag.TotalCash = objCollectionReportTotal.TotalCash;
                ViewBag.TotalPDA = objCollectionReportTotal.TotalPDA;
                ViewBag.TotalBank = objCollectionReportTotal.TotalBank;

                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCollectionReportPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "CollectionReport.pdf";
                Pages[0] = fc["Page"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CollectionReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CollectionReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Bulk Credit Note
        [HttpGet]
        public ActionResult GetBulkCreditNote()
        {
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetBulkCreditNoteReport(FormCollection fc)
        {
            Kdl_ReportRepository objRR = new Kdl_ReportRepository();
            objRR.GetBulkCreditNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            List<string> lststring = new List<string>();
            if (objRR.DBResponse.Data != null)
            {
                lststring = (List<string>)objRR.DBResponse.Data;
                List<string> pdfPages = new List<string>();
                /*PDF Gneration*/
                string Path = Server.MapPath("~/Docs/") + Session.SessionID + "/";
                string FileName = "BulkCRNote" + "CR" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
                    Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
                lststring.ForEach(item =>
                {
                    if (!string.IsNullOrEmpty(item) && item != "")
                    {
                        item = System.Text.Encoding.UTF8.GetString(Convert.FromBase64String(item));
                        pdfPages.Add(item.Replace("|_br_|", "<br/>"));
                    }
                });
                //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    rh.GeneratePDF(Path + FileName, pdfPages.ToArray());
                //}
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(Path + FileName, pdfPages.ToArray());

                }
                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/" + FileName });
            }
            else
                return Json(new { Status = -1, Message = "No Data" });
        }
        [HttpPost]
        public JsonResult GetBulkCreditNote(string InvoiceNumber, int PartyId, DateTime FromDate, DateTime ToDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.BulkCreditNoteprint(InvoiceNumber, PartyId, FromDate, ToDate);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string FilePath = "";
                FilePath = GeneratingBulkPDFforCRNote(ds);
                return Json(new { Status = 1, Data = FilePath });
            }
            else
                return Json(new { Status = -1, Data = "No Record Found." });

        }
        [NonAction]
        public string GeneratingBulkPDFforCRNote(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<string> lstSB = new List<string>();
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();
                /*Header Part*/
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

                html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td colspan='8' width='90%' width='100%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'></label>");
                html.Append("</td></tr>");
                html.Append("<tr><td colspan='12' style='text-align: right;'><span style='display: block; font-size: 13px; line-height: 22px; text-transform: uppercase; padding-bottom: 10px;'>");
                html.Append("CWC GST No. <label>" + objCompany[0].GstIn + "</label></span></td></tr>");
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><h2 style='font-size: 18px; padding-bottom: 10px; text-align: center;margin: 0; padding: 0;'>Credit Note</h2> </td></tr>");
                html.Append("<tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Credit Note No.</label> <span>" + item.CRNoteNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Credit Date : </label> <span>" + item.CRNoteDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice No.</label> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Invoice Date : </label> <span>" + item.InvoiceDate + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Name : </label>");
                html.Append("<span>" + item.PartyName + "</span></td>");
                html.Append("<td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>State :</label> <span>" + item.PartyState + "</span> </td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>");
                html.Append("Party Address :</label> <span>" + item.PartyAddress + "</span></td><td style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>State Code :</label> <span>" + item.PartyStateCode + "</span></td></tr>");
                html.Append("<tr><td style='font-size: 13px; line-height: 26px;' colspan='2'><label style='font-weight: bold;'>Party GST :</label> <span>" + item.PartyGSTNo + "</span></td>");
                html.Append("</tr></tbody> ");
                html.Append("</table></td></tr><tr><td><hr /></td></tr><tr><th><b style='text-align: left; font-size: 14px;margin-top: 10px;'>Container Details :</b> </th></tr>");
                int i = 1;
                /*html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:90%;' cellspacing='0' cellpadding='10'>");
                html.Append("<thead><tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>SR No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>ICD Code</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Container No.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>Size</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>From Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>To Date</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>Cargo Type</th>");
                html.Append("</tr></thead><tbody>");
                /*************/
                /*Container Bind*/
                /*
                lstContainer.Where(x => x.InoviceId == item.InvoiceId).ToList().ForEach(elem =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.CFSCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ContainerNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.Size + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.FromDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + elem.ToDate + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 12px; text-align: center;'>" + (elem.CargoType == 0 ? "" : (elem.CargoType == 1 ? "Haz" : "Non-Haz")) + "</td>");
                    html.Append("</tr>");
                    i = i + 1;
                });*/
                /***************/
                /*html.Append("</tbody></table></td></tr>");*/
                //html.Append("<tr><th><h3 style='text-align: left; font-size: 14px;margin-top: 20px;'>Container Charges :</h3> </th></tr>");
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
                html.Append("<thead><tr>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SR No.</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>Charge Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>Description</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HSN Code</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'>Rate</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Taxable Amt.</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>CGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>SGST</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>IGST</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total</th></tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Rate</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Amt.</th></tr></thead>");
                html.Append("<tbody>");
                i = 1;
                /*Charges Bind*/
                lstCharges.Where(y => y.CRNoteId == item.CRNoteId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i.ToString() + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>" + data.OperationSDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'>" + data.OperationDesc + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data.SACCode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.Taxable.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + data.Taxable.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.CGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.SGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTPer.ToString("0") + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + data.IGSTAmt.ToString("0") + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 150px;'>" + data.Total.ToString("0") + "</td></tr>");
                    i = i + 1;
                });
                html.Append("</tbody>");
                html.Append("</table></td></tr></tbody></table>");


                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");

                html.Append("<tr><th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Total :</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 24%;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 80px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalTaxable.ToString("0") + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'></th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.InvoiceAmt.ToString("0") + "</th></tr><tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalCGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalSGST.ToString("0") + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TotalIGST.ToString("0") + "</th></tr>");

                html.Append("<tr>");
                html.Append("<th style='border-bottom: 1px solid #000; font-size: 11px; text-align: left; padding: 5px;' colspan='13'>Total Invoice (In Word) : " + objCurr.changeCurrencyToWords(item.InvoiceAmt.ToString("0")) + "</th>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<th style='font-size: 11px; text-align: left; padding: 5px;' colspan='7'>Amount of Tax Subject of Reverse : 0</th>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                html.Append("<table style='width:100%;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr><td style='font-size: 12px; text-align: left; line-height: 30px;'>Receipt No.: ");
                html.Append("<label style='font-weight: bold;'></label></td><td style='font-size: 12px; text-align: left; line-height: 30px;'>Party Code:");
                html.Append("<label style='font-weight: bold;'>" + item.PartyCode.ToString() + "</label></td></tr><tr><td style='font-size: 11px; text-align: left; line-height: 30px;'>");
                html.Append("*Cheques are subject to realisation</td><td style='font-size: 11px; text-align: left; line-height: 30px;'>SAM(A/C)</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");
                /***************/

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            var FileName = "BulkReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region DailyInvoiceReport


        [HttpGet]
        public ActionResult DailyInvoiceReport()
        {


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDailyInvoiceReport(WFLD_DailyInvReport ObjDailyReport)
        {

            if (ModelState.IsValid)
            {

                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.DailyInvoiceReport(ObjDailyReport);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {

                    List<WFLD_DailyReport> lstPV = new List<WFLD_DailyReport>();
                    lstPV = (List<WFLD_DailyReport>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFDailyInvoiceReport(lstPV, ObjDailyReport.FromDate, ObjDailyReport.ToDate);
                }


                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        [NonAction]
        public string GeneratePDFDailyInvoiceReport(List<WFLD_DailyReport> lstPV, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "DailyInvoiceReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>" + lstPV[0].CompanyAddress + "</span><br/><span style='font-size:12px;'>" + lstPV[0].Email + "</span><br/><span style='font-size:12px;'><b>From Date - </b>" + FromDate + "</span><br/><span style='font-size:12px;'><b>To Date - </b>" + ToDate + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Daily Invoice Report</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");



                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S. No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Party</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Total Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Receipt Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                lstPV.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Party + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.TotalAmt + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.ReceiptAmt + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                // Pages.Append("<tr>");
                // Pages.Append("<th colspan='5' style='border-bottom:1px solid #000;text-align:left;'>Total :</th>");
                //Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnits) + "</th>");
                // Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.NoOfUnitsRec) + "</th>");
                // Pages.Append("<th style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Weight).ToString("0.00") + "</th>");
                // Pages.Append("<th colspan='3' style='text-align:left;border-bottom:1px solid #000;border-right:1px solid #000;'>" + lstData.Sum(x => x.Area).ToString("0.00") + "</th>");
                //  Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region SD Summary Daily Report
        [HttpGet]
        public ActionResult SDSumryDlyReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetSDSumryDly(string PeriodFrom, string PeriodTo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.SDSummary(PeriodFrom, PeriodTo);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                List<WFLDSDSummary> lstData = new List<WFLDSDSummary>();
                lstData = (List<WFLDSDSummary>)ObjRR.DBResponse.Data;
                Path = GeneratePDFSDSumryDly(lstData, PeriodFrom, PeriodTo);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }
        [NonAction]
        public string GeneratePDFSDSumryDly(List<WFLDSDSummary> lstData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "SDSumryDlyReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><span style='font-size:12px;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span><br/><label style='font-size: 14px; font-weight:bold;'>SD SUMMARY DAILY REPORT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:6pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Invoice Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Party Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Payer Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Mode Of Payment(PDA)</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>GEN SPACE</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>STO</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>INS</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>GRE</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>GRL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>MF CHRG</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>ENT CHRG</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>FUM</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>OT CHRG</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>MISC</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>BILL</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>CGST</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>SGST</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>IGST</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:13%;'>TOTAL PDA</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>TDS</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:7%;'>CR.TDS</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:10%;text-align:right;'>Remarks</th></tr></thead>");
                Pages.Append("<tbody>");
                int i = 1;
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Date + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Module + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.EximTraderName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.PayeeName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.PaymentType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.GEN + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.STO + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.INS + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.GRE + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.GRL + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.MFCHRG + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.ENT + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.FUM + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.OT + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.MISC + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BILL + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Total + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.TDS + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CRTDS + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;text-align:right;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:5%;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:9%;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:9%;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:5%;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:9%;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:9%;'></th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:15%; text-align:right;'>Total :</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.GEN) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.STO) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.INS) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.GRE) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.GRL) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.MFCHRG) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + lstData.Sum(x => x.ENT) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.FUM) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.OT) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.MISC) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.BILL) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.CGST) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.SGST) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.IGST) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.Total) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'>" + lstData.Sum(x => Convert.ToDecimal(x.TDS)) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + lstData.Sum(x => x.CRTDS) + "</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:4%;'></th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region StatementOfEmptyContainer



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult StatementOfEmptyContainer()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetStatementOfEmptyContainer(WFLDStatementOfEmptyContainer ObjStatementOfEmptyContainer)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLDStatementOfEmptyContainer> LstStatementOfEmptyContainer = new List<WFLDStatementOfEmptyContainer>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.StatementOfEmptyContainer(ObjStatementOfEmptyContainer);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstStatementOfEmptyContainer = (List<WFLDStatementOfEmptyContainer>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateStatementOfEmptyContainerPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "StatementOfEmptyContainer.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region IWB Report

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetInlandWayBillReport(int GatePassId)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.PrintInlandWayBill(GatePassId);//, objLogin.Uid
            VIZInlandWayBill ObjData = new VIZInlandWayBill();
            string FilePath = "";
            if (ObjRR.DBResponse.Data != null)
            {
                ObjData = (VIZInlandWayBill)ObjRR.DBResponse.Data;
                FilePath = GeneratingInlandWayBillPDF(ObjData, GatePassId);
                return Json(new { Status = 1, Message = FilePath });
            }
            else
                return Json(new { Status = -1, Message = "Print will not generate as it is an import Gate pass." });
        }
        [NonAction]
        private string GeneratingInlandWayBillPDF(VIZInlandWayBill ObjData, int GatePassId)
        {

            string html = "";

            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/IWBNo" + GatePassId + ".pdf";
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }
            html = ("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

            html += ("<tr><td colspan='12'>");
            html += ("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            html += ("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html += ("<td width='70%' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><span style='font-size:12px;'>(A Govt. of India Undertaking)</span><br/><span style='font-size:12px;'>CONTAINER FREIGHT STATION-WHITEFIELD</span><br/><label style='font-size: 12px;'>107/109, EPIP Zone, KIADB Industrial Area, Whitefield, Bangalore-560 066</label><br/><label style='font-size: 14px; font-weight:bold;'>INLAND WAY BILL</label></td>");
            html += ("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
            html += ("</tbody></table>");
            html += ("</td></tr>");

            html += ("<tr><td><span><br/></span></td></tr>");

            html += ("<tr><td colspan='6' width='50%' style='font-size:8pt;'><b>No: " + ObjData.IWBNo + "</b></td> <td colspan='6' width='50%' style='text-align:right; font-size:8pt;'><b>Date: " + ObjData.IWBDate + "</b></td></tr>");

            html += ("<tr><td colspan='12'>");
            html += ("<table cellpadding='10' cellspacing='0' style='table-layout: fixed; width:100%; border:1px solid #000; font-size:8pt; font-family:Verdana,Arial,San-serif;'><tbody>");
            html += ("<tr><td colspan='3' width='30%'>Consignor Name & Address<br/>Assistant Commissioner of Customs,<br/>Bangalore</td> <td width='1%' valign='top'>:</td> <td colspan='4' width='40%'>Consignee Name & Address<br/>Assistant Commissioner of Customs<br/>" + ObjData.PortOfLoading + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Name Of the Liner </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.Liner + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Name Of the Freight Forwarder </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.Forwarder + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Transport A/c </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.Transporter + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>CFS Code </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.CFSCode + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Container No & Size </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.Container + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Trailer No </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.TrailerNo + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>OTL No </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.OTLNo + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>SLA Seal No </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.SealNo + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>No of Packages </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.NoOfPkg + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Weight (Kgs) </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.Weight + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Value (Rs) </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.CIFValue + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Place of Stuffing </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.PlaceOfStuffing + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Port of Loading </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.PortOfLoading + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Name of CHA </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.CHAName + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Exporter's Name </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.ExporterName + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Cargo Description </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.CargoDesc + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Shipping Bill No & Date </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.ShippBillNo + " " + ObjData.ShippBillDate + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Destination </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.Destination + "</td></tr>");
            html += ("<tr><td colspan='3' width='30%'>Country </td> <td width='1%'>:</td> <td colspan='4' width='40%'>" + ObjData.Country + "</td></tr>");

            html += ("</tbody></table>");
            html += ("</td></tr>");


            html += ("<tr><td><span><br/><br/></span></td></tr>");

            html += ("<tr><td colspan='6' width='50%' style='font-size:8pt;'><b>Time of Removal</b></td> <td colspan='6' width='50%' style='text-align:right; font-size:8pt;'><b>MANAGER CFS:</b></td></tr>");

            html += ("</tbody></table>");


            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            html = html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = this.ZonalOffice;
                rp.HOAddress = "(A Govt.Of India Undertaking)";
                rp.ZonalOffice = this.ZOAddress;
                rp.ZOAddress = "";
                rp.GeneratePDF(location, html);
            }
            return "/Docs/" + Session.SessionID + "/IWBNo" + GatePassId + ".pdf";

        }


        #endregion

        #region-- WEEKLY REPORT --

        [HttpGet]
        public ActionResult WeeklyVCReport()
        {
            return PartialView();
        }

        [HttpGet]
        public JsonResult GetVCDetails(string date1, string date2)
        {
            try
            {
                var dt1 = DateTime.ParseExact(date1, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                var dt2 = DateTime.ParseExact(date2, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                if (dt2.DayOfWeek.ToString().ToLower() != System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString().ToLower())
                {
                    return Json(new { Status = 2, Message = "Report Only Show on " + System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString() }, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    var doa = Enumerable.Range(0, 1 + dt2.Subtract(dt1).Days).Select(offset => dt1.AddDays(offset)).ToArray();
                    IList<string> formatted = new List<string>();
                    doa.ToList().ForEach(item =>
                    {
                        formatted.Add(item.ToString("yyyyMMdd"));
                    });
                    var XMLText = Utility.CreateXML(formatted);
                    var reportRepo = new VIZ_ReportRepository();
                    reportRepo.VCCapacityDetails(XMLText);

                    return Json(new { Status = 1, Message = "Data Detected", Data = reportRepo.DBResponse.Data }, JsonRequestBehavior.AllowGet);
                }
            }
            catch (Exception e)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!" }, JsonRequestBehavior.AllowGet);
            }
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult WeeklyVCReport(FormCollection fc)
        {
            var date = Convert.ToDateTime(fc["VCTdate"].ToString());
            var cfscap = Convert.ToDecimal(fc["TWcfscap"].ToString());
            var bndcap = Convert.ToDecimal(fc["TWbndcap"].ToString());
            var total1 = Convert.ToDecimal(fc["TWtotalcap"].ToString());
            var cfsutl = Convert.ToDecimal(fc["TWcfsutl"].ToString());
            var bndutl = Convert.ToDecimal(fc["TWbndutl"].ToString());
            var total2 = Convert.ToDecimal(fc["TWtotalutl"].ToString());
            var reportRepo = new VIZ_ReportRepository();
            reportRepo.AddVCDetails(date, cfscap, bndcap, cfsutl, bndutl);

            return Json(new { Status = 1, Message = "VC Report Saved Succesfully", Data = reportRepo.DBResponse.Data }, JsonRequestBehavior.DenyGet);
        }

        [HttpPost, ValidateInput(false)]
        public JsonResult GeneratePDF(FormCollection fc)
        {
            try
            {
                var pages = new string[2];
                var type = fc["type"].ToString();
                var id = fc["id"].ToString();
                pages[0] = fc["page"].ToString();
                if (id == "")
                {
                    //string ad = "AB1CE12354F";
                    //Random rnd = new Random();
                    //id = new string(Enumerable.Repeat(ad, ad.Length).Select(s => s[rnd.Next(ad.Length)]).ToArray());
                    id = ((Login)(Session["LoginUser"])).Uid.ToString() + "" + DateTime.Now.ToString().Replace('/', '_').Replace(' ', '_').Replace(':', '_');
                }
                id = id.Replace('/', '_');
                var fileName = id + ".pdf";
                //  var fileName = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
                string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
                if (!Directory.Exists(PdfDirectory))
                    Directory.CreateDirectory(PdfDirectory);
                //using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
                //{
                //    rh.GeneratePDF(PdfDirectory + fileName, pages);
                //}

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(PdfDirectory + fileName, pages);

                }
                return Json(new { Status = 1, Message = "/Docs/" + type + "/" + fileName }, JsonRequestBehavior.DenyGet);// Data = fileName 
            }
            catch (Exception ex)
            {
                return Json(new { Status = "1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }


        //New VC Report for WFLD
        [HttpGet]
        public ActionResult VCReport()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult VCReport(string VCFdate, string VCTdate)
        {
            try
            {
                var dt1 = DateTime.ParseExact(VCFdate, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                var dt2 = DateTime.ParseExact(VCTdate, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
                /*if (dt2.DayOfWeek.ToString().ToLower() != System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString().ToLower())
                {
                    return Json(new { Status = 2, Message = "Report Only Show on " + System.Configuration.ConfigurationManager.AppSettings["VCReportDay"].ToString() }, JsonRequestBehavior.AllowGet);
                }*/
                if (Math.Abs((dt2 - dt1).TotalDays + 1) != 7)
                {
                    return Json(new { Status = 2, Message = "Date gap must be of 7 days." }, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    var doa = Enumerable.Range(0, 1 + dt2.Subtract(dt1).Days).Select(offset => dt1.AddDays(offset)).ToArray();
                    IList<string> formatted = new List<string>();
                    doa.ToList().ForEach(item =>
                    {
                        formatted.Add(item.ToString("yyyyMMdd"));
                    });
                    var XMLText = Utility.CreateXML(formatted);
                    var reportRepo = new VIZ_ReportRepository();
                    reportRepo.VCCapacityReport(XMLText);
                    if (reportRepo.DBResponse.Status == 1)
                    {
                        return Json(new { Status = 1, Message = "Data Detected", Data = GeneratingPDFforWS((List<WFLDVCCapacityModel>)reportRepo.DBResponse.Data, VCFdate, VCTdate) }, JsonRequestBehavior.AllowGet);
                    }
                    else
                    {
                        return Json(new { Status = -1, Message = "No Data" }, JsonRequestBehavior.AllowGet);
                    }
                }
            }
            catch (Exception e)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!" }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratingPDFforWS(List<WFLDVCCapacityModel> data, string fdt, string tdt)
        {

            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();

            var dt1 = DateTime.ParseExact(fdt, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
            var dt2 = DateTime.ParseExact(tdt, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture);
            string FY1 = "";
            string FY2 = "";

            if (dt2.Month < 4)
            {
                FY1 = (dt2.Year - 1).ToString();
                FY2 = (dt2.Year - 2).ToString() + "-" + (dt2.Year - 1).ToString().Substring(2, 2);
            }
            else
            {
                FY1 = (dt2.Year).ToString();
                FY2 = (dt2.Year - 1).ToString() + "-" + (dt2.Year).ToString().Substring(2, 2);
            }

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
            html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>CFS Whitefield</span><br/><label style='font-size: 16px; font-weight:bold;'>VC REPORT</label></td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");
            html.Append("</thead></table>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-size:8pt;'><tbody>");
            html.Append("<tr><th colspan='12' style='text-align: right;'>DATED : " + DateTime.Now.ToString("dd.MM.yyyy") + "</th></tr>");
            html.Append("<tr><th colspan='12' style='text-align: center; font-size: 15px;'>CONTAINER HANDLING AT ICD-PPG DURING FOR THE WEEK ENDING " + fdt + " TO " + tdt + "</th></tr>");
            html.Append("<tr><td><br/></td></tr>");
            html.Append("</tbody></table>");
            html.Append("<table style=' border: 1px solid #000; border-bottom: 0; width:100%;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>NAME OF CFS/ ICD</th>");
            html.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>INCOME (RS. IN LACS)</th>");
            html.Append("<th colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>HANDLED DURING THIS WEEK (TEUs)</th>");
            html.Append("<th colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>HANDLED DURING LAST WEEK (TEUs)</th>");
            html.Append("<th colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>HANDLED DURING CORRESPONDING PERIOD LAST YEAR (TEUs)</th>");
            html.Append("<th colspan='1' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 70px;'>PROG. SINCE APRIL' " + FY1 + "</th>");
            html.Append("<th colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 70px;'>HANDLING IN " + FY2 + "</th></tr>");
            html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>THIS WEEK</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>LAST WEEK</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>THIS WEEK LAST YEAR</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IMPORT</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>EXPORT</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>EMPTY</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TOTAL</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IMPORT</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>EXPORT</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>EMPTY</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TOTAL</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IMPORT</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>EXPORT</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>EMPTY</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TOTAL</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TOTAL (TEUs)</th>");
            html.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TOTAL (TEUs)</th>");
            html.Append("</tr></thead>");
            html.Append("<tbody>");
            html.Append("<tr>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 140px;'>ICD-PATPARGANJ,DELHI</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[0].Income.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[1].Income.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[2].Income.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[0].Import.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[0].Export.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[0].Empty.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + (data[0].Import + data[0].Export + data[0].Empty).ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[1].Import.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[1].Export.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[1].Empty.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + (data[1].Import + data[1].Export + data[1].Empty).ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[2].Import.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[2].Export.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[2].Empty.ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + (data[2].Import + data[2].Export + data[2].Empty).ToString() + "</td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[0].CurYear.ToString() + "</td>");
            html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + data[0].PreYear.ToString() + "</td></tr>");
            html.Append("</tbody>");
            html.Append("</table>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-size:8pt;'><tbody>");
            html.Append("<tr><td><br/><br/><br/><br/><br/><br/><br/></td></tr>");
            html.Append("<tr><th colspan='6' width='50%' style='text-align: left;'>SUBMITTED TO:- <br/> THE REGIONAL MANAGER CWC, RO, DELHI</th>  <th colspan='6' width='50%' style='text-align: right;'>MANAGER</th></tr>");
            html.Append("</tbody></table>");

            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

            lstSB.Add(html.ToString());

            var FileName = "VcReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/

            using (var rp = new ReportingHelper(PdfPageSize.A4Landscape, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }


        #endregion

        #region Landing Certificate
        public ActionResult LandingCertificate()
        {
            return PartialView();
        }
        [HttpGet]
        public ActionResult GetAllTrainNo()
        {
            VIZ_ReportRepository ObjIR = new VIZ_ReportRepository();
            ObjIR.GetAllTrainNo();
            if (ObjIR.DBResponse.Status > 0)
                return Json(ObjIR.DBResponse, JsonRequestBehavior.AllowGet);
            else
                return Json(null, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public ActionResult GetTrainDateByTrainNo(String TrainNo)
        {
            VIZ_ReportRepository ObjIR = new VIZ_ReportRepository();
            ObjIR.GetTrainDateByTrainNo(TrainNo);
            if (ObjIR.DBResponse.Status > 0)
                return Json(ObjIR.DBResponse, JsonRequestBehavior.AllowGet);
            else
                return Json(null, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        //[CustomValidateAntiForgeryToken]
        public ActionResult GetLandingCertificateReport(String TrainNo, String TrainDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetLandingCertificateReport(TrainNo, TrainDate);
            String Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                TrainDetl lstData = new TrainDetl();
                lstData = (TrainDetl)ObjRR.DBResponse.Data;
                Path = GeneratePDFLandingCertificate(lstData, TrainNo);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);

        }
        public string GeneratePDFLandingCertificate(TrainDetl lstData, String TrainNo)
        {
            try
            {
                var FileName = "LandingCertificate.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>LANDING CERTIFICATE</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("<tr><td colspan='12'><br/><br/></td></tr>");
                Pages.Append("<tr><th colspan='12' style='font-size:12px;'>This is Certify that following import loaded containers arrived at ICD Patparganj via ICD Loni From " + lstData.PortName + " as detailed below:</th></tr>");
                Pages.Append("<tr><td colspan='6' width='50%' style='font-size:11px;'><b>TRAIN NO :</b>" + lstData.TrainNo + "</td> <td colspan='6' width='50%' style='font-size:11px; text-align: right;'><b>TRAIN DATE :</b>" + lstData.TrainDate + "</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sno</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>TP No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;'>TP Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Container No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S Line</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Arrival Date</th></tr></thead>");

                Pages.Append("<tbody>");
                lstData.objTrainSummaryUpload.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.TP_No + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;'>" + item.TP_Date + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Container_No + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + item.CT_Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.S_Line + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ArrivalDate + "</td>");

                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");


                Pages.Append("<table cellspacing='0' cellpadding='5' valign='bottom' style='width:100%;'><tfoot>");
                Pages.Append("<tr><td colspan='12'><br/><br/><br/><br/></td></tr>");
                Pages.Append("<tr><th colspan='6' width='50%' style='font-size:12px;'>Superitendent (Customs) <br/> ICD Patparganj</th> <th colspan='6' width='50%' style='font-size:12px; text-align: right;'>Import Incharge <br/> ICD Patparganj</th></tr>");
                Pages.Append("</tfoot></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region SD Details Report

        public ActionResult SDDetailsReport()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForSDDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }


        [HttpGet]
        public JsonResult SearchParty(string PartyCode)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForSDDet(PartyCode, 0);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadParty(string PartyCode, int Page)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForSDDet(PartyCode, Page);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetSDDetReport(string FromDate, string ToDate, int PartyId)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetSDDetStatement(PartyId, Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                WFLDSDDetailsStatement SDData = new WFLDSDDetailsStatement();
                SDData = (WFLDSDDetailsStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFSDDetReport(SDData, FromDate, ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GeneratePDFSDDetReport(WFLDSDDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "SdReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Visakhapatnam</span><br/><label style='font-size: 14px; font-weight:bold;'>SD STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;'>Transaction Amount</th></tr></thead>");
                Pages.Append("<tbody>");
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='border-right:1px solid #000;width:8%;text-align:right;'>Invoice Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + SDData.UtilizationAmount + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Long Standing Report For Container
        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult LongStandingImpLoadedCont()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetLongStandingImpLoadedCont(WFLD_LongStandingImpCon ObjContainerBalanceInCFS)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_LongStandingImpConDtl> LstContainerBalanceInCFS = new List<WFLD_LongStandingImpConDtl>();
            ObjRR.GetLongStandingImpLoadedCont(ObjContainerBalanceInCFS);
            String Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerBalanceInCFS = (List<WFLD_LongStandingImpConDtl>)ObjRR.DBResponse.Data;
                Path = GeneratePDFLongStandingImpLoadedCont(LstContainerBalanceInCFS, ObjContainerBalanceInCFS);

            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);

        }

        [HttpPost]

        public String GeneratePDFLongStandingImpLoadedCont(List<WFLD_LongStandingImpConDtl> lstData, WFLD_LongStandingImpCon Obj)
        {
            try
            {
                var FileName = "LongStandingImpLoadCon.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>CFS Whitefield</span><br/><label style='font-size: 16px; font-weight:bold;'>Inland Container Depot.</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("<tr><td colspan='12'><br/></td></tr>");
                Pages.Append("<tr><th colspan='12' style='font-size:14px; text-align: center;'>Import loaded containers Lying in ICD Patparganj more than " + Obj.days + " as on " + Obj.ToDate + " </th></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:6pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Sno</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>BOL No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>IGM No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>IGM Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Importer</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Address</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Container No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>ICD Code</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sla Cd</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>No Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Gr.Wt.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Comdty.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>G/H/F</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Notice1</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Date1</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Notice2</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Date2</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Nocr</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Remarks1</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Remarks2</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.BOLNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.IGMNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.IGMDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ImporterName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ImporterAddress + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SlaCd + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.NoOfPkg + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.GrWt + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Commodity + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CargoType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Notice1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Date1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Notice2 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Date2 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Nocr + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Remarks1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Remarks2 + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' valign='bottom' style='width:100%;'><tfoot>");
                Pages.Append("<tr><td colspan='12'><br/><br/><br/><br/></td></tr>");
                Pages.Append("</tfoot></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }

        }
        #endregion

        #region ECONOMY REPORT
        public ActionResult EconomyReport()
        {
            return PartialView();
        }

        public JsonResult GetEconomyReport(int Month, int Year)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetEconomyReport(Month, Year);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        public JsonResult SaveEconomyReport(int Month, int Year, List<EconomyReport> lstRptData)
        {
            try
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

                decimal result;
                List<EconomyReport> lst = new List<EconomyReport>();
                lstRptData.ForEach(item =>
                {
                    if (decimal.TryParse(item.Amount, out result))
                    {
                        lst.Add(item);
                    }
                });

                string xml = "";
                if (lst != null)
                {
                    xml = Utility.CreateXML(lst);
                }

                ObjRR.SaveEconomyReport(Month, Year, xml, ((Login)(Session["LoginUser"])).Uid);

                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);

            }
            catch (Exception ex)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!", Data = "" }, JsonRequestBehavior.AllowGet);
            }
        }

        [HttpPost]
        public JsonResult EconomyReportPrint(int Month, int Year)
        {
            try
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.GetEconomyReportForPrint(Month, Year);
                if (ObjRR.DBResponse.Status == 1)
                {
                    return Json(new { Status = 1, Message = "Data Detected", Data = GeneratingPDFforEcoRpt((EconomyRptPrint)ObjRR.DBResponse.Data) }, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json(new { Status = -1, Message = ObjRR.DBResponse.Message }, JsonRequestBehavior.AllowGet);
                }

            }
            catch (Exception e)
            {
                return Json(new { Status = -1, Message = "Internal Error Occurs !!" }, JsonRequestBehavior.AllowGet);
            }
        }
        [NonAction]
        public string GeneratingPDFforEcoRpt(EconomyRptPrint data)
        {

            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            StringBuilder html2 = new StringBuilder();
            StringBuilder html3 = new StringBuilder();
            StringBuilder html4 = new StringBuilder();
            StringBuilder html5 = new StringBuilder();
            //html.Append("<h1>Test</h1>");
            //Page 1*********************************************************************************************************************
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif;'><thead>");
            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%;'><tbody>");
            html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/>");
            html.Append("<label style='font-size: 14px; font-weight:bold;'>ECONOMY REPORT FOR THE PERIOD OF " + Convert.ToDateTime(data.FormDate).ToString("dd-MMM-yyyy") + " TO " + Convert.ToDateTime(data.ToDate).ToString("dd-MMM-yyyy") + "</label></td></tr>");
            html.Append("<tr><th><br/><br/></th></tr>");
            html.Append("<tr><th colspan='12' style='text-align: right; font-size:8pt;'>DATED : " + Convert.ToDateTime(data.CreatedOn).ToString("dd-MMM-yyyy") + "</th></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");
            html.Append("</thead></table>");

            html.Append("<table style='width:100%; margin-bottom:20px; font-size: 8pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th cellpadding='5' colspan='12' style='border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 9pt; text-align: center;'>COVERED AREA AND ITS CAPACITY</th></tr>");
            html.Append("<tr><th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Gross in <br/> Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Net(Usable) in Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Grids/Slot(Nos)</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Std.Bags(Nos)</th>");
            html.Append("</tr>");
            html.Append("</thead>");

            html.Append("<tbody>");
            html.Append("<tr><td colspan='3' style='padding:15px 5px;'>" + data.SqmCovered + "</td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'>" + data.BagCovered + "</td></tr>");
            html.Append("</tbody>");
            html.Append("</table>");

            html.Append("<table style='width:100%; margin-bottom:20px; font-size: 8pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th colspan='12' style='border-top: 1px solid #000; border-bottom: 1px solid #000; font-size: 9pt; text-align: center;'>OPEN AREA AND ITS CAPACITY</th></tr>");
            html.Append("<tr><th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Gross in <br/> Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Net(Usable) in Sq.Mtrs</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>TEU's(Nos.)</th>");
            html.Append("<th colspan='3' style='border-bottom: 1px solid #000; text-align:left;'>Std.Bags(Nos)</th>");
            html.Append("</tr>");
            html.Append("</thead>");
            html.Append("<tbody>");
            html.Append("<tr><td colspan='3' style='padding:15px 5px;'>" + data.SqmOpen + "</td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'></td>");
            html.Append("<td colspan='3' style='padding:15px 5px;'>" + data.BagOpen + "</td></tr>");
            html.Append("</tbody>");
            html.Append("</table>");

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-size:9pt;'><tbody>");
            html.Append("<tr><td><br/><br/><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12' style='text-align: left;'>Submmited to:- <br/> <b>The Regional Manager</b> <br/> CWC, RO, DELHI</td></tr>");
            html.Append("</tbody></table>");

            //html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            lstSB.Add(html.ToString());
            //Page 2*********************************************************************************************************************

            html2.Append("<table style='border-top: 1px solid #000;width:100%; font-size:8pt;' cellspacing='0' cellpadding='5'>");
            html2.Append("<thead>");
            html2.Append("<tr><th style='border-bottom: 1px solid #000; text-align:left; width:50%;'>Head of Income</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>Amount <br/> RS   P.</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>Cumulative <br/> Since 1st April</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>Progressive Cumulative <br/> RS   P.</th></tr>");

            html2.Append("<tr><th style='border-bottom: 1px solid #000; text-align:left; width:50%;'>1</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>2</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>3</th>");
            html2.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:17%;'>4</th></tr>");
            html2.Append("</thead>");
            html2.Append("<tbody>");

            data.RptDetails.Where(x => x.ItemType == "I" && x.PageNo == 2).ToList().ForEach(i =>
            {
                html2.Append("<tr><td cellpadding='5'>" + i.ItemLabel + "</td>");
                html2.Append("<td cellpadding='5'>" + i.Amount + "</td>");
                html2.Append("<td cellpadding='5'>" + i.CumAmount + "</td>");
                html2.Append("<td cellpadding='5'>" + i.ProCumAmount + "</td></tr>");
            });
            html2.Append("</tbody>");
            html2.Append("</table>");

            lstSB.Add(html2.ToString());

            //Page 3**********************************************************************************************************************          
            html3.Append("<table style='width:100%; font-size:9pt;' cellspacing='0' cellpadding='5'>");
            html3.Append("<thead>");
            html3.Append("<tr><th style='border-top:1px solid #000; border-bottom: 1px solid #000;text-align:left; width:50%;''>1</th>");
            html3.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:17%;'>2</th>");
            html3.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:17%;'>3</th>");
            html3.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:17%;'>4</th></tr>");
            html3.Append("</thead>");
            html3.Append("<tbody>");

            data.RptDetails.Where(x => x.ItemType == "I" && x.PageNo == 3).ToList().ForEach(i =>
            {
                html3.Append("<tr><td cellpadding='4'>" + i.ItemLabel + "</td>");
                html3.Append("<td cellpadding='4'>" + i.Amount + "</td>");
                html3.Append("<td cellpadding='4'>" + i.CumAmount + "</td>");
                html3.Append("<td cellpadding='4'>" + i.ProCumAmount + "</td></tr>");
            });
            html3.Append("</tbody>");
            html3.Append("</table>");
            lstSB.Add(html3.ToString());

            //Page 4**********************************************************************************************************************            
            html4.Append("<table style='width:100%; font-size: 8pt;' cellspacing='0' cellpadding='5'>");
            html4.Append("<thead>");
            html4.Append("<tr><th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:8%;'>Code No</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:47%;'>Head of Expenses</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Amount <br/> RS   P.</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Cumulative <br/> Since 1st April</th>");
            html4.Append("<th style='border-top:1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Progressive Cumulative <br/> RS   P.</th></tr>");

            html4.Append("<tr><th style='border-bottom: 1px solid #000; text-align:left; width:8%;'>5</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:47%;'>6</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:15%;'>7</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:15%;'>8</th>");
            html4.Append("<th style='border-bottom: 1px solid #000; text-align:left; width:15%;'>9</th></tr>");
            html4.Append("</thead>");
            html4.Append("<tbody>");

            int maxSr = data.RptDetails.Where(x => x.ItemType == "E").Max(x => x.Sr);
            data.RptDetails.Where(x => x.ItemType == "E" && x.PageNo == 4).ToList().ForEach(i =>
            {

                html4.Append("<tr>");
                if (i.Sr == maxSr)
                {
                    html4.Append("<td cellpadding='5' colspan='2'>" + i.ItemLabel + "</td>");
                    //html4.Append("<td style='font-size: 9pt; padding:10px;'>" + i.ItemLabel + "</td>");
                }
                else
                {
                    html4.Append("<td cellpadding='5'>" + i.ItemCodeNo + "</td>");
                    html4.Append("<td cellpadding='5'>" + i.ItemLabel + "</td>");
                }
                html4.Append("<td cellpadding='5'>" + i.Amount + "</td>");
                html4.Append("<td cellpadding='5'>" + i.CumAmount + "</td>");
                html4.Append("<td cellpadding='5'>" + i.ProCumAmount + "</td></tr>");
            });

            html4.Append("</tbody>");
            /*html4.Append("<tfoot>");
            html4.Append("<tr><th colspan='2' style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Excess of Income over Expenditure</th>");
            html4.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html4.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html4.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th></tr>");
            html4.Append("</tfoot>");*/
            html4.Append("</table>");
            lstSB.Add(html4.ToString());

            //Page last**********************************************************************************************************************    

            html5.Append("<table style='width:100%; font-size:8pt;' cellspacing='0' cellpadding='5'>");
            html5.Append("<thead><tr><th colspan='12' style='text-align: left; font-size:9pt;'>Summary of Financial Performance for the period of " + Convert.ToDateTime(data.FormDate).ToString("dd-MMM-yyyy") + " to " + Convert.ToDateTime(data.ToDate).ToString("dd-MMM-yyyy") + "</th></tr>");
            html5.Append("<tr><th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Code No</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:40%;'>Head of Income</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Amount <br /> RS   P.</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Cumulative <br /> Since 1st April</th>");
            html5.Append("<th style='border-top: 1px solid #000; border-bottom: 1px solid #000; text-align:left; width:15%;'>Progressive Cumulative <br /> RS   P.</th></tr>");
            html5.Append("</thead>");
            html5.Append("<tbody>");
            data.RptSummary.ForEach(i =>
            {
                html5.Append("<tr><td cellpadding='5'>" + i.CodeNo + "</td>");
                html5.Append("<td cellpadding='5'>" + i.ItemLabel + "</td>");
                html5.Append("<td cellpadding='5'>" + i.Amount + "</td>");
                html5.Append("<td cellpadding='5'>" + i.CumAmount + "</td>");
                html5.Append("<td cellpadding='5'>" + i.ProCumAmount + "</td></tr>");
            });
            html5.Append("</tbody>");
            /*html5.Append("<tfoot>");
            html5.Append("<tr><th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'></th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Total(A+B)</th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th>");
            html5.Append("<th style='border-top:1px solid #000; font-size: 11pt; padding:10px; text-align:left;'>Dynamic</th></tr>");
            html5.Append("</tfoot>");*/
            html5.Append("</table>");

            html5.Append("<table style='border-top:1px solid #000; width:100%;' cellspacing='0' cellpadding='10'>");
            html5.Append("<tbody>");
            html5.Append("<tr><td width='3%' align='right' style='font-size:8pt;'>1.</td><td colspan='2' width='85%' style='font-size:9pt;'>Indicate total number of time barred Bond and income involved(with vearwise break-up)</td></tr>");
            html5.Append("<tr><td width='3%' align='right' style='font-size:8pt;'>2.</td><td colspan='2' width='85%' style='font-size:9pt;'>Number of contaiers seized abandanded and their income involved(with vearwise break-up)</td></tr>");
            html5.Append("</tbody>");
            html5.Append("</table>");

            lstSB.Add(html5.ToString());

            var FileName = "EcoReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/

            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 40f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region Long Standing Report For Imp Loaded Cargo
        [HttpGet]
        public ActionResult LongStandingImpLoadedCargo()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetGodownRightsWise(((Login)Session["LoginUser"]).Uid);
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetLongStandingImpLoadedCargo(WFLD_LongStandingImpCargo ObjContainerBalanceInCFS)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_LongStandingImpCargoDtl> LstContainerBalanceInCFS = new List<WFLD_LongStandingImpCargoDtl>();
            ObjRR.GetLongStandingImpLoadedCargo(ObjContainerBalanceInCFS);
            String Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerBalanceInCFS = (List<WFLD_LongStandingImpCargoDtl>)ObjRR.DBResponse.Data;
                Path = GeneratePDFLongStandingImpLoadedCargo(LstContainerBalanceInCFS, ObjContainerBalanceInCFS);

            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);

        }

        [HttpPost]

        public String GeneratePDFLongStandingImpLoadedCargo(List<WFLD_LongStandingImpCargoDtl> lstData, WFLD_LongStandingImpCargo Obj)
        {
            try
            {
                var FileName = "LongStandingImpLoadCargo.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>CFS Whitefield</span><br/><label style='font-size: 16px; font-weight:bold;'>Inland Container Depot.</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("<tr><td colspan='12'><br/></td></tr>");
                Pages.Append("<tr><th colspan='12' style='font-size:14px; text-align: center;'>Import Cargo Lying in Shed more than " + Obj.days + " as on " + Obj.AsOnDate + " </th></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>SHED :</b> " + Obj.GodownName + "</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:6pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S.No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>OBL No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>IGM No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>IGM Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Importer</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Address</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Container No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CFS Code</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Dstf Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sla Cd</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>No Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Gr.Wt.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Comdty.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>G/H/P*</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Notice1</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Notice2</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>NOC</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Remarks1</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Remarks2</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.BOLNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.IGMNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.IGMDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ImporterName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ImporterAddress + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.DstfDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SlaCd + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.NoOfPkg + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.GrWt + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Commodity + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CargoType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Notice1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Date1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Notice2 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Date2 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Nocr + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Remarks1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Remarks2 + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' valign='bottom' style='width:100%;'><tfoot>");
                Pages.Append("<tr><td colspan='12'><br/><br/><br/><br/></td></tr>");
                Pages.Append("</tfoot></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }

        }
        #endregion

        #region Export Job Order
        [HttpGet]
        public ActionResult ExportJobOrderReport(string type = "Road")
        {
            ViewData["InvType"] = type;
            //  DataSet ds1 = new DataSet();
            // GeneratingBulkPDFforRR(ds1);
            VIZ_ReportRepository ObjIR = new VIZ_ReportRepository();



            //     ObjIR.GetContainerForExportJobOrder(type);
            //    if (ObjIR.DBResponse.Data != null)
            //    {
            //        ViewBag.LstContainerNo = new SelectList((List<PPGExportRRReport>)ObjIR.DBResponse.Data, "CFSCode", "ContainerNo");
            //    }
            //    else
            //    {
            //       ViewBag.LstRequestNo = null;
            //    }
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetExportJobReport(WFLDExportJobOrder ObjDailyPdaActivityReport)
        {
            //  VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            string FilePath = "";
            //  List<DailyPdaActivityReport> LstDailyPdaActivityReport = new List<DailyPdaActivityReport>();
            //   Login objLogin = (Login)Session["LoginUser"];
            //    ObjRR.PrintExportRR(ObjDailyPdaActivityReport.ContainerNo, ObjDailyPdaActivityReport.CFSCode);//, objLogin.Uid
            //  if (ObjRR.DBResponse.Data != null)
            // {
            // DataSet ds = (DataSet)ObjRR.DBResponse.Data;
            FilePath = GeneratingBulkPDFforJobOrder(ObjDailyPdaActivityReport.PeriodFrom, ObjDailyPdaActivityReport.PeriodTo, ObjDailyPdaActivityReport.TransactionType);


            return Json(new { Status = 1, Data = FilePath });
            // }
            // else
            //    return Json(new { Status = -1, Data = "No Record Found." });

        }


        [NonAction]
        public string GeneratingBulkPDFforJobOrder(String PFrom, String PTo, String TType)
        {

            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.PrintExportJobOrder(PFrom, PTo, TType);//, objLogin.Uid
            CwcExim.Areas.Export.Models.WFLDPrintJOModel ObjRRData = new CwcExim.Areas.Export.Models.WFLDPrintJOModel();
            List<CwcExim.Areas.Export.Models.WFLDPrintJOModelDet> lstData = new List<CwcExim.Areas.Export.Models.WFLDPrintJOModelDet>();
            lstData = (List<CwcExim.Areas.Export.Models.WFLDPrintJOModelDet>)ObjRR.DBResponse.Data;

            ObjRR.PrintExportJoSum(PFrom, PTo, TType);//, objLogin.Uid
                                                      //   CwcExim.Areas.Export.Models.ppgexportjobordersum ObjRRSumData = new CwcExim.Areas.Export.Models.ppgexportjobordersum();
            List<CwcExim.Areas.Export.Models.WFLDexportjobordersum> lstDataSum = new List<CwcExim.Areas.Export.Models.WFLDexportjobordersum>();
            lstDataSum = (List<CwcExim.Areas.Export.Models.WFLDexportjobordersum>)ObjRR.DBResponse.Data;


            //  PrintExportRRReport ObjRRData = new PrintExportRRReport();
            List<string> lstSB = new List<string>();
            DateTime Dt = DateTime.Now.Date;
            String DtValue = Dt.ToString("dd/MM/yyyy");
            StringBuilder html = new StringBuilder();

            if (TType.Equals("Train"))
            {
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Job Order For MOVEMENT OF Export LDD CONTAINERS</label></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("<tr><td colspan='12'><br/></td></tr>");
                html.Append("<tr><td colspan='6' width='50%' style='font-size:11px;'><b>TO :</b> <br/> M/s </td> <td colspan='6' width='50%' style='font-size:11px; text-align: right;'><b>DATE :</b>" + DtValue + "</td></tr>");
                html.Append("<tr><td colspan='12'><br/><br/></td></tr>");
                html.Append("<tr><th colspan='12' style='font-size:12px;'>Please arrange movement of following export Loaded/Empty Containerrs from ICD PPG to ICD LONI</th></tr>");
                html.Append("</thead></table>");
            }


            if (TType.Equals("Road"))
            {
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Job Order For MOVEMENT OF Export LDD CONTAINERS</label></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr>");
                html.Append("<tr><td colspan='12'><br/></td></tr>");
                html.Append("<tr><td colspan='6' width='50%' style='font-size:11px;'><b>TO :</b> <br/> M/s </td> <td colspan='6' width='50%' style='font-size:11px; text-align: right;'><b>DATE :</b>" + DtValue + "</td></tr>");
                html.Append("<tr><td colspan='12'><br/><br/></td></tr>");
                // html.Append("<tr><th colspan='12' style='font-size:12px;'>Please arrange movement of following export Loaded/Empty Containerrs from ICD PPG to ICD LONI</th></tr>");
                html.Append("</thead></table>");
            }
            if (ObjRR.DBResponse.Data != null)
            {

                //   ObjRRData = (CwcExim.Areas.Export.Models.WFLDPrintJOModel)ObjRR.DBResponse.Data;
                String Pnm = "", Pynm = "";
                String Cont = "", Sz = "", Loaded = "";
                int Pack = 0;
                decimal GW = 0;


                decimal RR = 0;
                decimal THC = 0;
                decimal CGST = 0;
                decimal SGST = 0;
                decimal IGST = 0;
                decimal INVAMT = 0;

                if (TType.Equals("Train"))
                {



                    html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:8pt;'>");
                    html.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S.N</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>ICD Code</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Container No</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Size</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>S/line</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>On behalf of</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Cust Seal</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sla Seal</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>POL</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>POD</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Tr wt</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:0;width:8%;'>Crg wt</th></tr></thead>");

                    html.Append("<tbody>");
                    int i = 1;
                    int jnpt20, jnpt40, jnpttotal, jnpttues;
                    jnpt20 = 0;
                    jnpt40 = 0;
                    jnpttotal = 0;
                    jnpttues = 0;
                    int GTIL20, GTIL40, GTILtotal, GTILtues;
                    GTIL20 = 0;
                    GTIL40 = 0;
                    GTILtotal = 0;
                    GTILtues = 0;
                    int NSICT20, NSICT40, NSICTtotal, NSICTtues;
                    NSICT20 = 0;
                    NSICT40 = 0;
                    NSICTtotal = 0;
                    NSICTtues = 0;
                    int SUB20, SUB40, SUBtotal, SUBtues;
                    SUB20 = 0;
                    SUB40 = 0;
                    SUBtotal = 0;
                    SUBtues = 0;
                    int MND20, MND40, MNDtotal, MNDtues;
                    MND20 = 0;
                    MND40 = 0;
                    MNDtotal = 0;
                    MNDtues = 0;
                    int PBR20, PBR40, PBRtotal, PBRtues;
                    PBR20 = 0;
                    PBR40 = 0;
                    PBRtotal = 0;
                    PBRtues = 0;

                    int TOT20, TOT40, TOTtotal, TOTtues;
                    TOT20 = 0;
                    TOT40 = 0;
                    TOTtotal = 0;
                    TOTtues = 0;
                    lstData.ForEach(item =>
                    {
                        html.Append("<tr><td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CFSCode + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ContainerNo + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.ContainerSize + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ShippingLineName + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.OnBehalf + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CustomSealNo + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Sline + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.POL + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.POD + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Ct_Tare + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:0;width:8%;'>" + item.Cargo_Wt + "</td></tr>");
                        if (item.POL.Equals("JNPT"))
                        {
                            if (item.ContainerSize.Equals("20"))
                            {
                                jnpt20 = jnpt20 + 1;
                            }
                            else
                            {
                                jnpt40 = jnpt40 + 1;
                            }
                        }

                        if (item.POL.Equals("GTIL"))
                        {
                            if (item.ContainerSize.Equals("20"))
                            {
                                GTIL20 = GTIL20 + 1;
                            }
                            else
                            {
                                GTIL40 = GTIL40 + 1;
                            }
                        }

                        if (item.POL.Equals("NSICT"))
                        {
                            if (item.ContainerSize.Equals("20"))
                            {
                                NSICT20 = NSICT20 + 1;
                            }
                            else
                            {
                                NSICT40 = NSICT40 + 1;
                            }
                        }

                        if (item.POL.Equals("MND"))
                        {
                            if (item.ContainerSize.Equals("20"))
                            {
                                MND20 = MND20 + 1;
                            }
                            else
                            {
                                MND40 = MND40 + 1;
                            }
                        }

                        if (item.POL.Equals("PBR"))
                        {
                            if (item.ContainerSize.Equals("20"))
                            {
                                PBR20 = PBR20 + 1;
                            }
                            else
                            {
                                PBR40 = PBR40 + 1;
                            }
                        }
                        i++;
                    });
                    jnpttotal = jnpt20 + jnpt40;
                    jnpttues = jnpt20 + (jnpt40 * 2);

                    GTILtotal = GTIL20 + GTIL40;
                    GTILtues = GTIL20 + (GTIL40 * 2);

                    NSICTtotal = NSICT20 + NSICT40;
                    NSICTtues = NSICT20 + (NSICT40 * 2);
                    SUB20 = jnpt20 + GTIL20 + NSICT20;
                    SUB40 = jnpt40 + GTIL40 + NSICT40;
                    SUBtotal = jnpttotal + GTILtotal + NSICTtotal;
                    SUBtues = jnpttues + GTILtues + NSICTtues;
                    MNDtotal = MND20 + MND40;
                    MNDtues = MND20 + (MND40 * 2);
                    PBRtotal = PBR20 + PBR40;
                    PBRtues = PBR20 + (PBR40 * 2);
                    TOT20 = SUB20 + MND20 + PBR20;
                    TOT40 = SUB40 + MND40 + PBR40;
                    TOTtotal = SUBtotal + MNDtotal + PBRtotal;
                    TOTtues = SUBtues + MNDtues + PBRtues;
                    html.Append("</tbody></table>");

                    html.Append("<table cellspacing='0' cellpadding='5' style='width:90%; border-collapse:collapse; text-align:center; margin-top:20px; font-size:8pt;'>");
                    html.Append("<thead><tr><th colspan='12' style='text-align:left;'>SUMMARY REPORT</th></tr>");
                    html.Append("<tr><th style='border:1px solid #000;border-right:0;width:10%;'></th>");
                    html.Append("<th style='border:1px solid #000;border-right:0;width:10%;'>20</th>");
                    html.Append("<th style='border:1px solid #000;border-right:0;width:10%;'>40</th>");
                    html.Append("<th style='border:1px solid #000;border-right:0;width:10%;'>TOTAL</th>");
                    html.Append("<th style='border:1px solid #000;border-right:1px solid #000;width:10%;'>TEUS</th></tr></thead>");
                    html.Append("<tbody>");

                    html.Append("<tr><th style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>JNPT</th>");
                    html.Append("<td style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>" + jnpt20 + " </td>");
                    html.Append("<td style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>" + jnpt40 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>" + jnpttotal + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + jnpttues + "</td></tr>");

                    html.Append("<tr><th style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>GTIL</th>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + GTIL20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + GTIL40 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + GTILtotal + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + GTILtues + "</td></tr>");

                    html.Append("<tr><th style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>NSICT</th>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + NSICT20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + NSICT40 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + NSICTtotal + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + NSICTtues + "</td></tr>");

                    html.Append("<tr><th style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>SUB TOTAL</th>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + SUB20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + SUB40 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + SUBtotal + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + SUBtues + "</td></tr>");

                    html.Append("<tr><th style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>MND</th>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + MND20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + MND40 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + MNDtotal + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + MNDtues + "</td></tr>");

                    html.Append("<tr><th style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>PBR</th>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + PBR20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + PBR20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + PBRtotal + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + PBRtues + "</td></tr>");

                    html.Append("<tr><th style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>TOTAL</th>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + TOT20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + TOT40 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;'>" + TOTtotal + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + TOTtues + "</td></tr>");
                    html.Append("</tbody></table>");

                    html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; text-align:center; margin-top:20px; font-size:8pt;'><tbody>");
                    html.Append("<tr><td width='10%' valign='top' align='right'>REMARKS :</td><td colspan='2' width='85%' style='text-align: left;'>H & T Contracter is required to transport the Export Loaded Containers from ICD-PPG to ICD-LONI with in 12hrs i.e from 22:00 p.m to 10:00 a.m</td></tr>");
                    html.Append("<tr><td width='10%' valign='top' align='right'>COPY TO :</td><td colspan='2' width='85%' style='text-align: left;'>1. Suman Forwarding Agency Pvt Ltd. - ICD Ppg <br/> 2. SAM/AM - A/C ICD Ppg <br/>  3. Anil William Thomas Security Agency. - ICD Ppg <br/>  4. Manager ICD LONI (In Duplicate)</td></tr>");
                    html.Append("</tbody></table>");
                }
                else
                {


                    int i = 1;
                    html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:8pt;'>");
                    html.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>S.N</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>ICD Code</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Container No</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Size</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>S/line</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>On behalf of</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Cust Seal</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Sla Seal</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>POL</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>POD</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Tr wt</th>");
                    html.Append("<th style='border-bottom:1px solid #000;border-right:0;width:8%;'>Crg wt</th></tr></thead>");

                    html.Append("<tbody>");
                    lstData.ForEach(item =>
                    {
                        html.Append("<tr><td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CFSCode + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ContainerNo + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.ContainerSize + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ShippingLineName + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.OnBehalf + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CustomSealNo + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Sline + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.POL + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.POD + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Ct_Tare + "</td>");
                        html.Append("<td style='border-bottom:1px solid #000;border-right:0;width:8%;'>" + item.Cargo_Wt + "</td></tr>");
                        i++;
                    });
                    html.Append("</tbody></table>");

                    html.Append("<table cellspacing='0' cellpadding='5' style='width:90%; border-collapse:collapse; text-align:center; margin-top:20px; font-size:8pt;'>");
                    html.Append("<thead><tr><th colspan='12' style='text-align:left; font-size:10pt;'>SUMMARY REPORT</th></tr>");
                    html.Append("<tr><th style='border:1px solid #000;border-right:0;width:10%;'></th>");
                    html.Append("<th style='border:1px solid #000;border-right:0;width:10%;'>20</th>");
                    html.Append("<th style='border:1px solid #000;border-right:0;width:10%;'>40</th>");
                    html.Append("<th style='border:1px solid #000;border-right:0;width:10%;'>TOTAL</th>");
                    html.Append("<th style='border:1px solid #000;border-right:1px solid #000;width:10%;'>TEUS</th></tr></thead>");
                    html.Append("<tbody>");
                    int tot = 0;
                    int tottues = 0;
                    int grosstot = 0;
                    int grosstues = 0;
                    int tot20 = 0;
                    int tot40 = 0;
                    lstDataSum.ForEach(itemm =>
                    {
                        tot = itemm.SZ20 + itemm.SZ40;
                        grosstot = grosstot + tot;
                        tottues = itemm.SZ20 + (itemm.SZ40 * 2);
                        grosstues = grosstues + tottues;
                        tot20 = tot20 + itemm.SZ20;
                        tot40 = tot40 + itemm.SZ40;
                        html.Append("<tr><th style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>" + itemm.POL + "</th>");
                        html.Append("<td style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>" + itemm.SZ20 + "</td>");
                        html.Append("<td style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>" + itemm.SZ40 + "</td>");
                        html.Append("<td style='border:1px solid #000;border-right:0;border-top:0;width:10%;'>" + tot + "</td>");
                        html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;'>" + tottues + "</td></tr>");
                        tot = 0;
                        tottues = 0;
                    });
                    html.Append("<tr><th style='border:1px solid #000;border-top:0;border-right:0;width:10%;font-size:9pt;'>TOTAL</th>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;font-size:9pt;'>" + tot20 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;font-size:9pt;'>" + tot40 + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:0;width:10%;font-size:9pt;'>" + grosstot + "</td>");
                    html.Append("<td style='border:1px solid #000;border-top:0;border-right:1px solid #000;width:10%;font-size:9pt;'>" + grosstues + "</td></tr>");
                    html.Append("</tbody></table>");

                    html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; text-align:center; margin-top:20px; font-size:8pt;'><tbody>");
                    html.Append("<tr><td width='10%' valign='top' align='right'>COPY TO :</td><td colspan='2' width='85%' style='text-align: left;'>1. Suman Forwarding Agency Pvt Ltd. - ICD Ppg <br/> 2. SAM/AM - A/C ICD Ppg <br/>  3. Anil William Thomas Security Agency. - ICD Ppg</td></tr>");
                    html.Append("</tbody></table>");
                }



            }
            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            lstSB.Add(html.ToString());
            var FileName = "ExportJobReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region  Core Data Report

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult CoreDataReport()
        {

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCoreDataReport(WFLDCoreData ObjCoreData)
        {
            String FilePath = "";
            FilePath = GenerateCoreDataReportPDF(ObjCoreData);


            return Json(new { Status = 1, Data = FilePath });
        }

        [NonAction]
        public String GenerateCoreDataReportPDF(WFLDCoreData ObjCoredt)
        {


            List<string> lstSB = new List<string>();
            StringBuilder html = new StringBuilder();
            string fdt = Convert.ToDateTime(ObjCoredt.PeriodFrom).ToString("yyyy-MM-dd");
            string tdt = Convert.ToDateTime(ObjCoredt.PeriodTo).ToString("yyyy-MM-dd");
            string fdpt = Convert.ToDateTime(ObjCoredt.PeriodFrom).ToString("dd/MM/yyyy");
            string tdpt = Convert.ToDateTime(ObjCoredt.PeriodTo).ToString("dd/MM/yyyy");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%;'><tbody>");
            html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td colspan='10' width='100%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
            html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking)</label><br />");
            html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>CFS Whitefield</span>");
            html.Append("<br/><label style='font-size: 14px; font-weight:bold;'>CORE DATA FOR THE PERIOD OF " + fdpt + " TO " + tdpt + "</label>");
            html.Append("</td></tr>");
            html.Append("<tr><td><br/><br/></td></tr>");
            html.Append("</tbody></table>");

            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.PrintCoreData(fdt, tdt);//, objLogin.Uid

            WFLDCoreData objPrint = (WFLDCoreData)ObjRR.DBResponse.Data;

            /*Header Part*/
            if (ObjRR.DBResponse.Data != null)
            {
                html.Append("<table cellspacing='0' cellpadding='5' style='border:1px solid #000; border-bottom:0; font-size:9pt; width:100%;'>");
                html.Append("<thead><tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3' width='40%'>Description</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000; border-right:1px solid #000;text-align:center;' colspan='3' width='20%'>Income through cash realization(as per cash Book) <br/> ( Amt. in Rs.)</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000; border-right:1px solid #000;text-align:center;' colspan='3' width='20%'>Income through bill raised on depositors(as per cash Book) <br/> ( Amt. in Rs.)</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3' width='20%'>Total <br/> ( Amt. in Rs.)</td></tr></thead>");

                html.Append("<tbody>");
                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000; border-right:1px solid #000;' colspan='3'>Warehousing income(Excluding S.Tax & Cess)</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000; border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><th cellpadding='5' style='border-bottom:1px solid #000; border-right:1px solid #000;' colspan='3'>Foodgrain</th>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>FCI</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Fertilizers</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Other Commodities(including Air Cargo)</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Public Bonded</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Management Bonded</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>ICD/CFS(Including leasing)(Excluding PDA collection)</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'>" + objPrint.ICDCash + "</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'>" + objPrint.ICDBill + "</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'>" + objPrint.ICDTotal + "</td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Railside Warehousing</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>DESS/OTA & others</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'>" + objPrint.DESSCash + "</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'>" + objPrint.DESSTotal + "</td></tr>");

                html.Append("<tr><th cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Total Warehousing charges</th>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><th cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>M.F Receipts (H & T)</th>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>General</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>CFS/ICD</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'>" + objPrint.CFSCash + "</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'>" + objPrint.CFSTotal + "</td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Haulage Charges</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Income from Rail Haulage <br/> Import(PBR & MND)</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'>" + objPrint.IRRCash + "</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'>" + objPrint.IRRTotal + "</td></tr>");

                html.Append("<tr><th cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Terminal Handling Charges</th>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>Other Income(Leased CFS/ICD-Loni/Gr.Noida)</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'></td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'></td></tr>");

                html.Append("<tr><th cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;' colspan='3'>TOTAL INCOME</th>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'>" + objPrint.GrossCash + "</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;border-right:1px solid #000;text-align:center;' colspan='3'>" + objPrint.GrossBill + "</td>");
                html.Append("<td cellpadding='5' style='border-bottom:1px solid #000;text-align:center;' colspan='3'>" + objPrint.GrossTotal + "</td></tr>");
                html.Append("</tbody>");
                html.Append("</table>");
            }

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%;font-size:9pt;'><tbody>");
            html.Append("<tr><td><br/><br/></td></tr>");
            html.Append("<tr><th colspan='12'>Note : Core data should be furnished by fax/phone/ in person by 02 nd of every succeeding month</th></tr>");
            html.Append("<tr><td><br/><br/><br/><br/></td></tr>");
            html.Append("<tr><td colspan='12' style='text-align: left;'><b>SUBMITTED TO:-</b> <br/> <b>THE REGIONAL MANAGER</b> <br/> CWC, RO, DELHI</td></tr>");
            html.Append("</tbody></table>");

            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            lstSB.Add(html.ToString());

            var FileName = "CoreDataReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;


        }





        #endregion

        #region Bill Cum SD Ledger
        public ActionResult BillCumSDLedger()
        {
            AccessRightsRepository ACCR = new AccessRightsRepository();
            ACCR.GetMenuWiseAccessRight(Convert.ToInt32(Session["MenuId"]), ((Login)Session["LoginUser"]).Role.RoleId, Convert.ToInt32(Session["ModuleId"]),
                Convert.ToInt32(Session["BranchId"]));
            ViewBag.RightsList = JsonConvert.SerializeObject(ACCR.DBResponse.Data);

            ImportRepository objImport = new ImportRepository();
            objImport.GetPaymentParty();
            if (objImport.DBResponse.Status > 0)
                ViewBag.PaymentParty = JsonConvert.SerializeObject(objImport.DBResponse.Data);
            else
                ViewBag.PaymentParty = null;

            return PartialView();
        }


        [HttpPost]
        public JsonResult GetBillCumSDLedgerReport(int partyId, string fromdate, string todate)
        {
            try
            {
                VIZ_ReportRepository Repo = new VIZ_ReportRepository();
                Repo.GetBillCumSDLedgerReport(partyId, Convert.ToDateTime(fromdate).ToString("yyyy-MM-dd"), Convert.ToDateTime(todate).ToString("yyyy-MM-dd"), ZonalOffice, ZOAddress);
                object obj = Repo.DBResponse;
                return Json(obj, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Status = 0, Data = "", Message = ex.Message.ToString() }, JsonRequestBehavior.AllowGet);
            }

        }
        #endregion

        #region ContainerOutReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerOutReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerOutReport(ContainerOutReport ObjContainerOutReport)
        {


            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ContainerOutReport LstContainerOutReport = new ContainerOutReport();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerOutport(ObjContainerOutReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                // LstContainerOutReport.lstContainerOutReport = (List<ContainerOutReportList>)ObjRR.DBResponse.Data;
                //LstContainerOutReport = (ContainerOutReport)ObjRR.DBResponse.Data;
                //if (LstContainerOutReport.lstContainerOutReport.Count > 1)
                //{
                //    LstContainerOutReport.lstContainerOutReport.ToList().ForEach(m =>
                //    {
                //        if (m.Size == "20" && m.Size != null && m.Size != "")
                //        {
                //            sizeTwenty += 1;
                //        }
                //        if (m.Size == "40" && m.Size != null && m.Size != "")
                //        {
                //            sizeFourty += 1;
                //        }

                //    });
                //}
                //ViewBag.sizeTwenty = sizeTwenty;
                //ViewBag.sizeFourty = sizeFourty;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerOutReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerOutReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Ppg_Report/ContainerOutReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Ppg_Report/ContainerOutReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region ContainerPaymentInfo
        [HttpGet]
        public ActionResult ContainerPaymentInfo()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.ListOfContainerWithCFSCode("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.lstContainer = Jobject["lstContainer"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }
        [HttpGet]
        public JsonResult SearchByCFSCode(string CFSCode)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.ListOfContainerWithCFSCode(CFSCode, 0);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadContainerList(string CFSCode, int Page)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.ListOfContainerWithCFSCode(CFSCode, Page);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ContainerPaymentDetail(WFLD_ContainerPaymentInfo ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.ContainerPaymentDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    //List<WFLD_ContainerPaymentDtl> lstData = new List<WFLD_ContainerPaymentDtl>();
                    //lstData = (List<WFLD_ContainerPaymentDtl>)ObjRR.DBResponse.Data;
                    WFLD_ContainerPaymentInfo CP = new WFLD_ContainerPaymentInfo();
                    CP = (WFLD_ContainerPaymentInfo)ObjRR.DBResponse.Data;
                    Path = GeneratePDFContainerPayment(CP);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFContainerPayment(WFLD_ContainerPaymentInfo CP)
        {
            try
            {
                var FileName = "ContainerPaymentDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Container Payment Details</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='font-size:12px; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td colspan='2'><b>Entry No :</b> " + CP.CFSCode + "</td> <td colspan='2'><b>Container No :</b> " + CP.ContainerNo + "</td> <td colspan='2'><b>In Date :</b> " + CP.InDate + "</td> <td colspan='2'><b>Size :</b> " + CP.Size + "</td> <td colspan='2'><b>Sla :</b> " + CP.EximTraderAlias + "</td> <td colspan='2'><b>Out Date :</b>  " + CP.OutDate + "</td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");


                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Invoice Type</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Party Cd</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Chrg Cd</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>From Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:8%;'>To Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                decimal tot = 0;
                CP.lstContainerPaymentDtl.ForEach(item =>
                {
                    tot = tot + item.Amount;
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InvoiceType + "</td>");

                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ChargeType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>" + item.Amount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.FromDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:8%;'>" + item.ToDate + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='4' style='width:8%;'>Total :</th>");
                Pages.Append("<th style='width:10%;'></th>");
                Pages.Append("<th colspan='2' style='width:8%;'>" + tot + " </th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion  

        #region TDSReport


        [HttpGet]
        public ActionResult TDSReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //ReportRepository ObjReport = new ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<PartyLedgerList> LstParty = new List<PartyLedgerList>();
            ObjRR.GetEximTraderForPartyLedger();
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.PartyList = new SelectList((List<PartyLedgerList>)ObjRR.DBResponse.Data, "PartyId", "PartyName");
            }
            else
            {
                ViewBag.PartyList = null;
            }
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetTDSReport(TDSReport ObjTDSReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            TDSMain LstITDSMain = new TDSMain();
            //  Login objLogin = (Login)Session["LoginUser"];
            ObjRR.TdsReport(ObjTDSReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstITDSMain = (TDSMain)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult TDSReport(TDSReport ObjTDSReport)
        {
            try
            {
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                // VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                TDSMain LstITDSMain = new TDSMain();
                //  Login objLogin = (Login)Session["LoginUser"];
                ObjRR.TdsReport(ObjTDSReport);//, objLogin.Uid

                excelName = "TDSReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ReservationChargesReport.xls");
                }
            }
            // return null;
        }



        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateTDSReportPDF(FormCollection fc)
        {
            try
            {

                string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "TDSReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Ppg_Report/TDSReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Ppg_Report/TDSReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Import Container Income
        [HttpGet]
        public ActionResult ImportConIncome()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ImportConIncomeDetail(WFLD_ImportConIncome ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.ImportConIncomeDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_ImportConIncomeDtl> lstData = (List<WFLD_ImportConIncomeDtl>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFImportConIncome(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImportConIncome(List<WFLD_ImportConIncomeDtl> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "ImportConIncomeDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>IMPORT CONTAINER INCOME REPORT</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>ICD CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>ENTRY NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SIZE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER MOVEMENT TYPE(By Train/Road)</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>TRAIN NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>TRAIN DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SLA CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PORT CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>DESTUFFING DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CUSTOM SEAL NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SHED NO.</th>");
                Pages.Append("<th colspan='7' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 700px;'>INCOME CHARGES CODE</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>TAXES</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th></tr><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>THC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TPT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>ECC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>DTF</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>LOL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IRR</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HAZ</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IGST</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CFSCode + "  </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.MovementType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TrainNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TrainDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SLACode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PortCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.DestuffingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CustomSealNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShedNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.THC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.TPT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.ECC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.DTF + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.LOL + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.IRR + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.HAZ + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Total + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='17' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.THC) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.TPT) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.ECC) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.DTF) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.LOL) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IRR) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.HAZ) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='font-size: 10px; text-align: center; width: 130px;'>" + lstData.Sum(item => item.Total) + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Export Container Income
        [HttpGet]
        public ActionResult ExportConIncome()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ExportConIncomeDetail(WFLD_ExportConIncome ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.ExportConIncomeDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_ExportConIncomeDtl> lstData = (List<WFLD_ExportConIncomeDtl>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFExportConIncome(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFExportConIncome(List<WFLD_ExportConIncomeDtl> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "ExportConIncomeDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>EXPORT CONTAINER INCOME REPORT</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>INVOICE NO./BILL OF SUPPLY</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>PARTY NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>PARTY CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>CONTAINER NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>CFS CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>SIZE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>CONTAINER MOVEMENT TYPE(By Train/Road)</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>CONTAINER TYPE (HAZ & NON-HAZ)</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>CARGO WEIGHT</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>TARE WEIGHT</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>TOTAL WEIGHT</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>SLA CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>PORT CODE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>PORT OF LOADING</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>STUFFING DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>MOVEMENT DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>SEAL DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>SHED NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>SHED AREA</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>WEEK</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>FOB VALUE</th>");
                Pages.Append("<th colspan='11' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 1100px;'>CHARGES CODE</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 300px;'>TAXES</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 130px;'>Total</th></tr><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>HND</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>THC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>EXPORT RR</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>FNC CHARGES</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>WEIGHMENT CHG.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>INSURANCE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>GRE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>GENERAL SPACE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>GRL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>MOVEMENT CHG./STUFFING CHG.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>HAZ CHARGES</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 9px; text-align: center; width: 100px;'>IGST</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.MovementType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CargoWeight + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TareWeight + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalWeight + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SLACode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PortCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PortOfLoading + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.StuffingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.MovementDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SealDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShedNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShedArea + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Week + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.FOBValue + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.HND + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.THC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.RR + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.FNC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.WHT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.INS + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.GRE + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.GEN + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.GRL + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.MO + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.HAZ + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Total + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='23' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.HND) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.THC) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.RR) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.FNC) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.WHT) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.INS) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GRE) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GEN) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GRL) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.MO) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.HAZ) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='font-size: 10px; text-align: center; width: 130px;'>" + lstData.Sum(item => item.Total) + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 10f, 10f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Assessment sheet LCL Report
        [HttpGet]
        public ActionResult AssessmentSheetLCL()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult AssessmentSheetLCLDetail(WFLD_AssessmentSheetLCL ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.AssessmentSheetLCLDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_AssessmentSheetLCLDtl> lstData = (List<WFLD_AssessmentSheetLCLDtl>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFAssessmentSheetLCL(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFAssessmentSheetLCL(List<WFLD_AssessmentSheetLCLDtl> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "AssessmentSheetLCLDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Assessment Sheet LCL Report</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IMPORTER NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PAYER NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BOE NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BOE VALUE(INCLUDING DUTY)</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>NO.OF WEEK</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>AREA</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>GROSS WEIGHT</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CARGO TYPE</th>");
                Pages.Append("<th colspan='6' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 600px;'>INCOME CHARGES CODE</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>TAXES</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th></tr><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>ENTRY CHARGES</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HANDLING CHG.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>STORAGE CHG.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>INSURANCE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>OVERTIME CHG.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HAZ CHARGES</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IGST</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ImporterName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PayeeName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BOENo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BOEValueDuty + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Week + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.GrossWt + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CargoType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.ENT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.HND + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.STO + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.INS + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.OTI + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.HAZ + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Total + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='11' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.ENT) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.HND) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.STO) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.INS) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.OTI) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.HAZ) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='font-size: 10px; text-align: center; width: 130px;'>" + lstData.Sum(item => item.Total) + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region SealClosingReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult SealClosingReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetSealClosingReport(WFLD_SealClosingReport ObjSealClosingReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_SealClosingReport> LstSealClosingReport = new List<WFLD_SealClosingReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.SealClosingReport(ObjSealClosingReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstSealClosingReport = (List<WFLD_SealClosingReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateSealClosingReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "SealClosingReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/SealClosingReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SealClosingReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }





        #endregion

        #region Empty Container Payment Report
        [HttpGet]
        public ActionResult EmptyContPayment()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult EmptyContPaymentDetail(WFLD_EmptyConPayRpt ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.EmptyContainerPayment(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_EmptyConPayRptDtl> lstData = (List<WFLD_EmptyConPayRptDtl>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFImportConIncome(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImportConIncome(List<WFLD_EmptyConPayRptDtl> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "EmptyContainerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>EMPTY CONTAINER PAYMENT REPORT</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IMPORTER NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PAYER NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER SIZE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>NO OF DAYS</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 400px;'>INCOME CHARGES CODE</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>TAXES</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th></tr><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>LNE (LIFT OF EMPTY)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>GRE (GROUND RENT EMPTY Chg.)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IGST</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ImporterName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PayeeName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalDays + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + item.LOE + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + item.GRE + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Total + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='8' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + lstData.Sum(item => item.LOE) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + lstData.Sum(item => item.GRE) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='font-size: 10px; text-align: center; width: 130px;'>" + lstData.Sum(item => item.Total) + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Reserve Space Income Report
        public ActionResult ReserveSpaceIncomeReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ReserveSpaceIncomeReport(ReserveSpaceReport vm)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository obj = new VIZ_ReportRepository();
                DateTime FromDate = Convert.ToDateTime(vm.FromDate);
                DateTime ToDate = Convert.ToDateTime(vm.ToDate);
                obj.ReserveSpaceIncomeReport(FromDate, ToDate);
                string Path = "";
                if (obj.DBResponse.Data != null)
                {
                    List<ReserveSpaceReport> lstData = (List<ReserveSpaceReport>)obj.DBResponse.Data;
                    Path = GeneratePDFReserverSpaceIncomeReport(lstData, vm.FromDate, vm.ToDate);
                    return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
                }
                return Json(new { Status = 0, Message = "" });
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }


        }
        [NonAction]
        public string GeneratePDFReserverSpaceIncomeReport(List<ReserveSpaceReport> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "ReserveSpaceIncomeReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>RESERVE SPACE INCOME REPORT</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BILLING DATE</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BILLING NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY NAME</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY CODE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>MONTH</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>AREA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>RATE(Per SQM)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>RESERVATION AMOUNT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>TOTAL AMOUNT RECEIVED</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>REMARKS</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'></td>");
                    //   Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Month + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Rate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 200px;'>" + item.ReservationAmount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalAMount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + item.Remarks + "</td></tr>");
                    i++;
                });
                Pages.Append("<tr><th colspan='8' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.ReservationAmount) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.TotalAMount) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'></td>");
                Pages.Append("</tr>");


                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region Assessment sheet FCL Report
        [HttpGet]
        public ActionResult AssessmentSheetFCL()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult AssessmentSheetFCLDetail(WFLD_AssessmentSheetFCL ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.AssessmentSheetFCLDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_AssessmentSheetFCLDtl> lstData = (List<WFLD_AssessmentSheetFCLDtl>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFAssessmentSheetFCL(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFAssessmentSheetFCL(List<WFLD_AssessmentSheetFCLDtl> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "AssessmentSheetFCLDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Assessment Sheet FCL Report</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE DATE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IMPORTER NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PAYER NAME</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER NO</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER SIZE</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BOE NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BOE VALUE(INCLUDING DUTY)</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>NO.OF DAYS</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>GROSS WEIGHT</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CARGO TYPE</th>");
                Pages.Append("<th colspan='6' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 600px;'>INCOME CHARGES CODE</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>TAXES</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th></tr><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>ENTRY CHARGES</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>GRL CHG.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>INSURANCE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>OVERTIME CHG.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>MF CHARGES</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HAZ CHARGES</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IGST</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ImporterName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PayeeName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BOENo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BOEValueDuty + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Days + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.GrossWt + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CargoType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.ENT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.GRL + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.INS + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.OTI + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.MF + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.HAZ + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Total + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='12' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.ENT) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GRL) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.INS) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.OTI) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.MF) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.HAZ) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='font-size: 10px; text-align: center; width: 130px;'>" + lstData.Sum(item => item.Total) + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Outstanding Amount Report

        [HttpGet]
        public ActionResult OutstandingAmountReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult OutstandingAmountReport(WFLD_OutstandingAmountReport ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.OutstandingAmountReport(Convert.ToDateTime(ObjPV.FromDate), Convert.ToDateTime(ObjPV.ToDate));
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_OutstandingAmountReport> lstData = (List<WFLD_OutstandingAmountReport>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFOutstandingAmountReport(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFOutstandingAmountReport(List<WFLD_OutstandingAmountReport> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "OutstandingAmountReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Outstanding Amount Report</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BILLING DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BILLING NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY NAME</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY CODE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>MONTH</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>AREA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>RATE(Per SQM)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>AMOUNT RECEIVABLE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>TOTAL AMOUNT RECEIVABLE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 600px;'>REMARKS</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BillingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BillingNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Month + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SQM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.AmountReceivalbe + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + item.TotalAmount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 600px;'>" + item.Remarks + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='8' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.AmountReceivalbe) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.TotalAmount) + "</td><td></td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region Rent Income Report
        public ActionResult RentIncomeReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult RentIncomeReport(WFLD_RentIncomeReportViewModel ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.RentIncomeReport(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_RentIncomeReportViewModel> lstData = (List<WFLD_RentIncomeReportViewModel>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFRentIncomeReport(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFRentIncomeReport(List<WFLD_RentIncomeReportViewModel> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "RentIncomeReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Rent Income Report</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BILLING DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>BILLING NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY NAME</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PARTY CODE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>MONTH</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>TDS CERTIFICATE NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>RENT RECEIVED(Rs.)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>TDS AMOUNT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>TOTAL AMOUNT RECEIVED</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>AMOUNT RECEIVABLE/OUTSTANDING</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 600px;'>REMARKS</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BillingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BillingNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PartyCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Month + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TDSCertification + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.RentReceived + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TDSAmount + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + item.TotalAmountReceived + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>" + item.AmountOutstanding + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 600px;'>" + item.Remarks + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='9' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.RentReceived) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.TDSAmount) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.TotalAmountReceived) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.AmountOutstanding) + "</td><td></td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region Cargo Stock Register
        [HttpGet]
        public ActionResult CargoStockRegister()
        {
            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetCargoStockRegister(WFLD_CrgStkRgt ObjCargoStockRegister)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            WFLD_CrgStkRgt _objCargoStockRegister = new WFLD_CrgStkRgt();


            ObjRR.CargoStockRegister(ObjCargoStockRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //_objCargoStockRegister.exportCargoStocklst = (List<exportCargoStock>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateCargoStockRegisterPDF(FormCollection fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "CargoStockRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CargoStockRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoStockRegister/" + FileName };
                return Json(ObjResult);
            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion
        /*    #region Job Order Sheet Report
            [HttpGet]
            public ActionResult JobOrderSheetReport()
            {
                return PartialView();
            }

            [HttpPost]
            [ValidateAntiForgeryToken]
            public ActionResult GetJobOrderSheetReport(WFLDJobordsht ObjJobOrderSheet)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                List<WFLDJobordsht> LstJobOrderSheet = new List<WFLDJobordsht>();
                // Login objLogin = (Login)Session["LoginUser"];


                ObjRR.JobOrderSheet(ObjJobOrderSheet);//, objLogin.Uid
                if (ObjRR.DBResponse.Data != null)
                {
                    LstJobOrderSheet = (List<WFLDJobordsht>)ObjRR.DBResponse.Data;
                    return Json(ObjRR.DBResponse);
                }
                else
                {
                    return Json(ObjRR.DBResponse);
                }

            }

            [HttpPost, ValidateInput(false)]
            [CustomValidateAntiForgeryToken]
            public JsonResult GenerateJobOrderSheetPDF(FormCollection fc)
            {
                try
                {
                    var Pages = new string[1];
                    var FileName = "JobOrderSheet.pdf";
                    Pages[0] = fc["Page"].ToString();
                    string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/JobOrderSheet/";
                    if (!Directory.Exists(LocalDirectory))
                        Directory.CreateDirectory(LocalDirectory);
                    using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                    {
                        ObjPdf.HeadOffice = this.HeadOffice;
                        ObjPdf.HOAddress = this.HOAddress;
                        ObjPdf.ZonalOffice = this.ZonalOffice;
                        ObjPdf.ZOAddress = this.ZOAddress;
                        ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                    }
                    var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/JobOrderSheet/" + FileName };
                    return Json(ObjResult);
                }
                catch (Exception ex)
                {
                    return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
                }

            }
            #endregion*/
        #region BulkCreaditNoteReport
        [HttpGet]
        public ActionResult BulkCreaditNoteReport()
        {

            //ExportRepository objExport = new ExportRepository();
            //objExport.GetPaymentParty();
            //if (objExport.DBResponse.Status > 0)
            //    ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            //else
            //    ViewBag.PaymentParty = null;
            return PartialView();
        }




        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintCRNote(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            objRepo.PrintDetailsForBulkCRNote(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "C");
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }
        #endregion
        #region BulkDebitnoteReport
        [HttpGet]
        public ActionResult BulkDebitnoteReport()
        {

            //ExportRepository objExport = new ExportRepository();
            //objExport.GetPaymentParty();
            //if (objExport.DBResponse.Status > 0)
            //    ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            //else
            //    ViewBag.PaymentParty = null;
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintDRNote(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            objRepo.PrintDetailsForBulkCRNote(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "D");
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }

        //    public string GenerateCRNotePDF(PrintModelOfBulkCrCompany objCR)
        //    {
        //        string Note = "";
        //        string SACCode = "", note = "", fileName = "";
        //        objCR.lstCharges.Select(x => new { SACCode = x.SACCode }).Distinct().ToList().ForEach(item =>
        //        {
        //            if (SACCode == "")
        //                SACCode = item.SACCode;
        //            else
        //                SACCode = SACCode + "," + item.SACCode;
        //        });

        //            note = (Note == "C") ? "CREDIT NOTE" : "DEBIT NOTE";
        //        fileName = (Note == "C") ? ("CreditNote" + CRNoteId + ".pdf") : ("DebitNote" + CRNoteId + ".pdf");
        //        string Path = Server.MapPath("~/Docs/") + Session.SessionID;//+ "/CreditNote" + CRNoteId + ".pdf";
        //        if (!Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
        //        {
        //            Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
        //        }
        //        if (System.IO.File.Exists(Path + "/" + fileName))
        //        {
        //            System.IO.File.Delete(Path + "/" + fileName);

        //        }
        //        objCR.lstCrParty.ToList().ForEach(item =>
        //        {
        //            string html = "<table style='width:100%;font-size:9pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='2' style='text-align:center;padding:8px;'>Principle Place of Business: <span style='border-bottom:1px solid #000;'>______________________</span><br/>" + note + "</th></tr><tr><th style='border:1px solid #000;text-align:center;padding:8px;width:50%;'>Details of Service Provider</th><th style='border:1px solid #000;text-align:center;padding:8px;width:50%;'>Details of Service Receiver</th></tr></thead><tbody><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>Name: " + objCR.CompanyName + "</td><td style='border:1px solid #000;text-align:left;padding:8px;'>Name: <span>" + item.PartyName + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>Warehouse Address: <span>" + objCR.CompanyAddress + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>Address: <span>" + item.PartyAddress + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>City: <span>" + objCR.CompCityName + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>City: <span>" + item.PartyCityName + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>State: <span>" + objCR.CompStateName + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>State: <span>" + item.PartyStateName + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>State Code: <span>" + objCR.CompStateCode + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'>State Code: <span>" + item.PartyStateCode + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>GSTIN: <span>" + objCR.CompGstIn + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'><span>GSTIN(if registered):" + item.PartyGSTIN + "</span></td></tr><tr><td style='border:1px solid #000;text-align:left;padding:8px;'>PAN:<span>" + objCR.CompPan + "</span></td><td style='border:1px solid #000;text-align:left;padding:8px;'><span></span></td></tr><tr><td style='text-align:left;padding:8px;'>Debit/Credit Note Serial No: <span style='border-bottom:1px solid #000;'>" + item.CRNoteNo + "</span><br/><br/>Date of Issue: <span style='border-bottom:1px solid #000;'>" + item.CRNoteDate + "</span></td><td style='text-align:left;padding:8px;'>Accounting Code of <span>" + SACCode + "</span><br/><br/>Description of Services: <span>Other Storage & Warehousing Services</span></td></tr><tr><td colspan='2' style='text-align:left;padding:8px;'>Original Bill of Supply/Tax Invoice No: <span style='border-bottom:1px solid #000;'>" + item.InvoiceNo + "</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date: <span style='border-bottom:1px solid #000;'>" + Convert.ToDateTime(item.InvoiceDate).ToString("dd/MM/yyyy") + "</span></td></tr><tr><td colspan='2'>";
        //        string htmltable = "<table style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;font-size:7pt;'><thead><tr><th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Sl No.</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;width:20%;'>Particulars</th><th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;width:7%;'>Taxable Value</th><th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>CGST</th><th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>SGST</th><th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>IGST</th><th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Total Amount</th></tr><tr><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Reasons for increase / decrease in original invoice</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th><th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th></tr></thead><tbody>";
        //        string tr = "";
        //        int Count = 1;
        //        decimal IGSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0;
        //            objCR.lstCharges.Where(y => y.CRNoteId == item.CRNoteId).ToList().ForEach(data =>
        //           {
        //                tr += "<tr><td style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>" + Count + "</td><td style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'>" + item.ChargeName + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.Taxable + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.CGSTPer + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.CGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.SGSTPer + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.SGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.IGSTPer + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.IGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + item.Total + "</td></tr>";
        //            IGSTAmt += item.IGSTAmt;
        //            CGSTAmt += item.CGSTAmt;
        //            SGSTAmt += item.SGSTAmt;
        //            Count++;
        //        });
        //        string AmountInWord = ConvertNumbertoWords((long)objCR.GrandTotal);
        //        string Remarks = objCR.Remarks;
        //        string tfoot = "<tr><td style='border:1px solid #000;text-align:center;padding:5px;'></td><td style='border:1px solid #000;text-align:left;padding:5px;'></td><td style='border:1px solid #000;text-align:center;padding:5px;font-weight:600;'>Total</td><td style='border:1px solid #000;text-align:right;padding:5px;'></td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + CGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'></td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + SGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'></td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + IGSTAmt + "</td><td style='border:1px solid #000;text-align:right;padding:5px;'>" + objCR.TotalAmt + "</td></tr><tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Total Debit/Credit Note Value (in figure)</span> <span>" + objCR.GrandTotal + "</span></td></tr><tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Total Debit/Credit Note Value (in words)</span> <span>" + AmountInWord + "</span></td></tr><tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Remarks</span> <span>" + Remarks + "</span></td></tr></tbody></table></td></tr><tr><td colspan='2' style='text-align:left;padding:5px;'>Note:<br/><span style='padding:8px;'>1. The invoice issued earlier can be modified/cancelled by way of Debit Note/Credit Note.</span><br/><span style='padding:8px;'>2. Credit Note is to be issued where excess amount cliamed in original invoice.</span><br/><span style='padding:8px;'>3. Debit Note is to be issued where less amount claimed in original invoice.</span></td></tr><tr><td></td><td style='text-align:left;padding:8px;font-weight:600;'>Signature: ____________________________<br/><br/>Name of the Signatory: __________________ <br/><br/>Designation/Status: ____________________ </td></tr><tr><td style='text-align:left;padding:5px;'>To,<br/><span style='border-bottom:1px solid #000;'>____________________________ <br/>____________________________<br/>____________________________<br/></span><br/><br/>Copy To:<br/>1. Duplicate Copy for RM, CWC,RO -<br/>2. Triplicate Copy for Warehouse</td></tr></tbody></table>";
        //        html = html + htmltable + tr + tfoot;
        //        using (var RH = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f))
        //        {
        //            RH.GeneratePDF(Path + "/" + fileName, html);
        //        }
        //        return "/Docs/" + Session.SessionID + "/" + fileName;
        //    }


        //}

        [NonAction]
        public string GenerateDRNotePDF(PrintModelOfBulkCrCompany objCR)
        {


            Einvoice obj = new Einvoice();

            List<string> lstSB = new List<string>();

            string SACCode = "", note = "", fileName = "";
            objCR.lstCharges.Select(x => new { SACCode = x.SACCode }).Distinct().ToList().ForEach(item =>
            {
                if (SACCode == "")
                    SACCode = item.SACCode;
                else
                    SACCode = SACCode + "," + item.SACCode;
            });

            objCR.lstCrParty.ToList().ForEach(item =>
            {

                //    /*Header Part*/
                StringBuilder html = new StringBuilder();

                html.Append("<table style='width: 100%; font-size: 7pt; font-family: Verdana, Arial, San-serif; border-collapse: collapse;'>");
                html.Append("<thead>");

                html.Append("<tr><td colspan='12'>");
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr>");

                html.Append("<td width='90%'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                html.Append("<tr><td width='60%' valign='top'><img align='right' src='IMGSRC'/></td>");
                html.Append("<td width='300%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>CWC 18-7-1101,Guest House block<br/>Kedareswarapet,Dist.-Krishna, Vijayawada-520003, A.P</ span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com </label><br/><label style='font-size: 7pt; font-weight: bold;'>Principle Place of Business: <span style='border-bottom: 1px solid #000;'>______________________</span></label><br /><label style='font-size: 7pt; font-weight: bold;'>" + note + "</label></td>");
                html.Append("<td width='60%' valign='top'><img width='80px' align='right' src='ISO'/></td></tr>");
                html.Append("<tr><td colspan='12' valign='top' style='font-size:8pt;'><b>IRN :</b> " + item.irn + " </td></tr>");
                html.Append("</tbody></table></td>");


                if (item.SignedQRCode == "")
                { }
                else
                {
                    if (item.SupplyType == "B2C")
                    {
                        html.Append("<td align='left' valign='top'><img align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                    else
                    {
                        html.Append("<td align='left' valign='top'><img align='right' src='" + LoadImage(obj.GenerateQCCode(item.SignedQRCode)) + "'/> </td>");

                    }
                }




                html.Append("</tr>");

                html.Append("</tbody></table>");
                html.Append("</td></tr>");

                //html += "<tr>";
                //html += "<td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90' /></td>";
                //html += "<td colspan='8' width='90%' valign='top' align='center'>";
                //html += "<h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>";
                //html += "<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />";
                //html += "<span style='font-size: 7pt; padding-bottom: 10px;'>";
                //html += "107-109 , EPIP Zone , KIADB Industrial Area <br />";
                //html += "Whitefield , Bengaluru - 560066";
                //html += "</span>";
                //html += "<br />";
                //html += "<span style='font-size: 7pt; padding-bottom: 10px;'>Email - cwcwfdcfs@gmail.com</span><br />";
                //html += "<label style='font-size: 7pt; font-weight: bold;'>Principle Place of Business: <span style='border-bottom: 1px solid #000;'>______________________</span></label><br />";
                //html += "<label style='font-size: 7pt; font-weight: bold;'>' + note + '</label>";
                //html += "</td>";
                //html += "<td valign='top'><img align='right' src='ISO' width='100' /></td>";
                //html += "</tr>";

                html.Append("<tr>");
                html.Append("<th colspan='6' style='border: 1px solid #000; text-align: center; padding: 8px; width: 50%;'>Details of Service Provider</th>");
                html.Append("<th colspan='6' style='border: 1px solid #000; text-align: center; padding: 8px; width: 50%;'>Details of Service Receiver</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>Name:</b> " + objCR.CompanyName + "</td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>Name:</b> <span>" + item.PartyName + "</span></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>Warehouse Address:</b> <span>" + objCR.CompanyAddress + "</span></td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>Address:</b> <span>" + item.PartyAddress + "</span></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>City:</b> <span>" + objCR.CompCityName + "</span></td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>City:</b> <span>" + item.PartyCityName + "</span></td>");
                html.Append("</tr>)");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>State:</b> <span>" + objCR.CompStateName + "</span></td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>State:</b> <span>" + item.PartyStateName + "</span></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>State Code:</b> <span>" + objCR.CompStateCode + "</span></td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>State Code:</b> <span>" + item.PartyStateCode + "</span></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>GSTIN:</b> <span>" + objCR.CompGstIn + "</span></td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'>");
                html.Append("<span><b>GSTIN(if registered):</b>" + item.PartyGSTIN + "</span>");
                html.Append("</td>");
                html.Append("</tr>)");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>PAN:</b><span>" + objCR.CompPan + "</span></td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>Place Of Supply:</b><span>" + item.PartyStateName + "</span></td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='text-align: left; padding: 8px;'>");
                html.Append("<b>Debit/Credit Note Serial No:</b> <span style='border-bottom: 1px solid #000;'>" + item.CRNoteNo + "</span><br />");
                html.Append("<br />");
                html.Append("<b>Date of Issue:</b> <span style='border-bottom: 1px solid #000;'>" + item.CRNoteDate + "</span>");
                html.Append("</td>");
                html.Append("<td colspan='6' style='text-align: left; padding: 8px;'>");
                html.Append("<b>Accounting Code of</b> <span>" + SACCode + "</span><br />");
                html.Append("<br />");
                html.Append("<b>Description of Services:</b> <span>Other Storage & Warehousing Services</span>");
                html.Append("</td>");
                html.Append("</tr>");
                html.Append("<tr>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'><b>Original Bill of Supply/Tax Invoice No:</b> <span>" + item.InvoiceNo + "</span></td>");
                html.Append("<td colspan='6' style='border: 1px solid #000; text-align: left; padding: 8px;'>");
                html.Append("<span><b>Date:</b>" + Convert.ToDateTime(item.InvoiceDate).ToString("dd/MM/yyyy") + "</span>");
                html.Append("</td>");
                html.Append("</tr>");
                //html.Append("</tbody>");
                //html.Append("</table>");

                html.Append("<tr>");
                html.Append("<td colspan='12'>");
                html.Append("<table style='width:100%;font-family:Verdana,Arial,San-serif;border-collapse:collapse;border:1px solid #000;font-size:7pt;'>");
                html.Append("<thead>");
                html.Append("<tr>");
                html.Append("<th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Sl No.</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;width:20%;'>Particulars</th>");
                html.Append("<th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;width:7%;'>Taxable Value</th>");
                html.Append("<th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>CGST</th>");
                html.Append("<th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>SGST</th>");
                html.Append("<th colspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>IGST</th>");
                html.Append("<th rowspan='2' style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Total Amount</th>");
                html.Append("</tr>)");
                html.Append("<tr>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Reasons for increase / decrease in original invoice</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Rate</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>Amt</th>");
                html.Append("</tr>");
                html.Append("</thead>");
                html.Append("<tbody>");
                //string tr = "";
                int Count = 1;
                decimal IGSTAmt = 0, CGSTAmt = 0, SGSTAmt = 0, Taxable = 0;
                objCR.lstCharges.ToList().ForEach(data =>
                {
                    html.Append("<tr>");
                    html.Append("<td style='border:1px solid #000;text-align:center;padding:5px;font-size:7pt;'>" + Count + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'>" + data.ChargeName + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.Taxable + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.CGSTPer + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.CGSTAmt + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.SGSTPer + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.SGSTAmt + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.IGSTPer + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.IGSTAmt + "</td>");
                    html.Append("<td style='border:1px solid #000;text-align:right;padding:5px;font-size:7pt;'>" + data.Total + "</td>");
                    html.Append("</tr>");

                    IGSTAmt += data.IGSTAmt;
                    CGSTAmt += data.CGSTAmt;
                    SGSTAmt += data.SGSTAmt;
                    Taxable += data.Taxable;
                    Count++;
                });
                string AmountInWord = ConvertNumbertoWords((long)item.GrandTotal);
                string Remarks = item.Remarks;
                string PayeeName = item.PayeeName;
                html.Append("<tr>");
                html.Append("<th colspan='2' style='border:1px solid #000;text-align:left;padding:5px;'>Total</th>");
                html.Append("<th style='border:1px solid #000;text-align:center;padding:5px;'>" + Taxable + "</th>");
                html.Append("<th style='border:1px solid #000;text-align:right;padding:5px;'></th>");
                html.Append("<th style='border:1px solid #000;text-align:right;padding:5px;'>" + CGSTAmt + "</th>");
                html.Append("<th style='border:1px solid #000;text-align:right;padding:5px;'></th>");
                html.Append("<th style='border:1px solid #000;text-align:right;padding:5px;'>" + SGSTAmt + "</th>");
                html.Append("<th style='border:1px solid #000;text-align:right;padding:5px;'></th>");
                html.Append("<th style='border:1px solid #000;text-align:right;padding:5px;'>" + IGSTAmt + "</th>");
                html.Append("<th style='border:1px solid #000;text-align:right;padding:5px;'>" + item.TotalAmt + "</th>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<th colspan='4' style='border:1px solid #000;border-right:0;text-align:left;padding:5px;'>Total Debit/Credit Note Value (in figure)</th>");
                html.Append("<td style='border:1px solid #000;border-right:0;border-left:0;text-align:right;padding:5px;'></td>");
                html.Append("<td style='border:1px solid #000;border-right:0;border-left:0;text-align:right;padding:5px;'></td>");
                html.Append("<td style='border:1px solid #000;border-right:0;border-left:0;text-align:right;padding:5px;'></td>");
                html.Append("<td style='border:1px solid #000;border-right:0;border-left:0;text-align:right;padding:5px;'></td>");
                html.Append("<td style='border:1px solid #000;border-right:0;border-left:0;text-align:right;padding:5px;'></td>");
                html.Append("<th style='border:1px solid #000;border-left:0;text-align:right;padding:5px;'>" + item.GrandTotal + "</th>");
                html.Append("</tr>");

                //tfoot +="<tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Total Debit/Credit Note Value (in figure)</span> <span>" + objCR.GrandTotal + "</span></td></tr>";
                html.Append("<tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Total Debit/Credit Note Value (in words)</span> <span>" + AmountInWord + "</span></td></tr>");
                html.Append("<tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Remarks</span> <span>" + Remarks + "</span></td></tr>");
                html.Append("<tr><td colspan='10' style='border:1px solid #000;text-align:left;padding:5px;font-size:7pt;'><span style='border-bottom:1px solid #000;font-weight:600;'>Payer Name:</span> <span>" + PayeeName + "</span></td></tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<td colspan='12' style='text-align:left;padding:5px;'>Note:<br/><span style='padding:8px;'>1. The invoice issued earlier can be modified/cancelled by way of Debit Note/Credit Note.</span><br/><span style='padding:8px;'>2. Credit Note is to be issued where excess amount cliamed in original invoice.</span><br/>");
                html.Append("<span style='padding:8px;'>3. Debit Note is to be issued where less amount claimed in original invoice.</span>");
                html.Append("</td>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<td></td>");
                html.Append("<td colspan='10' style='text-align:left;padding:8px;font-weight:600;'>Signature: ____________________________<br/><br/>Name of the Signatory: __________________ <br/><br/>Designation/Status: ____________________ </td>");
                html.Append("</tr>");

                html.Append("<tr>");
                html.Append("<td colspan='12' style='text-align:left;padding:5px;'>To,<br/><span style='border-bottom:1px solid #000;'>____________________________ <br/>____________________________<br/>____________________________<br/></span><br/><br/>Copy To:<br/>1. Duplicate Copy for RM, CWC,RO -<br/>2. Triplicate Copy for Warehouse</td>");
                html.Append("</tr>");
                html.Append("</tbody>");
                html.Append("</table>");

                //html = html + htmltable +tr+ tfoot;

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                html = html.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                lstSB.Add(html.ToString());

            });



            var FileName = "BulkDebitReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            var location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }
            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion


        #region TaxZeroInvoiceReport



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult TaxZeroInvoiceReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetTaxZeroInvoiceReport(DailyCashBookWFLD ObjDailyCashBook)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DailyCashBookWFLD> LstDailyCashBook = new List<DailyCashBookWFLD>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.TaxZeroInvoiceReport(ObjDailyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyCashBook = (List<DailyCashBookWFLD>)ObjRR.DBResponse.Data;
                LstDailyCashBook = LstDailyCashBook.OrderBy(o => o.ReceiptDate).ThenBy(o => o.CRNo).ToList();

                LstDailyCashBook.Add(new DailyCashBookWFLD()
                {
                    /*ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",
                    Depositor = "",*/

                    InvoiceDate = "<strong>Total</strong>",
                    InvoiceNo = "",
                    InvoiceType = "",
                    PartyName = "",
                    PayeeName = "",
                    ModeOfPay = "",
                    ChqNo = "",
                    GenSpace = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GenSpace)).ToString(),
                    StorageCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.StorageCharge)).ToString(),
                    Insurance = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Insurance)).ToString(),
                    GroundRentEmpty = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentEmpty)).ToString(),
                    GroundRentLoaded = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentLoaded)).ToString(),
                    MfCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MfCharge)).ToString(),
                    EntryCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.EntryCharge)).ToString(),
                    Fumigation = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Fumigation)).ToString(),
                    OtherCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.OtherCharge)).ToString(),
                    Misc = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Misc)).ToString(),
                    Cgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Cgst)).ToString(),
                    Sgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Sgst)).ToString(),
                    Igst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Igst)).ToString(),

                    MiscExcess = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MiscExcess)).ToString(),
                    TotalCash = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    TotalCheque = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    TotalOthers = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOthers)).ToString(),
                    Tds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Tds)).ToString(),
                    CrTds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CrTds)).ToString(),
                    TotalPDA = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalPDA)).ToString(),
                    Remarks = ""

                });
                ObjRR.DBResponse.Data = LstDailyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateTaxZeroInvoiceReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "TaxZeroInvoiceReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/TaxZeroInvoiceReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/TaxZeroInvoiceReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }


        #endregion


        #region PDUtilizationSummary



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult PDASummaryUtilizationReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetPdSummaryUtilizationReport(PdSummary ObjPdSummary, int drpType)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<PdSummary> LstPdSummary = new List<PdSummary>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.PdSummaryUtilizationReport(ObjPdSummary, drpType);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstPdSummary = (List<PdSummary>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePdSummaryUtilizationPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "SdSummary.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/SdSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SdSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region THCRR Report 
        [HttpGet]
        public ActionResult ExportTHCRRReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetExportTHCRRReport(WFLD_ThcRrReport Obj)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ThcRrReport> LstTHCRR = new List<WFLD_ThcRrReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ExportTHCRRReport(Obj);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateExportTHCRRReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ExportTHCRRReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ExportTHCRRReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ExportTHCRRReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion


        #region Import THCRR Report 
        [HttpGet]
        public ActionResult ImportTHCRRReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetImportTHCRRReport(WFLD_ThcRrReport Obj)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ThcRrReport> LstTHCRR = new List<WFLD_ThcRrReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ImportTHCRRReport(Obj);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateImportTHCRRReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ImportTHCRRReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ImportTHCRRReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ImportTHCRRReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion



        #region MPMPR_PORTWISE report

        [HttpGet]
        public ActionResult PortwiseReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }



        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PortwiseReport(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            string Fdt = Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy-MM-dd");
            ObjRR.PrintDetailsForPortwise(Fdt, Tdt);
            if (ObjRR.DBResponse.Data != null)
            {
                //WFLDSDDetailsStatement SDData = new WFLDSDDetailsStatement();
                PortWiseReport objport = new PortWiseReport();
                objport = (PortWiseReport)ObjRR.DBResponse.Data;
                //objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GeneratePortwisePDF(objport, Convert.ToDateTime(Fdt).ToString("dd-MM-yyyy"), Convert.ToDateTime(Tdt).ToString("dd-MM-yyyy"));
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = ObjRR.DBResponse.Status, Message = ObjRR.DBResponse.Message });
            }
        }

        //[HttpPost]
        //[ValidateAntiForgeryToken]
        //public JsonResult GetSDDetReport(string FromDate, string ToDate, int PartyId)
        //{
        //    VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

        //    string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
        //    string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

        //    ObjRR.GetSDDetStatement(PartyId, Fdt, Tdt);
        //    string Path = "";
        //    if (ObjRR.DBResponse.Data != null)
        //    {
        //        WFLDSDDetailsStatement SDData = new WFLDSDDetailsStatement();
        //        SDData = (WFLDSDDetailsStatement)ObjRR.DBResponse.Data;

        //        Path = GeneratePDFSDDetReport(SDData, FromDate, ToDate);
        //    }
        //    return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        //}


        [NonAction]
        public string GeneratePortwisePDF(PortWiseReport SDData, string FromDate, string ToDate)
        {
            int Total = 0;
            try
            {
                var FileName = "PortWiseReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>STATEMENT SHOWING DETAILS OF IMPORT LOADED CONTAINERS/TEUs</label><br/><label style='font-size: 14px; font-weight:bold;'>PORT WISE REPORT OF DIFFERENT SHIPPING LINES DURING " + FromDate + "-TO-" + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                Pages.Append("<table cellpadding='5' cellspacing='0' style='width:100%; border:1px solid #000; border-bottom:0; font-size:8pt; font-family:Verdana,Arial,San-serif; margin-top:20px;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>Sl No.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Code</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>SLA</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>BY TRAIN</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 300px;'>BY ROAD</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 120px;'>Total TEUs</th></tr>");

                Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>LONI</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TKD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>OTH</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>LONI</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TKD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>OTH</th></tr></thead>");
                Pages.Append("<tbody>");
                int i = 1;
                SDData.PortWiseReportList.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.SlaCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.ShippingLine + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.TLoni + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.TTkd + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.TOth + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.RLoni + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.RTkd + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + item.ROth + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + (item.TLoni + item.TTkd + item.TOth + item.RLoni + item.RTkd + item.ROth) + "</td></tr>");
                    i = i + 1;
                    SDData.RLoni += item.RLoni;
                    SDData.RTkd += item.RTkd;
                    SDData.ROth += item.ROth;
                    SDData.TLoni += item.TLoni;
                    SDData.TTkd += item.TTkd;
                    SDData.TOth += item.TOth;
                    Total += (item.TLoni + item.TTkd + item.TOth + item.RLoni + item.RTkd + item.ROth);
                });
                Pages.Append("<tr><th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: left;'>Total</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + SDData.TLoni + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + SDData.TTkd + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + SDData.TOth + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + SDData.RLoni + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + SDData.RTkd + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + SDData.ROth + "</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + Total + "</th></tr>");

                Pages.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total LCL :</b> <span>&nbsp;&nbsp;&nbsp;&nbsp;</span> " + SDData.TotalLCL + "</th></tr>");
                Pages.Append("<tr><th style='border-bottom: 1px solid #000; font-size: 10px; text-align: left; padding: 5px;' colspan='10'><b>Total FCL :</b> <span>&nbsp;&nbsp;&nbsp;&nbsp;</span> " + SDData.TotalFCL + "</th></tr>");
                Pages.Append("</tbody>");
                Pages.Append("</table>");

                Pages.Append("<table cellpadding='5' cellspacing='0' style='width:100%; font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><th colspan='6' width='50%'>Submitted to <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>The Manager, ICD <br/> <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> CWC,PPG,Delhi</th>");
                Pages.Append("<th colspan='6' width='50%' align='right'>Sr.Asstt. Manager</th></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Long Standing Export Cargo Report 
        [HttpGet]
        public ActionResult LongStandingExportCargoReport()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetGodownRightsWise(((Login)Session["LoginUser"]).Uid);
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();


        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetLongStandingExportCargoReport(WFLD_LongStandingExportCargo vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_LongStandingExportCargoDtl> lstLongStandingExportCargo = new List<WFLD_LongStandingExportCargoDtl>();
            ObjRR.GetLongStandingExportLoadedCargo(vm);
            String Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                lstLongStandingExportCargo = (List<WFLD_LongStandingExportCargoDtl>)ObjRR.DBResponse.Data;
                Path = GeneratePDFLongStandingExportLoadedCargo(lstLongStandingExportCargo, vm);

            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);

        }

        [NonAction]

        public String GeneratePDFLongStandingExportLoadedCargo(List<WFLD_LongStandingExportCargoDtl> lstData, WFLD_LongStandingExportCargo Obj)
        {
            try
            {
                var FileName = "LongStandingImpLoadCargo.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 28px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 14px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:14px;'>CFS Whitefield</span><br/><label style='font-size: 16px; font-weight:bold;'>Inland Container Depot.</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("<tr><td colspan='12'><br/></td></tr>");
                Pages.Append("<tr><th colspan='12' style='font-size:14px; text-align: center;'>Export Cargo Lying in Shed more than " + Obj.days + " as on " + Obj.AsOnDate + " </th></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>SHED :</b> " + Obj.GodownName + "</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:6pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S.No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Shipping Bill No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Shipping Bill Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CCIN Invoice No.</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CCIN Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Exporter Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Exporter Address</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CHA Name</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>CFS Code</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>Stuffing Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Shipping Line Code</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>No of Pkg</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Weight</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>FOB Value</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Commodity</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Area</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Storage Charges</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>G/H</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Notice1</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Notice2</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>NOC Apply Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Seize/Hold Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Remarks1</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Remarks2</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ShippingBillNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ShippingBillNoDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CCINInvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CCINInvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ExporterName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ExporterAddress + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ChaName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:6%;'>" + item.StuffingDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.ShippingLineCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.NoOfPkg + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.GrWt + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Fob + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Commodity + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.StroageCharges + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.GH + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Notice1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Date1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Notice2 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Date2 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Nocr + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.SeizeDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Remarks1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.Remarks2 + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' valign='bottom' style='width:100%;'><tfoot>");
                Pages.Append("<tr><td colspan='12'><br/><br/><br/><br/></td></tr>");
                Pages.Append("</tfoot></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }

        }

        #endregion

        #region Long Standing Empty Container Report

        [HttpGet]
        public ActionResult LongStandingEmptyCont()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetLongStandingEmptyCont(WFLD_PVReport ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.LongStandingEmptyCont(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_LongStandingEmptyCont> lstData = new List<WFLD_LongStandingEmptyCont>();
                    lstData = (List<WFLD_LongStandingEmptyCont>)ObjRR.DBResponse.Data;
                    Path = GenerateLongStandingPDFEmptyCont(lstData, ObjPV.AsOnDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GenerateLongStandingPDFEmptyCont(List<WFLD_LongStandingEmptyCont> lstData, string Date)
        {
            try
            {
                var FileName = "EmptyContReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><span style='font-size:12px;'><b>As On - </b> " + Date + "</span><br/><label style='font-size: 14px; font-weight:bold;'>Long Standing Empty Containers</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sno</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>ShippingLine</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Address</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:10%;'>Container No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>ICD Code</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Container In Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>Container Destuffing Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Size</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Sla Cd</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Out Date Ecy</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>Days</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>GRE Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Notice1 Despatch NO</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Notice2 Despatch NO</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>NOC Apply Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:12%;text-align:right;'>Remarks</th></tr></thead>");

                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.ShippingLine + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.Address + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.EntryDateTime + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;'>" + item.InDateEcy + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.EximTraderAlias + "</td>");

                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;'>" + item.OutDateEcy + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.Days + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.Amount + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.AuctionNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.Notices1 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.AuctionNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.Notices2 + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>" + item.NocDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.Remarks + "</td>");



                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='width:3%;'>Total :</th>");
                Pages.Append("<th style='width:11%;'></th>");
                Pages.Append("<th style='width:8%;'></th>");
                Pages.Append("<th style='width:3%;'></th>");
                Pages.Append("<th style='width:5%;'></th>");
                Pages.Append("<th style='width:8%;'></th>");
                Pages.Append("<th colspan='3' style='width:12%;text-align:right;'>" + lstData.Sum(o => o.Amount).ToString() + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion    

        #region Genarating For Excel CashBooKWithSd

        [HttpGet]
        public ActionResult CashBookWithSdExcel()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult SdBookExcel(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                /// var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetCashBookWithSD(date1, date2);

                //if (Type == "Inv") { Type = "Invoice"; }
                //if (Type == "C") { Type = "Credit"; }
                //if (Type == "D") { Type = "Debit"; }
                //if (Type == "Unpaid") { Type = "Unpaid"; }
                //if (Type == "CancelInv") { Type = "Cancel Invoice"; }

                excelName = "CashBookWithSd" + "_" + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch (Exception e)
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "CashBookWithSd.xlsx");
                }
            }
            // return null;
        }

        #endregion

        #region Auction Cash Book

        public ActionResult AuctionCashBook()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetAuctionCashBook(AuctionCashBookViewModel vm)
        {
            string AuctionPath = "";
            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetAuctionCashBook(vm.FromDate, vm.ToDate);
            if (obj.DBResponse.Data != null)
            {

                AuctionPath = GeneratePDFAuctionCashBookReport(((List<AuctionCashBookViewModel>)obj.DBResponse.Data), vm.FromDate, vm.ToDate);
                return Json(new { Message = AuctionPath, Status = 1 }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Message = AuctionPath, Status = 2 }, JsonRequestBehavior.AllowGet);
            }

        }

        [NonAction]
        public string GeneratePDFAuctionCashBookReport(List<AuctionCashBookViewModel> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "AuctionCashBook.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Auction Cash Book For EMD Received </label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Receipt No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Receipt Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bidder Name</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Chq/DD No. UTR No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bid No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bid Amount</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>EMD Amount</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Advance Amount Paid</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Advance Amount Adjust </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total Paid</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BidderName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ChqDDUTRNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BidNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BidAmount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.EmdAmount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.AdvanceAmountPaid + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.AdvanceAmountAdjust + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalPaid + " </td>");
                    Pages.Append("</tr>");
                    i++;
                });



                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Auction Cash Book For Invoice

        public ActionResult AuctionCashBookForInvoice()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetAuctionCashBookForInvoice(AuctionCashBookViewModel vm)
        {
            string AuctionPath = "";
            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetAuctionCashBookForInvoice(vm.FromDate, vm.ToDate);
            if (obj.DBResponse.Data != null)
            {

                AuctionPath = GeneratePDFAuctionCashBookReportForInvoice(((List<AuctionCashBookViewModel>)obj.DBResponse.Data), vm.FromDate, vm.ToDate);
                return Json(new { Message = AuctionPath, Status = 1 }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Message = AuctionPath, Status = 2 }, JsonRequestBehavior.AllowGet);
            }

        }

        [NonAction]
        public string GeneratePDFAuctionCashBookReportForInvoice(List<AuctionCashBookViewModel> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "AuctionCashBookForInvoice.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Auction Cash Book For The Auction Invoice(Bid Amount) </label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Receipt No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Receipt Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bidder Name</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Chq/DD No. UTR No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bid No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bid Amount</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>EMD Amount</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>EMD Amount Adjust</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Advance Amount Paid</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Advance Amount Adjust </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>GST Amount Total </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Net Amount Paid(Bid Amount - EMD Amount)+GST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total Paid</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BidderName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ChqDDUTRNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BidNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.BidAmount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.EmdAmount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.EMDAmountAdjust + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.AdvanceAmountPaid + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.AdvanceAmountAdjust + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.NetAmount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TotalPaid + " </td>");
                    Pages.Append("</tr>");
                    i++;
                });



                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Auction Cash Book For Statement

        public ActionResult AuctionCashBookForStatement()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetAuctionCashBookForStatement(AuctionStatementViewModel vm)
        {
            string AuctionPath = "";
            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetAuctionStatement(vm.FromDate, vm.ToDate);
            if (obj.DBResponse.Data != null)
            {

                AuctionPath = GeneratePDFAuctionCashBookReportForStatement(((List<AuctionStatementViewModel>)obj.DBResponse.Data), vm.FromDate, vm.ToDate);
                return Json(new { Message = AuctionPath, Status = 1 }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Message = AuctionPath, Status = 2 }, JsonRequestBehavior.AllowGet);
            }

        }

        [NonAction]
        public string GeneratePDFAuctionCashBookReportForStatement(List<AuctionStatementViewModel> lstData, String FromDate, String ToDate)
        {
            try
            {
                var FileName = "AuctionCashBookForInvoice.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>Auction Statement For The Auction Held On</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bill Of Entry No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bill Of Entry Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>OBl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Shipping Bill No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>In Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Shed</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Area</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Weight</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Bid Amount</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Valuation Charge</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Auction Charge</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>MISC. Charge</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Custom Duty</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CWC Share</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Remarks</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.EntryDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Obl + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShippingBill + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Shed + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Pkg + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Weight + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Bidamount + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.valueCharge + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.AuctionCharge + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.MiscCharge + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CustomDuty + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CwcShare + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Remarks + " </td>");
                    Pages.Append("</tr>");
                    i++;
                });



                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region PaymentVoucher Statement (Imprest Cash / Temporary Advance Report)
        [HttpGet]
        public ActionResult PaymentVoucherReport()
        {
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetPaymentVoucherReport(string Fdt, string Tdt, string Purpose)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetPaymentVoucherReport(Fdt, Tdt, Purpose);
            List<WFLD_PaymentVoucherReport> lstAccountData = new List<WFLD_PaymentVoucherReport>();
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstAccountData = (List<WFLD_PaymentVoucherReport>)ObjRR.DBResponse.Data;
                if (lstAccountData.Count > 1)
                {
                    Path = GeneratePDFImprestAccountTemporaryAccount(lstAccountData, Convert.ToDateTime(Fdt).ToString("dd/MM/yyyy"), Convert.ToDateTime(Tdt).ToString("dd/MM/yyyy"), Purpose);
                    return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json(new { Status = 0, Message = "No Record found.." });
                }

            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }

        }

        public string GeneratePDFImprestAccountTemporaryAccount(List<WFLD_PaymentVoucherReport> idata, string FromDate, string ToDate, string Purpose)
        {
            try
            {
                idata.RemoveAt(0);
                var FileName = "AccountTemporaryAccount.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield, Bengaluru - 560066 </span><br/><label style='font-size: 8pt;'><b>Email -</b> cwcwfdcfs@gmail.com</label><br/><label style='font-size: 8pt; font-weight:bold;'>" + Purpose.ToUpper() + " CASH ACCOUNT</label><br/><label style='font-size: 8pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:6.5pt; text-align: center;'>");

                Pages.Append("<thead>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Amount Recd.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Vr. No. & Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>Particulars</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Conveyance Charges <br/> R-801</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Entertainment <br/> R-807</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Freight and Octroi <br/> R-808</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Misc. Expn. <br/> R-814</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>News Paper/Periodicals <br/> R-816</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Printing & Sty. <br/> R-740</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Postage & Telegram <br/> R-817</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>R & M <br/> (E) <br/> R-807</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Telephone Calls <br/> R-825</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Water & Electricity <br/> R-827</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Wages <br/> R-733</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Bank Cheque <br/> R-741</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>TA Adv. A/C <br/> R-416</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Others</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%; text-align:right;'>Total</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>1</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>2</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>3</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>4</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>5</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>6</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>7</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>8</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>9</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>10</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>11</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>12</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>13</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>14</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>15</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>16</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>17</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>18</th>");
                Pages.Append("</tr>");

                Pages.Append("</thead>");

                Pages.Append("<tbody>");

                idata.ForEach(p =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + p.Col3 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + p.Col6 + "<br />" + p.Col7 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + p.Col10 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col19 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col20 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col21 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col27 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col23 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col18 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col24 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col17 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col25 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col26 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col16 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col28 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col15 + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + p.Col29 + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; text-align:right;'>" + p.Col30 + "</td>");
                    Pages.Append("</tr>");
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='1' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>" + idata.Sum(p => Convert.ToDecimal(p.Col3)) + "</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col19)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col20)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col21)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col27)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col23)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col18)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col24)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col17)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col25)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col26)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col16)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col28)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col15)) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col29)) + "</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; text-align:right;'>" + idata.Sum(p => Convert.ToDecimal(p.Col30)) + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");


                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region Import Container Income(Seci)
        [HttpGet]
        public ActionResult ImportConIncomeSeci()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ImportConIncomeSeciDetail(WFLD_ImportSeciIncRpt ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.ImportConIncomeSeciDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_ImportSeciIncRpt> lstData = (List<WFLD_ImportSeciIncRpt>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFImportConIncomeSeci(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFImportConIncomeSeci(List<WFLD_ImportSeciIncRpt> lstData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "ImportConIncomeDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>IMPORT CONTAINER INCOME REPORT(SECI)</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER TYPE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SHIPPING LINE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>FOREIGN LINER</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>VESSEL NAME</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>VESSEL/ VOYAGE NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE DATE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE TYPE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PAYER NAME</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>GOODS CUSTOM VALUE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>GOODS CUSTOM DUTY</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>THC</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IRR</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER HANDLING & TRANSPORTAION</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CARGO HANDLING</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>STORAGE & WAREHOUSING</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>OTHER SERVICES INCOME</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SGST</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th>");
                /* Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th></tr><tr>");
               Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>THC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TPT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>ECC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>DTF</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>LOL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IRR</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HAZ</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IGST</th>");*/
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShippingLine + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ForeignLiner + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.VesselName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.VesselNo + "  </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PayeeName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.GCD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.GDV + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.THC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.IRR + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CHT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CH + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SW + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.OSI + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Total + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='11' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GCD) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GDV) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.THC) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IRR) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CHT) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CH) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SW) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.OSI) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='font-size: 10px; text-align: center; width: 130px;'>" + lstData.Sum(item => item.Total) + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Export Container Income(Seci)
        [HttpGet]
        public ActionResult ExportConIncomeSeci()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ExportConIncomeSeciDetail(WFLD_ExportSeciIncRpt ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.ExportConIncomeSeciDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<WFLD_ExportSeciIncRpt> lstData = (List<WFLD_ExportSeciIncRpt>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFExportConIncomeSeci(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFExportConIncomeSeci(List<WFLD_ExportSeciIncRpt> lstData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "ExportConIncomeDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>EXPORT CONTAINER INCOME REPORT(SECI)</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>S.NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER TYPE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SHIPPING LINE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>FOREIGN LINER</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>VESSEL NAME</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>VESSEL/ VOYAGE NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE DATE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE NO.</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>INVOICE TYPE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>PAYER NAME</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>GOODS CUSTOM VALUE</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>GOODS CUSTOM DUTY</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>THC</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IRR</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CONTAINER HANDLING & TRANSPORTAION</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CARGO HANDLING</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>STORAGE & WAREHOUSING</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>OTHER SERVICES INCOME</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>SGST</th>");
                Pages.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>IGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th>");
                /* Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Total</th></tr><tr>");
               Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>THC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>TPT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>ECC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>DTF</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>LOL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IRR</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>HAZ</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>CGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>SGST</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>IGST</th>");*/
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShippingLine + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ForeignLiner + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.VesselName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.VesselNo + "  </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.InvoiceType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.PayeeName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.GCD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.GDV + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.THC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.IRR + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CHT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CH + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SW + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.OSI + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.SGST + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.IGST + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Total + "</td></tr>");
                    i++;
                });

                Pages.Append("<tr><th colspan='11' style='border-right: 1px solid #000; font-size: 10px; text-align: left; width: 100px;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GCD) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.GDV) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.THC) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IRR) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CHT) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CH) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SW) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.OSI) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.CGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.SGST) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + lstData.Sum(item => item.IGST) + "</td>");
                Pages.Append("<td style='font-size: 10px; text-align: center; width: 130px;'>" + lstData.Sum(item => item.Total) + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A3Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Container Balance In CFS Report

        [HttpGet]
        public ActionResult ContainerBalanceInCFSReport()
        {

            ViewBag.BranchType = Session["BranchType"];
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerBalanceInCFS(WFLDContainerBalanceInCFS ObjContainerBalanceInCFS)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLDContainerBalanceInCFS> LstContainerBalanceInCFS = new List<WFLDContainerBalanceInCFS>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerBalanceInCFS(ObjContainerBalanceInCFS);
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerBalanceInCFS = (List<WFLDContainerBalanceInCFS>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerBalanceInCFSPDF(FormCollection fc)
        {
            try
            {

                var Pages = new string[1];
                var FileName = "ContainerBalanceInCFS.pdf";
                Pages[0] = fc["Page"].ToString();

                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/ContainerBalanceInCFS/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/ContainerBalanceInCFS/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region De-stuffing Report

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult DeStuffingReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetDeStuffingReport(DeStuffingReport ObjDeStuffingReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DeStuffingReport> LstDeStuffingReport = new List<DeStuffingReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.DeStuffingReport(ObjDeStuffingReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDeStuffingReport = (List<DeStuffingReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateDeStuffingReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "DeStuffingReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DeStuffingReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DeStuffingReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region cargoInStock

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult cargoInStockReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetcargoInStockReport(CargoInStockReport ObjCargoInStockReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<CargoInStockReport> LstCargoInStockReport = new List<CargoInStockReport>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.CargoInstockReport(ObjCargoInStockReport);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstCargoInStockReport = (List<CargoInStockReport>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratecargoInStockReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "CargoInStockReport.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/CargoInStockReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/CargoInStockReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }



        #endregion

        #region ContainerMovementRegister

        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerMovementRegister()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetContainerMovementRegister(ContainerMovementRegister ObjContainerMovementRegister)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<ContainerMovementRegister> LstContainerMovementRegister = new List<ContainerMovementRegister>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.ContainerMovementRegister(ObjContainerMovementRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstContainerMovementRegister = (List<ContainerMovementRegister>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateContainerMovementRegisterPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "ContainerMovementRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/DailyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/DailyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region TDS Statement
        [HttpGet]
        public ActionResult TDSStatement()
        {
            return PartialView();
        }
        [HttpPost, ValidateAntiForgeryToken]
        public JsonResult GetTDSStatement(BTTDate objDt)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository objRR = new VIZ_ReportRepository();
                objRR.TdsStatement(objDt.FromDate, objDt.ToDate);
                if (objRR.DBResponse.Data != null)
                {
                    List<WFLDTDSStatement> lstTds = new List<WFLDTDSStatement>();
                    lstTds = (List<WFLDTDSStatement>)objRR.DBResponse.Data;
                    string html = GeneratePDFForTDSStmt(lstTds, objDt);
                    return Json(new { Status = 1, Message = html });
                }
                return Json(new { Status = -1, Message = "No Data" });
            }
            else
                return Json(new { Status = -1, Message = "No Data" });
        }
        [NonAction]
        public string GeneratePDFForTDSStmt(List<WFLDTDSStatement> lstTds, BTTDate objDt)
        {
            int[] ArrayParty = lstTds.Select(x => x.PartyId).Distinct().ToArray();
            string html = "<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><thead><tr><th colspan='7' style='font-weight:600;text-align:center;border:1px solid #000;padding:5px;'>TDS Statement for the period <span>" + objDt.FromDate + "</span> To <span>" + objDt.ToDate + "</span></th></tr><tr><th colspan='2' style='border-left: 1px solid #000;'></th><th colspan='5' style='font-weight:600;text-align:center;border-bottom:1px solid #000;border-left:1px solid #000;border-right:1px solid #000;padding:5px;'>TDS</th></tr><tr><th style='border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 5px;'>Date</th><th style='border-bottom: 1px solid #000;padding: 5px;'>CR. No.</th><th colspan='2' style='border-bottom: 1px solid #000;border-right: 1px solid #000;border-left: 1px solid #000;padding: 5px;'>Collection</th><th style='border-bottom: 1px solid #000;border-right: 1px solid #000;padding: 5px;'>CWC</th><th style='border-bottom: 1px solid #000;border-right: 1px solid #000;padding: 5px;'>H &amp; T</th><th style='border-bottom: 1px solid #000;border-right: 1px solid #000;padding: 5px;'>Total</th></tr></thead><tbody>";
            for (int i = 0; i < ArrayParty.Length; i++)
            {
                decimal TdsCol, CWCTds, HTTds, Tds = 0;
                html += "<tr><td colspan='7' style='text-align: left;padding: 4px;'><br/>" + lstTds.Where(x => x.PartyId == ArrayParty[i]).FirstOrDefault().PartyName.ToString() + "</td></tr>";
                lstTds.Where(x => x.PartyId == ArrayParty[i]).ToList().ForEach(item =>
                {
                    TdsCol = item.TDS;//item.TDSCol;
                    Tds = item.TDS;
                    CWCTds = Math.Round(item.CWCTDS, 2);
                    HTTds = Math.Round(item.HTTDS, 2);
                    html += "<tr><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: left;'>" + item.ReceiptDate + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: left;'>" + item.ReceiptNo + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: left;'></td><td style='border-top: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + TdsCol + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + CWCTds + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + HTTds + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-right: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Tds + "</td></tr>";
                });
                html += "<tr><td colspan='7'></td></tr><tr><td colspan='2'></td><td colspan='2' style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.TDSCol).Sum(), 2) + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.CWCTDS).Sum(), 2) + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.HTTDS).Sum(), 2) + "</td><td style='border-top: 1px solid #000;border-left: 1px solid #000;border-bottom: 1px solid #000;border-right: 1px solid #000; padding: 4px;text-align: right;'>" + Math.Round(lstTds.Where(x => x.PartyId == ArrayParty[i]).Select(x => x.TDS).Sum(), 2) + "</td></tr>";
            }
            //html += "</tbody><tfoot><tr><td colspan='7'></td></tr><tr><td colspan='3' style='text-align: left;'>Total:</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + lstTds.Select(x => x.TDSCol).Sum() + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + Math.Round(lstTds.Select(x => x.CWCTDS).Sum(), 2) + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + Math.Round(lstTds.Select(x => x.HTTDS).Sum(), 2) + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + lstTds.Select(x => x.TDS).Sum() + "</td></tr></tfoot></table>";
            html += "</tbody><tfoot><tr><td colspan='7'></td></tr><tr><td colspan='3' style='text-align: left;'>Total:</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + lstTds.Select(x => x.TDS).Sum() + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + Math.Round(lstTds.Select(x => x.CWCTDS).Sum(), 2) + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + Math.Round(lstTds.Select(x => x.HTTDS).Sum(), 2) + "</td><td style='border: 1px solid #000;text-align: right;padding: 4px;'>" + lstTds.Select(x => x.TDS).Sum() + "</td></tr></tfoot></table>";
            if (!Directory.Exists(Server.MapPath("~/Docs/Report/") + Session.SessionID))
                Directory.CreateDirectory(Server.MapPath("~/Docs/Report/") + Session.SessionID);
            if (System.IO.File.Exists(Server.MapPath("~/Docs/Report/") + Session.SessionID + "/TdsStatement.pdf"))
                System.IO.File.Delete(Server.MapPath("~/Docs/Report/") + Session.SessionID + "/TdsStatement.pdf");
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
            {
                rh.HeadOffice = this.HeadOffice;
                rh.HOAddress = this.HOAddress;
                rh.ZonalOffice = this.ZonalOffice;
                rh.ZOAddress = this.ZOAddress;
                rh.GeneratePDF(Server.MapPath("~/Docs/Report/") + Session.SessionID + "/TdsStatement.pdf", html);
            }
            return "/Docs/Report/" + Session.SessionID + "/TdsStatement.pdf";
        }
        #endregion

        #region register of inward supply

        [HttpGet]
        public ActionResult RegisterOfInwardSupply()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfInwardSupply(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetRegisterofInwardSupply(date1, date2, Type);

                if (Type == "ALL") { Type = "ALL"; }
                if (Type == "Imprest") { Type = "IMPREST"; }
                if (Type == "Temporary Advance") { Type = "Temporary Advance"; }

                excelName = "RegisterofInwardSupply" + "_" + Type + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofInwardSupply.xlsx");
                }
            }
            // return null;
        }

        #endregion

        #region SBill Query
        [HttpGet]
        public ActionResult SBQuery()
        {
            var ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllSB();

            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.ListOfSB = new SelectList((List<WFLD_SBQuery>)ObjRR.DBResponse.Data, "Id", "SBNODate");
            }
            return PartialView();
        }

        // [HttpPost, ValidateAntiForgeryToken]
        public JsonResult GetApplicationDetForSBQuery(string Id, string sbno, string sbdate)
        {
            int id = Convert.ToInt32(Id);
            string SBNO = Convert.ToString(sbno);
            WFLD_SBQuery objCR = new WFLD_SBQuery();
            VIZ_ReportRepository objRR = new VIZ_ReportRepository();
            objRR.SBQueryReport(id, sbno, sbdate);
            if (objRR.DBResponse.Data != null)
            {
                objCR = (WFLD_SBQuery)objRR.DBResponse.Data;
                return Json(objCR, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = -1, Message = "No Data" }, JsonRequestBehavior.AllowGet);
            }
        }


        #endregion

        #region Track Your Container
        [HttpGet]
        public ActionResult LoadContainerStatusForPpg()
        {
            /*bool ShippingLine;*/
            //ContainerStatus ObjContainer = new ContainerStatus();
            //ReportRepository ObjRR = new ReportRepository();
            // ExportRepository ObjER = new ExportRepository();
            /*ShippingLine = ((Login)Session["LoginUser"]).ShippingLine;
             if(ShippingLine == true)
            {
                ObjContainer.ShippingLineName = ((Login)Session["LoginUser"]).Name;
                ObjContainer.ShippingLineId = ((Login)Session["LoginUser"]).EximTraderId;
                List<ShippingLineList> LstShippingLine = new List<ShippingLineList>();
                LstShippingLine.Add(new ShippingLineList
                {
                    ShippingLineName = ((Login)Session["LoginUser"]).Name,
                    ShippingLineId = ((Login)Session["LoginUser"]).EximTraderId
                });
                ViewBag.ShippingLineList = new SelectList(LstShippingLine, "ShippingLineId", "ShippingLineName");
                ObjRR.GetContainerNoForContStatus(ObjContainer.ShippingLineId);
                if (ObjRR.DBResponse.Data != null)
                    ViewBag.ContainerList = new SelectList((List<ContainerList>)ObjRR.DBResponse.Data, "ContainerNo", "ContainerNo");
                else
                    ViewBag.ContainerList = null;
            }
            else
            {*/
            //ViewBag.ContainerList = null;
            //    ObjER.GetShippingLine();
            //    if (ObjER.DBResponse.Data != null)
            //        ViewBag.ShippingLineList = new SelectList((List<Areas.Export.Models.ShippingLine>)ObjER.DBResponse.Data, "ShippingLineId", "ShippingLineName");
            //    else
            //        ViewBag.ShippingLineList = null;
            /*}*/

            return PartialView(/*ObjContainer*/);
        }

        [HttpGet]
        public ActionResult LoadContainerStatus()
        {
            /*bool ShippingLine;*/
            //ContainerStatus ObjContainer = new ContainerStatus();
            //ReportRepository ObjRR = new ReportRepository();
            VIZ_ReportRepository ObjER = new VIZ_ReportRepository();
            /*ShippingLine = ((Login)Session["LoginUser"]).ShippingLine;
             if(ShippingLine == true)
            {
                ObjContainer.ShippingLineName = ((Login)Session["LoginUser"]).Name;
                ObjContainer.ShippingLineId = ((Login)Session["LoginUser"]).EximTraderId;
                List<ShippingLineList> LstShippingLine = new List<ShippingLineList>();
                LstShippingLine.Add(new ShippingLineList
                {
                    ShippingLineName = ((Login)Session["LoginUser"]).Name,
                    ShippingLineId = ((Login)Session["LoginUser"]).EximTraderId
                });
                ViewBag.ShippingLineList = new SelectList(LstShippingLine, "ShippingLineId", "ShippingLineName");
                ObjRR.GetContainerNoForContStatus(ObjContainer.ShippingLineId);
                if (ObjRR.DBResponse.Data != null)
                    ViewBag.ContainerList = new SelectList((List<ContainerList>)ObjRR.DBResponse.Data, "ContainerNo", "ContainerNo");
                else
                    ViewBag.ContainerList = null;
            }
            else
            {*/
            ViewBag.ContainerList = null;
            ObjER.GetShippingLine();
            if (ObjER.DBResponse.Data != null)
                ViewBag.ShippingLineList = new SelectList((List<Areas.Report.Models.VIZ_ShippingLineList>)ObjER.DBResponse.Data, "ShippingLineId", "ShippingLineName");
            else
                ViewBag.ShippingLineList = null;
            /*}*/

            return PartialView(/*ObjContainer*/);
        }


     /*   [HttpGet]
        public JsonResult GetContainerNoListForPpg()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetContainerNoForTrackContStatus();
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult GetContWiseICDList(string ContainerNo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetContWiseICDList(ContainerNo);
            if (ObjRR.DBResponse.Status > 0)
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(null, JsonRequestBehavior.AllowGet);
            }
        }
        */
        [HttpGet]
        public JsonResult GetContWiseLatestICD(string ContainerNo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetContWiseLatestICD(ContainerNo);
            if (ObjRR.DBResponse.Status > 0)
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(null, JsonRequestBehavior.AllowGet);
            }
        }


        [HttpGet]
        public JsonResult GetContainerStatusDetail(string ICDCode)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetContainerDetForTrackContStatus(ICDCode);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult GetContainerNoList()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetContainerNoForContStatus();
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        ////[HttpGet]
        ////public JsonResult GetContainerStatusDetail(int ShippingLineId, string ContainerNo)
        ////{
        ////    VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
        ////    ObjRR.GetContainerDetForContStatus(ShippingLineId, ContainerNo);
        ////    return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        ////}

        #endregion

        #region ICE Gate Detail
        public ActionResult ICEGateDetail(string SearchBy = "SearchByDB")
        {
            ViewBag.SearchBy = SearchBy;
            WFLD_OBLWiseContainerEntry obj = new WFLD_OBLWiseContainerEntry();
            try
            {
                VIZ_ReportRepository objIR = new VIZ_ReportRepository();
                objIR.ListOfICEGateOBLNo(SearchBy, "", 0);
                if (objIR.DBResponse.Data != null)
                {
                    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(objIR.DBResponse.Data);
                    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                    ViewBag.LstObl = Jobject["LstObl"];
                    ViewBag.State = Jobject["State"];
                }
                else
                {
                    ViewBag.LstObl = null;
                    ViewBag.State = null;
                }
            }
            catch (Exception ex)
            {
            }
            return PartialView(obj);
        }

        [HttpGet]
        public JsonResult SearchICEGateOBLNo(string SearchBy, string OBLNo)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateOBLNo(SearchBy, OBLNo, 0);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadICEGateOBLNo(string SearchBy, string OBLNo, int Page)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateOBLNo(SearchBy, OBLNo, Page);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult GetICEGateDetail(string oblnum, string obldate, string SearchBy)
        {
            VIZ_ReportRepository objImport = new VIZ_ReportRepository();
            objImport.GetICEGateDetail(oblnum, obldate, SearchBy);
            object data = null;
            if (objImport.DBResponse.Data != null)
                data = objImport.DBResponse.Data;
            return Json(data, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region CCIN SLIP

        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetCCINEntrySlipReport(String Ccinno)
        {

            //VIZ_ReportRepository objccin = new VIZ_ReportRepository();
            //objccin.GetContainerStuffForPrint(CCINId);
            //object data = null;
            //if (objccin.DBResponse.Data != null)
            //    data = objccin.DBResponse.Data;
            //return Json(data, JsonRequestBehavior.AllowGet);
            VIZ_ReportRepository objccin = new VIZ_ReportRepository();
            VIZ_CCINPrint ObjStuffing = new VIZ_CCINPrint();
            objccin.GetCcinEntrySlipForPrint(Ccinno);
            if (objccin.DBResponse.Data != null)
            {
                ObjStuffing = (VIZ_CCINPrint)objccin.DBResponse.Data;
                string Path = GeneratingCCINEntrySLIP(ObjStuffing);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }

            //if (ObjBulkInvoiceReport.InvoiceNumber == null)
            //{
            //    ObjBulkInvoiceReport.InvoiceNumber = "";
            //}
            //VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            //Login objLogin = (Login)Session["LoginUser"];
            ////When Module is selected All Condition against a party


            //string ModuleName = "";
            ////delete all the files in the folder before creating it
            //if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
            //{
            //    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
            //    DeleteDirectory(deletelocation);
            //}

            ////get all the distinct invoice module and invoices list with respect to party and date range 

            //string FilePath = "";



            //FilePath = GeneratingCCINSLIP(ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);



            //return Json(new { Status = 1, Data = FilePath });


        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetCCINSlipReport(int Id)
        {

            //VIZ_ReportRepository objccin = new VIZ_ReportRepository();
            //objccin.GetContainerStuffForPrint(CCINId);
            //object data = null;
            //if (objccin.DBResponse.Data != null)
            //    data = objccin.DBResponse.Data;
            //return Json(data, JsonRequestBehavior.AllowGet);
            VIZ_ReportRepository objccin = new VIZ_ReportRepository();
            WFLD_CCINPrint ObjStuffing = new WFLD_CCINPrint();
            objccin.GetCcinSlipForPrint(Id);
            if (objccin.DBResponse.Data != null)
            {
                ObjStuffing = (WFLD_CCINPrint)objccin.DBResponse.Data;
                string Path = GeneratingCCINSLIP(ObjStuffing, Id);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = 0, Message = "Error" });
            }

            //if (ObjBulkInvoiceReport.InvoiceNumber == null)
            //{
            //    ObjBulkInvoiceReport.InvoiceNumber = "";
            //}
            //VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            //Login objLogin = (Login)Session["LoginUser"];
            ////When Module is selected All Condition against a party


            //string ModuleName = "";
            ////delete all the files in the folder before creating it
            //if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
            //{
            //    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
            //    DeleteDirectory(deletelocation);
            //}

            ////get all the distinct invoice module and invoices list with respect to party and date range 

            //string FilePath = "";



            //FilePath = GeneratingCCINSLIP(ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);



            //return Json(new { Status = 1, Data = FilePath });


        }
        [NonAction]
        public string GeneratingCCINSLIP(WFLD_CCINPrint ObjStuffing, int Id)
        {
            var FileName = "";
            var location = "";
            var GodownNo = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            //List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            //List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            //List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            //List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            //List<dynamic> lstSBDetails = new List<dynamic>();
            //if (ds.Tables.Count > 11)
            //{
            //    lstSBDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[11]);
            //}

            ObjStuffing.Lstshed.Select(x => new { GodownNo = x.GodownNo }).Distinct().ToList().ForEach(item =>
            {

                GodownNo = item.GodownNo;

            });
            List<string> lstSB = new List<string>();
            //lstInvoice.ToList().ForEach(item =>
            // {
            // VIZ_ReportRepository rep = new VIZ_ReportRepository();
            WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
            //rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
            //if (rep.DBResponse.Data != null)
            //{
            //    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
            //}
            StringBuilder html = new StringBuilder();
            /*Header Part*/

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            html.Append("<tr><td width='65%'></td>");
            html.Append("<td width='10%' align='right'>");
            html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            html.Append("<tr><td style='border:1px solid #333;'>");
            html.Append("<div style='padding: 5px 0; font-size: 7pt; text-align: center;'>F/CD/CFS/08</div>");
            html.Append("</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td colspan='8' width='75%' style='text-align: center;'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
            html.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
            html.Append("<span style='display: block; font-size: 7pt;text-transform: uppercase; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield, Bengaluru - 560066</span>");
            html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CARGO CARTED IN - SLIP</label>");
            html.Append("</td>");
            html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
            html.Append("</tr>");

            //html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            //html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
            //html.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
            //html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield, Bengaluru - 560066 </span>");
            //html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CARGO CARTED IN - SLIP</label>");
            //html.Append("</td>");
            //html.Append("</tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody><tr>");
            html.Append("<td colspan='6' width='50%'>");
            html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
            html.Append("<tr><td colspan='6' width='30%'>CCIN No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.CCINNO + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>SB No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.SBNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Invoice No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.InvoiceNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Name of Exporter</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.Exporter + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Shed/Godown No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.GodownNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>No of Pkgs</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.NoofPkg + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Gross Weight(Kg)</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.GrossWeight + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Cargo Invoice No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.CargoInvNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Port Of Destination</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.PortDestName + "</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td>");
            html.Append("<td colspan='6' width='50%'>");
            html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
            html.Append("<tr><td colspan='6' width='40%'>CCIN Date</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.CCINDate + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>SB Date.</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.SBDate + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>CHA</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.CHA + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>Country</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.Country + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>Cargo Type</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.CargoType + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>Cargo(RMG/GEN)</td><td>:</td><td colspan='6' width='60%'></td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>FOB (INR)</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.FOB + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Cargo Invoice Date</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.CargoInvDt + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'></td><td></td><td colspan='6' width='70%'></td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td>");
            html.Append("</tr></tbody></table>");
            html.Append("</td></tr>");


            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody><tr>");
            html.Append("<td colspan='6' width='50%' valign='top'>");
            html.Append("<table style='width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left; border-bottom:1px solid #000;'>Carting allowed subject to availability of warehousing space</th></tr>");

            html.Append("<tr><th colspan='2' style='border: 1px solid #000; border-top: 0; width: 70%;'>For Exporter/CHA</th>");
            html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 30%;'>Security</th></tr>");
            html.Append("<tr><th style='border: 1px solid #000; border-top: 0; width: 50%;'>Sr.no.</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50%;'>Vehicle No.</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50%;'>In</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50%;'>Out</th></tr>");
            html.Append("</thead>");
            html.Append("<tbody>");
            html.Append("<tr><td style='border: 1px solid #000; border-top: 0;'></td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td></tr>");
            html.Append("</tbody>");

            html.Append("<tr><th><span><br/><br/><br/><br/><br/></span></th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left;'>( Sign.of Exporter/CHA ID No. )</th></tr>");
            html.Append("</table>");
            html.Append("</td>");

            html.Append("<td colspan='6' width='50%'>");
            html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left; border-bottom:1px solid #000;'>( Name & Sign. of Unit I/C )</th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:6pt; text-align:left;'>For Gate Incharge</th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:6pt; text-align:left;'>Entry No. :</th></tr>");

            html.Append("<tr><th style='width: 50%;'><u>In</u></th>");
            html.Append("<th style='width: 50%;'><u>Out</u></th></tr>");
            html.Append("</thead>");
            html.Append("<tbody>");
            html.Append("<tr><td><b>Date :</b></td>");
            html.Append("<td><b>Date :</b></td></tr>");
            html.Append("<tr><td><b>Time :</b></td>");
            html.Append("<td><b>Time :</b></td></tr>");
            html.Append("</tbody>");

            html.Append("<tr><th><span><br/><br/></span></th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left;'>( Sign.of Gate Incharge )</th></tr>");
            html.Append("</table>");
            html.Append("</td>");
            html.Append("</tr></tbody></table>");
            html.Append("</td></tr>");


            html.Append("<tr><td colspan='12' cellpadding='5' style='text-align:center; font-size:7pt;'>SHED ENTRIES</td></tr>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table style='border:1px solid #000; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead><tr><th style='border-right:1px solid #000; width:8%;'>Sr. No.</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Date of Carting</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Open/Shed/Cont.</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Shed/Godown Container No.</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Bay/Grid No.</th>");
            html.Append("<th style='border-right:1px solid #000; width:15%;'>General/Reserved</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Area(sq mt)</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>No. of Pkg</th>");
            html.Append("<th style='border-right:1px solid #000; width:15%;'>Gr.Wt.</th>");
            html.Append("<th style='border-right:1px solid #000; width:15%;'>Short Pkg</th>");
            html.Append("<th style='width:8%;'>Excess Pkg</th></tr></thead>");
            html.Append("<tbody>");

            int i = 1;


            if (GodownNo == "")
            {

                html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-top:1px solid #000;'></td></tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td></tr>");

            }
            else
            {
                ObjStuffing.Lstshed.ForEach(item =>
                {
                    html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'>" + i++ + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.CartingDate + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.GodownNo + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.SpaceType + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.Area + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.NoOfPkg + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.GrossWeight + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.ShortPkg + "</td>");
                    html.Append("<td style='border-top:1px solid #000;'>" + item.ExcessPkg + "</td></tr>");
                    html.Append("</tbody>");
                    html.Append("</table>");
                    html.Append("</td></tr>");
                });
            }
            html.Append("<tr><td><span><br/></span></td></tr>");

            html.Append("<tr><td colspan='12' cellpadding='5' style='font-size:6pt;'><b>Condition of Cargo :</b></td></tr>");

            html.Append("<tr><td colspan='12' cellpadding='5' style='font-size:7pt;'><b>Remarks :</b> Cargo Received on said to contain and said to weight basis.</td></tr>");

            html.Append("<tr><td><span><br/></span></td></tr>");

            html.Append("<tr><th colspan='6' width='50%' style='font-size:7pt;'>( Sign. of Exporter/CHA )</th> <th colspan='6' width='50%' style='text-align:right;font-size:7pt;'>( Sign. of Shed Incharge )</th></tr>");

            html.Append("</tbody></table>");


            /***************/
            html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));



            lstSB.Add(html.ToString());
            // });

            FileName = "CCINSLIPReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }


            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        public string GeneratingCCINEntrySLIP(VIZ_CCINPrint ObjStuffing)
        {
            var FileName = "";
            var location = "";
            var GodownNo = "";
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            //List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            //List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            //List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            //List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            //List<dynamic> lstSBDetails = new List<dynamic>();
            //if (ds.Tables.Count > 11)
            //{
            //    lstSBDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[11]);
            //}

            ObjStuffing.Lstshed.Select(x => new { GodownNo = x.GodownNo }).Distinct().ToList().ForEach(item =>
            {

                GodownNo = item.GodownNo;

            });
            List<string> lstSB = new List<string>();
            //lstInvoice.ToList().ForEach(item =>
            // {
            // VIZ_ReportRepository rep = new VIZ_ReportRepository();
            WFLDSDBalancePrint objSDBalance = new WFLDSDBalancePrint();
            //rep.GetSDBalanceforReport(item.PayeeId, item.InvoiceId);
            //if (rep.DBResponse.Data != null)
            //{
            //    objSDBalance = (WFLDSDBalancePrint)rep.DBResponse.Data;
            //}
            StringBuilder html = new StringBuilder();
            /*Header Part*/

            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            html.Append("<tr><td width='65%'></td>");
            html.Append("<td width='10%' align='right'>");
            html.Append("<table style='width:100%;' cellspacing='0' cellpadding='0'><tbody>");
            html.Append("<tr><td style='border:1px solid #333;'>");
            html.Append("<div style='padding: 5px 0; font-size: 7pt; text-align: center;'>F/CD/CFS/08</div>");
            html.Append("</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
            html.Append("<tr><td colspan='1' width='10%' valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td colspan='8' width='75%' style='text-align: center;'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
            html.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
            html.Append("<span style='display: block; font-size: 7pt;text-transform: uppercase; padding-bottom: 10px;'>CWC 18-7-1101,Guest House block, <br/> Kedareswarapet,Dist.-Krishna, Vijayawada-520003, A.P.</span>");
            html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CARGO CARTED IN - SLIP</label>");
            html.Append("</td>");
            html.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
            html.Append("</tr>");

            //html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            //html.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
            //html.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
            //html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield, Bengaluru - 560066 </span>");
            //html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CARGO CARTED IN - SLIP</label>");
            //html.Append("</td>");
            //html.Append("</tr>");
            html.Append("</tbody></table>");
            html.Append("</td></tr>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody><tr>");
            html.Append("<td colspan='6' width='50%'>");
            html.Append("<table style='border-right: 1px solid #000; width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
            html.Append("<tr><td colspan='6' width='30%'>CCIN No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.CCINNO + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>SB No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.SBNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Invoice No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.InvoiceNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Name of Exporter</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.Exporter + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Shed/Godown No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.GodownNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>No of Pkgs</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.NoofPkg + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Gross Weight(Kg)</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.GrossWeight + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Cargo Invoice No.</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.CargoInvNo + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Port Of Destination</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.PortDestName + "</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td>");
            html.Append("<td colspan='6' width='50%'>");
            html.Append("<table style='width:100%; font-size:7pt;' cellspacing='0' cellpadding='5'><tbody>");
            html.Append("<tr><td colspan='6' width='40%'>CCIN Date</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.CCINDate + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>SB Date.</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.SBDate + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>CHA</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.CHA + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>Country</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.Country + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>Cargo Type</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.CargoType + "</td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>Cargo(RMG/GEN)</td><td>:</td><td colspan='6' width='60%'></td></tr>");
            html.Append("<tr><td colspan='6' width='40%'>FOB (INR)</td><td>:</td><td colspan='6' width='60%'>" + ObjStuffing.FOB + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Cargo Invoice Date</td><td>:</td><td colspan='6' width='70%'>" + ObjStuffing.CargoInvDt + "</td></tr>");
            html.Append("<tr><td colspan='6' width='30%'>Package Type</td><td></td><td colspan='6' width='70%'>" + ObjStuffing.PackageType + "</td></tr>");
            html.Append("</tbody></table>");
            html.Append("</td>");
            html.Append("</tr></tbody></table>");
            html.Append("</td></tr>");


            html.Append("<tr><td colspan='12'>");
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody><tr>");
            html.Append("<td colspan='6' width='50%' valign='top'>");
            html.Append("<table style='width:100%; font-size:6pt; text-align:center;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left; border-bottom:1px solid #000;'>Carting allowed subject to availability of warehousing space</th></tr>");

            html.Append("<tr><th colspan='2' style='border: 1px solid #000; border-top: 0; width: 70%;'>For Exporter/CHA</th>");
            html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 30%;'>Security</th></tr>");
            html.Append("<tr><th style='border: 1px solid #000; border-top: 0; width: 50%;'>Sr.no.</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50%;'>Vehicle No.</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50%;'>In</th>");
            html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 50%;'>Out</th></tr>");
            html.Append("</thead>");
            html.Append("<tbody>");
            html.Append("<tr><td style='border: 1px solid #000; border-top: 0;'></td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
            html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td></tr>");
            html.Append("</tbody>");

            html.Append("<tr><th><span><br/><br/><br/><br/><br/></span></th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left;'>( Sign.of Exporter/CHA ID No. )</th></tr>");
            html.Append("</table>");
            html.Append("</td>");

            html.Append("<td colspan='6' width='50%'>");
            html.Append("<table style='width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left; border-bottom:1px solid #000;'>( Name & Sign. of Unit I/C )</th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:6pt; text-align:left;'>For Gate Incharge</th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:6pt; text-align:left;'>Entry No. :</th></tr>");

            html.Append("<tr><th style='width: 50%;'><u>In</u></th>");
            html.Append("<th style='width: 50%;'><u>Out</u></th></tr>");
            html.Append("</thead>");
            html.Append("<tbody>");
            html.Append("<tr><td><b>Date :</b></td>");
            html.Append("<td><b>Date :</b></td></tr>");
            html.Append("<tr><td><b>Time :</b></td>");
            html.Append("<td><b>Time :</b></td></tr>");
            html.Append("</tbody>");

            html.Append("<tr><th><span><br/><br/></span></th></tr>");
            html.Append("<tr><th colspan='12' style='font-size:7pt; text-align:left;'>( Sign.of Gate Incharge )</th></tr>");
            html.Append("</table>");
            html.Append("</td>");
            html.Append("</tr></tbody></table>");
            html.Append("</td></tr>");


            html.Append("<tr><td colspan='12' cellpadding='5' style='text-align:center; font-size:7pt;'>SHED ENTRIES</td></tr>");

            html.Append("<tr><td colspan='12'>");
            html.Append("<table style='border:1px solid #000; width:100%; font-size:6pt;' cellspacing='0' cellpadding='5'>");
            html.Append("<thead><tr><th style='border-right:1px solid #000; width:8%;'>Sr. No.</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Date of Carting</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Open/Shed/Cont.</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Shed/Godown Container No.</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Bay/Grid No.</th>");
            html.Append("<th style='border-right:1px solid #000; width:15%;'>General/Reserved</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>Area(sq mt)</th>");
            html.Append("<th style='border-right:1px solid #000; width:8%;'>No. of Pkg</th>");
            html.Append("<th style='border-right:1px solid #000; width:15%;'>Gr.Wt.</th>");
            html.Append("<th style='border-right:1px solid #000; width:15%;'>Short Pkg</th>");
            html.Append("<th style='width:8%;'>Excess Pkg</th></tr></thead>");
            html.Append("<tbody>");

            int i = 1;


            if (GodownNo == "")
            {

                html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                html.Append("<td style='border-top:1px solid #000;'></td></tr>");
                html.Append("</tbody>");
                html.Append("</table>");
                html.Append("</td></tr>");

            }
            else
            {
                ObjStuffing.Lstshed.ForEach(item =>
                {
                    html.Append("<tr><td style='border-right:1px solid #000; border-top:1px solid #000;'>" + i++ + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.CartingDate + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.GodownNo + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'></td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.SpaceType + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.Area + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.NoOfPkg + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.GrossWeight + "</td>");
                    html.Append("<td style='border-right:1px solid #000; border-top:1px solid #000;'>" + item.ShortPkg + "</td>");
                    html.Append("<td style='border-top:1px solid #000;'>" + item.ExcessPkg + "</td></tr>");
                    html.Append("</tbody>");
                    html.Append("</table>");
                    html.Append("</td></tr>");
                });
            }
            html.Append("<tr><td><span><br/></span></td></tr>");

            html.Append("<tr><td colspan='12' cellpadding='5' style='font-size:6pt;'><b>Condition of Cargo :</b></td></tr>");

            html.Append("<tr><td colspan='12' cellpadding='5' style='font-size:7pt;'><b>Remarks :</b> Cargo Received on said to contain and said to weight basis.</td></tr>");

            html.Append("<tr><td><span><br/></span></td></tr>");

            html.Append("<tr><th colspan='6' width='50%' style='font-size:7pt;'>( Sign. of Exporter/CHA )</th> <th colspan='6' width='50%' style='text-align:right;font-size:7pt;'>( Sign. of Shed Incharge )</th></tr>");

            html.Append("</tbody></table>");


            /***************/
            html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            html.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));



            lstSB.Add(html.ToString());
            // });

            FileName = "CCINSLIPReport" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty) + ".pdf";
            location = Server.MapPath("~/Docs/") + Session.SessionID + "/" + FileName;
            if (!System.IO.Directory.Exists(Server.MapPath("~/Docs/") + Session.SessionID))
            {
                System.IO.Directory.CreateDirectory(Server.MapPath("~/Docs/") + Session.SessionID);
            }


            /*if (System.IO.File.Exists(location))
            {
                System.IO.File.Delete(location);
            }*/
            using (var rp = new ReportingHelper(PdfPageSize.A4, 20f, 20f, 20f, 20f, false, true))
            {
                rp.HeadOffice = "";
                rp.HOAddress = "";
                rp.ZonalOffice = "";
                rp.ZOAddress = "";
                rp.GeneratePDF(location, lstSB);
            }
            return "/Docs/" + Session.SessionID + "/" + FileName;
        }
        #endregion

        #region Add Money On Account
        public JsonResult GetBulkReceiptReportAddMoneyOA(BulkReceiptReport ObjBulkReceiptReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetBulkCashreceipt(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulkReceiptReportAddMoneyOA(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GenerateBulkReceiptReportAddMoneyOA(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[4]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();

                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='150%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>CASH RECEIPT</label>");
                html.Append("</td></tr>");


                //Header
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='9' width='80%' style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>No.</label> <span>" + item.ReceiptNo + "</span></td>");
                html.Append("<td colspan='3' width='20%' style='font-size: 13px; line-height: 26px; float:right;'><label style='font-weight: bold;'>Date : </label> <span>" + item.ReceiptDate + "</span></td>");
                html.Append("</tr>");

                html.Append("<tr><td colspan='9' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>By : </label><span>" + item.PartyName + "</span></td><td colspan='3' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'> </label><span>" + "" + "</span></td></tr>");
                html.Append("<tr><td colspan='12' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party Address : </label><span>" + item.PartyAddress + "</span></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr><tr><td><hr/></td></tr>");


                //Banks
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Mode</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 100px;'>Instrument</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 80px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 100px;'>Date</th>");
                html.Append("</tr></thead><tbody>");

                //loop
                decimal totalpaymentreceiptAmt = 0;
                i = 1;
                lstMode.Where(z => z.CashReceiptId == item.CashReceiptId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.PayMode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.DraweeBank + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.InstrumentNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Date + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Amount + "</td>");
                    html.Append("</tr>");
                    totalpaymentreceiptAmt = totalpaymentreceiptAmt + data.Amount;

                    i = i + 1;

                });

                //TDS
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>TDS</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + item.TdsAmount.ToString() + "</td></tr>");


                //Total
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>Total Payment Receipt Amount</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + totalpaymentreceiptAmt + "</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(totalpaymentreceiptAmt.ToString("0")) + "</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 80px;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td width='10%' valign='top' align='right' style='font-size:13px;'><b>Remarks : </b></td><td colspan='2' width='85%' style='font-size:12px; line-height:22px;'>" + item.Remarks + "</td></tr>");

                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<th style='width:60%;'></th>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }
        #endregion

        #region Invoice Adjust Through On Account
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReportInvoiceAdjustThroughOnAccount(int OnAccountId)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetBulkInvoiceAdjustThroughOnAcc(OnAccountId);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulkReceiptReportAdjustOnAcc(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }
        [NonAction]
        public string GenerateBulkReceiptReportAdjustOnAcc(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();

            int i = 0;
            lstInvoice.ToList().ForEach(item =>
            {
                StringBuilder html = new StringBuilder();

                //Page Header
                html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

                html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                html.Append("<td width='150%' valign='top' align='center'><h1 style='font-size: 20px; line-height: 30px;margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
                html.Append("<label style='display: block; font-size: 13px; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
                html.Append("<span style='font-size: 12px; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
                html.Append("<br /><label style='font-size: 14px; font-weight:bold;'>ON ACCOUNT RECEIPT</label>");
                html.Append("</td></tr>");


                //Header
                html.Append("<tr><td colspan='12'><table style=' border: 1px solid #000; padding: 10px; width:100%; margin-bottom: 10px;'cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td><table style='width:100%; margin-bottom: 10px;' cellspacing='0' cellpadding='5'>");
                html.Append("<tbody><tr><td colspan='9' width='80%' style='font-size: 13px; line-height: 26px;'>");
                html.Append("<label style='font-weight: bold;'>No.</label> <span>" + item.OnAccReceiptNo + "</span></td>");
                html.Append("<td colspan='3' width='20%' style='font-size: 13px; line-height: 26px; float:right;'><label style='font-weight: bold;'>Date : </label> <span>" + item.OnAccReceiptDate + "</span></td>");
                html.Append("</tr>");

                html.Append("<tr><td colspan='9' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'>Party : </label><span>" + item.EximTraderName + "</span></td><td colspan='3' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'> </label><span>" + "" + "</span></td></tr>");
                html.Append("<tr><td colspan='12' style='font-size: 13px; line-height: 26px;'><label style='font-weight: bold;'></label><span></span></td></tr>");
                html.Append("</tbody></table>");
                html.Append("</td></tr><tr><td><hr/></td></tr>");


                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Invoice No</th>");
                html.Append("<th  style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Amount</th>");

                html.Append("</tr></thead><tbody>");


                lstContainer.ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.InvoiceNo + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.InvoiceValue + "</td>");
                    html.Append("</tr>");

                });

                html.Append("</tbody></table></td></tr>");


                //Banks
                html.Append("<tr><td><table style=' border: 1px solid #000; border-bottom: 0; width:70%;' align='center' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 60px;'>Mode</th>");
                html.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 140px;'>Drawee Bank</th>");
                html.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 100px;'>Instrument</th>");
                html.Append("<th rowspan='2' style='border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 50px;'>Amount</th>");
                html.Append("</tr><tr>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 80px;'>No</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: center; width: 100px;'>Date</th>");
                html.Append("</tr></thead><tbody>");

                //loop
                decimal CloseBalanceAmt = 0;
                decimal totalpaymentreceiptAmt = 0;
                i = 1;
                lstMode.ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.Mode + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'></td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center;'></td>");
                    html.Append("<td style='border-bottom: 1px solid #000; font-size: 10px; text-align: center;'>" + data.ReceiptAmt + "</td>");
                    html.Append("</tr>");
                    totalpaymentreceiptAmt = totalpaymentreceiptAmt + data.ReceiptAmt;
                    CloseBalanceAmt = data.CloseAmt;

                    i = i + 1;

                });

                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>On Account Balance</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + CloseBalanceAmt + "</td></tr>");

                //Total
                html.Append("<tr>");
                html.Append("<td colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 12px; text-align: right; font-weight: bold;'>Total Payment Receipt Amount</td>");
                html.Append("<td colspan='1' style='border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 50px;'>" + totalpaymentreceiptAmt + "</td></tr></tbody></table>");
                html.Append("</td></tr></tbody></table>");

                html.Append("<table style='border-top: 1px solid #000; border-left: 1px solid #000; width: 100%; margin-bottom: 10px; border-right: 1px solid #000; border-bottom: 1px solid #000;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody><tr>");
                html.Append("<th style='font-size: 12px; text-align: left; padding: 5px;' colspan='12'>In Words : " + objCurr.changeCurrencyToWords(totalpaymentreceiptAmt.ToString("0")) + "</th></tr>");
                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 80px;' cellspacing='0' cellpadding='10'>");
                html.Append("<tbody>");
                html.Append("<tr><td width='10%' valign='top' align='right' style='font-size:13px;'><b>Remarks : </b></td><td colspan='2' width='85%' style='font-size:12px; line-height:22px;'>" + item.Remarks + "</td></tr>");

                html.Append("</tbody></table>");

                html.Append("<table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody><tr>");
                html.Append("<th style='width:60%;'></th>");
                html.Append("<th style='border-top: 1px solid #000; font-size: 12px; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th>");
                html.Append("</tr></tbody></table></td></tr></tbody></table>");

                html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                lstSB.Add(html.ToString());
            });
            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }
        #endregion

        #region  SD OnAccount Report

        public ActionResult SDReportForOnAccount()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForSDDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }

            return PartialView();
        }


        public JsonResult GetAllPartyForSDReport(string PartyCode, int Page)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForSDDet(PartyCode, Page);
            if (ObjRR.DBResponse.Data != null)
            {

                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            return Json("", JsonRequestBehavior.AllowGet);
        }
        public JsonResult SDReportForOnAccountDetails(WFLD_SDReportForOnAccount vm)
        {


            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetSDReportForOnAccount(vm);
            if (obj.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)obj.DBResponse.Data;
                string Path = GenerateSDReportForBulk(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

        public string GenerateSDReportForBulk(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            // List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            // List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();

            int i = 0;


            StringBuilder html = new StringBuilder();

            //Page Header
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

            html.Append("<tr><td colspan='12'><table style='width:100%;' cellspacing='0' cellpadding='5'><tbody>");
            html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td width='150%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
            html.Append("<label style='display: block; font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
            html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
            html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>SD Report From " + lstInvoice[0].FromDate + " To " + lstInvoice[0].ToDate + "</label>");
            html.Append("</td></tr>");
            html.Append("</tbody></table></td></tr>");

            lstInvoice.ToList().ForEach(item =>
            {
                html.Append("<tr><td colspan='12'><table style='width:100%; border: 1px solid #000;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Party Name :</b> " + item.EximTraderName + "</td></tr>");
                html.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Party Address :</b> " + item.Address + "</td></tr>");
                html.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Opening Balance :</b> " + item.OpeningAmt + "</td></tr>");
                //Header  
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:80%; font-size: 7pt' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width: 90px;'>Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 240px;'>Deposit</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right; width: 240px;'>Withdrawal</th>");
                html.Append("</tr></thead>");
                html.Append("<tbody>");
                var openingValue = 0M;
                var closeingValue = 0M;
                lstContainer.Where(x => x.EximTraderId == item.EximTraderId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + data.DepositeDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + Convert.ToDecimal(data.DepositeAmt) + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right;'>" + Convert.ToDecimal(data.WithdrawlAmt) + "</td>");
                    html.Append("</tr>");
                    openingValue = openingValue + Convert.ToDecimal(data.DepositeAmt);
                    closeingValue = closeingValue + Convert.ToDecimal(data.WithdrawlAmt);
                });

                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>Total</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + openingValue + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right;'>" + closeingValue + "</th>");
                html.Append("</tr>");

                html.Append("<tr><td style='border-bottom: 1px solid #000; text-align: center;'></td>");
                html.Append("<td style='border-bottom: 1px solid #000; text-align: right;'></td>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right;'>Closing Balance : " + (Convert.ToDecimal(item.OpeningAmt) + Convert.ToDecimal((openingValue - closeingValue))) + "</th>");
                html.Append("</tr>");

                html.Append("</tbody>");
                html.Append("</table></td></tr>");
                //html.Append("<tr><td colspan='12' style='font-size:7pt; text-align: right;'><b>Closing Balance :</b> "+(Convert.ToDecimal(item.OpeningAmt)+ Convert.ToDecimal((openingValue- closeingValue))) +"</td></tr>");
                html.Append("</tbody></table></td></tr>");
            });
            html.Append("<tr><td colspan='12'><table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody>");
            html.Append("<tr><th><span><br/><br/></span></th></tr>");
            html.Append("<tr><td colspan='8' width='60%'></td><th colspan='4' width='40%' style='border-top: 1px solid #000; font-size: 7pt; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th></tr>");
            //html.Append("<tr><th style='border-top: 1px solid #000; font-size: 7pt; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th></tr>");
            html.Append("</tbody></table></td></tr></tbody></table>");

            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            lstSB.Add(html.ToString());


            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }

        public ActionResult SDReportForOnAccountUnpaid()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForSDDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }

            return PartialView();
        }


        public JsonResult SDReportForOnAccountDetailsUnpaid(WFLD_SDReportForOnAccount vm)
        {


            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetSDReportForOnAccountUnpaid(vm);
            if (obj.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)obj.DBResponse.Data;
                string Path = GenerateSDReportForBulkUnpaid(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

        public string GenerateSDReportForBulkUnpaid(DataSet ds)
        {
            CurrencyToWordINR objCurr = new CurrencyToWordINR();
            List<dynamic> objCompany = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstInvoice = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            List<dynamic> lstContainer = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);
            // List<dynamic> lstCharges = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            // List<dynamic> lstMode = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[3]);
            List<string> lstSB = new List<string>();

            int i = 0;


            StringBuilder html = new StringBuilder();

            //Page Header
            html.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");

            html.Append("<tr><td colspan='12'><table style='width:100%;' cellspacing='0' cellpadding='5'><tbody>");
            html.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
            html.Append("<td width='150%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>" + objCompany[0].CompanyName + "</h1>");
            html.Append("<label style='display: block; font-size: 7pt; line-height: 22px;'>(A Govt. of India Undertaking) </label><br />");
            html.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompany[0].CompanyAddress + "</span>");
            html.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>SD Report From " + lstInvoice[0].FromDate + " To " + lstInvoice[0].ToDate + "</label>");
            html.Append("</td></tr>");
            html.Append("</tbody></table></td></tr>");

            lstInvoice.ToList().ForEach(item =>
            {
                html.Append("<tr><td colspan='12'><table style='width:100%; border: 1px solid #000;' cellspacing='0' cellpadding='5'><tbody>");
                html.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Party Name :</b> " + item.EximTraderName + "</td></tr>");
                html.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Party Address :</b> " + item.Address + "</td></tr>");
                html.Append("<tr><td colspan='12' style='font-size:7pt;'><b>Opening Balance :</b> " + item.OpeningAmt + "</td></tr>");
                //Header  
                html.Append("<tr><td colspan='12'><table style='border: 1px solid #000; border-bottom: 0; width:100%; font-size: 7pt' cellspacing='0' cellpadding='5'>");
                html.Append("<thead>");
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width: 110px;'>Date</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 200px;'>Deposit</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right; width: 200px;'>Withdrawal</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width: 200px;'>Unpaid Invoice No</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right; width: 190px;'>Unpaid Amt</th>");
                html.Append("</tr></thead><tbody>");
                var openingValue = 0M;
                var closeingValue = 0M;
                var UnpaidAmt = 0M;
                lstContainer.Where(x => x.EximTraderId == item.EximTraderId).ToList().ForEach(data =>
                {
                    html.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + data.DepositeDate + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + Convert.ToDecimal(data.DepositeAmt) + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + Convert.ToDecimal(data.WithdrawlAmt) + "</td>");
                    html.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>" + data.InvoiceNo + "</td>");
                    html.Append("<td style='border-bottom: 1px solid #000; text-align: right;'>" + Convert.ToDecimal(data.InvoiceAmt) + "</td>");
                    html.Append("</tr>");
                    openingValue = openingValue + Convert.ToDecimal(data.DepositeAmt);
                    closeingValue = closeingValue + Convert.ToDecimal(data.WithdrawlAmt);
                    UnpaidAmt = UnpaidAmt + Convert.ToDecimal(data.InvoiceAmt);
                });
                html.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center;'>Total</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + openingValue + "</th>");
                html.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + closeingValue + "</th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: center;'></th>");
                html.Append("<th style='border-bottom: 1px solid #000; text-align: right;'>" + UnpaidAmt + "</th>");
                html.Append("</tr>");

                html.Append("<tr><th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>Closing Balance :" + (Convert.ToDecimal(item.OpeningAmt) + Convert.ToDecimal((openingValue - closeingValue))) + "</th>");
                html.Append("<th colspan='2' style='border-bottom: 1px solid #000; text-align: right;'></th>");
                html.Append("</tr>");

                html.Append("</tbody></table></td></tr>");
                //html.Append("<tr><td colspan='12' style='font-size:7pt; text-align: right;'><b>Closing Balance :</b> " + (Convert.ToDecimal(item.OpeningAmt) + Convert.ToDecimal((openingValue - closeingValue))) + " <b>Total Unpaid:</b> "+ UnpaidAmt + "</td></tr>");
                html.Append("</tbody></table></td></tr>");
            });
            html.Append("<tr><td colspan='12'><table style='width: 100%; margin-bottom: 10px;' cellspacing='0' cellpadding='10'><tbody>");
            html.Append("<tr><th><span><br/><br/></span></th></tr>");
            html.Append("<tr><td colspan='8' width='60%'></td><th colspan='4' width='40%' style='border-top: 1px solid #000; font-size: 7pt; text-align: center; padding: 5px;'>For Central Warehousing Corporation</th></tr>");
            html.Append("</tbody></table></td></tr></tbody></table>");

            html = html.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
            lstSB.Add(html.ToString());


            var type = "bulkreport";
            var id = "BulkReceipt" + DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
            var fileName = id + ".pdf";
            string PdfDirectory = Server.MapPath("~/Docs") + "/" + type + "/";
            if (!Directory.Exists(PdfDirectory))
                Directory.CreateDirectory(PdfDirectory);
            using (var rh = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
            {
                rh.HeadOffice = "";
                rh.HOAddress = "";
                rh.ZonalOffice = "";
                rh.ZOAddress = "";
                rh.GeneratePDF(PdfDirectory + fileName, lstSB);
            }
            return "/Docs/" + type + "/" + fileName;
        }

        #endregion

        #region Report in Excel

        public ActionResult ReportInExcel()
        {
            return PartialView();
        }

        public FileResult GetReportInExcel(FormCollection vmCollection)
        {
            try
            {
                WFLD_ReportInExcel vm = new WFLD_ReportInExcel();
                vm.ToDate = vmCollection["ToDate"].ToString();
                vm.FromDate = vmCollection["FromDate"].ToString();
                vm.Flag = vmCollection["Flag"].ToString();

                var excelName = "";
                VIZ_ReportRepository Obj = new VIZ_ReportRepository();
                Obj.GetReportInExcel(vm);
                excelName = "Report" + "_" + vm.Flag + ".xlsx";
                if (!string.IsNullOrEmpty(Obj.DBResponse.Data.ToString()))
                    return File(Obj.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch (Exception ex)
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofInwardSupply.xlsx");
                }
            }
        }
        #endregion

        #region Party Ledger Report

        public ActionResult PartyLedgerStatement()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForLedgerDet("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }

        [HttpGet]
        public JsonResult OASearchPartyLedgerParty(string PartyCode)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForLedgerDet(PartyCode, 0);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult OALoadPartyLedgerParty(string PartyCode, int Page)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForLedgerDet(PartyCode, Page);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPartyLedgerReport(string FromDate, string ToDate, int PartyId)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            string Fdt = Convert.ToDateTime(FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetPartyLedgerStatement(PartyId, Fdt, Tdt);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }


        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePDFForPartyLedgerDetails(FormCollection Fc)
        {
            try
            {
                var Pages = new string[1];
                var FileName = "OnAcStatementPartyLedger.pdf";
                Pages[0] = Fc["Page"].ToString();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report/OnAcStatementPartyLedger/";
                Pages[0] = Fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages[0] = Pages[0].ToString().Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg")).Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));
                //Pages[0] = Pages[0].ToString();

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }

                return Json(new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/OnAcStatementPartyLedger/" + FileName });
            }
            catch
            {
                return Json(new { Status = 0, Message = "Error" });
            }
        }
        #endregion


        #region Import Assessment Billing  Report
        [HttpGet]
        public ActionResult AssessmentSheetBilling()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult AssessmentSheetDetail(Wfld_AssessmentSheet ObjPV)
        {
            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.AssessmentSheetDetail(ObjPV);
                string Path = "";
                if (ObjRR.DBResponse.Data != null)
                {
                    List<Wfld_AssessmentSheetDtl> lstData = (List<Wfld_AssessmentSheetDtl>)ObjRR.DBResponse.Data;
                    Path = GeneratePDFAssessmentSheet(lstData, ObjPV.FromDate, ObjPV.ToDate);
                }
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFAssessmentSheet(List<Wfld_AssessmentSheetDtl> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "AssessmentSheetDetail.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>IMPORT ASSESSMENT BILLING</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>S.NO.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Asm No.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Asm Date</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Receipt No.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Receipt Date</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>OBL No.</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>TSA</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Asm Type</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>BOE No.</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 10%;'>DUTY</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                int lcl = 0;
                int fcl = 0;
                int total = 0;
                decimal lclcif = 0;
                decimal fclcif = 0;
                decimal lclduty = 0;
                decimal fclduty = 0;
                decimal totalvalue = 0;
                decimal totalduty = 0;
                lstData.ForEach(item =>
                {
                    if (item.AsmType == "FCL")
                    {
                        fcl++;
                        fclcif = fclcif + item.CIF;
                        fclduty = fclduty + item.Duty;
                    }
                    else
                    {
                        lcl++;
                        lclcif = lclcif + item.CIF;
                        lclduty = lclduty + item.Duty;
                    }


                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.AsmNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.AsmDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBL + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSA + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.AsmType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BOE + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.Duty + "</td></tr>");
                    i++;
                });
                total = fcl + lcl;
                totalvalue = fclcif + lclcif;
                totalduty = lclduty + fclduty;
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'></th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>LCL</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>+</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>FCL</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>+</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>DEST</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>=</th>");
                Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 10%;'>TOTAL</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lcl + "</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>+</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + fcl + "</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>+</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>0</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>=</th>");
                Pages.Append("<td style='border-bottom: 1px solid #000;'>" + total + "</td></tr>");

                Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>VALUE</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lclcif + "</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>+</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + fclcif + "</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>+</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>0</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>=</th>");
                Pages.Append("<td style='border-bottom: 1px solid #000;'>" + totalvalue + "</td></tr>");

                Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>DUTY</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lclduty + "</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>+</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + fclduty + "</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>+</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>0</td>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>=</th>");
                Pages.Append("<td style='border-bottom: 1px solid #000;'>" + totalduty + "</td></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region LCL Delivery Report

        public ActionResult LCLDeliveryReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult LCLDeliveryReport(WFLD_LCLDelivery vm)
        {

            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.LCLDeliveryReport(vm);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                List<WFLD_LCLDelivery> lstData = (List<WFLD_LCLDelivery>)ObjRR.DBResponse.Data;
                Path = GeneratePDFLCLDeliveryReport(lstData, vm.AsOnDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." });
            }

        }


        [NonAction]
        public string GeneratePDFLCLDeliveryReport(List<WFLD_LCLDelivery> lstData, String AsOnDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "LCLDeliveryReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>LCL DELIVERY REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>As on Date :</b> " + AsOnDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>SL.NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>OBL No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>IGM No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Importer</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Entry No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>DSTF Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Item No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Area</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Slot No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>G Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>G Pass Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Vehicle No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Shipping Line</th>");

                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {


                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SlNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.IGMNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DSTFNO + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ItemNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Pkg + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrWt + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SlotNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ShippingLine + "</td>");
                    Pages.Append("</tr>");

                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region Monthly Cash Report Cash
        [HttpGet]
        public ActionResult MonthlyCashBookReportCash()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyCashBookReportCash(DailyCashBookWFLD ObjDailyCashBook)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DailyCashBookWFLD> LstDailyCashBook = new List<DailyCashBookWFLD>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.MonthlyCashBookCash(ObjDailyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstDailyCashBook = (List<DailyCashBookWFLD>)ObjRR.DBResponse.Data;
                LstDailyCashBook = LstDailyCashBook.OrderBy(o => o.ReceiptDate).ThenBy(o => o.CRNo).ToList();

                LstDailyCashBook.Add(new DailyCashBookWFLD()
                {
                    ReceiptDate = "<strong>Total</strong>",
                    CRNo = "",

                    PartyName = "",

                    ModeOfPay = "",
                    ChqNo = "",
                    ChqDate = "",
                    TotalOnAccount = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOnAccount)).ToString(),
                    TotalPDA = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalPDA)).ToString(),
                    TotalCash = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    TotalCheque = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    TotalOthers = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOthers)).ToString(),

                    Remarks = ""

                    //InvoiceDate = "<strong>Total</strong>",
                    //InvoiceNo = "",
                    //InvoiceType = "",
                    //PartyName = "",
                    //PayeeName = "",
                    //ModeOfPay = "",
                    //ChqNo = "",
                    //GenSpace = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GenSpace)).ToString(),
                    //StorageCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.StorageCharge)).ToString(),
                    //Insurance = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Insurance)).ToString(),
                    //GroundRentEmpty = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentEmpty)).ToString(),
                    //GroundRentLoaded = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.GroundRentLoaded)).ToString(),
                    //MfCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MfCharge)).ToString(),
                    //EntryCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.EntryCharge)).ToString(),
                    //Fumigation = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Fumigation)).ToString(),
                    //OtherCharge = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.OtherCharge)).ToString(),
                    //Misc = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Misc)).ToString(),
                    //Cgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Cgst)).ToString(),
                    //Sgst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Sgst)).ToString(),
                    //Igst = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Igst)).ToString(),

                    //MiscExcess = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.MiscExcess)).ToString(),
                    //TotalCash = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCash)).ToString(),
                    //TotalCheque = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalCheque)).ToString(),
                    //TotalOthers = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalOthers)).ToString(),
                    //Tds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.Tds)).ToString(),
                    //CrTds = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.CrTds)).ToString(),
                    //TotalPDA = LstDailyCashBook.ToList().Sum(o => Convert.ToDecimal(o.TotalPDA)).ToString(),
                    //Remarks = ""

                });
                ObjRR.DBResponse.Data = LstDailyCashBook;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlyCashBookReportPDFCash(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlyCashBookReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region  IMPORT LOADED CONTAINER OUT REGISTER 
        [HttpGet]
        public ActionResult LoadedContainerOutRegister()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult LoadedContainerOutRegister(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.ImportLoadedContainerOutRegister(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = LoadedContainerOutRegisterPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string LoadedContainerOutRegisterPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "ImpLoadedContainerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["EmailAddress"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>IMPORT LOADED CONTAINER OUT REGISTER</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt; text-align: center;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Vehicle No.</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Out Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[0].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CFSCode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["GateExitDateTime"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region  BOND CARGO REPORT
        [HttpGet]
        public ActionResult BondCargoReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult BondCargoReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.BondCargoReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = BondCargoReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string BondCargoReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "BondCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>BOND CARGO REPORT</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt; text-align:center;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>SAC No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>SAC Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Bond No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Ex Bond No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Ex Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>No. Of Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gr. Wt.</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 12%;'>Truck No.</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[0].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SACNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SACDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExBoeNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExBoeDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Pkg"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Wt"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["TruckNo"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region CargoCartingReport

        public ActionResult CargoCartingReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CargoCartingReport(WFLD_CartingCargoReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_CartingCargoReport> LstCartingCargoReport = new List<WFLD_CartingCargoReport>();

            ObjRR.GetCartingCargoReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstCartingCargoReport = (List<WFLD_CartingCargoReport>)ObjRR.DBResponse.Data;


                LstCartingCargoReport.Add(new WFLD_CartingCargoReport()
                {
                    EntryNo = "<strong>Total</strong>",
                    NoOfPkg = LstCartingCargoReport.ToList().Sum(o => Convert.ToDecimal(o.NoOfPkg)),
                    GrWT = LstCartingCargoReport.ToList().Sum(o => Convert.ToDecimal(o.GrWT)),
                    FOB = LstCartingCargoReport.ToList().Sum(o => Convert.ToDecimal(o.FOB)),
                    ExpCod = "",
                    SBDate = "",
                    InDate = "",
                    Truck = "",
                    SBNo = ""
                });
                Path = GeneratePDFCartingCargoReport(LstCartingCargoReport, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFCartingCargoReport(List<WFLD_CartingCargoReport> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CartingCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CARTING CARGO REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>SL.NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Entry No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Sb. No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Sb. Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Exp Cd</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%; text-align:right;'>No. of Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>Gr. Wt.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;  text-align:right;'>FOB</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Truck No.</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>In Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    if (i == lstData.Count)
                    {
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    }
                    else
                    {
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    }
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ExpCod + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.NoOfPkg + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.GrWT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.FOB + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Truck + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region ExportLoadedContainerOutRegisterReport

        public ActionResult ExportLoadedContainerOutRegisterReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ExportLoadedContainerOutRegisterReport(WFLD_ExportLoadedContainerOutReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ExportLoadedContainerOutReport> LstLoadContainerOutReport = new List<WFLD_ExportLoadedContainerOutReport>();

            ObjRR.ExportLoadedContainerOutRegisterReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstLoadContainerOutReport = (List<WFLD_ExportLoadedContainerOutReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFExportLoadedContainerOutRegisterReport(LstLoadContainerOutReport, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFExportLoadedContainerOutRegisterReport(List<WFLD_ExportLoadedContainerOutReport> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "LoadedContainerOutReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>EXPORT LOADED CONTAINER OUT REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CFS Code </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Container No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>In Date Loaded </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Receipt No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>POD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Move No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Out Date</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 13%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ReceiptNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Forwarder + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.POD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.MoveNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region OnWheelLoadedContainerOutRegisterReport

        public ActionResult OnWheelLoadedContainerOutRegisterReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult OnWheelLoadedContainerOutRegisterReport(WFLD_ExportLoadedContainerOutReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ExportLoadedContainerOutReport> LstLoadContainerOutReport = new List<WFLD_ExportLoadedContainerOutReport>();

            ObjRR.OnWheelLoadedContainerOutRegisterReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstLoadContainerOutReport = (List<WFLD_ExportLoadedContainerOutReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFOnWheelLoadedContainerOutRegisterReport(LstLoadContainerOutReport, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFOnWheelLoadedContainerOutRegisterReport(List<WFLD_ExportLoadedContainerOutReport> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "LoadedContainerOutReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>ONWHEEL LOADED CONTAINER OUT REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CFS Code </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Container No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Date Loaded </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Rail/Road</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>POD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Move No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Out Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Movement + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Forwarder + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.POD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.MoveNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region FACTORY STUFFED LOADED CONTAINER OUT REGISTER

        public ActionResult FactoryLoadedContainerOutRegisterReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult FactoryLoadedContainerOutRegisterReport(WFLD_ExportLoadedContainerOutReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ExportLoadedContainerOutReport> LstLoadContainerOutReport = new List<WFLD_ExportLoadedContainerOutReport>();

            ObjRR.FactoryLoadedContainerOutRegisterReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstLoadContainerOutReport = (List<WFLD_ExportLoadedContainerOutReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFFactoryLoadedContainerOutRegisterReport(LstLoadContainerOutReport, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFFactoryLoadedContainerOutRegisterReport(List<WFLD_ExportLoadedContainerOutReport> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "LoadedContainerOutReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>FACTORY STUFFED LOADED CONTAINER OUT REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CFS Code </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Container No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4.5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>In Date Loaded </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Receipt No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>POL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Move No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Out Date</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 14%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ReceiptNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Forwarder + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.POD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.MoveNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region Load container in yard
        [HttpGet]
        public ActionResult LoadContainerInYard()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult LoadContainerInYard(string AsOnDate, string Module)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.LoadContainerInYard(AsOnDate, Module);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = LoadContainerInYardPDF(ds, AsOnDate, Module);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string LoadContainerInYardPDF(DataSet ds, string AsOnDate, string Module)
        {
            try
            {
                var FileName = "LoadContainerInYard.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>" + (Module.ToUpper()) + " LOAD CONTAINER IN YARD</label><br/><label style='font-size: 7pt;'><b>AS On Date :</b> " + AsOnDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Entry No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Type</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Sla Cd</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'>In Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["LoadType"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Sla"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["InDate"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region EmptyContainerRegister



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult EmptyContainerInRegister()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }


        [ValidateAntiForgeryToken]
        public JsonResult GetEmptyContainerInRegister(WFLD_EmpContReg ObjEmp)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.EmptyContainerInRegister(ObjEmp);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                WFLD_EmpContReg lstData = new WFLD_EmpContReg();
                lstData = (WFLD_EmpContReg)ObjRR.DBResponse.Data;
                Path = GeneratePDFEmptyContainerInRegister(lstData, lstData.PeriodFrom, lstData.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }


            else
                return Json(new { Status = 0, Data = "No Record Found" }, JsonRequestBehavior.AllowGet);
        }
        [NonAction]
        public string GeneratePDFEmptyContainerInRegister(WFLD_EmpContReg lstData, string FromDate, string ToDate)
        {

            try
            {
                var FileName = "EmptyContainerInRegister.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                // Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>CFS Whitefield</span><br/><label style='font-size: 14px; font-weight:bold;'>IMPORT LOADED CONTAINER OUT REGISTER</label><br/><label style='font-size: 12px;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td></tr>");
                Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + lstData.mstcompany + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>EMPTY CONTAINER IN REGISTER</label><br/><span style='font-size:7pt;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CFSCode</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Container No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>In Date & Time</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Road/Rail</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>S/Line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Status</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Cont. Class</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Veh No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Remarks</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                lstData.LstEmpty.ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CFSCode + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.DateOfArrival + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TransPort + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShippingLine + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Forwarder + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Status + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerClass + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.VehicleNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }



        #endregion

        #region FACTORY STUFFED LOADED CONTAINER IN REGISTER

        public ActionResult FacLodConInRegisterReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult FactoryLoadedContainerInRegisterReport(WFLD_FacConReg vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_FacConReg> LstLoadContainerOutReport = new List<WFLD_FacConReg>();

            ObjRR.FactoryContainerInRegisterReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstLoadContainerOutReport = (List<WFLD_FacConReg>)ObjRR.DBResponse.Data;
                Path = GeneratePDFFactoryLoadedContainerInRegisterReport(LstLoadContainerOutReport, vm.PeriodFrom, vm.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFFactoryLoadedContainerInRegisterReport(List<WFLD_FacConReg> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "FactoryContainerInReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>FACTORY CONTAINER IN REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CFS Code </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Container No </th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Date & Time </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>S/Line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DateOfArrival + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ShippingLine + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Forwarder + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Status + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerClass + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Remarks + "</td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        #region  EMPTY CONTAINER OUT REGISTER
        public ActionResult EmptyContainerOutRegister()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult EmptyContainerOutRegister(WFLD_EmptyContainerOutRegister vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_EmptyContainerOutRegister> LstEmptyContainerOutRegister = new List<WFLD_EmptyContainerOutRegister>();

            ObjRR.EmptyContainerOutRegister(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstEmptyContainerOutRegister = (List<WFLD_EmptyContainerOutRegister>)ObjRR.DBResponse.Data;



                Path = GeneratePDFEmptyContainerOutRegister(LstEmptyContainerOutRegister, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFEmptyContainerOutRegister(List<WFLD_EmptyContainerOutRegister> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CartingCargoReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'> EMPTY CONTAINER OUT REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Road</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Out Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Road/Rail </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Sla Cd</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>In Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Despatched to gate</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>DO Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {


                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Road + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.RoadRail + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SlaCd + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Despatchedtogate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DODate + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region  ODC CONTAINER IN REGISTER
        [HttpGet]
        public ActionResult OdcContainerInRegister()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult OdcContainerInRegister(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.OdcContainerInRegister(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = OdcContainerInRegisterPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string OdcContainerInRegisterPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "OdcContainerInRegister.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>ODC CONTAINER IN REGISTER</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>In Date & Time</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%'>S/Line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Status</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Cont. Class</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Vehicle No.</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 12%'>Remarks</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CFSCode"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryDateTime"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Sline"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Forwarder"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Sts"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Class"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["Remarks"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region   ONWHEEL CONTAINER IN REGISTER
        [HttpGet]
        public ActionResult OnWheelContainerInRegister()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult OnWheelContainerInRegister(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.OnWheelContainerInRegister(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = OnWheelContainerInRegisterPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string OnWheelContainerInRegisterPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "OnWheelContainerInRegister.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>ONWHEEL CONTAINER IN REGISTER</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Date & Time</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>S/Line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Status</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Cont. Class</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Vehicle No.</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 12%;'>Remarks</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CFSCode"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryDateTime"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Sline"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Forwarder"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Sts"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Class"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["Remarks"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region   IMPORT LOADED CONTAINER IN REGISTER
        [HttpGet]
        public ActionResult ImportLoadedContainerInRegister()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ImportLoadedContainerInRegister(WFLD_ImportLoadedContainerRegister vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ImportLoadedContainerRegister> LstStockRegister = new List<WFLD_ImportLoadedContainerRegister>();

            ObjRR.ImportLoadedContainerInRegister(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_ImportLoadedContainerRegister>)ObjRR.DBResponse.Data;
                Path = ImportLoadedContainerInRegisterPDF(LstStockRegister, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }
        [NonAction]
        public string ImportLoadedContainerInRegisterPDF(List<WFLD_ImportLoadedContainerRegister> lstData, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "ImportLoadedContainerInRegister.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + objCompanyDetails.CompanyAddress + "<br/>Email : " + objCompanyDetails.EmailAddress + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>IMPORT LOADED CONTAINER IN REGISTER</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt; text-align:center;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:4%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:10%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:10%'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:10%'>In Date & Time</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:5%'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:10%'>S/Line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:10%'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:10%'>Origin</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:10%'>Vehicle No.</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width:12%'>Remarks</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                int Size20 = 0;
                int Size40 = 0;
                lstData.ForEach(item =>
                {
                    if (item.Size == "20")
                    {
                        Size20 = Size20 + 1;
                    }

                    if (item.Size == "40")
                    {
                        Size40 = Size40 + 2;
                    }
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryDateTime + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Sline + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Forwarder + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Origin + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:40%; margin-top:20px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>TEU Summary </th>");
                Pages.Append("</tr>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>20 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>40 </th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 3%;'>Total </th>");

                Pages.Append("</tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size40 + "</td>");
                Pages.Append("<td style='border-bottom: 1px solid #000;'>" + (Size20 + Size40) + "</td>");

                Pages.Append("</tr>");
                //  Pages.Append("</tbody></table>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 20f, 30f, 20f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region   TotalBondinFinal
        public ActionResult TotalBondinFinal()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetTotalBondinFinal(WFLD_TotalBond vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_TotalBond> LstTotalBond = new List<WFLD_TotalBond>();
            ObjRR.TotalBondInFinal(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstTotalBond = (List<WFLD_TotalBond>)ObjRR.DBResponse.Data;
                Path = GeneratePDFTotalBondFinal(LstTotalBond, vm.PeriodFrom, vm.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFTotalBondFinal(List<WFLD_TotalBond> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "TotalBondFinal.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Total Bond Final</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Container No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CFSCode </th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>VehicleNo</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>ShippingLine</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>ContClass</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Remarks</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>TransportMode</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Status</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryDateTime + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ShippingLine + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContClass + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Remarks + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TransportMode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerType + "</td>");

                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region   Empty Container In Yard
        public ActionResult EmpContInYardReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult EmptyContainerInYardReport(WFLD_EmpConYard vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_EmpConYard> LstEmpCont = new List<WFLD_EmpConYard>();

            ObjRR.EmptyContainerInYard(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstEmpCont = (List<WFLD_EmpConYard>)ObjRR.DBResponse.Data;
                Path = GeneratePDFEmptyContainerInYardReport(LstEmpCont, vm.PeriodFrom, vm.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFEmptyContainerInYardReport(List<WFLD_EmpConYard> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "EmptyContainerInYardReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>EMPTY CONTAINER IN YARD</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>AS ON :</b> " + FromDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Entry No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Container No </th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Sla Cd</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>In Date Ecy</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SlaCd + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDateEcy + "</td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Monthly Cash Summary Report 
        [HttpGet]
        public ActionResult MonthlyCashBookSummaryReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetMonthlyCashBooksummaryReport(DailyCashBookWFLD ObjDailyCashBook)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<DailyCashBookWFLD> LstDailyCashBook = new List<DailyCashBookWFLD>();
            Login objLogin = (Login)Session["LoginUser"];
            WFLDCashSummaryMonthly CashObj = new WFLDCashSummaryMonthly();

            ObjRR.MonthlyCashBookSummary(ObjDailyCashBook);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                CashObj = (WFLDCashSummaryMonthly)ObjRR.DBResponse.Data;
                ObjRR.DBResponse.Data = CashObj;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateMonthlyCashBookSummaryReportPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "MonthlyCashBooksummaryReport.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages[0] = Pages[0].ToString().Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/MonthlyCashBookReport/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.LegalLandscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                //using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f))
                //{

                //    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                //}
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/MonthlyCashBookReport/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion

        #region   EMPTY CONTAINER SLA WISE REPORT
        [HttpGet]
        public ActionResult EmptyContainerSLAWiseReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult EmptyContainerSLAWiseReport(string AsOnDate, string Module)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.EmptyContainerSLAWiseReport(AsOnDate, Module);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = EmptyContainerSLAWiseReportPDF(ds, AsOnDate, Module);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string EmptyContainerSLAWiseReportPDF(DataSet ds, string AsOnDate, string Module)
        {
            try
            {
                var FileName = "EmptyContainerSLAWiseReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>" + Module.ToUpper() + " EMPTY CONTAINER SLA WISE REPORT</label><br/><label style='font-size: 7pt;'><b>As On Date :</b> " + AsOnDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>In Date & Time</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Rail / Road</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>S/Line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Forwarder</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Status</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont. Class</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Vehicle No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>Remarks</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Out Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CFSCode"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryDateTime"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["RailRoad"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Sline"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Forwarder"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Sts"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Class"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Remarks"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["GateExitDateTime"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion

        #region BACK TO TOWN REPORT
        [HttpGet]
        public ActionResult BackToTownReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult BackToTownReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.BackToTownReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = BackToTownReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string BackToTownReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "BackToTownReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>BACK TO TOWN REPORT</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; text-align: center; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Entry No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>No. Of Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gr. Wt.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>FOB</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Vehicle No.</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GPNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GPDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Pkg"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Convert.ToDecimal(item["Wt"]).ToString("0.00") + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["FOB"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Daily cheque/DD report Report
        [HttpGet]
        public ActionResult DailyChequeDDReport()
        {
            WFLDChequeDD objdd = new WFLDChequeDD();
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            /* ObjRR.GetAllDepositDate(); Block CWU-354*/
            //if (ObjRR.DBResponse.Data != null)
            //{
            //    objdd.DepositDetails = (List<DepositDtl>)ObjRR.DBResponse.Data;
            //}
            //else
            //{
            //    objdd.DepositDetails = null;
            //}
            //  ObjER.GetReqNoForContainerStuffing(((Login)Session["LoginUser"]).Uid);
            /*CWU-354 if (ObjRR.DBResponse.Data != null)
             {
                 ViewBag.LstRequestNo = (List<DepositDtl>)ObjRR.DBResponse.Data;
             }
             else
             {
                 ViewBag.LstRequestNo = null;
             }*/
            ObjRR.GetAllReceiptDate();
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.LstReceiptDate = (List<ReceiptDtl>)ObjRR.DBResponse.Data;
            }
            else
            {
                ViewBag.LstReceiptDate = null;
            }
            return PartialView(objdd);
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetDailyChequeDDReport(WFLDChequeDD ObjPV)
        {

            if (ModelState.IsValid)
            {
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

                ObjRR.GetDailyChqDDReport(ObjPV);

                string Path = "";
                //int refpos = 0;
                //string recdt = "";
                //string depdt = "";
                //refpos = ObjPV.DepositDate.IndexOf("-");
                //if (refpos > 0)
                //    depdt = ObjPV.DepositDate.Substring(0, refpos);
                //    recdt= ObjPV.DepositDate.Substring(1, refpos);
                WFLDChequeDD lstData = new WFLDChequeDD();
                lstData = (WFLDChequeDD)ObjRR.DBResponse.Data;
                Path = GeneratePDFDailyChequeDDReport(lstData, ObjPV.DepositDate, ObjPV.ReceiptDate);

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                var ErrorMessage = string.Join(",", ModelState.Values.SelectMany(m => m.Errors).Select(e => e.ErrorMessage));
                return Json(new { Status = 0, Message = ErrorMessage });
            }
        }
        [NonAction]
        public string GeneratePDFDailyChequeDDReport(WFLDChequeDD lstData, string DepositDate, string ReceiptDate)
        {
            try
            {
                var FileName = "DailyChequeDDReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + lstData.CompanyAddress + "</span><br/><span style='font-size:7pt;'>" + lstData.EmailAddress + "</span><br/><span style='font-size:7pt;'><b>A/C NO - </b>" + lstData.AccountNumber + "<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> </span><br/><label style='font-size: 7pt; font-weight:bold;'>CASH/CHEQUE COLLECTED ON <u>" + ReceiptDate + "</u> </label></td>");//& DEPOSITED IN BANK ON <u>" + DepositDate + "</u>  //Change Date 2020-03-12
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt;'><thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>S No</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>PARTICULARS</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>CHQ NO & DATE</th><th style='border-bottom:1px solid #000;border-right:1px solid #000;'>BANK NAME</th><th style='border-bottom:1px solid #000;text-align:right;'>AMOUNT</th></tr></thead><tbody>");
                lstData.ChqDetails.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.ChqNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.BankName + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;text-align:right;'>" + item.Amount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='4' style='border-bottom:1px solid #000;border-right:1px solid #000;'>TOTAL :</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;text-align:right;'>" + lstData.ChqDetails.Sum(z => z.Amount).ToString("0.00") + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region TSA QUERY
        public ActionResult TSAQuery(string SearchBy = "SearchByDB")
        {
            ViewBag.SearchBy = SearchBy;
            WFLD_TSAQuery obj = new WFLD_TSAQuery();
            try
            {
                VIZ_ReportRepository objIR = new VIZ_ReportRepository();
                objIR.ListOfICEGateTSANo(SearchBy, "", 0);
                if (objIR.DBResponse.Data != null)
                {
                    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(objIR.DBResponse.Data);
                    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                    ViewBag.LstObl = Jobject["LstObl"];
                    ViewBag.State = Jobject["State"];
                }
                else
                {
                    ViewBag.LstObl = null;
                    ViewBag.State = null;
                }
            }
            catch (Exception ex)
            {
            }
            return PartialView(obj);
        }

        [HttpGet]
        public JsonResult SearchICEGateTSANo(string SearchBy, string TSANo)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateTSANo(SearchBy, TSANo, 0);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadICEGateTSANo(string SearchBy, string TSANo, int Page)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateTSANo(SearchBy, TSANo, Page);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult GetTSAGateDetail(string TSANo, string OBLNo, string SearchBy)
        {
            VIZ_ReportRepository objImport = new VIZ_ReportRepository();
            objImport.GetICEGateTSADetail(TSANo, OBLNo, SearchBy);
            object data = null;
            if (objImport.DBResponse.Data != null)
                data = objImport.DBResponse.Data;
            return Json(data, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region LINE/ITEM No QUERY
        public ActionResult LINENoQuery(string SearchBy = "SearchByDB")
        {
            ViewBag.SearchBy = SearchBy;
            WFLD_LINEQuery obj = new WFLD_LINEQuery();
            try
            {
                VIZ_ReportRepository objIR = new VIZ_ReportRepository();
                objIR.ListOfICEGateLineNo(SearchBy, "", 0);
                if (objIR.DBResponse.Data != null)
                {
                    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(objIR.DBResponse.Data);
                    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                    ViewBag.LstObl = Jobject["LstObl"];
                    ViewBag.State = Jobject["State"];
                }
                else
                {
                    ViewBag.LstObl = null;
                    ViewBag.State = null;
                }
            }
            catch (Exception ex)
            {
            }
            return PartialView(obj);
        }

        [HttpGet]
        public JsonResult SearchICEGateLineNo(string SearchBy, string LINENo)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateLineNo(SearchBy, LINENo, 0);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadICEGateLineNo(string SearchBy, string LINENo, int Page)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateLineNo(SearchBy, LINENo, Page);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult GetLineGateDetail(string LINENo, string OBLNo, string SearchBy)
        {
            VIZ_ReportRepository objImport = new VIZ_ReportRepository();
            objImport.GetICEGateLineDetail(LINENo, OBLNo, SearchBy);
            object data = null;
            if (objImport.DBResponse.Data != null)
                data = objImport.DBResponse.Data;
            return Json(data, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region BOE No QUERY
        public ActionResult BOENoQuery(string SearchBy = "SearchByDB")
        {
            ViewBag.SearchBy = SearchBy;
            WFLD_BOEQuery obj = new WFLD_BOEQuery();
            try
            {
                VIZ_ReportRepository objIR = new VIZ_ReportRepository();
                objIR.ListOfICEGateBOENo(SearchBy, "", 0);
                if (objIR.DBResponse.Data != null)
                {
                    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(objIR.DBResponse.Data);
                    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                    ViewBag.LstObl = Jobject["LstObl"];
                    ViewBag.State = Jobject["State"];
                }
                else
                {
                    ViewBag.LstObl = null;
                    ViewBag.State = null;
                }
            }
            catch (Exception ex)
            {
            }
            return PartialView(obj);
        }

        [HttpGet]
        public JsonResult SearchICEGateBOENo(string SearchBy, string OBLNo)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateBOENo(SearchBy, OBLNo, 0);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadICEGateBOENo(string SearchBy, string OBLNo, int Page)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfICEGateBOENo(SearchBy, OBLNo, Page);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult GetBOEGateDetail(string OBLNo, string SearchBy)
        {
            VIZ_ReportRepository objImport = new VIZ_ReportRepository();
            objImport.GetICEGateBOEDetail(OBLNo, SearchBy);
            object data = null;
            if (objImport.DBResponse.Data != null)
                data = objImport.DBResponse.Data;
            return Json(data, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region   ASSESSMENT SHEET LCL
        public ActionResult AssessmentLclReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ASSESSMENTLCLReport(WFLD_AssessmentLCL vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_AssessmentLCL> lstData = new List<WFLD_AssessmentLCL>();

            ObjRR.ASSESSMENTSHEETLCL(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_AssessmentLCL>)ObjRR.DBResponse.Data;
                Path = GeneratePDFASSESSMENTSHEETLCLReport(lstData, vm.PeriodFrom, vm.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFASSESSMENTSHEETLCLReport(List<WFLD_AssessmentLCL> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "ASSESSMENTSHEETLCLReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'><b>Email -</b> cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>ASSESSMENT REPORT - LCL</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Invoice No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ASM Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>OBL No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>OBL Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>TSA No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>TSA Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ASM Type(LCL/FCL) </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>BOE No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>BOE Date </th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>PKGS</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>GrossWt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Area</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CBM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Value</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Duty</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>SLA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>IMP</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Total Amount Received</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ASMDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ASMType + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BOENo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BOEDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKGS + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrossWt + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Value + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.IMP + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TotalAmount + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region   DAY TO DAY LCL DESTUFFING Report
        public ActionResult DestuffingDailyReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult DestuffingDailyReport(WFLD_DestuffingReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_DestuffingReport> lstData = new List<WFLD_DestuffingReport>();

            ObjRR.DestuffingDailyReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_DestuffingReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFDestuffingDailyReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFDestuffingDailyReport(List<WFLD_DestuffingReport> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "DAYTODAYDestuffingReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top' width='10%'><img align='right' src='IMGSRC'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>DAY TO DAY LCL DESTUFFING REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td width='10%' valign='top'><img align='right' src='ISO_IMG'/></td>");
                Pages.Append("<td width='10%' valign='top'><img align='right' src='SWACHBHARAT'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CFS CD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>CONTAINER NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>SIZE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>OBL NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>OBL DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>TSA NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>TSA DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DESTUFFING DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ITEM / LINE NO</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%; text-align:right;'>WT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>SLOT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%; text-align:right;'>AREA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%; text-align:right;'>CBM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>DESC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>IMPORTER</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CFS/PORT NAME</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>CIF VALUE</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 15%;'>SLA</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                int Size20 = 0;
                int Size40 = 0;
                decimal WT20 = 0;
                decimal WT40 = 0;
                lstData.ForEach(item =>
                {
                    if (item.Size == "20")
                    {
                        Size20 = Size20 + 1;
                        WT20 = WT20 + item.WT;
                    }

                    if (item.Size == "40")
                    {
                        Size40 = Size40 + 1;
                        WT40 = WT40 + item.WT;
                    }

                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLDate + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='10' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(z => (int)z.PKG).ToString() + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.WT).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.Area).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.CBM).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.CIFValue).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:50%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>TEU and Weight Summary </th>");
                Pages.Append("</tr>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Size </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>20 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>40 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Total </th>");

                Pages.Append("</tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Numbers </td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (Size20 + Size40) + "</td>");

                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Weights </td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + WT20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + WT40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (WT20 + WT40) + "</td>");

                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                Pages.Replace("SWACHBHARAT", Server.MapPath("~/Content/Images/SwachhBharat-Logo.png"));



                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 20f, 30f, 20f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region   DESTUFFING Report
        public ActionResult DestuffingDetailReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult DestuffingDetailReport(WFLD_DestuffingDailyReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_DestuffingDailyReport> lstData = new List<WFLD_DestuffingDailyReport>();

            ObjRR.DestuffingDetailReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_DestuffingDailyReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFDestuffingDetailReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFDestuffingDetailReport(List<WFLD_DestuffingDailyReport> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "DestuffingReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>DESTUFFING REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DESTUFFING SHEET NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CFS CD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DATE OF DESTUFFING</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CONTAINER NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>SIZE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>WEIGHT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>PORT/CFS NAME</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>TSA DATE</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DESTUFFING DATE</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                int Size20 = 0;
                int Size40 = 0;
                decimal WT20 = 0;
                decimal WT40 = 0;
                lstData.ForEach(item =>
                {
                    if (item.Size == "20")
                    {
                        Size20 = Size20 + 1;
                        WT20 = WT20 + Convert.ToDecimal(item.Weight);
                    }

                    if (item.Size == "40")
                    {
                        Size40 = Size40 + 1;
                        WT40 = WT40 + Convert.ToDecimal(item.Weight);
                    }

                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingEntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Weight + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PortName + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingDate + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:50%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>TEU and Weight Summary </th>");
                Pages.Append("</tr>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Size </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>20 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>40 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Total </th>");

                Pages.Append("</tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Numbers </td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (Size20 + Size40) + "</td>");

                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Weights </td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + WT20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + WT40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (WT20 + WT40) + "</td>");

                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region    LCL DELIVERY Report
        public ActionResult LCLDeliveryRpt()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult LCLDeliveryRpt(WFLD_LCLDeliveryRpt vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_LCLDeliveryRpt> lstData = new List<WFLD_LCLDeliveryRpt>();

            ObjRR.LCLDeliveryReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_LCLDeliveryRpt>)ObjRR.DBResponse.Data;
                Path = GeneratePDFLclDailyReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFLclDailyReport(List<WFLD_LCLDeliveryRpt> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "LCLDELIVERYReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>" + objCompanyDetails.EmailAddress + "</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>LCL DELIVERY REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>OBL NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>OBL DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>TSA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>TSA DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DESTUFFING DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>IMPORTER</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ITEM/LINE NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>WT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>AREA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CBM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>SLOT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>DESC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>GATE PASS NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>VEHICLE NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>SLA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>DAYS</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CIF VALUE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>DUTY</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>TOTAL AMOUNT RECEIVED</th>");

                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingDate + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DAYS + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DUTY + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.AmountReceived + " </td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='8' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (int)z.PKG).ToString() + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.WT).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.Area).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.CBM).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.CIFValue).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.DUTY).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000;border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.AmountReceived).ToString("0.00") + "</th>");
                Pages.Append("</tr>");



                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region   DAY TO DAY FCL Report
        public ActionResult FCLDailyReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult FCLDailyReport(WFLD_FCLDailyReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_FCLDailyReport> lstData = new List<WFLD_FCLDailyReport>();

            ObjRR.FCLDailyReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_FCLDailyReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFFCLDailyReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFFCLDailyReport(List<WFLD_FCLDailyReport> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "DAYTODAYFCLReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<label style='font-size: 7pt;'>" + objCompanyDetails.CompanyAddress + "</label><br/><label style='font-size: 7pt;'>" + objCompanyDetails.EmailAddress + "</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>DAY TO DAY FCL REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CFS CD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CONTAINER NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>SIZE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>INVOICE NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>OBL NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>OBL DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>IGM NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>IGM DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ITEM NO</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>SLA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>BOE NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>BOE DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>DESC</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>GATE PASS NO</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>CHA</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>DAYS</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>TOTAL AMOUNT RECEIVED</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.IGMNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.IGMDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ITEMNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Package + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BOENo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BOEDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DAYS + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.AmountReceived + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region SLA WISE DESTUFFING ENTRY
        public ActionResult SlaWiseDestuffingReport()
        {
            WFLD_SLAWiseDestuffing objdd = new WFLD_SLAWiseDestuffing();
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.GetAllShippingLine();
            //if (ObjRR.DBResponse.Data != null)
            //{
            //    objdd.DepositDetails = (List<DepositDtl>)ObjRR.DBResponse.Data;
            //}
            //else
            //{
            //    objdd.DepositDetails = null;
            //}
            //  ObjER.GetReqNoForContainerStuffing(((Login)Session["LoginUser"]).Uid);
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.LstShippingLine = (List<WFLD_SLAWiseDestuffing>)ObjRR.DBResponse.Data;
            }
            else
            {
                ViewBag.LstShippingLine = null;
            }
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult SLAWISEDESTUFFINGENTRYReport(WFLD_SLAWiseDestuffing vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_SLAWiseDestuffing> lstData = new List<WFLD_SLAWiseDestuffing>();

            ObjRR.SlaWiseDestuffingEntryReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_SLAWiseDestuffing>)ObjRR.DBResponse.Data;
                Path = GenerateSLAWISEDESTUFFINGENTRYReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateSLAWISEDESTUFFINGENTRYReport(List<WFLD_SLAWiseDestuffing> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "SLAWISEDESTUFFINGReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<label style='font-size: 7pt;'>" + objCompanyDetails.CompanyAddress + "</label><br/><label style='font-size: 7pt;'>" + objCompanyDetails.EmailAddress + "</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>SLA WISE DESTUFFING REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CONTAINER NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>SIZE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DESTUFFING DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>DESTUFFING SHEET NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>OBL NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>OBL DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>TSA NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>TSA DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ITEM /LINE NO</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>IMPORTER</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>NO OF PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>REC PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>AREA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>CBM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>WT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>SLOT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>PORT / CFS FORM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>REMARKS</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>CHA</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>DAYS</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>TOTAL AMOUNT RECEIVED</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingSheetNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOFPKG + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.RECEIVEDPKG + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Weight + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFS + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.REMARKS + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DAYS + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.AmountReceived + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Temporary AdvanceReport

        public ActionResult TemporaryAdvanceReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult TemporaryAdvanceReport(WFLD_TemporaryAdvanceReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.GetTemporaryAdvanceReport(vm);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;



                Path = GeneratePDFTemporaryAdvanceReport(ds, vm.FromDate, vm.ToDate, vm.VoucherNo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found for this date period." }, JsonRequestBehavior.AllowGet);
            }


        }

        [NonAction]
        public string GeneratePDFTemporaryAdvanceReport(DataSet ds, String FromDate, String ToDate, String VoucherNo)
        {
            try
            {
                List<dynamic> lstExpenceHead = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                List<dynamic> lstReceiptDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
                List<dynamic> lstPaymentDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[2]);



                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "TemporaryAdvanceReport.pdf";

                List<string> AllPages = new List<string>();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                lstExpenceHead.ToList().ForEach(idata =>
                {
                    StringBuilder Pages = new StringBuilder();
                    Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                    Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                    Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                    Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                    Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                    if (FromDate != null && ToDate != null)
                    {
                        if (VoucherNo != null)
                        {
                            Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;' >Temporary Advance Account for the period from <u>" + FromDate + "</u> to <u> " + ToDate + " </u></label><br/> <label style='font-size: 7pt; font-weight:bold;'>Reference No <u>" + VoucherNo + "</u> Date <u>" + DateTime.Now + "</u></label><br/><br/> <label style='font-size: 7pt; font-weight:bold;'>PAYMENT</label>");
                        }
                        else
                        {
                            Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;' >Temporary Advance Account for the period from <u>" + FromDate + "</u> to <u> " + ToDate + " </u></label><br/> <label style='font-size: 7pt; font-weight:bold;'>Reference No <u>________________</u> Date <u>_________________</u></label><br/><br/> <label style='font-size: 7pt; font-weight:bold;'>PAYMENT</label>");
                        }

                    }
                    else
                    {
                        Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;' >Temporary Advance Account for the </label><br/> <label style='font-size: 7pt; font-weight:bold;'>Reference No <u>" + VoucherNo + "</u> Date <u>" + DateTime.Now + "</u></label><br/><br/> <label style='font-size: 7pt; font-weight:bold;'>PAYMENT</label>");
                    }

                    Pages.Append("</td>");
                    Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                    Pages.Append("</tr>");
                    Pages.Append("</thead></table>");
                    Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                    Pages.Append("<thead>");
                    Pages.Append("<tr><th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px; text-align: right;'>Amount Received</th>");
                    Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'>Date</th>");
                    Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 200px;'>Particulars</th>");
                    Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'></th>");
                    Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'></th>");
                    Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 100px;'></th>");
                    Pages.Append("<th rowspan='2' style='border-bottom: 1px solid #000; width: 100px; text-align: right;'>Total</th></tr>");
                    var TotalReceipt = 0M;
                    lstReceiptDetails.Where(x => x.ExpenseId == idata.ExpenseId).ToList().ForEach(l =>
                    {

                        Pages.Append("<tr><th style='border-bottom: 1px solid #000; width: 60px; text-align: right;'></th>");
                        Pages.Append("<th style='border-bottom: 1px solid #000; width: 40px; text-align: right;'></th></tr>");
                        Pages.Append("<tr><td colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align: right;'>" + l.ReceiptAmount + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + l.ReceiptDate + "</td>");
                        Pages.Append("<td colspan='5' style='border-bottom: 1px solid #000; text-align:left;'>Received DD/Cheque bearing No <u>" + l.InstrumentNo + "</u> Dated <u>" + l.InstrumentDate + "</u>  to meet the following expenditure.<br/> " + l.ExpenseHead + "</td></tr>");
                        TotalReceipt = TotalReceipt + Convert.ToDecimal(l.ReceiptAmount);

                    });



                    var TotalPayment = 0M;

                    Pages.Append("</thead>");
                    Pages.Append("<tbody>");
                    var j = 1;


                    lstPaymentDetails.Where(x => x.ExpHeadId == idata.ExpenseId).ToList().ForEach(ele =>
                    {

                        Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'></td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + j.ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ele.ReceiptDate + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align: left;'>" + ele.ExpenseHead + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                        Pages.Append("<td style='border-bottom: 1px solid #000; text-align: right;'>" + ele.ReceiptAmount + "</td></tr>");
                        TotalPayment = TotalPayment + Convert.ToDecimal(ele.ReceiptAmount);
                        j = j + 1;
                    });

                    Pages.Append("<tr><td colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    Pages.Append("<td colspan='5' style='border-bottom: 1px solid #000; text-align:left;'><b>Note :</b> Cheques/DDs drawn in favour of the supplier/party need not be routed through Temp Adv but Receipt only are to be sent.</td></tr>");

                    Pages.Append("<tr><td  colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                    Pages.Append("<td colspan='5' style='border-bottom: 1px solid #000; text-align:left;'>Unspent balance remitted vide DD/Ch. No <u>_____</u> dt <u>________</u></td></tr>");

                    Pages.Append("<tr><th colspan='2'  style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + TotalReceipt + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>TOTAL :</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                    Pages.Append("<th style='border-bottom: 1px solid #000; text-align: right;'>" + TotalPayment + "</th></tr>");

                    Pages.Append("</tbody></table>");
                    var Balance = TotalReceipt - TotalPayment;
                    Pages.Append("<table cellspacing='0' cellpadding='5' style='font-size:7pt; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><tbody>");
                    Pages.Append("<tr><td colspan='12' width='100%'>Certified that the payment made is correct and balance as on date is " + Balance + "  which has been physically checked, verified and found correct.</td></tr>");
                    Pages.Append("<tr><th colspan='6' width='50%'>To, <br/> Sr.Assistant Manager(A/C) <br/> CWC R.O., Bangalore </th>");
                    Pages.Append("<th colspan='6' width='50%' style='text-align:right;'>Warehouse Manager</th></tr>");
                    Pages.Append("</tbody></table>");

                    Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                    Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                    AllPages.Add(Pages.ToString());

                });









                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, AllPages);
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        [HttpGet]
        public JsonResult GetReceiptVoucherNo()

        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();

            objRepo.GetReceiptVoucherNo();

            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion

        #region Stock Register
        public ActionResult StockRegisterReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult StockRegisterReport(WFLD_StockRegisterReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_StockRegisterReport> LstStockRegister = new List<WFLD_StockRegisterReport>();

            ObjRR.StockRegisterReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_StockRegisterReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFStockRegisterReport(LstStockRegister, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFStockRegisterReport(List<WFLD_StockRegisterReport> lstData, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "LoadedContainerOutReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                //Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>STOCK REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("<br /><label style='font-size: 8pt; font-weight:bold;'>STOCK REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>As on Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'> S.No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 11%;'> CFS CD </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Container No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'> Destuff Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> OBL No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'> OBL Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 18%;'> Importer </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> TSA No </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'> TSA Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%; text-align:right;'> PKG </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%; text-align:right;'> WT </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'> Area </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'> CBM </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'> SLOT </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'> CIF VAL </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'> Storage Charge as on date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'> Days </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 18%;'> Desc </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'> N/HAZ </th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 18%;'> SLA </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLDate + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.Pkg + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.WT + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Slot + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.CIF + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item.StoreCharge + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Days + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DESC + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.HAZNoHAZ + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.SLA + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='9' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.Pkg) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.WT) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.Area) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.CBM) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.CIF) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.StoreCharge) + "</th>");
                Pages.Append("<th colspan='4' style='border-bottom: 1px solid #000;'></th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion



        #region Stock Register(including Storage Amount)
        public ActionResult StockRegisterReportIncludeStorage()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult StockRegisterReportIncludeStorage(string FromDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_StockRegisterModel> LstStockRegister = new List<WFLD_StockRegisterModel>();

            ObjRR.StockRegisterReportIncludeStorage(FromDate);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_StockRegisterModel>)ObjRR.DBResponse.Data;
                Path = GeneratePDFStockRegisterReportIncludeStorage(LstStockRegister, FromDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFStockRegisterReportIncludeStorage(List<WFLD_StockRegisterModel> lstData, String FromDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "StockRegisterReportincludeStorage.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>STOCK REGISTER(Including Storage Amount)</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>As On :</b> " + FromDate + " </label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'> Sr. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> SB No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> SB Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Entry No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Exporter </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Carting Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'> No. Of Pkg </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Gr. Weight </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> FOB </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Slot No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> CBM </th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'> Storage Charges </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ShippingBillNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ShippingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CartingDate + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoPkg + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrossWgt + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Fob + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SlotNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.StorageCharge + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='6' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.NoPkg) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.GrossWgt) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.Fob) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.CBM) + "</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.StorageCharge) + "</th>");

                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion




        #region   CCIN Report
        public ActionResult CCINReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CCINDetailReport(WFLD_CCINReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_CCINReport> lstData = new List<WFLD_CCINReport>();

            ObjRR.CCINDetailReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_CCINReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFCCINDetailReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFCCINDetailReport(List<WFLD_CCINReport> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CCINReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CCIN REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>SB NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>SB Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CCIN No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CCIN Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Inv No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Cargo</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Exporter</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CHA</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>TSA DATE</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DESTUFFING DATE</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CCINNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CCINDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrWt + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cargo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingDate + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region   SLABWISE DELIVERY Report
        public ActionResult SlabWiseDeliveryReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult SlabWiseDeliveryDetailReport(WFLD_SlabWiseDeliveryReport vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_SlabWiseDeliveryReport> lstData = new List<WFLD_SlabWiseDeliveryReport>();

            ObjRR.SlabWiseDeliveryReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_SlabWiseDeliveryReport>)ObjRR.DBResponse.Data;
                Path = GeneratePDFSlabWiseDeliveryReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFSlabWiseDeliveryReport(List<WFLD_SlabWiseDeliveryReport> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "SLABWISEDELIVERYREPORT.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>SLAB WISE DELIVERY REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>0-2 Days</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>3-15 Days</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>16-30 Days</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>>30 Days</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>PKG</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Gr Wt</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Inv No</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Cargo</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Exporter</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CHA</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>TSA DATE</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>DESTUFFING DATE</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Status</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FirstSlab + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SecondSlab + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ThirdSlab + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FourthSlab + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrWt + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InvoiceNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cargo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.DestuffingDate + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region   Cargo Carting Total Report
        public ActionResult CargoCartingTotalReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CargoCartingTotaDetailReport(WFLD_CargoCartingTotal vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_CargoCartingTotal> lstData = new List<WFLD_CargoCartingTotal>();

            ObjRR.CargoCartingTotalReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_CargoCartingTotal>)ObjRR.DBResponse.Data;
                Path = GeneratePDFCargoCartingTotaReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFCargoCartingTotaReport(List<WFLD_CargoCartingTotal> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                decimal totalNoofpack = 0;
                decimal totalWeight = 0;
                decimal totalFob = 0;
                decimal totalArea = 0;

                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CARGOCARTINGTOTALREPORT.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 8pt;'>(A Govt. of India Undertaking) </label><br/>");
                Pages.Append("<span style='font-size: 8pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 8pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 9pt; font-weight:bold;'>CARGO CARTING TOTAL REPORT</label> <br/> <label style='font-size: 8pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                //  Sr No | Entry No | Carting Date | Sb No | Sb Date | Exp | CHA | Cargo | No Pkg | Gr Wt | Fob | Slot | G /R | Area
                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='7' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 16%;'>Entry No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 16%;'>CCIN Invoice No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Carting Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>Sb No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Sb Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 18%;'>Exp</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 18%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 18%;'>Cargo</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>No Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 14%; text-align: right;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%; text-align: right;'>Fob</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Slot</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 11%;'>Location</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>G/R</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 12%; text-align: right;'>Area</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CartingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cargo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPKG + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + item.GrossWeight + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + item.FOB + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Slot + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Location + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Space + " </td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; text-align: right;'>" + item.Area + "</td>");
                    totalArea = totalArea + item.Area;
                    totalNoofpack = totalNoofpack + item.NoOfPKG;
                    totalFob = totalFob + item.FOB;
                    totalWeight = totalWeight + item.GrossWeight;


                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='9' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + totalNoofpack + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + totalWeight + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: right;'>" + totalFob + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; text-align: right;'>" + totalArea + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region  CURRENT STATUS OF LCL CARGO SLA WISE
        [HttpGet]
        public ActionResult CurrentStatusOfLclCargoSla()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CurrentStatusOfLclCargoSla(string FromDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.CurrentStatusOfLclCargoSla(FromDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = CurrentStatusOfLclCargoSlaPdf(ds, FromDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string CurrentStatusOfLclCargoSlaPdf(DataSet ds, string FromDate)
        {
            try
            {
                var FileName = "CurrentStatusOfLclCargoSlawise.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; '><tbody>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><span style='font-size:8pt;'><b>As on Date...</b> " + FromDate + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>CURRENT STATUS OF LCL CARGO SLA WISE</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");

                Pages.Append("<tr><td colspan='12'><table cellpadding='10' style='width:100%;text-align:center;font-size:6.5pt;border:1px solid #000;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right:1px solid #000;width:4%;'>S.No</th> ");
                Pages.Append("<th style='border-right:1px solid #000;width:9%;'>Cont. No</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:11%;'>In Date</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:10%;'>OBL No</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>IMP Name</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:7%;'>TSA No</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:9%;'>Line No</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>No of pkg</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>Rec pkg</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%;'>Slot</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%; text-align:right;'>Area</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%; text-align:right;'>CBM</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:8%; text-align:right;'>CIF Value</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:12%; text-align:right;'>Storage Amt.</th>");
                Pages.Append("<th style='border-right:1px solid #000;width:12%;'>Desc</th>");
                Pages.Append("<th style='width:12%;'>POD</th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().Select(x => x.Field<string>("SLA")).Distinct().ToList().ForEach(x =>
                {
                    Pages.Append("<tr><th colspan='16' style='border-top:1px solid #000; text-align:left;'>Sla Name - " + x + " </th></tr>");
                    //Loop
                    int i = 1;
                    ds.Tables[1].AsEnumerable().Where(y => y.Field<string>("SLA") == x).ToList().ForEach(y =>
                    {
                        Pages.Append("<tr><td style='border-right:1px solid #000;border-top:1px solid #000;'>" + i + "</td> ");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["ContainerNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["InDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["BOLNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["ImporterName"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["TSANo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["LineNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["NoOfUnits"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["NoOfUnitsRec"].ToString() + "</td>");
                        //Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["Weight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["LocationName"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000; text-align:right;'>" + y["Area"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000; text-align:right;'>" + y["CBM"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000; text-align:right;'>" + y["CIFValue"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000; text-align:right;'>" + y["STO"].ToString() + "</td>");
                        Pages.Append("<td style='border-right:1px solid #000;border-top:1px solid #000;'>" + y["CargoDescription"].ToString() + "</td>");
                        Pages.Append("<td style='border-top:1px solid #000;'>" + y["POL"].ToString() + "</td></tr>");
                        i += 1;
                    });

                });

                Pages.Append("</tbody>");
                Pages.Append("</table></td></tr>");

                Pages.Append("</tbody></table>");



                //Pages.Append("<tr><td colspan='12'>");
                //Pages.Append("<table style='width:100%;font-size:8pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'>");
                //Pages.Append("<thead><tr><td colspan='12'><table cellpadding='10' cellspacing='0' style='border:1px solid #000;width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:2%;'>Sr.</th> ");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:8%;'>Container No</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:8%;'>In Date</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:10%;'>OBL No</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:8%;'>IMP Name</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:7%;'>TSA No</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:9%;'>Line No</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:13%;'>No of pkg</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:13%;'>Rec pkg</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:8%;'>Slot</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:5%;'>Area</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:5%;'>CBM</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:5%;'>CIF Value</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:5%;'>Storage Charge</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:5%;'>Desc</th>");
                //Pages.Append("<th style='text-align:left;border-right:1px solid #000;width:5%;'>POD</th>");
                //Pages.Append("</tr></tbody></table></td></tr></thead>");

                //Pages.Append("<tbody>");
                //ds.Tables[1].AsEnumerable().Select(x=>x.Field<string>("SLA")).Distinct().ToList().ForEach(x =>
                //{
                //    Pages.Append("<tr><td colspan='12' style='padding:0;'>");
                //    Pages.Append("<table cellspaning='0' style='margin:0 0 15px;border:1px solid #000;width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody>");
                //    Pages.Append("<tr><td colspan='12' cellspaning='0'>");
                //    Pages.Append("<table cellspaning='0' style='margin:0;width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                //    Pages.Append("<th style='text-align:left;padding:10px;width:0%;'></th> ");
                //    Pages.Append("<th style='text-align:left;padding:10px;width:100%;'>Sla Name - " +x + " </th> ");
                //    Pages.Append("</tr></tbody></table>");
                //    Pages.Append("</td></tr>");
                //    int i = 1;
                //    ds.Tables[1].AsEnumerable().Where(y => y.Field<string>("SLA") == x).ToList().ForEach(y =>
                //    {
                //        Pages.Append("<tr><td colspan='12'>");
                //        Pages.Append("<table cellspaning='0' style='width:100%;font-size:7pt;font-family:Verdana,Arial,San-serif;border-collapse:collapse;'><tbody><tr>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:2%;'>" + i + "</td> ");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:8%;'>" + y["ContainerNo"].ToString() + " </td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:8%;'>" + y["InDate"].ToString() + "</td> ");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:10%;'>" + y["BOLNo"].ToString() + "</td> ");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:8%;'>" + y["ImporterName"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:7%;'>" + y["TSANo"].ToString() + "</td> ");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:9%;'>" + y["LineNo"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:13%;'>" + y["NoOfUnits"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:8%;'>" + y["NoOfUnitsRec"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:5%;'>" + y["Weight"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:5%;'>" + y["LocationName"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:5%;'>" + y["Area"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:5%;'>" + y["CBM"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:5%;'>" + y["CIFValue"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:5%;'>" + y["STO"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-right:1px solid;border-top:1px solid #000; #000;width:5%;'>" + y["CargoDescription"].ToString() + "</td>");
                //        Pages.Append("<td style='text-align:left;border-top:1px solid #000;width:5%;'>" + y["POL"].ToString() + "</td>");
                //        Pages.Append("</tr></tbody></table>");
                //        Pages.Append("</td></tr>");
                //        i++;
                //    });

                //    Pages.Append("</tbody></table>");
                //    Pages.Append("</td></tr>");
                //});
                //Pages.Append("</tbody>");
                //Pages.Append("</table>");
                //Pages.Append("</td></tr>");                

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion

        #region  CURRENT STATUS OF LCL CARGO BALANCE TOTAL
        [HttpGet]
        public ActionResult CurrentStatusOfLclCargoBalance()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CurrentStatusOfLclCargoBalance(string FromDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.CurrentStatusOfLclCargoBalance(FromDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = CurrentStatusOfLclCargoBalancePDF(ds, FromDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string CurrentStatusOfLclCargoBalancePDF(DataSet ds, string FromDate)
        {
            try
            {
                var FileName = "CurrentStatusOfLclCargoBalance.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>CURRENT STATUS OF LCL CARGO BALANCE TOTAL</label><br/><label style='font-size: 8pt;'><b>As On Date :</b> " + FromDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%'>Destuff Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>OBL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%'>OBL Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%'>Importer</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>TSA No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%'>TSA Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Item No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>No of pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%'>Received pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Slot</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Area</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>CBM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Storage Charge</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Days</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>CIF Value</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Desc</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>SLA</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%'>CFS / Port Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CFSCode"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["DestuffingEntryDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BOLNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BOLDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ImporterName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["TSANo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["TSADate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ItemNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["NoOfUnits"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["NoOfUnitsRec"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Weight"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["LocationName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Area"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["CBM"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["STO"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Days"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["CIFValue"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CargoDescription"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SLA"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region Cargo Carting Shed wise
        [HttpGet]
        public ActionResult CargoCartingShedWiseReport()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetGodownRightsWise(((Login)Session["LoginUser"]).Uid);
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }


        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CargoCartingShedWiseReport(WFLD_CargoCartingShedWise vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_CargoCartingShedWise> lstData = new List<WFLD_CargoCartingShedWise>();

            ObjRR.CargoCartingShedReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_CargoCartingShedWise>)ObjRR.DBResponse.Data;
                Path = GeneratePDFCargoCartingShedWiseReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFCargoCartingShedWiseReport(List<WFLD_CargoCartingShedWise> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CARGOCARTINGSHEDWISEREPORT.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CARGO CARTING SHED WISE REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                //  Sr No | Entry No | Carting Date | Sb No | Sb Date | Exp | CHA | Cargo | No Pkg | Gr Wt | Fob | Slot | G /R | Area
                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Entry No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Carting Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Sb No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Sb Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Exp</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Cargo</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>No Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Fob</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Slot</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>G/R</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CBM</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CartingDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cargo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPKG + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrWt + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FOB + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Slot + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Space + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }



        #endregion



        #region StuffingRequest
        public ActionResult StuffingRequestReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetStuffingRequestReport(WFLD_StuffingRequestModel vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_StuffingRequestModel> LstStockRegister = new List<WFLD_StuffingRequestModel>();

            ObjRR.GetStuffingRequestData(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_StuffingRequestModel>)ObjRR.DBResponse.Data;
                Path = GeneratePDFStuffingRequestReport(LstStockRegister, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFStuffingRequestReport(List<WFLD_StuffingRequestModel> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "StuffingRequestReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>STUFFING REQUEST</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'> Sr.No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> StuffReq No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> StuffReq Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> ICD Code </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> ContainerNo </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Cont Size </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> S/Line </th>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'> In Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> No. Of SBS </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> No. Of Units </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Cont. Class </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> POL </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> WT </th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'> CBM </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                int c = 0;
                int ctues = 0;
                int c20 = 0;
                int c40 = 0;
                lstData.ForEach(item =>
                {
                    c++;
                    if (item.Size == "20")
                    {
                        c20++;

                    }
                    if (item.Size == "40")
                    {
                        c40++;

                    }




                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.StuffingReqNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.RequestDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ShippingLine + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfSBS + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfUnits + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerClass + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.POL + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.StuffWeight + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                ctues = (c20 * 1) + (c40 * 2);
                Pages.Append("</tbody></table>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:20%; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<tr>");
                Pages.Append("<td colspan='2'>" + "Total" + "</td>" + "<td>" + c + "</td>");
                Pages.Append("</tr>");
                Pages.Append("<tr>");
                Pages.Append("<td>" + "20" + "</td>" + "<td>" + "40" + "</td>" + "<td>" + "Tues" + "</td>");
                Pages.Append("</tr>");



                Pages.Append("<tr>");
                Pages.Append("<td>" + c20 + "</td>" + "<td>" + c40 + "</td>" + "<td>" + ctues + "</td>");
                Pages.Append("</tr>");
                Pages.Append("</table>");
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region FactoryStuffingIWBRegister
        public ActionResult FactoryStuffingReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetFactoryStuffingReport(WFLD_FactoryStuffingModel vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_FactoryStuffingModel> LstStockRegister = new List<WFLD_FactoryStuffingModel>();

            ObjRR.GetFactoryStuffingData(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_FactoryStuffingModel>)ObjRR.DBResponse.Data;
                Path = GeneratePDFFactoryStuffingReport(LstStockRegister, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFFactoryStuffingReport(List<WFLD_FactoryStuffingModel> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "FactoryStuffingReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Factory Stuffing IWB Register</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1; int total20; int total40;
                total20 = 0;
                total40 = 0;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'> Sr.No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Entry No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Container No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Size </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> SLA CD </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Port Loading </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> POD </th>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'> Transporter </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> CHA CD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> No. Of PKG </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Receipt No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Party Name </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Gate Pass No. </th>");

                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'> Gate Pass Date </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLACD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.POL + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.POD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TransporterName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHACD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Units + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");

                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.GatePassDate + "</td>");
                    Pages.Append("</tr>");
                    if (item.Size.Equals("20"))
                    {
                        total20 = total20 + 1;
                    }
                    else if (item.Size.Equals("40"))
                    {
                        total40 = total40 + 2;
                    }
                    i++;
                });
                int total = total20 + total40;
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:20%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>TEU Summary </th>");
                Pages.Append("</tr>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>20 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>40 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Total </th>");

                Pages.Append("</tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + total20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + total40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (total) + "</td>");

                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion


        #region OnWheelStuffingIWBRegister
        public ActionResult OnWheelStuffingReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetOnWheelStuffingReport(WFLD_WheelStuffingModel vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_WheelStuffingModel> LstStockRegister = new List<WFLD_WheelStuffingModel>();

            ObjRR.GetOnWheelStuffingData(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_WheelStuffingModel>)ObjRR.DBResponse.Data;
                Path = GeneratePDFOnWheelStuffingReport(LstStockRegister, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFOnWheelStuffingReport(List<WFLD_WheelStuffingModel> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "OnWheelStuffingReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>On Wheel Stuffing IWB Register</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'> Sr.No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Entry No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Container No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Size </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Port Loading </th>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> SLA CD </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Main Line </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'> Transporter </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> CHA CD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Receipt No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Gate Pass No. </th>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Gate Pass Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Vehicle No. </th>");

                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'> Party Name </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                int Size20 = 0;
                int Size40 = 0;
                lstData.ForEach(item =>
                {
                    if (item.Size == "20")
                    {
                        Size20 = Size20 + 1;
                    }

                    if (item.Size == "40")
                    {
                        Size40 = Size40 + 2;
                    }

                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.POL + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLACD + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.MainLine + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TransporterName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHACD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GatePassDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");

                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:20%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>TEU Summary </th>");
                Pages.Append("</tr>");
                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>20 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>40 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Total </th>");

                Pages.Append("</tr>");
                Pages.Append("</thead>");
                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + Size40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (Size20 + Size40) + "</td>");

                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion
        #region   Shipping Bill Amendment  Report
        public ActionResult ShippingBillAmendmentReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ShippingBillAmendmentDetailReport(WFLD_ShipBillAmndRpt vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ShipBillAmndRpt> lstData = new List<WFLD_ShipBillAmndRpt>();

            ObjRR.ShippingBillAmendmentReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_ShipBillAmndRpt>)ObjRR.DBResponse.Data;
                Path = GeneratePDFShippingBillAmendmentReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFShippingBillAmendmentReport(List<WFLD_ShipBillAmndRpt> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "SHIPBILLAMENDMENTREPORT.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 8pt; font-weight:bold;'>SHIPPING BILL AMENDMENT REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                //  Sr No | Entry No | Carting Date | Sb No | Sb Date | Exp | CHA | Cargo | No Pkg | Gr Wt | Fob | Slot | G /R | Area

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:6pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>New SB NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>New SB Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 13%;'>Entry No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 20%;'>Exporter</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>Carting Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 8%;'>New PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 13%; text-align: right;'>New GR Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 13%; text-align: right;'>FOB</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 6%;'>Slot No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align: right;'>CBM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 12%; text-align: right;'>Storage Charge</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Old SB No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>Old SB Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 8%;'>Old Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align: right;'>Old GR Wt.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 13%;'>Amended Invoice No</th>");
                Pages.Append("<th style='width: 11%;'>Amended Invoice Date</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SBNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SBDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Exporter + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CartingDate + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.NoOfPKG + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.GRWt + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.FOB + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SlotNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.StorageCharge + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.OldSBNo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.OldSBDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.OldPkg + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.OldGrossWeight + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.AmndmntInvoiceNo + " </td>");
                    Pages.Append("<td style='border-top: 1px solid #000;'>" + item.AmndmntInvoiceDate + "</td>");

                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Space + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion
        #region   CUSTOMS DUTY COLLECTION Report
        public ActionResult CustomDutyCollectionReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CustomDutyCollectionDetailReport(WFLD_CustomDutyCollection vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_CustomDutyCollection> lstData = new List<WFLD_CustomDutyCollection>();

            ObjRR.CustomDutyCollectionReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_CustomDutyCollection>)ObjRR.DBResponse.Data;
                Path = GeneratePDFCustomDutyCollectionReport(lstData, vm.Year, vm.Month);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFCustomDutyCollectionReport(List<WFLD_CustomDutyCollection> lstData, int Year, int Month)
        {
            try
            {
                var PeriodFromMonth = Convert.ToString(Month);
                var PeriodFromYear = Convert.ToString(Year);

                var PeriodToMonth = Convert.ToString(Month);
                var PeriodToYear = Convert.ToString(Year);

                var printMonth = "";
                var printYear = "";

                if (PeriodFromMonth == PeriodToMonth && PeriodFromYear == PeriodToYear)
                {
                    switch (PeriodFromMonth)
                    {
                        //Here ds is list of invoice of a module between two dates 
                        case "1":
                            printMonth = "JANUARY";
                            printYear = PeriodFromYear;
                            break;
                        case "2":
                            printMonth = "FEBRUARY";
                            printYear = PeriodFromYear;
                            break;
                        case "3":
                            printMonth = "MARCH";
                            printYear = PeriodFromYear;
                            break;
                        case "4":
                            printMonth = "APRIL";
                            printYear = PeriodFromYear;
                            break;
                        case "5":
                            printMonth = "MAY";
                            printYear = PeriodFromYear;
                            break;
                        case "6":
                            printMonth = "JUNE";
                            printYear = PeriodFromYear;
                            break;
                        case "7":
                            printMonth = "JULY";
                            printYear = PeriodFromYear;
                            break;
                        case "8":
                            printMonth = "AUGUST";
                            printYear = PeriodFromYear;
                            break;
                        case "9":
                            printMonth = "SEPTEMBER";
                            printYear = PeriodFromYear;
                            break;
                        case "10":
                            printMonth = "OCTOBER";
                            printYear = PeriodFromYear;
                            break;
                        case "11":
                            printMonth = "NOVEMBER";
                            printYear = PeriodFromYear;
                            break;
                        case "12":
                            printMonth = "DECEMBER";
                            printYear = PeriodFromYear;
                            break;
                    }
                }
                else
                {
                    printMonth = "";
                    printYear = "";
                }

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CUSTOMDUTYCOLLECTIONREPORT.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CUSTOM DUTY COLLECTION REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>Month :</b> " + printMonth + " <b>Year :</b> " + printYear + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                //  Sr No | Entry No | Carting Date | Sb No | Sb Date | Exp | CHA | Cargo | No Pkg | Gr Wt | Fob | Slot | G /R | Area
                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Custom Duty</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Carting Date</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Sb No</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>>Sb Date</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Exp</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CHA</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Cargo</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>No Pkg</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Gr Wt</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Fob</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Slot</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>G/R</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Area</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Duty + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CartingDate + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBDate + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cargo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPKG + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrossWeight + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FOB + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Slot + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Space + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion
        #region   Excess/Balance Cargo Received Report
        public ActionResult ExcessBalanceCargoReceivedReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ExcessBalanceCargoReceivedDetailReport(WFLD_ExcessBalCarRcd vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ExcessBalCarRcd> lstData = new List<WFLD_ExcessBalCarRcd>();

            ObjRR.ExcessBalanceCargoReceivedReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_ExcessBalCarRcd>)ObjRR.DBResponse.Data;
                Path = GeneratePDFExcessBalanceCargoReceivedReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFExcessBalanceCargoReceivedReport(List<WFLD_ExcessBalCarRcd> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "EXCESSBALANCECARGORECEIVEDREPORT.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>EXCESS BALANCE CARGO RECEIVED REPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                //  Sr No | Entry No | Carting Date | Sb No | Sb Date | Exp | CHA | Cargo | No Pkg | Gr Wt | Fob | Slot | G /R | Area

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>SB NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Exporter</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>PKG</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Excess/Balance Cargo</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Shed</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Slot</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>FOB</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Slot No</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CBM</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Storage Charge</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Area</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SBNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Excess + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Shed + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Slot + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FOB + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SlotNo + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.StorageCharge + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cargo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPKG + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrossWeight + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FOB + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Slot + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Space + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region  Stock Register Shed wise/Total Shed
        [HttpGet]
        public ActionResult StockRegisterShedwise()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult StockRegisterShedwise(string FromDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.StockRegisterShedwise(FromDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = StockRegisterShedwisePdf(ds, FromDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string StockRegisterShedwisePdf(DataSet ds, string FromDate)
        {
            try
            {
                var FileName = "StockRegisterShedwise.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>Stock Register Shed wise/Total Shed</label><br/><label style='font-size: 8pt;'><b>As On Date :</b> " + FromDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Entry No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Carting Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Sb No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Sb Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Exp</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cargo</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>No of pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Fob</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Slot</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>G/R</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%; text-align:right;'>CBM</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["RegisterDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingBillNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingBillDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExpName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHAName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CargoDescription"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Units"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Weight"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Fob"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["LocationName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GR"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; text-align:right;'>" + item["CUM"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;' colspan='3'>Total</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;' colspan='5'>" + ds.Tables[1].AsEnumerable().Select(x => new { SBNo = x.Field<string>("ShippingBillNo"), SBDate = x.Field<string>("ShippingBillDate") }).Distinct().Count() + " </td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Units")) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Weight")) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Fob")) + "</td>");
                Pages.Append("<td style='border-bottom: 1px solid #000; text-align:right;' colspan='3'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("CUM")) + "</td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion

        #region  Long Standing Cargo Register ( More Than 30 days)
        [HttpGet]
        public ActionResult LongStandingCargoRegisterExp()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult LongStandingCargoRegisterExp(string FromDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.LongStandingCargoRegisterExp(FromDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = LongStandingCargoRegisterExpPdf(ds, FromDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string LongStandingCargoRegisterExpPdf(DataSet ds, string FromDate)
        {
            try
            {
                var FileName = "LongStandingCargoRegisterExp.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>Long Standing Cargo Register ( More Than 30 days)</label><br/><label style='font-size: 8pt;'><b>As On Date :</b> " + FromDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Entry No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Carting Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Sb No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 7%;'>Sb Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Exp</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cargo</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>No of pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Fob</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Slot</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>G/R</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%; text-align:right;'>CBM</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["RegisterDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingBillNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingBillDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExpName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHAName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CargoDescription"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Units"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Weight"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Fob"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["LocationName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GR"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; text-align:right;'>" + item["CUM"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;' colspan='3'>Total</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;' colspan='5'>" + ds.Tables[1].AsEnumerable().Select(x => new { SBNo = x.Field<string>("ShippingBillNo"), SBDate = x.Field<string>("ShippingBillDate") }).Distinct().Count() + " </td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Units")) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Weight")) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Fob")) + "</td>");
                Pages.Append("<td style='border-bottom: 1px solid #000; text-align:right;' colspan='3'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("CUM")) + "</td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion




        #region StuffingReportwithArea
        public ActionResult StuffingReportwithArea()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetStuffingReportwithArea(WFLD_StuffingReportwithArea vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_StuffingReportwithArea> LstStockRegister = new List<WFLD_StuffingReportwithArea>();

            ObjRR.GetStuffingRequestwithAreaData(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_StuffingReportwithArea>)ObjRR.DBResponse.Data;
                Path = GeneratePDFStuffingReportwithArea(LstStockRegister, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFStuffingReportwithArea(List<WFLD_StuffingReportwithArea> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CWCIWBRegister.pdf";
                var TShipBillCount = 0;
                decimal TArea = 0;
                decimal TWeight = 0;
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CWC IWB Register</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'> Sr.No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'> Entry No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 12%;'> Container No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 4%;'> Size </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'> Container Movement Invoice No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 9%;'> Stuffing No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 12%;'> SLA/Forwarder </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Shipping Line </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 8%;'> Custom Seal No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 6%;'>Total SB </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 7%; text-align: right;'>CBM </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 9%; text-align: right;'>Weight </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 8%;'> POL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'> POD </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 12%;'> Transporter </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 12%;'> Gate Pass No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 9%;'> Gate Pass Date </th>");
                Pages.Append("<th style='width: 12%;'> Vehicle No. </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.EntryNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.StuffingNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Forwarder + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SLA + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.CustomSeal + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.TotalSB + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item.Weight + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.POL + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.POD + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.Transporter + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.GatePassNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.GatePassDate + "</td>");
                    Pages.Append("<td style='border-top: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    if (i == 1)
                    {
                        TShipBillCount = item.TotalShipBillCount;
                        TArea = item.TotalArea;
                        TWeight = item.TotalWeight;
                    }
                    Pages.Append("</tr>");
                    i++;
                });

                //Pages.Append("<tr>");
                //Pages.Append("<th colspan='18 style='height:18px; border-top: 1px solid #000;'></th>");
                //Pages.Append("</tr>");


                Pages.Append("<tr>");
                Pages.Append("<th colspan='9' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + TShipBillCount + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + TArea + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + TWeight + "</th>");
                Pages.Append("<th colspan='8' style='border-top: 1px solid #000;'></th>");
                Pages.Append("</tr>");


                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region  EGM LCL REPORT
        [HttpGet]
        public ActionResult EgmLclReport()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetEgmLclReport(string FromDate, string ToDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            var excelName = "";
            try
            {

                Login objLogin = (Login)Session["LoginUser"];
                ObjRR.EgmLclReport(FromDate, ToDate);
                excelName = "EgmLclReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "EgmLclReport.xls");
                }
            }
            // return null;
        }







        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult EgmLclReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.EgmLclReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = EgmLclReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string EgmLclReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "EgmLclReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>EGM LCL REPORT</label><br/><label style='font-size: 8pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMGLogo' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Vehicle No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>Vehicle Departure Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>GEN / CBT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>SB No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>SB Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Origin Station Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Seal No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>SLA Seal No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Weight</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ISO Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Shipping line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Carrier Agency Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Port Load</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Gate Way Port</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Exporter</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CHA</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 5%;'>Line</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExitDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CONTCBT"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingBillNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["OriginStationCode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CustomSeal"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingSeal"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["StuffQuantity"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["StuffWeight"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ISO_IMGCode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SlaName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CarrierAgencyCode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Gatewayport"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExpName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHAName"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["Line"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMGLogo", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion




        #region ASSESSMENT Report FCL
        public ActionResult AssessmentReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetASSESSMENTReport(WFLD_AssessmentReportModel vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_AssessmentReportModel> LstStockRegister = new List<WFLD_AssessmentReportModel>();

            ObjRR.GetAssessmentReportData(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstStockRegister = (List<WFLD_AssessmentReportModel>)ObjRR.DBResponse.Data;
                Path = GeneratePDFASSESSMENTReport(LstStockRegister, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFASSESSMENTReport(List<WFLD_AssessmentReportModel> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "AssessmentReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Assessment Report - FCL</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'> Sr.No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Invoice No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> ASM Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> OBL No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> OBL Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> TSA No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> TSA Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>ASM Type </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> BOE No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> BOE Date </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>PKGS </th>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>AREA </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CBM </th>");

                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Value </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Duty </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> SLA </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> IMP </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> CHA </th>");

                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'> Total Amount Received </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ASMDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OBLDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSANo + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.TSADate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ASMType + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BOENo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.BOEDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKGS + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Value + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.IMP + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + "</td>");

                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.TotalAmount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region  CHA/EXP COUNT SB WISE Report
        public ActionResult ChaExpSBWiseReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ChaExpSBWiseDetailReport(WFLD_ChaExpSBWise vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ChaExpSBWise> lstData = new List<WFLD_ChaExpSBWise>();

            ObjRR.CHAEXPSBWISEReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {

                lstData = (List<WFLD_ChaExpSBWise>)ObjRR.DBResponse.Data;
                Path = GeneratePDFChaExpSBWiseReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFChaExpSBWiseReport(List<WFLD_ChaExpSBWise> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "CHAEXPSBWiseREPORT.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CHA/EXP Count SB Wise REPORT</label> <br/><label style='font-size: 5pt; font-weight:bold;'>CARTING REPORT FOR THE PERIOD OF </label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");
                // Sr No | SB No | SB Date | CCIN No | CCIN date | PKG | Gr Wt | Inv No | Cargo | Exporter | CHA
                //  Sr No | Entry No | Carting Date | Sb No | Sb Date | Exp | CHA | Cargo | No Pkg | Gr Wt | Fob | Slot | G /R | Area

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Exp</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>COUNT</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Exporter</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Carting Date</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>No Of PKG</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>GR Wt</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>FOB</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Slot No</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CBM</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 13%;'>Storage Charge</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Area</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Cont.Class</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Veh No.</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Remarks</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Party Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHAName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ExporterName + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfSB + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Exporter + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CartingDate + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPKG + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GRWt + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FOB + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SlotNo + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.StorageCharge + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHA + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Cargo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.NoOfPKG + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.GrossWeight + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.FOB + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Slot + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Space + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.LineNo + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PKG + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.WT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLOT + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Area + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Description + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CIFValue + " </td>");
                    //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.SLA + " </td>");
                    // Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.OutDate + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.PartyName + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });





                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion


        #region  CWC IWB STUFFING REPORT
        [HttpGet]
        public ActionResult CwcIwbStuffingReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult CwcIwbStuffingReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.CwcIwbStuffingReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = CwcIwbStuffingReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string CwcIwbStuffingReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "CwcIwbStuffingReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>CWC IWB STUFFING REPORT</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Entry No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Class</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%'>Line</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%'>Custom Seal No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>POL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>POD</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Receipt No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Gate Pass Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Vehicle No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%'>Party Name</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%'>SLA Name</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");

                int ContSize20 = 0;
                int ContSize40 = 0;
                int CbtSize20 = 0;
                int CbtSize40 = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    if (item["Size"].ToString().Equals("20") && item["ContClass"].ToString().Equals("GEN"))
                    {
                        ContSize20 = ContSize20 + 1;
                    }

                    if (item["Size"].ToString().Equals("40") && item["ContClass"].ToString().Equals("GEN"))
                    {
                        ContSize40 = ContSize40 + 2;
                    }


                    if (item["Size"].ToString().Equals("20") && item["ContClass"].ToString().Equals("CBT"))
                    {
                        CbtSize20 = CbtSize20 + 1;
                    }

                    if (item["Size"].ToString().Equals("40") && item["ContClass"].ToString().Equals("CBT"))
                    {
                        CbtSize40 = CbtSize40 + 2;
                    }
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["EntryNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContClass"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["LineNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CustomSeal"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["POD"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ReceiptNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["PartyName"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["SLA"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Append("<p> &nbsp;</p>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:40%; margin-bottom:10px; margin-top:10px;border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th colspan='6' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>TEU Summary </th>");
                Pages.Append("</tr>");
                Pages.Append("<tr>");
                Pages.Append("<th  colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Container </th>");
                Pages.Append("<th   colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>CBT </th>");
                Pages.Append("</tr>");


                Pages.Append("<tr>");
                Pages.Append("<th   style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>20 </th>");
                Pages.Append("<th   style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>40 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Total </th>");
                Pages.Append("<th   style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>20 </th>");
                Pages.Append("<th   style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>40 </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Total </th>");

                Pages.Append("</tr>");

                Pages.Append("</thead>");
                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ContSize20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ContSize40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (ContSize20 + ContSize40) + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + CbtSize20 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + CbtSize40 + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + (CbtSize20 + CbtSize40) + "</td>");

                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region  EGM FCL REPORT
        [HttpGet]
        public ActionResult EgmFclReport()
        {
            return PartialView();
        }




        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetEgmFclReport(string FromDate, string ToDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            var excelName = "";
            try
            {

                Login objLogin = (Login)Session["LoginUser"];
                ObjRR.EgmFclReport(FromDate, ToDate);
                excelName = "EgmFclReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "EgmFclReport.xls");
                }
            }
            // return null;
        }




        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult EgmFclReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.EgmFclReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = EgmFclReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string EgmFclReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "EgmFclReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>EGM FCL REPORT</label><br/><label style='font-size: 8pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMGLogo' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Vehicle No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>Vehicle Departure Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Mode Of Transport</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ShippingBill</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>SB Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Origin Station Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>Container No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Seal No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>SLA Seal</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Weight</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ISO Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Shipping line Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Destination Port Name</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Carrier Agency Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Gate Way Port</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>IWB Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Exporter</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CHA</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 5%;'>Transporter</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExitDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["TransportMode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingBillNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["OriginStationCode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CustomSeal"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ShippingSeal"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["StuffQuantity"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["StuffWeight"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ISO_IMGCode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SlaName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["DestinationPortName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CarrierAgencyCode"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Gatewayport"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["IwbDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExpName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHAName"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["Transporter"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMGLogo", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion
        #region  EGM FCL Loaded Container REPORT
        [HttpGet]
        public ActionResult EgmFclLoadedReport()
        {
            return PartialView();
        }




        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetEgmFclLoadedReport(string FromDate, string ToDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            var excelName = "";
            try
            {

                Login objLogin = (Login)Session["LoginUser"];
                ObjRR.EgmFclLoadedReport(FromDate, ToDate);
                excelName = "EgmFclLoadedReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "EgmFclLoadedReport.xls");
                }
            }
            // return null;
        }





        #endregion


        #region BOND ASM DETAILS

        public ActionResult BondAsmDetails()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult BondAsmDetailsPrint(WFLD_BondAsmDetails vm)
        {
            string Path = "";
            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            List<WFLD_BondAsmDetails> lstBondAsmDetails = new List<WFLD_BondAsmDetails>();
            obj.GetBondAsmDetails(vm.FromDate, vm.ToDate);
            if (obj.DBResponse.Status == 1)
            {
                lstBondAsmDetails = (List<WFLD_BondAsmDetails>)obj.DBResponse.Data;
                Path = GeneratePDFBondAsmDetailsReport(lstBondAsmDetails, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Data = "No record found..." });
            }



        }

        [NonAction]
        public string GeneratePDFBondAsmDetailsReport(List<WFLD_BondAsmDetails> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "BONDASMDETAILS.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 8pt; font-weight:bold;'>BOND ASM DETAIL</label> <br/><label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 4%;'>S.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 14%;'>Receipt No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>Receipt Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 14%;'>Bond No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 22%;'>ASM No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>ASM Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>SAC No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>Sac Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 11%;'>ASM Type</th>");
                Pages.Append("<th style='width: 13%;'>Party Cd</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ReceiptDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.BondNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.BondDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.AsmNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.AsmDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SacNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.SacDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.AsmType + "</td>");
                    Pages.Append("<td style='border-top: 1px solid #000;'>" + item.PartyCode + "</td>");

                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion


        #region Time barred bond
        [HttpGet]
        public ActionResult TimeBarredBond()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult TimeBarredBond(string AsOnDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.TimeBarredBond(AsOnDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = TimeBarredBondPDF(ds, AsOnDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string TimeBarredBondPDF(DataSet ds, string AsOnDates)
        {
            try
            {
                var FileName = "TimeBarredBond.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>LIST OF TIME BARRED BOND REPORT AS ON " + AsOnDates + "</label><br/></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>S NO.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Bond No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>In Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>BE No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>BE No Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Bond Expiry Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>In Bond Qty</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Qty As On " + AsOnDates + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Balance Cif Value</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Balance Duty</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Total</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Balance Area(In Sq. mtrs)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>Importer</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 12%;'>CHA</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 9%;'>Commodity</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["UnloadedDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BOENo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BOEDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondExpiryDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["InBondUnits"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Unit"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Value"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Duty"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Total"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Area"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Importer"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHA"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["ItemDesc"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='8' style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:left;'>Total</th>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Unit")).ToString() + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Value")).ToString() + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Duty")).ToString() + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Total")).ToString() + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Area")).ToString() + "</td>");
                Pages.Append("<td colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></td>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;'></td>");
                Pages.Append("</tr>");


                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 20f, 20f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion



        #region Bond Container Report
        public ActionResult BondContainerReport()
        {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBondContainerReport(string FromDate, string ToDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_BondInContainer> LstBondContainer = new List<WFLD_BondInContainer>();

            ObjRR.BondContainerInReport(FromDate, ToDate);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                LstBondContainer = (List<WFLD_BondInContainer>)ObjRR.DBResponse.Data;
                Path = GeneratePDFBondContainerReport(LstBondContainer, FromDate, ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GeneratePDFBondContainerReport(List<WFLD_BondInContainer> lstData, String FromDate, String ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "BondContainerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br />");
                Pages.Append("<span style='font-size: 7pt; padding-bottom: 10px;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield , Bengaluru - 560066</span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Bond Container In Report</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>Between :</b> " + FromDate + " And " + ToDate + " </label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'> No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> CFS Code </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Container No. </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> In Date & Time </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Cont Size </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> S/Line </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> CHA </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Importer </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'> Origin </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Status </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Cont Class </th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Vech. No. </th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'> Remarks </th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'> Remarks </th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");
                int Empty20 = 0;
                int Empty40 = 0;
                lstData.ForEach(item =>
                {
                    if (item.Status == "Empty")
                    {
                        if (item.Size == "20")
                        {
                            Empty20++;
                        }

                        if (item.Size == "40")
                        {
                            Empty40++;
                        }
                    }
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CFSCode + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.InDate + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ShippingLine + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CHAName + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Importer + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.origin + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Status + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContClass + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.VehicleNo + "</td>");
                    //   Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.CBM + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item.Remarks + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });
                i = i - 1;
                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000;'>" + i + "</th>");
                Pages.Append("<th colspan='10'style='border-bottom: 1px solid #000;'></th>");
                //   Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.GrossWgt) + "</th>");
                // Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.Fob) + "</th>");
                //   Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'></th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.CBM) + "</th>");
                //   Pages.Append("<th style='border-bottom: 1px solid #000;'>" + lstData.Sum(x => x.StorageCharge) + "</th>");

                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("<br/><br/>");


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:20%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th colspan='2'>Empty Summary</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody><tr>");
                Pages.Append("<td>20 ft</td><td>40ft</td></tr>");
                Pages.Append("<tr><td style='border-bottom: 1px solid #000;'>" + Empty20 + " </td><td style='border-bottom: 1px solid #000;'>" + Empty40 + "</td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region  Bond Gate Pass REPORT
        [HttpGet]
        public ActionResult BondGatePassReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBondGatePassReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetBondGatePassForReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = BondGatePassReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string BondGatePassReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "BondGatePassReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>BOND GATE PASS REPORT</label><br/><label style='font-size: 8pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMGLogo' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");


                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align:center; font-size:6.5pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sr. No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Gate Pass No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>Gate Pass Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>SAC No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Sac Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>In Bond No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 9%;'>Ex.Boe No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Ex.Boe Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>CHA</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Importer</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Cargo Description</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:right;'>Weight</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>ISO Code</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Shipping line</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Carrier Agency Code</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Port Load</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Gate Way Port</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Exporter</th>");
                //  Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CHA</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 5%;'>Cargo Description</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassNo"].ToString() + " </td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["GatePassDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SacNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SacDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExBoeNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExBoeDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHA"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Importer"].ToString() + "</td>");
                    //  Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CargoDescription"].ToString() + "</td>");
                    //      Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["StuffWeight"].ToString() + "</td>");
                    //      Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ISO_IMGCode"].ToString() + "</td>");
                    //      Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["SlaName"].ToString() + "</td>");
                    //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CarrierAgencyCode"].ToString() + "</td>");
                    //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                    //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Gatewayport"].ToString() + "</td>");
                    //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExpName"].ToString() + "</td>");
                    //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHAName"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["CargoDescription"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMGLogo", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region Ex bond dtd
        [HttpGet]
        public ActionResult ExBondDTD()
        {
            WFLDBondRepository objBR = new WFLDBondRepository();
            objBR.ListOfGodown();
            if (objBR.DBResponse.Data != null)
            {
                objBR.ListOfGodown();
                if (objBR.DBResponse.Data != null)
                    ViewBag.ListOfGodown = objBR.DBResponse.Data;
                else ViewBag.ListOfGodown = null;
            }
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ExBondDTD(string FromDate, string ToDate, int GodownId = 0)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.ExBondDTD(FromDate, ToDate, GodownId);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = ExBondDTDPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string ExBondDTDPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "ExBondDTD.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='120%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>EX BOND DAILY TRANSACTION REGISTER</label><br/><label style='font-size: 8pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                var godwnlist = ds.Tables[1].AsEnumerable().Select(x => x.Field<string>("GodownName")).Distinct().ToList();
                godwnlist.ForEach(elem =>
                {
                    Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt; margin-bottom:15px;'>");
                    Pages.Append("<thead>");

                    Pages.Append("<tr><th colspan='18' style='border-bottom: 1px solid #000; font-size:8pt; text-align:left;'>Godown No : " + elem + "</th></tr>");

                    Pages.Append("<tr><th colspan='8' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>IN-BOND RECEIPTS</th>");
                    Pages.Append("<th colspan='10' style='border-bottom: 1px solid #000;'>EX-BOND ISSUES</th></tr>");

                    Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Bond No</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>In Bond Date</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>No pkg</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>Wt.</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%; text-align:right;'>Area</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>CIF Value</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>Duty</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>St. No.</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Ex Bond No</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Ex Boe Date</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>No pkg</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>Wt.</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>CIF Value</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>Duty</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Asm Date</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Invoice No</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>Asm No</th>");
                    Pages.Append("<th style='border-bottom: 1px solid #000; width: 5%;'>Balance Pkg</th>");
                    Pages.Append("</tr></thead>");
                    Pages.Append("<tbody>");
                    ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["InBondNo"].ToString() + " </td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["InBondDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["NoPkg"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Wt"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Area"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["CIFValue"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["Duty"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["StackNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExBondNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExBondDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ExNoPkg"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["ExWt"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["ExCIFValue"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["ExDuty"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["AsmDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["InvoiceNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["AsmNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["ClosingUnit"].ToString() + "</td>");
                        Pages.Append("</tr>");
                        i++;
                    });

                    Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:left;'>TOTAL :</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:left;'>Count : " + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Count() + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<int>("NoPkg")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<decimal>("Wt")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<decimal>("Area")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<decimal>("CIFValue")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<decimal>("Duty")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<int>("ExNoPkg")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<decimal>("ExWt")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<decimal>("ExCIFValue")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).Sum(x => x.Field<decimal>("ExDuty")) + "</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'></th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'></th>");
                    Pages.Append("<th style='border-bottom: 1px solid #000; width: 5%;'></th>");
                    Pages.Append("</tr>");
                    //Pages.Append("<tr><th colspan='18' style='border-bottom: 1px solid #000;text-align:left;'>Count : " + ds.Tables[1].AsEnumerable().Where(x=>x.Field<string>("GodownName")==elem).Count() + " </th>");
                    //Pages.Append("</tr>");
                    Pages.Append("</tbody></table>");
                });
                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt; margin-bottom:15px;'><tbody>");
                //Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:left;'>Count : " + ds.Tables[1].AsEnumerable().Count() + " </th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:left;'>Total Weight (Kg) : " + ds.Tables[1].AsEnumerable().Sum(x=>x.Field<decimal>("Wt")) + " </th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:left;'>Grand Total In-Bond Receipts : Dynamic</th>");
                //Pages.Append("<th style='border-bottom: 1px solid #000;text-align:left;'>Grand Total Ex-Bond Issues : Dynamic </th>");
                //Pages.Append("</tr>");
                //Pages.Append("</tbody></table



                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt; margin-bottom:15px;'><tbody>");
                Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%; text-align:left;'>GRAND TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:left;'>Count : " + ds.Tables[1].AsEnumerable().Count() + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<int>("NoPkg")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Wt")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Area")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("CIFValue")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("Duty")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<int>("ExNoPkg")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("ExWt")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("ExCIFValue")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%; text-align:right;'>" + ds.Tables[1].AsEnumerable().Sum(x => x.Field<decimal>("ExDuty")) + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'></th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 5%;'></th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");


                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 20f, 20f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion

        #region In bond dtd
        [HttpGet]
        public ActionResult InBondDTD()
        {
            WFLDBondRepository objBR = new WFLDBondRepository();
            objBR.ListOfGodown();
            if (objBR.DBResponse.Data != null)
            {
                objBR.ListOfGodown();
                if (objBR.DBResponse.Data != null)
                    ViewBag.ListOfGodown = objBR.DBResponse.Data;
                else ViewBag.ListOfGodown = null;
            }
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult InBondDTD(string FromDate, string ToDate, int GodownId = 0)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.InBondDTD(FromDate, ToDate, GodownId);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = InBondDTDPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string InBondDTDPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "InBondDTD.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='120%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["Email"].ToString() + "</span><br/><label style='font-size: 8pt; font-weight:bold;'>IN BOND REPORT</label><br/><label style='font-size: 8pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                var godwnlist = ds.Tables[1].AsEnumerable().Select(x => x.Field<string>("GodownName")).Distinct().ToList();
                int NoPkg = 0; decimal Wt = 0, Area = 0, CIFValue = 0, Duty = 0;
                godwnlist.ForEach(elem =>
                {
                    Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt; margin-bottom:15px;'>");
                    Pages.Append("<thead>");

                    Pages.Append("<tr><th colspan='15' style='border-bottom: 1px solid #000; font-size:8pt; text-align:left;'>Godown No : " + elem + "</th></tr>");

                    Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 3%;'>Sl No</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>BOE No</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>BOE Date</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 8%;'>In Bond No</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>In Bond Date</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>Vehicle No</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;text-align:right;'>No pkg</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>Wt.</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>Area</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>CIF Value</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>Duty</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'>St. No.</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Name of CHA</th>");
                    Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Name of Importer</th>");
                    Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Commodity</th>");
                    Pages.Append("</tr></thead>");
                    Pages.Append("<tbody>");
                    ds.Tables[1].AsEnumerable().Where(x => x.Field<string>("GodownName") == elem).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i++ + " </td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BOENo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BOEDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["BondDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + item["NoPkg"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + item["Wt"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + item["Area"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + item["CIFValue"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + item["Duty"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["StackNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["CHAName"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["IMPName"].ToString() + "</td>");
                        Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["CargoDescription"].ToString() + "</td>");
                        Pages.Append("</tr>");
                        NoPkg += Convert.ToInt32(item["NoPkg"]);
                        Wt += Convert.ToDecimal(item["Wt"]);
                        Area += Convert.ToDecimal(item["Area"]);
                        CIFValue += Convert.ToDecimal(item["CIFValue"]);
                        Duty += Convert.ToDecimal(item["Duty"]);
                    });
                    Pages.Append("</tbody></table>");
                });
                Pages.Append("<table cellspacing='0' cellpadding='6' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt; margin-bottom:15px;'><tbody>");

                Pages.Append("<tr><th style='border-bottom: 1px solid #000; width: 5%;'>TOTAL :</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'></th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 6%;'></th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 8%;'></th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 6%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 4%;text-align:right;'>" + NoPkg + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>" + Wt + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>" + Area + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>" + CIFValue + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;text-align:right;'>" + Duty + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 6%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'></th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'></th></tr>");



                //Pages.Append("<tr><th style='border-bottom: 1px solid #000;width: 3%;'>Total : </th>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;width: 8%;'></td>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;width: 6%;'></td>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;width: 8%;'></td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;width: 6%;'></td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;width: 4%;'>" + NoPkg + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;width: 6%;'>" + Wt + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;width: 4%;'>" + Area + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;width: 6%;'>" + CIFValue + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;width: 6%;'>" + Duty + "</td>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;width: 6%;'></td>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;width: 10%;'></td>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;width: 10%;'></td>");
                //Pages.Append("<td style='border-bottom: 1px solid #000;width: 10%;'></td>");
                //Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 20f, 20f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                log.Info("In bond Report : " + ex.Message);
                return "";
            }
        }
        #endregion








        #region Consolidate Party Ledger Statement



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult PLedgerConsolidate()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //VIZ_ReportRepository ObjReport = new VIZ_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetPLedgerConsolidate(WFLD_PartyLedCons ObjPdSummary)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_PartyLedCons> LstPdSummary = new List<WFLD_PartyLedCons>();
            var excelName = "";
            try
            {

                Login objLogin = (Login)Session["LoginUser"];
                ObjRR.PdConsolidateReport(ObjPdSummary);//, objLogin.Uid
                excelName = "PartyLedgerConsolidate" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "PartyLedgerConsolidate.xls");
                }
            }
            // return null;
        }



        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GeneratePLedgerConsolidatePDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "PartyLedgerConsolidate.pdf";
                Pages[0] = fc["Page"].ToString();
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/SdSummary/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/SdSummary/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }

        #endregion

        #region Import Delivery Report

        public ActionResult ImportDeliveryReport()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ImportDeliveryReport(WFLD_ImportDelivery vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            //List<WFLD_ImportDelivery> lstData = new List<WFLD_ImportDelivery>();

            ObjRR.GetImportDeliveryReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                //lstData = (List<WFLD_ImportDelivery>)ObjRR.DBResponse.Data;
                Path = GenerateImportDeliveryReport(ds, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateImportDeliveryReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "ImportDeliveryReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>A. IMPORT OPERATIONS</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause-XXI(5)" + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "Taking the required number of packages out of the stack and presenting them for customs" + " </label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "examination which would include unpacking and repacking by providing additional straps, if necessary," + " </label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "weighment and sealing wherever needed and placing them back in the stack and loading the entire" + " </label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "consigment into the vehicle provided at the import warehouse." + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;font-weight:bold;'>IMPORT DELIVERY WORK SLIP REPORT </label>");


                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>TSA NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>VEHICLE NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>WEIGHT</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%; text-align:right;'>AMOUNT</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("Date") == elem["DeliveryDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Date"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["TSANo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["GrossWeight"].ToString() + "</td>");
                        Pages.Append("<td style='border-bottom: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");

                        GWT += Convert.ToDecimal(item["GrossWeight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='6' style='height:18px; border-bottom: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region Import Destuffing CBT Report

        public ActionResult ImportDestuffingCBT()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ImportDestuffingCBT(WFLD_ImportDestuffingCBT vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<WFLD_ImportDestuffingCBT> lstData = new List<WFLD_ImportDestuffingCBT>();

            ObjRR.GetImportDestuffingCBTReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                lstData = (List<WFLD_ImportDestuffingCBT>)ObjRR.DBResponse.Data;
                Path = GenerateImportDestuffingCBTReport(lstData, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateImportDestuffingCBTReport(List<WFLD_ImportDestuffingCBT> lstData, string FromDate, string ToDate)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "ImportDestuffingCBTReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>FROM VARIOUS PLACES TO CWC/WHITEFIELD/BANGALORE IMPORT CBT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");

                Pages.Append("<br/><label style='font-size: 7pt;'>" + "  Destuffing of loaded CBT arriving at CFS using mechinical handling equipments" + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "wherever required, inventorisation of the cargo in the presence of shipping lines agents" + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "and under supervision of CFS Officials." + "</label>");

                Pages.Append("<br/><label style='font-size: 7pt; font-weight:bold;'>" + "IMPORT DESTUFFING CBT WORK SLIP REPORT" + "</label>");


                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CBT NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>CBT SIZE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>WEIGHT</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;text-align:right;'>AMOUNT</th>");

                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");


                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Date + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.ContainerNo + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item.Size + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + item.Weight + "</td>");
                    Pages.Append("<td style=' border-bottom: 1px solid #000;text-align:right;'>" + item.Amount + "</td>");
                    Pages.Append("</tr>");
                    i++;
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='4' style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.Weight).ToString("0.00") + "</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000;text-align:right;'>" + lstData.Sum(z => (decimal)z.Amount).ToString("0.00") + "</th>");
                Pages.Append("</tr>");



                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        #endregion

        #region Export Work Slip Caritng Report

        public ActionResult WorkSlipCartingRpt()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipCrtReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipCartingReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipCartingReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipCartingReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipExportCarting.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Export Carting </label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause No.XXI(6)" + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "Unloading the cargo from the trucks/vehicles and stacking the cargo" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "in the warehouse/open yard by means of suitable mechanical equipments or appropriate" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "means after due inventorisation." + " </label>");                            
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 9pt;'>As mentioned in Clause No.XXI(6)</td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;'>Unloading the cargo from the trucks/ vehicles and stacking the cargo in the warehouse / open yard by means of suitable mechanical equipments or appropriate means after due inventorisation.</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>S.B No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>S.B Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>No OF Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align:right;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>Vehicle No</th>");
                Pages.Append("<th style='width: 15%; text-align:right;'>Amount</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0, Qnty = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("CartingDate") == elem["CrtRegDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["CrtRegDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ShippingBillNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ShippingBillDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ActualQty"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + item["ActualWeight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");
                        Qnty += Convert.ToDecimal(item["ActualQty"]);
                        GWT += Convert.ToDecimal(item["ActualWeight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='9' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='4' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + Qnty.ToString("0") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion

        #region Import Transportation Report
        public ActionResult ImportTransportation()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult ImportTransportation(WFLD_ImportDelivery vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.GetImportTransportationReport(vm);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateImportTransportationReport(ds, vm.FromDate, vm.ToDate);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateImportTransportationReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "ImportTransportationReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>IMPORT</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "As mentioned in Clause XXI(3)" + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "Providing road vehicles/trucks at gateway Ports/ICD, Bangalore and taking over the loaded containers placed" + " </label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "by Port Authorities on the vehicles/trucks after satisfying about the condition of containers, the locks and seals etc.," + " </label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "and taking over the same from the authorities on the basis of an EIR and on completion of the required formalities, " + " </label>");
                Pages.Append("<br/><label style='font-size: 7pt;'>" + "transporting the same to the CFS-Whitefield under customs escort ,wherever necessary." + "</label>");
                Pages.Append("<br/><label style='font-size: 7pt;font-weight:bold;'>IMPORT TRANSPORTATION WORK SLIP REPORT </label>");


                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-bottom:10px; border-collapse:collapse; border:1px solid #000; border-bottom:0; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>IN DATE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>CONTAINER NO</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>SIZE</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 15%;'>FROM PORT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%; text-align:right;'>WEIGHT</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%; text-align:right;'>CHARGES</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0;

                int i = 1;

                ds.Tables[0].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["InDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["PortName"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:right;'>" + item["GrossWt"].ToString() + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; text-align:right;'>" + item["Charges"].ToString() + "</td>");
                    Pages.Append("</tr>");

                    GWT += Convert.ToDecimal(item["GrossWt"]);
                    AMT += Convert.ToDecimal(item["Charges"]);

                    i++;
                });


                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region Export Container WorkSlip for CWC Stuffing Report ( CWC Movement)

        public ActionResult WorkSlipContCWCMvmtRpt()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipContCWCMvmtReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipContCWCMvmtReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipContCWCMvmtReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipContCWCMvmtReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipPvtMovementContainerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CONTAINER CWC STUFFING (CWC Movement)</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause No.XXI(7)" + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "Taking out the required number of packages by providing labour or equipments from the" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "stacks for customs examination which would include unpacking and repacking by providing suitable" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "additional straps and wieghment and sealing wherever required and placing them back in the stack," + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "shifting the nominated empty containers from the container yard on the chassis after ensuring " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "grounding the Container by other means in the presence of shipping lines, customs and under the " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "supervision of the CWC officials, locking, sealing the containers on completion of the formalities " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "following the prescribed procedure.." + " </label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 9pt;'>As mentioned in Clause No.XXI(7)</td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;'>Taking out the required number of packages by providing labour or equipments from the stacks for customs examination which would include unpacking and repacking by providing suitable additional straps and wieghment and sealing wherever required and placing them back in the stack, shifting the nominated empty containers from the container yard on the chassis after ensuring thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by grounding the Container by other means in the presence of shipping lines, customs and under the supervision of the CWC officials, locking, sealing the containers on completion of the formalities following the prescribed procedure.</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width:10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width:5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Container No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align:right;'>Weight</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>POL</th>");
                Pages.Append("<th style='width: 12%; text-align:right;'>Amount</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("StuffingDate") == elem["StuffingDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["StuffingDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["CFSCode"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + item["Weight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                        Pages.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");

                        GWT += Convert.ToDecimal(item["Weight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='8' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion


        #region Export Container WorkSlip for CWC Stuffing  Report ( Pvt Movement)

        public ActionResult WorkSlipContPvtMvmtRpt()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipContPVTMvmtReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipContPVTMvmtReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipContPVTMvmtReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipContPVTMvmtReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipPvtMovementContainerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CONTAINER CWC STUFFING (Pvt. Movement)</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause No.XXI(7)" + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "Taking out the required number of packages by providing labour or equipments from the" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "stacks for customs examination which would include unpacking and repacking by providing suitable" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "additional straps and wieghment and sealing wherever required and placing them back in the stack," + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "shifting the nominated empty containers from the container yard on the chassis after ensuring " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "grounding the Container by other means in the presence of shipping lines, customs and under the " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "supervision of the CWC officials, locking, sealing the containers on completion of the formalities " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "following the prescribed procedure.." + " </label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 9pt;'>As mentioned in Clause No.XXI(7)</td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;'>Taking out the required number of packages by providing labour or equipments from the stacks for customs examination which would include unpacking and repacking by providing suitable additional straps and wieghment and sealing wherever required and placing them back in the stack, shifting the nominated empty containers from the container yard on the chassis after ensuring thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by grounding the Container by other means in the presence of shipping lines, customs and under the supervision of the CWC officials, locking, sealing the containers on completion of the formalities following the prescribed procedure.</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width:10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width:5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Container No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align:right;'>Weight</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>POL</th>");
                Pages.Append("<th style='width: 12%; text-align:right;'>Amount</th>");
                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("StuffingDate") == elem["StuffingDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["StuffingDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["CFSCode"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + item["Weight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                        Pages.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");

                        GWT += Convert.ToDecimal(item["Weight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='8' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000; text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion


        #region Export CBT WorkSlip for CWC Stuffing  Report ( CWC Movement)

        public ActionResult WorkSlipCBTCWCMvmtRpt()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipCBTCWCMvmtReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipCBTCWCMvmtReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipCBTCWCMvmtReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipCBTCWCMvmtReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipExportCBTCWCMvmt.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CWC CBT STUFFING (CWC Movement)</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause No.XXI(7)" + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "Taking out the required number of packages by providing labour or equipments from the" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "stacks for customs examination which would include unpacking and repacking by providing suitable" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "additional straps and wieghment and sealing wherever required and placing them back in the stack," + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "shifting the nominated empty containers from the container yard on the chassis after ensuring " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "grounding the Container by other means in the presence of shipping lines, customs and under the " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "supervision of the CWC officials, locking, sealing the containers on completion of the formalities " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "following the prescribed procedure.." + " </label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 9pt;'>As mentioned in Clause No.XXI(7)</td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;'>Taking out the required number of packages by providing labour or equipments from the stacks for customs examination which would include unpacking and repacking by providing suitable additional straps and wieghment and sealing wherever required and placing them back in the stack, shifting the nominated empty containers from the container yard on the chassis after ensuring thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by grounding the Container by other means in the presence of shipping lines, customs and under the supervision of the CWC officials, locking, sealing the containers on completion of the formalities following the prescribed procedure.</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width:10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width:5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>CBT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align:right;'>CBM</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align:right;'>Weight</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>POL</th>");
                Pages.Append("<th style='width: 15%; text-align:right;'>Amount</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0, TCBM = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("StuffingDate") == elem["StuffingDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["StuffingDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["CFSCode"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + item["CBM"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + item["Weight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                        Pages.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");

                        TCBM += Convert.ToDecimal(item["CBM"]);
                        GWT += Convert.ToDecimal(item["Weight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='8' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + TCBM.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion


        #region Export CBT WorkSlip for CWC Stuffing  Report ( Pvt Movement)

        public ActionResult WorkSlipCBTPVTMvmtRpt()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipCBTPVTMvmtReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipCBTPVTMvmtReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipCBTPVTMvmtReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipCBTPVTMvmtReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipExportCBTPvtMvmt.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");
                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>CWC CBT STUFFING (CWC Movement)</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause No.XXI(7)" + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "Taking out the required number of packages by providing labour or equipments from the" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "stacks for customs examination which would include unpacking and repacking by providing suitable" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "additional straps and wieghment and sealing wherever required and placing them back in the stack," + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "shifting the nominated empty containers from the container yard on the chassis after ensuring " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "grounding the Container by other means in the presence of shipping lines, customs and under the " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "supervision of the CWC officials, locking, sealing the containers on completion of the formalities " + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "following the prescribed procedure.." + " </label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 9pt;'>As mentioned in Clause No.XXI(7)</td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;'>Taking out the required number of packages by providing labour or equipments from the stacks for customs examination which would include unpacking and repacking by providing suitable additional straps and wieghment and sealing wherever required and placing them back in the stack, shifting the nominated empty containers from the container yard on the chassis after ensuring thorough cleaning of the container placing at the export warehouse and stuffing from chassis or by grounding the Container by other means in the presence of shipping lines, customs and under the supervision of the CWC officials, locking, sealing the containers on completion of the formalities following the prescribed procedure.</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width:10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width:5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>CBT</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>CFS Code</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Size</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%; text-align:right;'>Weight</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>POL</th>");
                Pages.Append("<th style='width: 15%; text-align:right;'>Amount</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("StuffingDate") == elem["StuffingDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["StuffingDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ContainerNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["CFSCode"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["Size"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:right;'>" + item["Weight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["POL"].ToString() + "</td>");
                        Pages.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");

                        GWT += Convert.ToDecimal(item["Weight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='8' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='5' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion

        #region Work Slip In Bond

        public ActionResult WorkSlipInBond()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipInBondReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipInBondReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipInBondReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipInBondReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipInBond.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>In Bond </label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause No.XXI(6)" + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "Unloading the cargo from the trucks/vehicles and stacking the cargo" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "in the warehouse/open yard by means of suitable mechanical equipments or appropriate" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "means after due inventorisation." + " </label>");                            
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");


                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;'>Taking the required number of packages out of the stack and presenting them for customs examination which would include unpacking and repacking by providing additional straps, if necessary, weighment and sealing wherever needed and placing them back in the stack and loading the entire consigment into the vehicle provided at the import warehouse .</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Bond No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>BOE No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>BOE Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>No OF Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;text-align:right;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>Truck No</th>");
                Pages.Append("<th style='width: 15%; text-align:right;'>Amount</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0, Qnty = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("DepositDate") == elem["DepositDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["DepositDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BondNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BondDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BOENo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BOEDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["Units"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + item["Weight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");
                        Qnty += Convert.ToDecimal(item["Units"]);
                        GWT += Convert.ToDecimal(item["Weight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='10' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='6' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + Qnty.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion

        #region Work Slip Ex Bond

        public ActionResult WorkSlipExBond()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipExBondReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipExBondReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipExBondReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipExBondReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipExBond.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>Ex Bond </label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "(As mentioned in Clause No.XXI(6)" + "</label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "Unloading the cargo from the trucks/vehicles and stacking the cargo" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "in the warehouse/open yard by means of suitable mechanical equipments or appropriate" + " </label>");
                //Pages.Append("<br/><label style='font-size: 7pt;'>" + "means after due inventorisation." + " </label>");                            
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");


                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;'>Taking the required number of packages out of the stack and presenting them for customs examination which would include unpacking and repacking by providing additional straps, if necessary, weighment and sealing wherever needed and placing them back in the stack and loading the entire consigment into the vehicle provided at the import warehouse .</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Gate Pass Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>SAC No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Sac Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Ex Bond No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Ex Bond Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>No OF Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;text-align:right;'>Gr Wt</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>Truck No</th>");
                Pages.Append("<th style='width: 15%; text-align:right;'>Amount</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0, Qnty = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("GatePassDate") == elem["GatePassDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["GatePassDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["SacNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["SacDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ExBondNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ExBondDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["Units"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + item["Weight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["VehicleNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-top: 1px solid #000; text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");
                        Qnty += Convert.ToDecimal(item["Units"]);
                        GWT += Convert.ToDecimal(item["Weight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);

                        i++;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='10' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='6' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + Qnty.ToString("0") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion

        #region Stuffing Register Report

        [HttpGet]
        public ActionResult StuffingRegisterReport()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}
            ViewBag.BranchType = Session["BranchType"];
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetStuffingRegister(StuffingRegister ObjStuffingRegister)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<StuffingRegister> LstStuffingRegister = new List<StuffingRegister>();
            // Login objLogin = (Login)Session["LoginUser"];


            ObjRR.StuffingRegister(ObjStuffingRegister);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                LstStuffingRegister = (List<StuffingRegister>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse);
            }
            else
            {
                return Json(ObjRR.DBResponse);
            }

        }

        [HttpPost, ValidateInput(false)]
        [CustomValidateAntiForgeryToken]
        public JsonResult GenerateStuffingRegisterPDF(FormCollection fc)
        {
            try
            {

                //string SubDomain = System.Configuration.ConfigurationManager.AppSettings["SubDomain"];
                // string FtpIdPath = "";
                //string LocalIdPath = "";
                var Pages = new string[1];
                var FileName = "StuffingRegister.pdf";
                Pages[0] = fc["Page"].ToString();
                Pages[0] = fc["Page"].ToString().Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages[0] = Pages[0].ToString().Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                // var GovtImg = Server.MapPath("~/Content/Images/gov.png");
                //Pages[0] = fc["Page"].ToString().Replace("GOVT_IMG", GovtImg).Replace("MODEL", DateTime.Today.ToShortDateString()).Replace("DIR/DED.............", fc["WaiverOrderNo"]);
                //int WavOrdrIssueId = Convert.ToInt32(fc["WavOrdrIssueId"]);
                //FtpIdPath = "WBDED/Docs/Waiver/WaiverOrder/" + WavOrdrIssueId;
                // LocalIdPath = Server.MapPath("~/Docs") + "/Report/RenewalPending/";
                string LocalDirectory = Server.MapPath("~/Docs") + "/" + Session.SessionID + "/Report/StuffingRegister/";
                if (!Directory.Exists(LocalDirectory))
                    Directory.CreateDirectory(LocalDirectory);
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 30f, 30f, 30f, 30f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + FileName, Pages);

                }
                var ObjResult = new { Status = 1, Message = "/Docs/" + Session.SessionID + "/Report/StuffingRegister/" + FileName };
                return Json(ObjResult);

            }
            catch (Exception ex)
            {
                return Json(new { Status = "-1", Message = "", }, JsonRequestBehavior.DenyGet);
            }

        }
        #endregion


        #region ContainerInOutRegister



        /*Invoice Report Detai;s Section-06.11.2017*/
        [HttpGet]
        public ActionResult ContainerInoutRegister()
        {
            //Login ObjLogin = (Login)Session["LoginUser"];
            //ViewBag.DistList = null;
            //Kdl_ReportRepository ObjReport = new Kdl_ReportRepository();
            //ObjReport.GetDistricts(ObjLogin.Uid);
            //if (ObjReport.DBResponse.Data != null)
            //{
            //    var JObj = JObject.Parse(JsonConvert.SerializeObject(ObjReport.DBResponse.Data));
            //    ViewBag.DistList = new SelectList(JObj["Dist"], "DistrictId", "DistrictName");
            //}

            return PartialView();
        }


        [ValidateAntiForgeryToken]
        public JsonResult GetContainerInoutRegister(WFLD_ContainerInOut ObjEmp)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.ContainerInOutRegister(ObjEmp);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                WFLD_ContainerInOut lstData = new WFLD_ContainerInOut();
                lstData = (WFLD_ContainerInOut)ObjRR.DBResponse.Data;
                Path = GeneratePDFContainerInOutRegister(lstData, ObjEmp.PeriodFrom, ObjEmp.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }


            else
                return Json(new { Status = 0, Data = "No Record Found" }, JsonRequestBehavior.AllowGet);
        }
        [NonAction]
        public string GeneratePDFContainerInOutRegister(WFLD_ContainerInOut item, string FromDate, string ToDate)
        {

            try
            {
                var FileName = "Container In Out Register.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>107-109 , EPIP Zone , KIADB Industrial Area <br/> Whitefield, Bengaluru - 560066 </span><br/><label style='font-size: 7pt;'>Email - cwcwfdcfs@gmail.com</label> <br/><label style='font-size: 7pt; font-weight:bold;'>Container IN OUT Register</label><br/><label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label></td>");
                //  Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'> EMPTY CONTAINER OUT REGISTER</label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td></tr>");

                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:7pt; text-align:center;'>");
                Pages.Append("<thead>");
                Pages.Append("<tr>");
                Pages.Append("<th colspan='4' style='border-right: 1px solid #000; width:25%;'>Import In</th>");
                Pages.Append("<th colspan='4' style='border-right: 1px solid #000; width:25%;'>Export Out</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; width:15%;'>Bond In</th>");

                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; width:15%;'>Empty In</th>");
                Pages.Append("<th colspan='2' style='width:15%;'>Empty Out</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>Container</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>CBT</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>Container</th>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>CBT</th>");

                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>");
                Pages.Append("<th rowspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>");
                Pages.Append("<th rowspan='2' style='border-top: 1px solid #000;'>40</th>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>");
                Pages.Append("</tr>");
                Pages.Append("</thead>");

                Pages.Append("<tbody>");
                Pages.Append("<tr>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ImportContIn20Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ImportContIn40Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ImportCbtIn20Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ImportCbtIn40Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ExportContout20Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ExportContout40Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ExportCBTout20Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.ExportCBTout40Teus + "</td>");

                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.BondContIn20Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.BondContIn40Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.EmptyIn20Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.EmptyIn40Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item.EmptyOut20Teus + "</td>");
                Pages.Append("<td style='border-right: 1px solid #000;   border-top: 1px solid #000;'>" + item.EmptyOut40Teus + "</td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<th colspan='14' style='border-right: 1px solid #000; border-top: 1px solid #000;'>TOTAL : " + item.TotalTues + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody>");
                Pages.Append("</table>");

                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:none; font-size:8pt;'>");
                //Pages.Append("<thead><tr>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>Sl No.</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>CFSCode</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Container No</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>In Date & Time</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Size</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Road/Rail</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>S/Line</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Forwarder</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Status</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Cont. Class</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Veh No.</th>");
                //Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>Remarks</th>");
                //Pages.Append("</tr></thead>");
                //Pages.Append("<tbody>");
                //lstData.LstEmpty.ForEach(item =>
                //{
                //    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 100px;'>" + i + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.CFSCode + " </td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerNo + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.DateOfArrival + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Size + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.TransPort + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ShippingLine + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Forwarder + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Status + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.ContainerClass + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.VehicleNo + "</td>");
                //    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; font-size: 10px; text-align: center; width: 130px;'>" + item.Remarks + "</td>");
                //    Pages.Append("</tr>");
                //    i++;
                //});

                //Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }



        #endregion

        #region Monthly SD Report
        [HttpGet]
        public ActionResult MonthlySDReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult MonthlySDReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var Type = "Invoice";
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetMonthlySDReport(date1, date2);


                excelName = "MonthlySDReport" + "_" + Type + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "MonthlySDReport.xls");
                }
            }
            // return null;
        }
        #endregion

        #region BOND BOE Query

        public ActionResult BondBoeQuery()
        {
            //VIZ_ReportRepository ObjER = new VIZ_ReportRepository();
            //ObjER.ListOfSACForPage("", 0);
            //if (ObjER.DBResponse.Data != null)
            //{
            //    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjER.DBResponse.Data);
            //    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
            //    ViewBag.lstSac = Jobject["lstSac"];
            //    ViewBag.SacState = Jobject["State"];
            //}
            //else
            //{
            //    ViewBag.lstSac = null;
            //}
            //ObjER.ListOfBondForPage("", 0);
            //if (ObjER.DBResponse.Data != null)
            //{
            //    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjER.DBResponse.Data);
            //    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
            //    ViewBag.lstBond = Jobject["lstBond"];
            //    ViewBag.BondState = Jobject["State"];
            //}
            //else
            //{
            //    ViewBag.lstCHA = null;
            //}

            //ObjER.ListOfBoeForPage("", 0);
            //if (ObjER.DBResponse.Data != null)
            //{
            //    var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjER.DBResponse.Data);
            //    var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
            //    ViewBag.lstBoe = Jobject["lstBoe"];
            //    ViewBag.BoeState = Jobject["State"];
            //}
            //else
            //{
            //    ViewBag.lstBoe = null;
            //}

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult BondBoeQueryPrint(WFLD_BondBoeQuery vm)
        {
            try
            {
                VIZ_ReportRepository obj = new VIZ_ReportRepository();
                obj.GetBondBoeQuery(vm.SacNO, vm.inBondNo, vm.InBondBOENo);
                if (obj.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)obj.DBResponse.Data;
                    string Path = GeneratePDFBondBoeQueryReport(ds);
                    return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);

                }
                return Json(new { Status = -1, Message = "No data found" }, JsonRequestBehavior.AllowGet);
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }

        [NonAction]
        public string GeneratePDFBondBoeQueryReport(DataSet ds)
        {
            try
            {

                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "BONDBOEQUERY.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label><br/><label style='font-size: 8pt; font-weight:bold;'>BOND DETAILS</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</thead></table>");

                decimal Qnty = 0, CIFValue = 0, Duty = 0, Blnce = 0;

                ds.Tables[0].AsEnumerable().ToList().ForEach(elem =>
                {
                    Pages.Append("<table cellspacing='0' cellpadding='5' style='border-bottom: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:9pt;'><tbody>");
                    Pages.Append("<tr><td><b>SAC No:</b> " + elem["SacNO"].ToString() + "</td> <td style='text-align:right;'><b>Sac Date:</b> " + elem["SacDate"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td><b>Bonder Name:</b> " + elem["BonderName"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td><b>CHA Name:</b> " + elem["CHAName"].ToString() + "</td></tr>");
                    Pages.Append("</tbody></table>");

                    Pages.Append("<table cellspacing='0' cellpadding='5' style='margin-top:10px; width:100%; font-family: Arial, Helvetica, sans-serif; font-size:9pt;'><tbody>");
                    Pages.Append("<tr><th colspan='12'>IN BOND DETAILS :</th></tr>");

                    Pages.Append("<tr><td colspan='12'>");
                    Pages.Append("<table cellspacing='0' cellpadding='5' style='border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                    Pages.Append("<tr>");
                    Pages.Append("<td colspan='4' style='border-right: 1px solid #000;'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:9pt;'><tbody>");
                    Pages.Append("<tr><td width='63%'><b>In Bond No :</b></td> <td width='50%'>" + elem["inBondNo"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>In Bond BOE No :</b></td> <td width='50%'>" + elem["InBondBOENo"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>No Pkg :</b></td> <td width='50%'>" + elem["NoOFPKG"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>Godown No :</b></td> <td width='50%'>" + elem["GodownNo"].ToString() + "</td></tr>");
                    Pages.Append("</tbody></table></td>");

                    Pages.Append("<td colspan='4' style='border-right: 1px solid #000;'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:9pt;'><tbody>");
                    Pages.Append("<tr><td width='63%'><b>In Bond Date :</b></td> <td width='50%'>" + elem["InBondDate"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>In Bond BOE Date :</b></td> <td width='50%'>" + elem["InBondBOEDate"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>Wt :</b></td> <td width='50%'>" + elem["Weight"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>Stack No :</b></td> <td width='50%'>" + elem["StackNo"].ToString() + "</td></tr>");
                    Pages.Append("</tbody></table></td>");

                    Pages.Append("<td colspan='4'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:9pt;'><tbody>");
                    Pages.Append("<tr><td width='63%'><b>Bonded On :</b></td> <td width='50%'>" + elem["BondedOn"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>CIF Value :</b></td> <td width='50%'>" + elem["CIFValue"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>Duty :</b></td> <td width='50%'>" + elem["Duty"].ToString() + "</td></tr>");
                    Pages.Append("<tr><td width='63%'><b>Hazardous CD :</b></td> <td width='50%'>" + elem["HazardousCD"].ToString() + "</td></tr>");
                    Pages.Append("</tbody></table></td>");

                    Blnce = Convert.ToDecimal(elem["NoOFPKG"]);

                    //Pages.Append("<td colspan='4' style='border-right: 1px solid #000;'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:8pt;'><tbody>");
                    //Pages.Append("<tr><td><b>In Bond Date:</b> Dynamic</td></tr>");
                    //Pages.Append("<tr><td><b>In Bond BOE Date:</b> Dynamic</td></tr>");
                    //Pages.Append("<tr><td><b>Wt:</b> Dynamic</td></tr>");
                    //Pages.Append("<tr><td><b>Stack No:</b> Dynamic</td></tr>");
                    //Pages.Append("</tbody></table></td>");

                    //Pages.Append("<td colspan='4'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:8pt;'><tbody>");
                    //Pages.Append("<tr><td><b>Bonded On:</b> Dynamic</td></tr>");
                    //Pages.Append("<tr><td><b>CIF Value:</b> Dynamic</td></tr>");
                    //Pages.Append("<tr><td><b>Duty:</b> Dynamic</td></tr>");
                    //Pages.Append("<tr><td><b>Hazardous CD:</b> Dynamic</td></tr>");
                    //Pages.Append("</tbody></table></td>");

                    Pages.Append("</tr>");
                    Pages.Append("</tbody></table>");
                    Pages.Append("</td></tr>");

                    Pages.Append("</tbody></table>");
                });

                Pages.Append("<table cellspacing='0' cellpadding='5' style='margin-top:10px; width:100%; font-family: Arial, Helvetica, sans-serif; font-size:9pt;'><tbody>");
                Pages.Append("<tr><th colspan='12'>DELIVERY DETAILS :</th></tr>");

                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='border: 1px solid #000; width:100%; text-align: center; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:9pt;'>");

                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000;'>DEL. Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000;'>Ex BOE No</th>");
                Pages.Append("<th style='border-right: 1px solid #000;'>Ex BOE Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; text-align: right;'>No Pkg</th>");
                Pages.Append("<th style='border-right: 1px solid #000; text-align: right;'>CIF Value</th>");
                Pages.Append("<th style='border-right: 1px solid #000; text-align: right;'>Duty</th>");
                Pages.Append("<th>Balance</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[1].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["DeliveryOrderDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ExBOENo"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ExBoeDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item["NoOfPkg"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item["CIFValue"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + item["Duty"].ToString() + "</td>");
                    Pages.Append("<td style='border-top: 1px solid #000;'>" + item["Balance"].ToString() + "</td>");

                    Pages.Append("</tr>");

                    Qnty += Convert.ToDecimal(item["NoOfPkg"]);
                    CIFValue += Convert.ToDecimal(item["CIFValue"]);
                    Duty += Convert.ToDecimal(item["Duty"]);
                });

                if (ds.Tables[1].Rows.Count < 1)
                {
                    Blnce = Blnce;
                }
                else
                {
                    Blnce = Blnce - Qnty;
                }


                Pages.Append("<tr>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + Qnty.ToString("0") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + CIFValue.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + Duty.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-top: 1px solid #000;'>" + Blnce.ToString() + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody>");

                Pages.Append("</table>");
                Pages.Append("</td></tr>");

                Pages.Append("</tbody></table>");


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/><br/></span></td></tr>");
                Pages.Append("<tr><th colspan='12' style='text-align: right;'>SHED INCHARGE</th></tr>");
                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        [HttpGet]
        public JsonResult LoadSacNo(string SacNo, int Page)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfSACForPage(SacNo, Page);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult SearchBySacNo(string SacNo)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfSACForPage(SacNo, 0);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadBondNo(string BondNo, int Page)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfBondForPage(BondNo, Page);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult SearchByBondNo(string BondNo)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfBondForPage(BondNo, 0);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }


        [HttpGet]
        public JsonResult LoadBondBoeNo(string BoeNo, int Page)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfBoeForPage(BoeNo, Page);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult SearchByBondBoeNo(string BoeNo)
        {
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            objRepo.ListOfBoeForPage(BoeNo, 0);
            return Json(objRepo.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion



        #region Work Slip BTT Cargo

        public ActionResult WorkSlipBTT()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetWorkSlipBTTReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.WorkSlipBTT(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateWorkSlipBTTReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateWorkSlipBTTReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "WorkSlipInBond.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

                Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>BTT Cargo </label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");

                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Sl.No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Shipping Bill No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>BTT Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;text-align:right;'>Gr Wt</th>");

                Pages.Append("<th style='width: 15%; text-align:right;'>Amount</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal GWT = 0, AMT = 0;
                int k = 0;
                ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
                {
                    int i = 1;

                    ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("BTTDate") == elem["BTTDate"].ToString()).ToList().ForEach(item =>
                    {
                        Pages.Append("<tr>");
                        if (i == 1)
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["BTTDate"].ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                        }
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ShippingBillNo"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BTTDate"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + item["GrossWeight"].ToString() + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + item["Amount"].ToString() + "</td>");
                        Pages.Append("</tr>");
                        GWT += Convert.ToDecimal(item["GrossWeight"]);
                        AMT += Convert.ToDecimal(item["Amount"]);
                        i++;
                        k = k + 1;
                    });
                    Pages.Append("<tr>");
                    Pages.Append("<th colspan='10' style='height:18px; border-top: 1px solid #000;'></th>");
                    Pages.Append("</tr>");
                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='1' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:left;'>" + k + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
                Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion
        #region Consolidated Export Container Report

        [HttpGet]
        public ActionResult ConsolidatedExportContainer()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ConsolidatedExportContainer(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetConsolidatedExportContainer(date1, date2);

                excelName = "ConsolidatedExportContainer" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ConsolidatedExportContainer.xls");
                }
            }
            // return null;
        }

        #endregion




        #region Reefer Container Report

        [HttpGet]
        public ActionResult ReferContainerReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ReferContainerReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetReeferContainer(date1, date2);

                excelName = "ReeferContainerReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ReeferContainerReport.xls");
                }
            }
            // return null;
        }

        #endregion


        #region Import Assessment LCL Report CHA & Shipping Line Wise

        [HttpGet]
        public ActionResult ImportAssessmentLCLReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ImportAssessmentLCLReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetImportAssessmentLCL(date1, date2);

                excelName = "ImportAssessmentLCLReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ImportAssessmentLCLReport.xls");
                }
            }
            // return null;
        }

        #endregion



        #region WorkSlip Report

        public ActionResult WorkSlipImportReport()
        {
           

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetWorkSlipImportReport(VIZ_WorkslipImport vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=IMPORTOPERATIONSUMMURY.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetWorkSlipImport(vm.FromDate, vm.ToDate);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(GetWorkSlipImportReportPDF(ds, vm.FromDate, vm.ToDate));
            Response.End();


            return Content("xc");
        }



        private string GetWorkSlipImportReportPDF(DataSet ds, string FromDate, string ToDate)
        {

            List<dynamic> lstoblDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstcontainercont = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            var FileName = "IMPORTOPERATIONSUMMURY.pdf";
            string html = "<html><body>";
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td width='300%' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 7pt;'>CFS VIZAG</label><h5 style='font-weight: bold;'>IMPORT OPERATION SUMMURY FROM  " + FromDate + " TO " + ToDate + "</h5></td></tr>";

           
                  decimal CIF = 0M; decimal Duty = 0M; decimal GR_WT = 0M; decimal NO_PKG = 0M;
                  int slno = 1;

                decimal Closing = 0M;
                
                html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'><tbody>";

                
               
                html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";
                html += "<thead>";
                html += "<tr>";
              
                html += "</tr>";
                html += "<tr>";
                html += "<th width='150px' style='border-right: 1px solid #000; border-top: 1px solid #000;'>SL.NO</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>IGM NO.</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>DATE</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>OBL NO</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>DATE</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CHA NAME</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>IMPORTER NAME</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CARGO NAME</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>NO. OF PACKAGES</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>GROSS WEIGHT</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CIF VALUE</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>DUTY VALUE</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINER NO</th>";
                //  html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>H&T</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SIZE</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>INVOICE NO</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>DATE</th>";
               
                html += "</tr>";
                html += "</thead>";
                html += "<tbody>";
            lstoblDetails.ToList().ForEach(elem =>
            {

                    
                html += "<tr>";
                
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + slno + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.IGM_No + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.IGM_Date + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.OBL_No + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.OBL_Date + "</td>";

                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.Cha + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.importer + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.CommodityName + "</td>";
               


                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.NO_PKG + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.GR_WT + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.CIF + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.Duty + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.ContainerNo + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.size + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.InvoiceNo + "</td>";
                    html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.InvoiceDate + "</td>";
                   
                    html += "</tr>";
                CIF = CIF + elem.CIF;
                Duty = Duty + elem.Duty;
                GR_WT = GR_WT + elem.GR_WT;
                NO_PKG = NO_PKG + Convert.ToDecimal(elem.NO_PKG);
                slno = slno + 1;


                });
                html += "<tr>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>Total</th>";
                
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>"+ NO_PKG + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + GR_WT + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + CIF + "</th>";
                //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + EXPHTT + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + Duty + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
                
                //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + Total + "</th>";
                //html += "<th style='border-top: 1px solid #000;'>" + Closing + "</th>";
                //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
               // html += "<th style='border-top: 1px solid #000;border-right: 1px solid #000;'></th>";
                html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>TOTAL NO OF BL'S</th>";
            lstcontainercont.ToList().ForEach(elem =>
            {
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + elem.OblCount + "</th>";
            });
            html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>SIZE</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>20</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>40</th>";
            html += "</tr>";

            html += "<tr>";
            lstcontainercont.ToList().ForEach(elem =>
            {
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>NO. OF CONTAINERS</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>"+ elem.C20 + "</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + elem.C40 + "</th>";
            });
            html += "</tr>";

            html += "</tbody>";
                html += "</table></td></tr>";
                html += "</tbody></table></td></tr>";
                html += "<tr><td><br/><br/></td></tr>";
            
            html += "</tbody></table>";
            html += "</body></html>";
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }

        #endregion
        #region WorkSlip tReport

        public ActionResult WorkSlipExportReport()
        {


            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetWorkSlipExportReport(VIZ_WorkslipImport vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=EXPORTOPERATIONSUMMURY.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetWorkSlipExport(vm.FromDate, vm.ToDate);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(GetWorkSlipExportReportPDF(ds, vm.FromDate, vm.ToDate));
            Response.End();


            return Content("xc");
        }



        private string GetWorkSlipExportReportPDF(DataSet ds, string FromDate, string ToDate)
        {

            List<dynamic> lstoblDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstcontainercont = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            var FileName = "EXPORTOPERATIONSUMMURY.pdf";
            string html = "<html><body>";
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            html += "<tr><td width='300%' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 7pt;'>CFS VIZAG</label><h5 style='font-weight: bold;'>EXPORT OPERATION SUMMURY FROM  " + FromDate + " TO " + ToDate + "</h5></td></tr>";


            decimal CIF = 0M; decimal FOB = 0M; decimal GR_WT = 0M; decimal NO_PKG = 0M;
            int slno = 1;

            decimal Closing = 0M;

            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'><tbody>";



            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";
            html += "<thead>";
            html += "<tr>";

            html += "</tr>";
            html += "<tr>";
            html += "<th width='150px' style='border-right: 1px solid #000; border-top: 1px solid #000;'>SL.NO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SB NO.</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>DATE</th>";
         
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CHA NAME</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>EXPORTER NAME</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CARGO NAME</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>NO. OF PACKAGES</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>GROSS WEIGHT</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>FOB VALUE</th>";
            
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>CONTAINER NO</th>";
            //  html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>H&T</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SIZE</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>INVOICE NO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>DATE</th>";

            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";
            lstoblDetails.ToList().ForEach(elem =>
            {


                html += "<tr>";

                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + slno + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.SB_No + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.SB_Date + "</td>";
              

                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.Cha + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.Exporter + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.CommodityName + "</td>";



                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.NO_PKG + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.GR_WT + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.FOB + "</td>";
              
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.ContainerNo + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.size + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.InvoiceNo + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.InvoiceDate + "</td>";

                html += "</tr>";
                
                FOB = FOB + elem.FOB;
                GR_WT = GR_WT + elem.GR_WT;
                NO_PKG = NO_PKG + Convert.ToDecimal(elem.NO_PKG);
                slno = slno + 1;


            });
            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>Total</th>";

            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'></th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
           
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + NO_PKG + "</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + GR_WT + "</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + FOB + "</th>";
            //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + EXPHTT + "</th>";
           
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";

            //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + Total + "</th>";
            //html += "<th style='border-top: 1px solid #000;'>" + Closing + "</th>";
            //html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>";
            // html += "<th style='border-top: 1px solid #000;border-right: 1px solid #000;'></th>";
            html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>TOTAL NO. OF SHIPPING BILLS :</th>";
            lstcontainercont.ToList().ForEach(elem =>
            {
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + elem.SBCountCount + "</th>";
            });
            html += "</tr>";

            html += "<tr>";
            html += "</tr>";

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>SIZE</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>20</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>40</th>";
            html += "</tr>";

            html += "<tr>";
            lstcontainercont.ToList().ForEach(elem =>
            {
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>NO. OF CONTAINERS</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + elem.C20 + "</th>";
                html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: right;'>" + elem.C40 + "</th>";
            });
            html += "</tr>";

            html += "</tbody>";
            html += "</table></td></tr>";
            html += "</tbody></table></td></tr>";
            html += "<tr><td><br/><br/></td></tr>";

            html += "</tbody></table>";
            html += "</body></html>";
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }

        #endregion

        #region Import Assessment FCL Report 

        [HttpGet]
        public ActionResult ImportAssessmentFCLReport()
        {
            WFLD_SLAWiseDestuffing objdd = new WFLD_SLAWiseDestuffing();
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.GetAllShippingLine();
            //if (ObjRR.DBResponse.Data != null)
            //{
            //    objdd.DepositDetails = (List<DepositDtl>)ObjRR.DBResponse.Data;
            //}
            //else
            //{
            //    objdd.DepositDetails = null;
            //}
            //  ObjER.GetReqNoForContainerStuffing(((Login)Session["LoginUser"]).Uid);
            if (ObjRR.DBResponse.Data != null)
            {
                ViewBag.LstShippingLine = (List<WFLD_SLAWiseDestuffing>)ObjRR.DBResponse.Data;
            }
            else
            {
                ViewBag.LstShippingLine = null;
            }

            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ImportAssessmentFCLReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var Type = Convert.ToInt32(fc["ShippingLineId"].ToString());
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetImportAssessmentFCL(date1, date2, Type);

                excelName = "ImportAssessmentFCLReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ImportAssessmentFCLReport.xls");
                }
            }
            // return null;
        }

        #endregion



        #region Reservation Charges Report

        [HttpGet]
        public ActionResult ReservationChargesReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ReservationChargesReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetReservationCharges(date1, date2);

                excelName = "ReservationChargesReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ReservationChargesReport.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Bond Form A Report

        [HttpGet]
        public ActionResult BondFormAReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetBondFormAReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetBondFormAReport(date1, date2);

                excelName = "BondFormAReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BondFormAReport.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Bond Form-B Report

        public ActionResult BondFormBReport()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetBondFormBReport(WorkSlipCartingReport objWork)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            ObjRR.BondFormBReport(objWork);//, objLogin.Uid
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;

                Path = GenerateBondFormBReport(ds, objWork.PeriodFrom, objWork.PeriodTo);
                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(new { Status = 0, Message = "No Record Found.." }, JsonRequestBehavior.AllowGet);
            }
        }

        [NonAction]
        public string GenerateBondFormBReport(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
                VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
                ObjRR.getCompanyDetails();
                objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
                var FileName = "BondForm-B.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='110%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
                Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label><br/><label style='font-size: 8pt; font-weight: bold;'>FORM-B</label>");
                Pages.Append("</td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");

                Pages.Append("<tr>");
                Pages.Append("<td colspan='12' style='font-size: 8pt; font-weight:bold;text-align:center;'>See Para 3 of Circular No 25/2016 - Customs dated 08.06.2016) <br/> Details of goods stored in the warehouse where the period for which they may remain warehoused under section 61 is expiring in the following month. <br/> Balance goods in the warehouse</td>");
                Pages.Append("</tr>");

                Pages.Append("</thead></table>");

                // int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 16%;'>Bill of Entry No. and date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>Bond No. and date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Date of order under Section 60(1)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Invoice no.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Sl.No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Description of goods</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Quantity</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Date of expiry of initial bonding period</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>Details of extensions (Period extended upto)</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 15%;'>Details of Bank Guarantee</th>");
                Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Date of expiry of Bonding period</th>");
                Pages.Append("<th style='width: 15%;'>Remarks</th>");

                Pages.Append("</tr></thead>");

                Pages.Append("<tbody>");

                decimal Qnty = 0;
                ds.Tables[0].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BOENoDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BondNoDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["Quantity"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BondExpiryDate"].ToString() + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
                    Pages.Append("<td style='border-top: 1px solid #000;'></td>");
                    Pages.Append("</tr>");

                    Qnty += Convert.ToDecimal(item["Quantity"]);

                });

                Pages.Append("<tr>");
                Pages.Append("<th colspan='6' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + Qnty.ToString("0") + "</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;'></th>");
                Pages.Append("<th style='border-top: 1px solid #000;'></th>");
                Pages.Append("</tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }

                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4Landscape, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }

        #endregion

        #region Transportation Charges Report

        [HttpGet]
        public ActionResult TransportationChargesReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult TransportationChargesReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetTransportationCharges(date1, date2);

                excelName = "TransportationChargesReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "TransportationChargesReport.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Bond Stock Value Report

        [HttpGet]
        public ActionResult BondStockValueReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult BondStockValueReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                //   var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetBondStockValueReport(date1, date2);

                excelName = "BondStockValueReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BondStockValueReport.xls");
                }
            }
            // return null;
        }

        #endregion

        public ActionResult WorkInsentive()
        {
            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetInvoicePartyList();
            if (obj.DBResponse.Status > 0)
                ViewBag.PartyList = JsonConvert.SerializeObject(obj.DBResponse.Data);
            else
                ViewBag.PartyList = null;

            return PartialView();
        }

        private string GetInsentiveReportPDF(DataSet ds, string FromDate, string ToDate, string PartyName)
        {

            List<dynamic> lstoblDetails = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
            List<dynamic> lstcontainercont = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[1]);
            var FileName = "Partywisecontainerhandled.pdf";
            string html = "<html><body>";
            html += "<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px; font-size:8pt;'><tbody>";
            
            html += "<tr><td colspan='12' valign='top' align='center'><h1 style='font-size: 20px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><label style='font-size: 7pt;'>CFS VIZAG</label><br/><label style='font-size: 7pt; font-weight:bold;'>" + "Party Name:" + PartyName + " <span>&nbsp;&nbsp;&nbsp;&nbsp;</span> From " + FromDate + " TO " + ToDate + "</label><h5 style='font-weight: bold; margin-top:5px;'>Incentive Report</h5></td></tr>";

            decimal CIF = 0M; decimal Duty = 0M; decimal GR_WT = 0M; decimal NO_PKG = 0M;
            int slno = 1;

            decimal Closing = 0M;

            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'><tbody>";

            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";
            html += "<thead>";
            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>SL.NO</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Container No</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Size</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Operation</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice No</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>Invoice Date</th>";
            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";
            lstoblDetails.ToList().ForEach(elem =>
            {

                html += "<tr>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + slno + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.ContainerNo + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.Size + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.Operation + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.invoiceNo + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.invoiceDate + "</td>";
                html += "</tr>";
                slno = slno + 1;
            });           
            html += "</tbody>";
            html += "</table></td></tr>";

            html += "<tr><td><br/></td></tr>";

            html += "<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='text-align: center; border: 1px solid #000; width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; font-size:7pt;'>";
            html += "<thead>";
            html += "<tr>";
            html += "<th colspan='2' width='50px' style='border-right: 1px solid #000; border-top: 1px solid #000;'>ONWHEEL	</th>";
            html += "<th colspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>FS</th>";
            html += "<th colspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>CFS STUFF</th>";
            html += "<th colspan='2' style='border-right: 1px solid #000; border-top: 1px solid #000;'>IMPORT</ th>";
            html += "</tr>";

            html += "<tr>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>20</th>";
            html += "<th style='border-right: 1px solid #000; border-top: 1px solid #000;'>40</th>";
            html += "</tr>";
            html += "</thead>";
            html += "<tbody>";
            lstcontainercont.ToList().ForEach(elem =>
            {

                html += "<tr>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>"+ elem.Wheel20 + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.Wheel40 + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.ExpLod20 + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.ExpLod40 + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.ExpCS20 + " </td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.ExpCS40 + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.import20 + "</td>";
                html += "<td style='border-right: 1px solid #000; border-top: 1px solid #000; text-align: center;'>" + elem.import40 + "</td>";
                html += "</tr>";
            });
            html += "</tbody>";
            html += "</table></td></tr>";

            html += "</tbody></table></td></tr>";
            html += "<tr><td><br/><br/></td></tr>";

            html += "</tbody></table>";
            html += "</body></html>";
            string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/HtmlReport";

            if (!Directory.Exists(LocalDirectory))
            {
                Directory.CreateDirectory(LocalDirectory);
            }
            if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
            {
                System.IO.File.Delete(LocalDirectory + "/" + FileName);
            }

            System.IO.File.WriteAllText(LocalDirectory + "/" + FileName, html);


            FileInfo fi = new FileInfo(LocalDirectory + "/" + FileName);



            //Open a file for Read\Write
            FileStream fs = fi.Open(FileMode.OpenOrCreate, FileAccess.Read, FileShare.Read);


            StreamReader sr = new StreamReader(fs);

            //Use the ReadToEnd method to read all the content from file
            string fileContent = sr.ReadToEnd();

            //Close the StreamReader object after operation
            sr.Close();
            // fs.Close();

            return fileContent;
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult GetInsentiveReport(VIZ_InsentiveReport vm)
        {

            Response.AppendHeader("content-disposition", "attachment;filename=Partywisecontainerhandled.xls");
            Response.Charset = "";
            Response.Cache.SetCacheability(HttpCacheability.NoCache);
            Response.ContentType = "application/vnd.ms-excel";

            VIZ_ReportRepository obj = new VIZ_ReportRepository();
            obj.GetInsentiveReport(vm.FromDate, vm.ToDate,vm.PartyId);
            DataSet ds = new DataSet();
            ds = (DataSet)obj.DBResponse.Data;
            Response.Write(GetInsentiveReportPDF(ds, vm.FromDate, vm.ToDate,vm.PartyName));
            Response.End();


            return Content("xc");
        }



        #region Import Stock Value Report

        [HttpGet]
        public ActionResult ImportStockValueReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ImportStockValueReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetImportStockValueReport(date1, date2);

                excelName = "ImportStockValueReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ImportStockValueReport.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Export Stock Value Report

        [HttpGet]
        public ActionResult ExportStockValueReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ExportStockValueReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetExportStockValueReport(date1, date2);

                excelName = "ExportStockValueReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ExportStockValueReport.xls");
                }
            }
            // return null;
        }

        #endregion
        #region  BTT Cargo Work Slip

        public ActionResult WorkSlipBTTExcel()
        {
            return PartialView();
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult GetWorkSlipBTTReportExcel(FormCollection vmCollection)
        {

            WorkSlipCartingReport objWork = new WorkSlipCartingReport();
            //ObjRR.WorkSlipBTT(objWork);//, objLogin.Uid

            objWork.PeriodFrom = vmCollection["FromDate"].ToString();
            objWork.PeriodTo = vmCollection["ToDate"].ToString();
            //vm.Flag = vmCollection["Flag"].ToString();

            var excelName = "";
            VIZ_ReportRepository Obj = new VIZ_ReportRepository();
            Obj.WorkSlipBTTxls(objWork);
            excelName = "BTTWORKSLIPReport" + ".xlsx";
            try
            {
                if (!string.IsNullOrEmpty(Obj.DBResponse.Data.ToString()))
                    return File(Obj.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch (Exception ex)
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "BTTCargoWorkSlip.xlsx");
                }
            }




        }

        //[NonAction]
        //public string GenerateWorkSlipBTTReport(DataSet ds, string FromDate, string ToDate)
        //{
        //    try
        //    {
        //        CompanyDetailsForReport objCompanyDetails = new CompanyDetailsForReport();
        //        VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
        //        ObjRR.getCompanyDetails();
        //        objCompanyDetails = (CompanyDetailsForReport)ObjRR.DBResponse.Data;
        //        var FileName = "WorkSlipInBond.pdf";
        //        StringBuilder Pages = new StringBuilder();
        //        string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

        //        Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");

        //        Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
        //        Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1>");
        //        Pages.Append("<label style='font-size: 7pt;'>(A Govt. of India Undertaking) </label><br/><span style='font-size: 7pt; padding-bottom: 10px;'>" + objCompanyDetails.CompanyAddress + "</span><br/><label style='font-size: 7pt;'>Email - " + objCompanyDetails.EmailAddress + "</label>");

        //        Pages.Append("<br /><label style='font-size: 7pt; font-weight:bold;'>BTT Cargo </label> <br/> <label style='font-size: 7pt; font-weight:bold;' ><b>From Date :</b> " + FromDate + " <b>To Date :</b> " + ToDate + "</label>");

        //        Pages.Append("</td>");
        //        Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
        //        Pages.Append("</tr>");

        //        Pages.Append("</thead></table>");

        //        // int i = 1;
        //        Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; margin-top:10px; border-collapse:collapse; border:1px solid #000; text-align: center; font-size:7pt;'>");
        //        Pages.Append("<thead><tr>");
        //        Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Date</th>");
        //        Pages.Append("<th style='border-right: 1px solid #000; width: 5%;'>Sl.No.</th>");
        //        Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>Shipping Bill No</th>");
        //        Pages.Append("<th style='border-right: 1px solid #000; width: 10%;'>BTT Date</th>");
        //        Pages.Append("<th style='border-right: 1px solid #000; width: 10%;text-align:right;'>Gr Wt</th>");

        //        Pages.Append("<th style='width: 15%; text-align:right;'>Amount</th>");

        //        Pages.Append("</tr></thead>");

        //        Pages.Append("<tbody>");

        //        decimal GWT = 0, AMT = 0;
        //        int k = 0;
        //        ds.Tables[1].AsEnumerable().ToList().ForEach(elem =>
        //        {
        //            int i = 1;

        //            ds.Tables[0].AsEnumerable().Where(x => x.Field<string>("BTTDate") == elem["BTTDate"].ToString()).ToList().ForEach(item =>
        //            {
        //                Pages.Append("<tr>");
        //                if (i == 1)
        //                {
        //                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + elem["BTTDate"].ToString() + "</td>");
        //                }
        //                else
        //                {
        //                    Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'></td>");
        //                }
        //                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + i + "</td>");
        //                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["ShippingBillNo"].ToString() + "</td>");
        //                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + item["BTTDate"].ToString() + "</td>");
        //                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + item["GrossWeight"].ToString() + "</td>");
        //                Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + item["Amount"].ToString() + "</td>");
        //                Pages.Append("</tr>");
        //                GWT += Convert.ToDecimal(item["GrossWeight"]);
        //                AMT += Convert.ToDecimal(item["Amount"]);
        //                i++;
        //                k = k + 1;
        //            });
        //            Pages.Append("<tr>");
        //            Pages.Append("<th colspan='10' style='height:18px; border-top: 1px solid #000;'></th>");
        //            Pages.Append("</tr>");
        //        });

        //        Pages.Append("<tr>");
        //        Pages.Append("<th colspan='1' style='border-right: 1px solid #000; border-top: 1px solid #000; text-align:left;'>TOTAL :</th>");
        //        Pages.Append("<th colspan='3' style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:left;'>" + k + "</th>");
        //        Pages.Append("<th style='border-right: 1px solid #000; border-top: 1px solid #000;text-align:right;'>" + GWT.ToString("0.00") + "</th>");
        //        Pages.Append("<th style='border-top: 1px solid #000;text-align:right;'>" + AMT.ToString("0.00") + "</th>");
        //        Pages.Append("</tr>");

        //        Pages.Append("</tbody></table>");

        //        Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
        //        Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

        //        if (!Directory.Exists(LocalDirectory))
        //        {
        //            Directory.CreateDirectory(LocalDirectory);
        //        }
        //        if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
        //        {
        //            System.IO.File.Delete(LocalDirectory + "/" + FileName);
        //        }

        //        using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
        //        {
        //            ObjPdf.HeadOffice = this.HeadOffice;
        //            ObjPdf.HOAddress = this.HOAddress;
        //            ObjPdf.ZonalOffice = this.ZonalOffice;
        //            ObjPdf.ZOAddress = this.ZOAddress;
        //            ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
        //        }
        //        return "/Docs/" + Session.SessionID + "/Report/" + FileName;
        //    }
        //    catch (Exception ex)
        //    {
        //        return "";
        //    }
        //}

        #endregion

        #region Bulk Credit Note

        public JsonResult PrintBulkCRNote(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            objRepo.PrintDetailsForBulkCRNote(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "C");
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }
        #endregion

        #region E-Invoice Excel Generation

        [HttpGet]
        public ActionResult RegisterOfEInvoice()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult EInvoiceExcel(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetRegisterofEInvoice(date1, date2);

                excelName = "EInvoice.xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "EInvoice.xls");
                }
            }
            // return null;
        }

        #endregion

        #region Bulk IRN Generation

        [HttpGet]
        public ActionResult BulkIRNGeneration()
        {
            //VIZ_ReportRepository objPpgRepo = new VIZ_ReportRepository();
            //objPpgRepo.GetBulkIrnDetails();
            //if (objPpgRepo.DBResponse.Status > 0)
            //    ViewBag.InvoiceList = JsonConvert.SerializeObject(objPpgRepo.DBResponse.Data);
            //else
            //    ViewBag.InvoiceList = null;
            return PartialView();
        }

        [HttpPost]
        public JsonResult GetBulkIrnDetails()
        {
            VIZ_ReportRepository objPpgRepo = new VIZ_ReportRepository();
            objPpgRepo.GetBulkIrnDetails();
            var Output = (WFLD_BulkIRN)objPpgRepo.DBResponse.Data;

            return Json(Output, JsonRequestBehavior.AllowGet);
        }

        public async Task<JsonResult> AddEditBulkIRN(FormCollection objForm)
        {
            try
            {

                var invoiceData = JsonConvert.DeserializeObject<WFLD_BulkIRN>(objForm["PaymentSheetModelJson"]);

                foreach (var item in invoiceData.lstPostPaymentChrg)
                {
                    try
                    {
                        if (item.InvoiceType == "Inv")
                        {
                            var result = await GetIRNForBulkInvoice(item.InvoiceNo, item.SupplyType);

                        }
                        if (item.InvoiceType == "C")
                        {
                            var result1 = await GetGenerateIRNForBulkCreditNote(item.InvoiceNo, item.SupplyType, "CRN", "C");
                        }
                        if (item.InvoiceType == "D")
                        {
                            var result2 = await GetGenerateIRNForBulkCreditNote(item.InvoiceNo, item.SupplyType, "DBN", "D");
                        }
                    }
                    catch (Exception ex)
                    {
                        continue;
                    }


                }
                //foreach (var item in invoiceData.lstOperationContwiseAmt)
                //{
                //    if (item.DocumentDate != "")
                //        item.DocumentDate = Convert.ToDateTime(item.DocumentDate).ToString("yyyy-MM-dd");
                //} 
                return Json(new { Status = 1, Message = "IRN Generated" });

            }
            catch (Exception ex)
            {
                var Err = new { Status = -1, Message = "Error" };
                return Json(Err);
            }
        }

        public async Task<JsonResult> GetIRNForBulkInvoice(String InvoiceNo, string SupplyType)
        {

            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            //objChrgRepo.GetAllCharges();
            Wfld_ImportRepository objPpgRepo = new Wfld_ImportRepository();
            //objChrgRepo.GetAllCharges();
            if (SupplyType == "B2B" || SupplyType == "SEZWP" || SupplyType == "SEZWOP")
            {
                objPpgRepo.GetIRNForYard(InvoiceNo);
                var Output = (EinvoicePayload)objPpgRepo.DBResponse.Data;

                if (Output.BuyerDtls.Gstin != "" || Output.BuyerDtls.Gstin != null)
                {
                    objPpgRepo.GetHeaderIRNForYard();

                    HeaderParam Hp = (HeaderParam)objPpgRepo.DBResponse.Data;

                    string jsonEInvoice = JsonConvert.SerializeObject(Output);
                    string jsonEInvoiceHeader = JsonConvert.SerializeObject(Hp);
                    log.Info("Before calling GenerateEinvoice");
                    Einvoice Eobj = new Einvoice(Hp, jsonEInvoice);

                    IrnResponse ERes = await Eobj.GenerateEinvoice();
                    log.Info("after calling GenerateEinvoice");
                    if (ERes.Status == 0)
                    {
                        log.Info(ERes.ErrorDetails.ErrorMessage);
                        log.Info(ERes.ErrorDetails.ErrorCode);
                        log.Info("Invoice No:" + InvoiceNo);
                        log.Info(ERes.Status);
                    }


                    if (ERes.Status == 1)
                    {
                        log.Info("Before calling AddEditIRNB2C");
                        objPpgRepo.AddEditIRNResponsec(ERes, InvoiceNo);
                        log.Info("after calling AddEditIRNB2C");
                    }
                    else
                    {
                        objPpgRepo.DBResponse.Message = ERes.ErrorDetails.ErrorMessage;
                        objPpgRepo.DBResponse.Status = Convert.ToInt32(ERes.ErrorDetails.ErrorCode);
                    }
                }
                else
                {

                    /* Einvoice Eobj = new Einvoice();
                     objPpgRepo.GetIRNB2CForYard(InvoiceNo);
                     WFLD_IrnB2CDetails irnb2cobj = new WFLD_IrnB2CDetails();
                     irnb2cobj = (WFLD_IrnB2CDetails)objPpgRepo.DBResponse.Data;

                     IrnModel irnModelObj = new IrnModel();
                     irnModelObj.DocumentDate = irnb2cobj.DocDt;
                     irnModelObj.DocumentNo = irnb2cobj.DocNo;
                     irnModelObj.DocumentType = irnb2cobj.DocTyp;
                     irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                     string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                     var dt = DateTime.Now;
                     QrCodeInfo obj = new QrCodeInfo();
                     QrCodeData objQR = new QrCodeData();
                     objQR.Irn = ERes;
                     objQR.IrnDt = dt.ToString("dd/MM/yyyy");
                     objQR.iss = "NIC";
                     objQR.ItemCnt = irnb2cobj.ItemCnt;
                     objQR.MainHsnCode = irnb2cobj.MainHsnCode;
                     objQR.SellerGstin = irnb2cobj.SellerGstin;
                     objQR.TotInvVal = irnb2cobj.TotInvVal;
                     objQR.BuyerGstin = irnb2cobj.BuyerGstin;
                     objQR.DocDt = irnb2cobj.DocDt;
                     objQR.DocNo = irnb2cobj.DocNo;
                     objQR.DocTyp = irnb2cobj.DocTyp;
                     obj.Data = (QrCodeData)objQR;
                     B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                     objresponse = Eobj.GenerateB2cQRCode(obj);
                     IrnResponse objERes = new IrnResponse();
                     objERes.irn = ERes;
                     objERes.SignedQRCode = objresponse.QrCodeBase64;
                     objERes.SignedInvoice = objresponse.QrCodeJson;
                     objERes.SignedQRCode = objresponse.QrCodeJson;

                     objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                 }

             }
             else
             {
                 Einvoice Eobj = new Einvoice();
                 objPpgRepo.GetIRNB2CForYard(InvoiceNo);
                 WFLD_IrnB2CDetails irnb2cobj = new WFLD_IrnB2CDetails();
                 irnb2cobj = (WFLD_IrnB2CDetails)objPpgRepo.DBResponse.Data;

                 IrnModel irnModelObj = new IrnModel();
                 irnModelObj.DocumentDate = irnb2cobj.DocDt;
                 irnModelObj.DocumentNo = irnb2cobj.DocNo;
                 irnModelObj.DocumentType = irnb2cobj.DocTyp;
                 irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                 string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                 var dt = DateTime.Now;
                 QrCodeInfo obj = new QrCodeInfo();
                 QrCodeData objQR = new QrCodeData();
                 objQR.Irn = ERes;
                 objQR.IrnDt = dt.ToString("dd/MM/yyyy");
                 objQR.iss = "NIC";
                 objQR.ItemCnt = irnb2cobj.ItemCnt;
                 objQR.MainHsnCode = irnb2cobj.MainHsnCode;
                 objQR.SellerGstin = irnb2cobj.SellerGstin;
                 objQR.TotInvVal = irnb2cobj.TotInvVal;
                 objQR.BuyerGstin = irnb2cobj.BuyerGstin;
                 objQR.DocDt = irnb2cobj.DocDt;
                 objQR.DocNo = irnb2cobj.DocNo;
                 objQR.DocTyp = irnb2cobj.DocTyp;
                 obj.Data = (QrCodeData)objQR;
                 B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                 objresponse = Eobj.GenerateB2cQRCode(obj);
                 IrnResponse objERes = new IrnResponse();
                 objERes.irn = ERes;
                 objERes.SignedQRCode = objresponse.QrCodeBase64;
                 objERes.SignedInvoice = objresponse.QrCodeJson;
                 objERes.SignedQRCode = objresponse.QrCodeJson;

                 objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);

             }


             return Json(objPpgRepo.DBResponse);*/
                    Einvoice Eobj = new Einvoice();
                    objPpgRepo.GetIRNB2CForYard(InvoiceNo);
                    DSR_IrnB2CDetails irnb2cobj = new DSR_IrnB2CDetails();
                    irnb2cobj = (DSR_IrnB2CDetails)objPpgRepo.DBResponse.Data;
                    if (irnb2cobj.mtid == "" || irnb2cobj.pa == "")
                    {
                        IrnModel irnModelObj = new IrnModel();
                        irnModelObj.DocumentDate = irnb2cobj.DocDt;
                        irnModelObj.DocumentNo = irnb2cobj.DocNo;
                        irnModelObj.DocumentType = irnb2cobj.DocTyp;
                        irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                        string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                        B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                        string QRCodeInfo = "000201010211021644038499331959060415522024099331959061661000309933195920825HDFC00000015010030812820026560010A0000005240138centralwarehousingco.99331959@hdfcbank27430010A0000005240125STQ200318122305804I0401085204939953033565802IN5923CENTRAL WAREHOUSING NEW6009New Delhi610611001662410525STQ200318122305804I0401080708993319596304e9fc";
                        objresponse = Eobj.GenerateB2cQRCode(QRCodeInfo);
                        IrnResponse objERes = new IrnResponse();
                        objERes.irn = ERes;
                        objERes.SignedQRCode = objresponse.QrCodeBase64;
                        objERes.SignedInvoice = objresponse.QrCodeJson;
                        objERes.SignedQRCode = objresponse.QrCodeJson;

                        objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                    }
                    else
                    {
                        var tn = "GST QR";
                        UpiQRCodeInfo idata = new UpiQRCodeInfo();
                        idata.ver = irnb2cobj.ver;
                        idata.mode = irnb2cobj.mode;
                        idata.mode = irnb2cobj.mode;
                        idata.tr = irnb2cobj.tr;
                        idata.tid = irnb2cobj.tid;
                        idata.tn = tn;
                        idata.pa = irnb2cobj.pa;
                        idata.pn = irnb2cobj.pn;
                        idata.mc = irnb2cobj.mc; 
                        idata.am = irnb2cobj.TotInvVal;
                        idata.mam = irnb2cobj.TotInvVal;
                        idata.mid = irnb2cobj.mid;
                        idata.msid = irnb2cobj.msid;
                        idata.orgId = irnb2cobj.orgId;
                        idata.mtid = irnb2cobj.mtid;
                        idata.CESS = irnb2cobj.CESS;
                        idata.CGST = irnb2cobj.CGST;
                        idata.SGST = irnb2cobj.SGST;
                        idata.IGST = irnb2cobj.IGST;
                        idata.GSTIncentive = irnb2cobj.GSTIncentive;
                        idata.GSTPCT = irnb2cobj.GSTPCT;
                        idata.qrMedium = irnb2cobj.qrMedium;
                        idata.invoiceNo = irnb2cobj.DocNo;
                        idata.InvoiceDate = irnb2cobj.DocDt;
                        idata.InvoiceName = irnb2cobj.InvoiceName;
                        idata.QRexpire = irnb2cobj.DocDt;
                        idata.pinCode = irnb2cobj.pinCode;
                        idata.tier = irnb2cobj.tier;
                        idata.gstIn = irnb2cobj.gstIn;
                        B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                        objresponse = Eobj.GenerateB2cQRCode(idata);
                        IrnModel irnModelObj = new IrnModel();
                        irnModelObj.DocumentDate = irnb2cobj.DocDt;
                        irnModelObj.DocumentNo = irnb2cobj.DocNo;
                        irnModelObj.DocumentType = irnb2cobj.DocTyp;
                        irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                        string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                        IrnResponse objERes = new IrnResponse();
                        objERes.irn = ERes;
                        objERes.SignedQRCode = objresponse.QrCodeBase64;
                        objERes.SignedInvoice = objresponse.QrCodeJson;
                        objERes.SignedQRCode = objresponse.QrCodeJson;

                        objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                    }
                }
            }
            else
            {
                Einvoice Eobj = new Einvoice();
                objPpgRepo.GetIRNB2CForYard(InvoiceNo);
                DSR_IrnB2CDetails irnb2cobj = new DSR_IrnB2CDetails();
                irnb2cobj = (DSR_IrnB2CDetails)objPpgRepo.DBResponse.Data;
                if (irnb2cobj.mtid == "" || irnb2cobj.pa == "")
                {
                    IrnModel irnModelObj = new IrnModel();
                    irnModelObj.DocumentDate = irnb2cobj.DocDt;
                    irnModelObj.DocumentNo = irnb2cobj.DocNo;
                    irnModelObj.DocumentType = irnb2cobj.DocTyp;
                    irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                    string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    string QRCodeInfo = "000201010211021644038499331959060415522024099331959061661000309933195920825HDFC00000015010030812820026560010A0000005240138centralwarehousingco.99331959@hdfcbank27430010A0000005240125STQ200318122305804I0401085204939953033565802IN5923CENTRAL WAREHOUSING NEW6009New Delhi610611001662410525STQ200318122305804I0401080708993319596304e9fc";
                    objresponse = Eobj.GenerateB2cQRCode(QRCodeInfo);
                    IrnResponse objERes = new IrnResponse();
                    objERes.irn = ERes;
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                    objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                }
                else
                {
                    var tn = "GST QR";
                    UpiQRCodeInfo idata = new UpiQRCodeInfo();
                    idata.ver = irnb2cobj.ver;
                    idata.mode = irnb2cobj.mode;
                    idata.mode = irnb2cobj.mode;
                    idata.tr = irnb2cobj.tr;
                    idata.tid = irnb2cobj.tid;
                    idata.tn = tn;
                    idata.pa = irnb2cobj.pa;
                    idata.pn = irnb2cobj.pn;
                    idata.mc = irnb2cobj.mc;
                    idata.am = irnb2cobj.TotInvVal;
                    idata.mam = irnb2cobj.TotInvVal;
                    idata.mid = irnb2cobj.mid;
                    idata.msid = irnb2cobj.msid;
                    idata.orgId = irnb2cobj.orgId;
                    idata.mtid = irnb2cobj.mtid;
                    idata.CESS = irnb2cobj.CESS;
                    idata.CGST = irnb2cobj.CGST;
                    idata.SGST = irnb2cobj.SGST;
                    idata.IGST = irnb2cobj.IGST;
                    idata.GSTIncentive = irnb2cobj.GSTIncentive;
                    idata.GSTPCT = irnb2cobj.GSTPCT;
                    idata.qrMedium = irnb2cobj.qrMedium;
                    idata.invoiceNo = irnb2cobj.DocNo;
                    idata.InvoiceDate = irnb2cobj.DocDt;
                    idata.InvoiceName = irnb2cobj.InvoiceName;
                    idata.QRexpire = irnb2cobj.DocDt;
                    idata.pinCode = irnb2cobj.pinCode;
                    idata.tier = irnb2cobj.tier;
                    idata.gstIn = irnb2cobj.gstIn;
                    B2cQRCodeResponse objresponse = new B2cQRCodeResponse();
                    objresponse = Eobj.GenerateB2cQRCode(idata);
                    IrnModel irnModelObj = new IrnModel();
                    irnModelObj.DocumentDate = irnb2cobj.DocDt;
                    irnModelObj.DocumentNo = irnb2cobj.DocNo;
                    irnModelObj.DocumentType = irnb2cobj.DocTyp;
                    irnModelObj.SupplierGstNo = irnb2cobj.SellerGstin;
                    string ERes = Eobj.GenerateB2cIrn(irnModelObj);
                    IrnResponse objERes = new IrnResponse();
                    objERes.irn = ERes;
                    objERes.SignedQRCode = objresponse.QrCodeBase64;
                    objERes.SignedInvoice = objresponse.QrCodeJson;
                    objERes.SignedQRCode = objresponse.QrCodeJson;

                    objPpgRepo.AddEditIRNResponsec(objERes, InvoiceNo);
                }

            }


            return Json(objPpgRepo.DBResponse);
        }

        public async Task<JsonResult> GetGenerateIRNForBulkCreditNote(string CrNoteNo, string SupplyType, string Type, string CRDR)
        {
            Einvoice Eobj;
            IrnResponse ERes = null;

            WFLD_CashManagementRepository objPpgRepo = new WFLD_CashManagementRepository();



            if (SupplyType == "B2C")
            {
                Eobj = new Einvoice();
                IrnModel m1 = new IrnModel();

                QrCodeInfo q1 = new QrCodeInfo();
                //   QrCodeData qdt = new QrCodeData();
                objPpgRepo.GetIRNForB2CInvoiceForCreditDebitNote(CrNoteNo, Type, CRDR);
                var Output = (QrCodeData)objPpgRepo.DBResponse.Data;

                m1.DocumentNo = Output.DocNo;
                m1.DocumentDate = Output.DocDt;
                m1.SupplierGstNo = Output.SellerGstin;
                m1.DocumentType = Output.DocTyp;
                String IRN = Eobj.GenerateB2cIrn(m1);
                Output.Irn = IRN;
                Output.IrnDt = Output.DocDt;
                Output.iss = "NIC";
                q1.Data = Output;
                B2cQRCodeResponse QRCode = Eobj.GenerateB2cQRCode(q1);
                objPpgRepo.AddEditIRNB2CCreditDebitNote(IRN, QRCode, CrNoteNo, CRDR);

                //   return Json(objPpgRepo.DBResponse.Status);
                //   IrnResponse ERes = await Eobj.GenerateB2cIrn();
            }

            else
            {
                objPpgRepo.GetIRNForDebitCredit(CrNoteNo, Type, CRDR);
                var Output = (EinvoicePayload)objPpgRepo.DBResponse.Data;
                if (Output.BuyerDtls.Gstin != "" || Output.BuyerDtls.Gstin != null)
                {

                    objPpgRepo.GetHeaderIRNForCreditDebitNote();

                    HeaderParam Hp = (HeaderParam)objPpgRepo.DBResponse.Data;

                    string jsonEInvoice = JsonConvert.SerializeObject(Output);

                    string jsonEInvoiceHeader = JsonConvert.SerializeObject(Hp);
                    Eobj = new Einvoice(Hp, jsonEInvoice);
                    ERes = await Eobj.GenerateEinvoice();
                    if (ERes.Status == 1)
                    {
                        objPpgRepo.AddEditIRNResponsecForCreditDebitNote(ERes, CrNoteNo, CRDR);
                    }
                    else
                    {
                        objPpgRepo.DBResponse.Message = ERes.ErrorDetails.ErrorMessage;
                        objPpgRepo.DBResponse.Status = Convert.ToInt32(ERes.ErrorDetails.ErrorCode);
                    }
                }
                else
                {

                    Eobj = new Einvoice();
                    IrnModel m1 = new IrnModel();

                    QrCodeInfo q1 = new QrCodeInfo();
                    //   QrCodeData qdt = new QrCodeData();
                    objPpgRepo.GetIRNForB2CInvoiceForCreditDebitNote(CrNoteNo, Type, CRDR);
                    var OutputData = (QrCodeData)objPpgRepo.DBResponse.Data;

                    m1.DocumentNo = OutputData.DocNo;
                    m1.DocumentDate = OutputData.DocDt;
                    m1.SupplierGstNo = OutputData.SellerGstin;
                    m1.DocumentType = OutputData.DocTyp;
                    String IRN = Eobj.GenerateB2cIrn(m1);
                    OutputData.Irn = IRN;
                    OutputData.IrnDt = OutputData.DocDt;
                    OutputData.iss = "NIC";
                    q1.Data = OutputData;
                    B2cQRCodeResponse QRCode = Eobj.GenerateB2cQRCode(q1);
                    objPpgRepo.AddEditIRNB2CCreditDebitNote(IRN, QRCode, CrNoteNo, CRDR);
                }

            }
            // var Images = LoadImage(ERes.QRCodeImageBase64);

            return Json(objPpgRepo.DBResponse);
        }

        #endregion


        #region Container IN and OUT Report

        [HttpGet]
        public ActionResult ContainerInandOutReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult ContainerInandOutReport(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetContainerInandOutReport(date1, date2);

                excelName = "ContainerInandOutReport" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "ContainerInandOutReport.xls");
                }
            }
            // return null;
        }

        #endregion
        #region  Insurance Register
        [HttpGet]
        public ActionResult InsuranceRegister()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetGodownForInsuranceRegister();
            if (ObjGR.DBResponse.Data != null)
                ViewBag.ListOfGodown = ObjGR.DBResponse.Data;
            else ViewBag.ListOfGodown = null;
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult InsuranceRegisterPrint(WFLD_InsuranceRegister obj, string PeriodFrom, string PeriodTo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.InsuranceRegisterPrint(obj, PeriodFrom, PeriodTo);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                WFLD_InsuranceRegister lstData = new WFLD_InsuranceRegister();
                lstData = (WFLD_InsuranceRegister)ObjRR.DBResponse.Data;
                if (obj.GodownId == 0)
                {
                    Path = GeneratePDFDailyCartingReportGodownwise(lstData, PeriodFrom, PeriodTo, obj.GodownName);
                }
                else
                {
                    Path = GeneratePDFInsuranceRegister(lstData, PeriodFrom, PeriodTo, obj.GodownName);
                }

                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }


            else
                return Json(new { Status = 0, Data = "No Record Found" }, JsonRequestBehavior.AllowGet);
        }
        [NonAction]
        public string GeneratePDFDailyCartingReportGodownwise(WFLD_InsuranceRegister lstData, string FromDate, string ToDate, string GodownName)
        {
            try
            {
                var FileName = "InsuranceRegister ShedWise  .pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                // Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + lstData.mstcompany + "</span><br/><span style='font-size:7pt;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Daily Transaction Diary(Carting)</label></td></tr>");
                Pages.Append("<td width='180%' valign='top' align='center'><h1 style='font-size: 23px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>Container Freight Station</span><br/><label style='font-size: 8pt; font-weight:bold;'>Insurance Register</label><br/><label style='font-size: 8pt;'><b>For the Period </b>" + FromDate + " And " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='0' style='width:100%; border:1px solid #000; font-size:7pt;'><tbody>");

                Pages.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='5' style='width:100%; font-size:7pt;'><tbody>");
                Pages.Append("<tr><th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:20px;'>S.No</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:100px;'>Date</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:100px;'>CIF Value</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width:100px;'>Duty</th></tr>");
                Pages.Append("</tbody></table></td></tr>");

                int total45; int total20; int total40; int total; int teus; int teus20; int teus40; int totalteus;
                total20 = 0;
                total40 = 0;
                total45 = 0;

                lstData.LstIns.Select(x => new { Godown = x.GodownName }).Distinct().ToList().ForEach(x =>
                {
                    Pages.Append("<tr><td colspan='12'><table cellspacing='0' cellpadding='0' style='width:100%; font-size:7pt;'><tbody>");
                    Pages.Append("<tr><td colspan='12' cellpadding='5' style='border-bottom: 1px solid #000;'><b>Shed No :</b>" + x.Godown + "</td></tr>");
                    int i = 1;
                    lstData.LstIns.Where(y => y.GodownName == x.Godown).ToList().ForEach(y =>
                    {
                        Pages.Append("<tr><td colspan='12' cellpadding='0'><table cellspacing='0' cellpadding='5' style='width:100%; font-size:7pt;'><tbody>");
                        Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:20px;'>" + i + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:100px;'>" + y.SVDate + "</td>");
                        Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:100px;'>" + y.CIFValue + "</td>");
                        Pages.Append("<td style='border-bottom: 1px solid #000; width:100px;'>" + y.Duty + "</td></tr>");
                        Pages.Append("</tbody></table></td></tr>");
                        i++;
                    });
                    Pages.Append("</tbody></table></td></tr>");
                });

                total20 = total20;
                total40 = total40;
                total45 = total45;
                total = total20 + total40 + total45;
                teus20 = total20;
                totalteus = teus20 + total40 * 2 + total45 * 2;
                lstData.LstIns.Select(z => new { date = z.SVDate }).Distinct().ToList().ForEach(z =>
                {
                    Pages.Append("<tr><td colspan='12' cellpadding='0'><table cellspacing='0' cellpadding='5' style='width:100%; font-size:7pt;'><tbody>");
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:20px;'></td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:100px;'><b>Date :</b>" + z.date + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000; width:100px;'><b>Total CIFValue :</b>" + lstData.LstIns.Where(y => y.SVDate == z.date).Sum(y => y.CIFValue) + "</td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000; width:100px;'><b>Total Duty :</b>" + lstData.LstIns.Where(y => y.SVDate == z.date).Sum(y => y.Duty) + "</td></tr>");
                    Pages.Append("</tbody></table></td></tr>");
                });
                Pages.Append("</tbody></table>");


                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        public string GeneratePDFInsuranceRegister(WFLD_InsuranceRegister lstData, string FromDate, string ToDate, string GodownName)
        {
            try
            {
                var FileName = "InsuranceRegister.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                // Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + lstData.mstcompany + "</span><br/><span style='font-size:7pt;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Daily Transaction Diary(Carting)</label></td></tr>");
                Pages.Append("<td width='180%' valign='top' align='center'><h1 style='font-size: 23px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>Container Freight Station</span><br/><span style='font-size:8pt;'></span><br/><label style='font-size: 8pt; font-weight:bold;'>Insurance Register</label><br/><span style='font-size:8pt;'><b>Shed No-</b> " + GodownName + "</span><br/><label style='font-size: 8pt;'><b>For the Period </b>" + FromDate + " And " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                Pages.Append("<table colspan='12' cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>SV Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>CIF Value</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;width:31%;'>Duty</th></tr></thead>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:19%;'>Gross Weight</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:19%;'>FOB</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;width:19%;'>Remarks</th></tr></thead>");
                Pages.Append("<tbody>");
                int i = 1;
                int total45; int total20; int total40; int total; int teus; int teus20; int teus40; int totalteus;


                total20 = 0;
                total40 = 0;
                total45 = 0;
                lstData.LstIns.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.SVDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CIFValue + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("</tr>");

                    //if (item.Size.Equals("20"))
                    //{
                    //    total20 = total20 + 1;
                    //}
                    //else if (item.Size.Equals("40"))
                    //{
                    //    total40 = total40 + 1;
                    //}
                    //else if (item.Size.Equals("45"))
                    //{
                    //    total45 = total45 + 1;
                    //}


                    i++;

                });

                total20 = total20;
                total40 = total40;
                total45 = total45;
                total = total20 + total40 + total45;
                teus20 = total20;
                totalteus = teus20 + total40 * 2 + total45 * 2;
                // Pages.Append("<tr>");
                //Pages.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; width:10%; font-size:7pt;'>Total</th>");                
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'>" + lstData.LstIns.Count() + " </th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'></th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'> " + lstData.LstIns.Sum(x => x.CIFValue) + " </th>");
                // Pages.Append("<th style='border-bottom:1px solid #000; font-size:7pt;'> " + lstData.LstIns.Sum(x => x.Duty) + " </th>");
                // Pages.Append("</tr>");
                lstData.LstIns.Select(z => new { date = z.SVDate }).Distinct().ToList().ForEach(z =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'></td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'><b>Date :</b>" + z.date + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'><b>Total CIFValue:</b>" + lstData.LstIns.Where(y => y.SVDate == z.date).Sum(y => y.CIFValue) + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;'><b>Total Duty :</b>" + lstData.LstIns.Where(y => y.SVDate == z.date).Sum(y => y.Duty) + "</td>");
                    Pages.Append("</tr>");
                });
                Pages.Append("</tbody></table>");


                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:50%; text-align: center; border-collapse:collapse; border:1px solid #000; font-size:7pt; margin-top:20px;'>");
                //Pages.Append("<thead>");
                //Pages.Append("<tr><th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width: 300px;'>Total</th></tr>");

                //Pages.Append("<tr><th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='width: 100px;'></th></tr>");
                //Pages.Append("</thead>");

                //Pages.Append("<tbody>");

                //Pages.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total20 + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total40 + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total45 + "</td>");
                //Pages.Append("<td style='border-top: 1px solid #000;'>" + totalteus + "</td></tr>");

                //Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion

        #region E04
        public ActionResult E04DetailsReport()
        {
            return PartialView();
        }

        [HttpGet]
        public ActionResult GetE04List()
        {
            VIZ_ReportRepository ObjER = new VIZ_ReportRepository();
            List<Wfld_E04Report> LstE04 = new List<Wfld_E04Report>();
            ObjER.ListofE04Report(0);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Wfld_E04Report>)ObjER.DBResponse.Data;
            }
            return PartialView("ListOfE04DetailsReport", LstE04);
        }
        [HttpGet]
        public JsonResult LoadMoreE04List(int Page)
        {
            VIZ_ReportRepository ObjER = new VIZ_ReportRepository();
            var LstE04 = new List<Wfld_E04Report>();
            ObjER.ListofE04Report(Page);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Wfld_E04Report>)ObjER.DBResponse.Data;
            }
            return Json(LstE04, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult ViewE04DetailsReport(int ID)
        {
            Wfld_E04Report ObjE04 = new Wfld_E04Report();
            VIZ_ReportRepository ObjER = new VIZ_ReportRepository();
            ObjER.GetE04DetailById(ID);
            if (ObjER.DBResponse.Data != null)
            {
                ObjE04 = (Wfld_E04Report)ObjER.DBResponse.Data;
            }
            return PartialView(ObjE04);
        }


        [HttpGet]
        public JsonResult GetE04Search(string SB_No = "", string SB_Date = "", string Exp_Name = "")
        {
            VIZ_ReportRepository ObjER = new VIZ_ReportRepository();
            List<Wfld_E04Report> LstE04 = new List<Wfld_E04Report>();
            ObjER.GetE04DetailSearch(SB_No, SB_Date, Exp_Name);
            if (ObjER.DBResponse.Data != null)
            {
                LstE04 = (List<Wfld_E04Report>)ObjER.DBResponse.Data;
            }
            //return PartialView("ListOfE04DetailsReport", LstE04);
            return Json(ObjER.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion
        #region  Insurance Register Yard
        [HttpGet]
        public ActionResult InsuranceRegisterYard()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();

            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult InsuranceYardRegisterPrint(WFLD_InsuranceYardRegister obj, string PeriodFrom, string PeriodTo)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.InsuranceYardRegisterPrint(obj, PeriodFrom, PeriodTo);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                List<WFLD_InsuranceYardRegister> lstData = new List<WFLD_InsuranceYardRegister>();
                lstData = (List<WFLD_InsuranceYardRegister>)ObjRR.DBResponse.Data;
                if (obj.Module == "Import")
                {
                    Path = GeneratePDFInsuranceYardImportRegister(lstData, PeriodFrom, PeriodTo, obj.Module);
                }
                else
                {
                    Path = GeneratePDFInsuranceYardExportRegister(lstData, PeriodFrom, PeriodTo, obj.Module);
                }




                return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
            }


            else
                return Json(new { Status = 0, Data = "No Record Found" }, JsonRequestBehavior.AllowGet);
        }
        public string GeneratePDFInsuranceYardImportRegister(List<WFLD_InsuranceYardRegister> lstData, string FromDate, string ToDate, string Module)
        {
            try
            {
                var FileName = "InsuranceYardRegister.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                // Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + lstData.mstcompany + "</span><br/><span style='font-size:7pt;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Daily Transaction Diary(Carting)</label></td></tr>");
                Pages.Append("<td width='180%' valign='top' align='center'><h1 style='font-size: 23px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>Container Freight Station</span><br/><span style='font-size:8pt;'></span><br/><label style='font-size: 8pt; font-weight:bold;'>Insurance Register Yard</label><br/><span style='font-size:8pt;'><b></b></span><br/><label style='font-size: 8pt;'><b>For the Period </b>" + FromDate + " And " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                Pages.Append("<table colspan='12' cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>CIF Value</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:31%;'>Duty</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>Size</th></tr></thead>");
                // Pages.Append("<th style='border-bottom:1px solid #000;width:31%;'>Module</th></tr></thead>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:19%;'>Gross Weight</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:19%;'>FOB</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;width:19%;'>Remarks</th></tr></thead>");
                Pages.Append("<tbody>");
                int i = 1;
                int total45; int total20; int total40; int total; int teus; int teus20; int teus40; int totalteus;


                total20 = 0;
                total40 = 0;
                total45 = 0;
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Date + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CIFValue + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.size + "</td>");
                    // Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Duty + "</td>");
                    // Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Date + "</td>");
                    // Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("</tr>");

                    //if (item.Size.Equals("20"))
                    //{
                    //    total20 = total20 + 1;
                    //}
                    //else if (item.Size.Equals("40"))
                    //{
                    //    total40 = total40 + 1;
                    //}
                    //else if (item.Size.Equals("45"))
                    //{
                    //    total45 = total45 + 1;
                    //}


                    i++;

                });

                total20 = total20;
                total40 = total40;
                total45 = total45;
                total = total20 + total40 + total45;
                teus20 = total20;
                totalteus = teus20 + total40 * 2 + total45 * 2;
                // Pages.Append("<tr>");
                //Pages.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; width:10%; font-size:7pt;'>Total</th>");                
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'>" + lstData.LstIns.Count() + " </th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'></th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'> " + lstData.LstIns.Sum(x => x.CIFValue) + " </th>");
                // Pages.Append("<th style='border-bottom:1px solid #000; font-size:7pt;'> " + lstData.LstIns.Sum(x => x.Duty) + " </th>");
                // Pages.Append("</tr>");
                /*   lstData.LstIns.Select(z => new { date = z.Date }).Distinct().ToList().ForEach(z =>
                   {
                       Pages.Append("<tr>");
                       Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'></td>");
                       Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'><b>Date :</b>" + z.date + "</td>");
                       Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'><b>Total CIFValue:</b>" + lstData.LstIns.Where(y => y.Date == z.date).Sum(y => y.CIFValue) + "</td>");
                       Pages.Append("<td style='border-bottom:1px solid #000;'><b>Total Duty :</b>" + lstData.LstIns.Where(y => y.Date == z.date).Sum(y => y.Duty) + "</td>");
                       Pages.Append("</tr>");
                   });*/
                Pages.Append("</tbody></table>");


                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:50%; text-align: center; border-collapse:collapse; border:1px solid #000; font-size:7pt; margin-top:20px;'>");
                //Pages.Append("<thead>");
                //Pages.Append("<tr><th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width: 300px;'>Total</th></tr>");

                //Pages.Append("<tr><th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='width: 100px;'></th></tr>");
                //Pages.Append("</thead>");

                //Pages.Append("<tbody>");

                //Pages.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total20 + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total40 + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total45 + "</td>");
                //Pages.Append("<td style='border-top: 1px solid #000;'>" + totalteus + "</td></tr>");

                //Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }

        public string GeneratePDFInsuranceYardExportRegister(List<WFLD_InsuranceYardRegister> lstData, string FromDate, string ToDate, string Module)
        {
            try
            {
                var FileName = "InsuranceYardRegister.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                // Pages.Append("<td width='200%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + lstData.mstcompany + "</span><br/><span style='font-size:7pt;'><b>From </b> " + FromDate + " <b>To </b>" + ToDate + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Daily Transaction Diary(Carting)</label></td></tr>");
                Pages.Append("<td width='180%' valign='top' align='center'><h1 style='font-size: 23px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 8pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:8pt;'>Container Freight Station</span><br/><span style='font-size:8pt;'></span><br/><label style='font-size: 8pt; font-weight:bold;'>Insurance Register Yard</label><br/><span style='font-size:8pt;'><b></b></span><br/><label style='font-size: 8pt;'><b>For the Period </b>" + FromDate + " And " + ToDate + "</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                Pages.Append("<table colspan='12' cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:5%;'>S.No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>FOB Value</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;width:31%;'>Duty</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:32%;'>Size</th></tr></thead>");
                //   Pages.Append("<th style='border-bottom:1px solid #000;width:31%;'>Module</th></tr></thead>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:19%;'>Gross Weight</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:19%;'>FOB</th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;width:19%;'>Remarks</th></tr></thead>");
                Pages.Append("<tbody>");
                int i = 1;
                int total45; int total20; int total40; int total; int teus; int teus20; int teus40; int totalteus;


                total20 = 0;
                total40 = 0;
                total45 = 0;
                lstData.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Date + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.CIFValue + "</td>");
                    //  Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.size + "</td>");
                    //    Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Duty + "</td>");
                    //  Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'>" + item.Date + "</td>");
                    // Pages.Append("<td style='border-bottom:1px solid #000;'>" + item.Duty + "</td>");
                    Pages.Append("</tr>");

                    //if (item.Size.Equals("20"))
                    //{
                    //    total20 = total20 + 1;
                    //}
                    //else if (item.Size.Equals("40"))
                    //{
                    //    total40 = total40 + 1;
                    //}
                    //else if (item.Size.Equals("45"))
                    //{
                    //    total45 = total45 + 1;
                    //}


                    i++;

                });

                total20 = total20;
                total40 = total40;
                total45 = total45;
                total = total20 + total40 + total45;
                teus20 = total20;
                totalteus = teus20 + total40 * 2 + total45 * 2;
                // Pages.Append("<tr>");
                //Pages.Append("<th style='border-bottom:1px solid #000; border-right:1px solid #000; width:10%; font-size:7pt;'>Total</th>");                
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'>" + lstData.LstIns.Count() + " </th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'></th>");
                // Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000; font-size:7pt;'> " + lstData.LstIns.Sum(x => x.CIFValue) + " </th>");
                // Pages.Append("<th style='border-bottom:1px solid #000; font-size:7pt;'> " + lstData.LstIns.Sum(x => x.Duty) + " </th>");
                // Pages.Append("</tr>");
                /*   lstData.LstIns.Select(z => new { date = z.Date }).Distinct().ToList().ForEach(z =>
                   {
                       Pages.Append("<tr>");
                       Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'></td>");
                       Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'><b>Date :</b>" + z.date + "</td>");
                       Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;'><b>Total CIFValue:</b>" + lstData.LstIns.Where(y => y.Date == z.date).Sum(y => y.CIFValue) + "</td>");
                       Pages.Append("<td style='border-bottom:1px solid #000;'><b>Total Duty :</b>" + lstData.LstIns.Where(y => y.Date == z.date).Sum(y => y.Duty) + "</td>");
                       Pages.Append("</tr>");
                   });*/
                Pages.Append("</tbody></table>");


                //Pages.Append("<table cellspacing='0' cellpadding='5' style='width:50%; text-align: center; border-collapse:collapse; border:1px solid #000; font-size:7pt; margin-top:20px;'>");
                //Pages.Append("<thead>");
                //Pages.Append("<tr><th colspan='3' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align: center; width: 300px;'>Total</th></tr>");

                //Pages.Append("<tr><th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='border-right: 1px solid #000; width: 100px;'></th>");
                //Pages.Append("<th style='width: 100px;'></th></tr>");
                //Pages.Append("</thead>");

                //Pages.Append("<tbody>");

                //Pages.Append("<tr><td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total20 + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total40 + "</td>");
                //Pages.Append("<td style='border-right: 1px solid #000; border-top: 1px solid #000;'>" + total45 + "</td>");
                //Pages.Append("<td style='border-top: 1px solid #000;'>" + totalteus + "</td></tr>");

                //Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }
        #endregion


        #region Payer Ledger Statement

        public ActionResult PayerLedgerStatement()
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForPartyLedger("", 0);
            if (ObjRR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjRR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstParty = Jobject["LstParty"];
                ViewBag.State = Jobject["State"];
            }
            return PartialView();
        }


        [HttpGet]
        public JsonResult SearchPartyForPayer(string PartyCode)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForPartyLedger(PartyCode, 0);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public JsonResult LoadPartyFoPayer(string PartyCode, int Page)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            ObjRR.GetAllPartyForPartyLedger(PartyCode, Page);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }









        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult GetPayerLedgerStatement(VIZ_PayerStatement vm)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();

            string Fdt = Convert.ToDateTime(vm.FromDate).ToString("yyyy-MM-dd");
            string Tdt = Convert.ToDateTime(vm.ToDate).ToString("yyyy-MM-dd");

            ObjRR.GetPayerLedgerStatement(Convert.ToInt32(vm.PartyId), Fdt, Tdt);
            string Path = "";
            if (ObjRR.DBResponse.Data != null)
            {
                VIZ_CashDetailsStatement SDData = new VIZ_CashDetailsStatement();
                SDData = (VIZ_CashDetailsStatement)ObjRR.DBResponse.Data;

                Path = GeneratePDFPayerLedgerStatement(SDData, vm.FromDate, vm.ToDate);
            }
            return Json(new { Status = 1, Data = Path }, JsonRequestBehavior.AllowGet);
        }


        [NonAction]
        public string GeneratePDFPayerLedgerStatement(VIZ_CashDetailsStatement SDData, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "LedgerReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";
                //***************************************************************************************


                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='100%' valign='top' align='center'><h1 style='font-size: 22px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 12px;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:12px;'>Container Freight Station,<br/> CWC 18-7-1101,Guest House block, Kedareswarapet, Dist.-Krishna, Vijayawada-520003, A.P</span><br/><label style='font-size: 14px; font-weight:bold;'>PARTY LEDGER STATEMENT</label></td></tr>");
                Pages.Append("</tbody></table>");
                Pages.Append(" </td></tr>");
                Pages.Append("</thead>");

                Pages.Append(" <tbody>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party :</b>" + SDData.PartyName + "</td></tr>");
                Pages.Append(" <tr><td colspan='12' style='font-size:12px;'><b>Folio No :</b> " + SDData.PartyCode + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>CWC GST No :</b> " + SDData.CompanyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.PartyGst + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Period :</b> " + FromDate + " - " + ToDate + "</td></tr>");
                Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Opening Balance :</b> " + SDData.Opening + "</td></tr>");
               // Pages.Append("<tr><td colspan='12' style='font-size:12px;'><b>Party GST No :</b> " + SDData.SDBalance + "</td></tr>");
                Pages.Append("</tbody></table>");

                int i = 1;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; font-size:8pt;'>");
                Pages.Append("<thead><tr><th style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>Sl. No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>Invoice No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Invoice Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>Receipt No</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Receipt Date</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Pay Receipt</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>Transaction Type</th>");

                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Transaction Amount</th>");
                Pages.Append("<th style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:center;'>Closing Balance</th></tr></thead>");

                Pages.Append("<tbody>");
                int counter = 1;
                decimal utilisationamt = 0;
                decimal ReceiptAmt = 0;
                decimal balance = 0;
                SDData.lstInvc.ForEach(item =>
                {
                    Pages.Append("<tr>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:3%;'>" + i + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:9%;text-align:center;'>" + item.InvoiceNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.InvoiceDate + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:11%;text-align:center;'>" + item.ReceiptNo + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.ReceiptDate + "</td>");
                    if (item.ReceiptNo != "")
                    {
                        if (item.TranAmt == 0)
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        }
                        else
                        {
                            Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                        }

                    }
                    else
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:right;'>" + ReceiptAmt.ToString() + "</td>");

                    }
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:8%;text-align:center;'>" + item.TranType + "</td>");
                    Pages.Append("<td style='border-bottom:1px solid #000;border-right:1px solid #000;width:12%;text-align:right;'>" + item.TranAmt.ToString() + "</td>");
                    if (counter == 1)
                    {
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + item.ReceiptAmt.ToString() + "</td>");
                        utilisationamt = Convert.ToDecimal(item.ReceiptAmt);
                    }
                    else
                    {
                        if (item.ReceiptNo != "")
                        {
                            if (item.TranAmt == 0)
                            {
                                if (item.CrAdjust == 0)
                                {
                                    utilisationamt = utilisationamt + Convert.ToDecimal(item.ReceiptAmt);
                                    balance = balance - Convert.ToDecimal(item.TranAmt);
                                }
                            }
                            else
                            {
                                utilisationamt = utilisationamt + Convert.ToDecimal(item.TranAmt);
                                balance = balance - Convert.ToDecimal(item.TranAmt);
                            }
                        }
                        utilisationamt = utilisationamt - Convert.ToDecimal(item.TranAmt);
                        balance = balance + Convert.ToDecimal(item.TranAmt);
                        Pages.Append("<td style='border-bottom:1px solid #000;width:12%;text-align:right;'>" + utilisationamt.ToString() + "</td>");
                    }
                    Pages.Append("</tr>");
                    counter++;
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Closing Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + utilisationamt.ToString() + "</th>");
                Pages.Append("</tr>");



                //Pages.Append("<tr>");
                //Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>SD Balance :</th>");
                //Pages.Append("<th style='width:12%;text-align:right;'>" + SDData.SDBalance.ToString() + "</th>");
                //Pages.Append("</tr>");

                Decimal UtiBalance = Convert.ToDecimal(SDData.SDBalance) - Math.Abs(utilisationamt);
                if (SDData.IsPda == 0)
                {
                    UtiBalance = 0;
                }
                Pages.Append("<tr>");
                Pages.Append("<th colspan='7' style='width:8%;text-align:right;'>Utilization Balance :</th>");
                Pages.Append("<th style='width:12%;text-align:right;'>" + SDData.UtilizationAmount + "</th>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse;font-size:9pt;'><tbody>");
                Pages.Append("<tr><td><span><br/><br/></span></td></tr>");
                Pages.Append("<tr><td colspan='12'><p><b>N.B :</b> This is a computer generated statement. Doesn't require any signature.</p></td></tr>");
                Pages.Append("</tbody></table>");

                //***************************************************************************************
                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                {
                    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                }
              
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch
            {
                return "";
            }
        }


        #endregion

        //#region Container Stuffing

        ////public ActionResult GetStuffingInvoicePrint(int StuffingId)
        ////{
        ////    VIZ_ReportRepository ObjER = new VIZ_ReportRepository();
        ////    ObjER.ListofStuffingInvoiceForPrint(StuffingId);
        ////    List<VIZ_ListStuffingInvoice> lstInvoice = new List<VIZ_ListStuffingInvoice>();
        ////    if (ObjER.DBResponse.Data != null)
        ////        lstInvoice = (List<VIZ_ListStuffingInvoice>)ObjER.DBResponse.Data;
        ////   // VIZ_BulkInvoiceReport objBIR = new VIZ_BulkInvoiceReport();
        ////    //foreach (var item in lstInvoice)
        ////    //{
        ////    //    objBIR.InvoiceNumber= item.InvoiceNo;
        ////    //    objBIR.InvoiceModule= "EXSC";
        ////    //    objBIR.PeriodFrom = DateTime.Now.ToString("dd/MM/yyyy");
        ////    //    objBIR.PeriodTo= DateTime.Now.ToString("dd/MM/yyyy");
        ////    //    objBIR.InvoiceModuleName = "Container Stuffing Payment Sheet";
        ////    //    //BulkInvoiceReport( objBIR);
        ////    //}

        ////    return Json(ObjER.DBResponse, JsonRequestBehavior.AllowGet);
        ////}
        //#endregion

        #region register of outward supply

        [HttpGet]
        public ActionResult RegisterOfOutward()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfOutward(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetRegisterofOutward(date1, date2);
                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                }
            }
            // return null;
        }

        #endregion

        #region register of outward supply

        [HttpGet]
        public ActionResult RegisterOfOutwardSupply()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult RegisterOfOutwardSupply(FormCollection fc)
        {
            try
            {
                var date1 = Convert.ToDateTime(fc["PeriodFrom"].ToString());
                var date2 = Convert.ToDateTime(fc["PeriodTo"].ToString());
                var Type = fc["ddlType"].ToString();
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.GetRegisterofOutwardSupply(date1, date2, Type);

                if (Type == "Inv") { Type = "Invoice"; }
                if (Type == "C") { Type = "Credit"; }
                if (Type == "D") { Type = "Debit"; }
                if (Type == "Unpaid") { Type = "Unpaid"; }
                if (Type == "CancelInv") { Type = "Cancel Invoice"; }

                excelName = "RegisterofOutwardSupply" + "_" + Type + ".xlsx";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "RegisterofOutwardSupply.xlsx");
                }
            }  
            // return null; 
        }

        #endregion
        #region Stuffing Acknowledgement Search       

        [HttpGet]
        public ActionResult StfAckSearch()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();

            ObjGR.GetAllContainerNoForContstufserach("", 0);

            if (ObjGR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstStuffing = Jobject["LstStuffing"];
                ViewBag.StateCont = Jobject["State"];
            }
            else
            {
                ViewBag.LstStuffing = null;
            }


            ObjGR.GetAllShippingBillNoForContstufserach("", 0);
            if (ObjGR.DBResponse.Data != null)
            {
                var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                ViewBag.LstStuff = Jobject["LstStuff"];
                ViewBag.StateShipbill = Jobject["State"];
            }
            else
            {
                ViewBag.LstStuff = null;
            }

            return PartialView();
        }
        [HttpGet]
        public JsonResult SearchContainerNo(string cont)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetAllContainerNoForContstufserach(cont, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult SearchShipbill(string shipbill)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetAllShippingBillNoForContstufserach(shipbill, 0);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult LoadContainerLists(string cont, int Page)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetAllContainerNoForContstufserach(cont, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }


        [HttpGet]
        public JsonResult LoadShipbillLists(string shipbill, int Page)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            ObjGR.GetAllShippingBillNoForContstufserach(shipbill, Page);
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getcontstuffingacksearch(string container, string shipbill, string cfscode)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            List<Viz_ContStufAckRes> Lststufack = new List<Viz_ContStufAckRes>();
            ObjGR.GetStufAckResult(container, shipbill, cfscode);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Viz_ContStufAckRes>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }

        #endregion
        #region Stuffing Loaded Search
        [HttpGet]
        public ActionResult StfLoadSearch()
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();

            /* ObjGR.GetAllContainerNoForContstufserach("", 0);

             if (ObjGR.DBResponse.Data != null)
             {
                 var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                 var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                 ViewBag.LstStuffing = Jobject["LstStuffing"];
                 ViewBag.StateCont = Jobject["State"];
             }
             else
             {
                 ViewBag.LstStuffing = null;
             }


             ObjGR.GetAllShippingBillNoForContstufserach("", 0);
             if (ObjGR.DBResponse.Data != null)
             {
                 var Jobj = Newtonsoft.Json.JsonConvert.SerializeObject(ObjGR.DBResponse.Data);
                 var Jobject = Newtonsoft.Json.Linq.JObject.Parse(Jobj);
                 ViewBag.LstStuff = Jobject["LstStuff"];
                 ViewBag.StateShipbill = Jobject["State"];
             }
             else
             {
                 ViewBag.LstStuff = null;
             }*/

            return PartialView();
        }
        /* [HttpGet]
         public JsonResult SearchContainerNo(string cont)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllContainerNoForContstufserach(cont, 0);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }
         [HttpGet]
         public JsonResult SearchShipbill(string shipbill)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllShippingBillNoForContstufserach(shipbill, 0);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }
         [HttpGet]
         public JsonResult LoadContainerLists(string cont, int Page)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllContainerNoForContstufserach(cont, Page);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }


         [HttpGet]
         public JsonResult LoadShipbillLists(string shipbill, int Page)
         {
             ReportRepository ObjGR = new ReportRepository();
             ObjGR.GetAllShippingBillNoForContstufserach(shipbill, Page);
             return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
         }*/
        [HttpGet]
        public JsonResult getloadstufsearch(string jobno)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            List<Viz_loadstuf> Lststufack = new List<Viz_loadstuf>();
            ObjGR.GetStufloadResult(jobno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Viz_loadstuf>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufasrsearch(string jobasrno)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            List<Viz_loadstufasr> Lststufack = new List<Viz_loadstufasr>();
            ObjGR.GetStufloadasrResult(jobasrno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Viz_loadstufasr>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufdpsearch(string jobdpno)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            List<Viz_loadstufdp> Lststufack = new List<Viz_loadstufdp>();
            ObjGR.GetStufloaddpResult(jobdpno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Viz_loadstufdp>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        [HttpGet]
        public JsonResult getloadstufdtsearch(string jobdtno)
        {
            VIZ_ReportRepository ObjGR = new VIZ_ReportRepository();
            List<Viz_loadstufdt> Lststufack = new List<Viz_loadstufdt>();
            ObjGR.GetStufloaddpResult(jobdtno);


            if (ObjGR.DBResponse.Data != null)
            {
                Lststufack = (List<Viz_loadstufdt>)ObjGR.DBResponse.Data;
            }
            return Json(ObjGR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region  Bond STORAGE COLLECTION REPORT 
        [HttpGet]
        public ActionResult BondStorageCollectionReport()
        {
            return PartialView();
        }
        [HttpPost]
        [ValidateAntiForgeryToken]
        public JsonResult BondStorageCollectionReport(string FromDate, string ToDate)
        {
            try
            {
                var ObjRR = new VIZ_ReportRepository();
                ObjRR.BondStorageCollectionReport(FromDate, ToDate);
                if (ObjRR.DBResponse.Data != null)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    string Path = BondStorageCollectionReportPDF(ds, FromDate, ToDate);
                    return Json(new { Status = 1, Message = Path });

                }
                return Json(new { Status = -1, Message = "No data found" });
            }
            catch
            {
                return Json(new { Status = -1, Message = "Error" });
            }
        }
        [NonAction]
        public string BondStorageCollectionReportPDF(DataSet ds, string FromDate, string ToDate)
        {
            try
            {
                var FileName = "BondStorageCollectionReport.pdf";
                StringBuilder Pages = new StringBuilder();
                string LocalDirectory = Server.MapPath("~/Docs/") + Session.SessionID + "/Report";

                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0; padding: 5px;'><thead>");
                Pages.Append("<tr><td colspan='12'>");
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; font-family: Arial, Helvetica, sans-serif; margin: 0;'><tbody>");
                Pages.Append("<tr><td valign='top'><img align='right' src='IMGSRC' width='90'/></td>");
                Pages.Append("<td width='70%' valign='top' align='center'><h1 style='font-size: 16px; margin: 0; padding: 0;'>CENTRAL WAREHOUSING CORPORATION</h1><label style='font-size: 7pt;'>(A Govt. of India Undertaking)</label><br/><span style='font-size:7pt;'>" + ds.Tables[0].Rows[0]["CompanyAddress"].ToString() + "<br/>Email : " + ds.Tables[0].Rows[0]["EmailAddress"].ToString() + "</span><br/><label style='font-size: 7pt; font-weight:bold;'>Bond Storage Collection REGISTER</label><br/><label style='font-size: 7pt;'><b>From Date :</b> " + FromDate + " - <b>To Date :</b> " + ToDate + "</label></td>");
                Pages.Append("<td valign='top'><img align='right' src='ISO_IMG' width='100'/></td>");
                Pages.Append("</tr>");
                Pages.Append("</tbody></table>");
                Pages.Append("</td></tr>");
                Pages.Append("</thead></table>");

                int i = 1;
                decimal StoAmount = 0;
                Pages.Append("<table cellspacing='0' cellpadding='5' style='width:100%; border-collapse:collapse; border:1px solid #000; border-bottom:0; font-size:7pt; text-align: center;'>");
                Pages.Append("<thead><tr>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 5%;'>Sl No.</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000; width: 10%;'>Date</th>");
                Pages.Append("<th style='border-bottom: 1px solid #000; width: 10%;'>Storage Amount</th>");
                Pages.Append("</tr></thead>");
                Pages.Append("<tbody>");
                ds.Tables[0].AsEnumerable().ToList().ForEach(item =>
                {
                    Pages.Append("<tr><td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + i + "</td>");
                    Pages.Append("<td style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + item["Date"].ToString() + " </td>");
                    Pages.Append("<td style='border-bottom: 1px solid #000;'>" + item["Amount"].ToString() + "</td>");
                    Pages.Append("</tr>");
                    StoAmount = StoAmount + Convert.ToDecimal(item["Amount"]);
                    i++;
                });
                Pages.Append("<tr>");
                Pages.Append("<th colspan='2' style='border-right: 1px solid #000; border-bottom: 1px solid #000; text-align:left;'>TOTAL</th>");
                Pages.Append("<th style='border-right: 1px solid #000; border-bottom: 1px solid #000;'>" + StoAmount + "</th></tr>");

                Pages.Append("</tbody></table>");

                Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));

                if (!Directory.Exists(LocalDirectory))
                {
                    Directory.CreateDirectory(LocalDirectory);
                }
                //if (System.IO.File.Exists(LocalDirectory + "/" + FileName))
                //{
                //    System.IO.File.Delete(LocalDirectory + "/" + FileName);
                //}
                //Pages.Replace("IMGSRC", Server.MapPath("~/Content/Images/CWCPDF.PNG"));
                //Pages.Replace("ISO_IMG", Server.MapPath("~/Content/Images/iso_logo.jpg"));
                using (var ObjPdf = new ReportingHelper(PdfPageSize.A4, 40f, 40f, 40f, 40f, false, true))
                {
                    ObjPdf.HeadOffice = this.HeadOffice;
                    ObjPdf.HOAddress = this.HOAddress;
                    ObjPdf.ZonalOffice = this.ZonalOffice;
                    ObjPdf.ZOAddress = this.ZOAddress;
                    ObjPdf.GeneratePDF(LocalDirectory + "/" + FileName, Pages.ToString());
                }
                return "/Docs/" + Session.SessionID + "/Report/" + FileName;
            }
            catch (Exception ex)
            {
                return "";
            }
        }
        #endregion

        #region Outstanding Summary Report

        public ActionResult OutstandingSummaryReport()
        {
            return PartialView();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public FileResult OutstandingSummaryReport(VIZ_OutstandingSummary ObjSummary)
        {
            try
            {                
                var excelName = "";
                var ObjRR = new VIZ_ReportRepository();
               
                List<VIZ_OutstandingSummary> LstPdSummary = new List<VIZ_OutstandingSummary>();
                Login objLogin = (Login)Session["LoginUser"];
                ObjRR.OutstandingSummaryReport(ObjSummary);//, objLogin.Uid


                excelName = "OutstandingSummaryExcel" + ".xls";

                if (!string.IsNullOrEmpty(ObjRR.DBResponse.Data.ToString()))
                    return File(ObjRR.DBResponse.Data.ToString(), "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                else
                {
                    string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                    var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xls");
                    using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                    {
                        exl.AddCell("A1", "No data found");
                        exl.Save();
                        return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", excelName);
                    }
                }
            }
            catch
            {
                string name = DateTime.Now.ToOADate().ToString().Replace(".", string.Empty);
                var excelFile = Server.MapPath("~/Docs/Excel/" + name + ".xlsx");
                using (var exl = new DynamicExcel.ExcelGenerator(excelFile))
                {
                    exl.AddCell("A1", "No data found");
                    exl.Save();
                    return File(excelFile, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "OutstandingSummaryExcel.xls");
                }
            }
            // return null;
        }
        #endregion




        #region Bulk Invoice For External User

        [HttpGet]
        public ActionResult BulkInvoiceReportForExternalUser()
        {

            Login objLogin = (Login)Session["LoginUser"];
            ViewBag.Name = objLogin.Name;

            return PartialView();
        }

        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkInvoiceReportForExternalUser(VIZ_BulkInvoiceReport ObjBulkInvoiceReport)
        {
            if (ObjBulkInvoiceReport.InvoiceNumber == null)
            {
                ObjBulkInvoiceReport.InvoiceNumber = "";
            }
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            //When Module is selected All Condition against a party
            ObjBulkInvoiceReport.PartyId = objLogin.EximTraderId;
            ObjBulkInvoiceReport.PayeeId = objLogin.EximTraderId;
            if (ObjBulkInvoiceReport.InvoiceModule == "All")
            {
                string ModuleName = "";
                //delete all the files in the folder before creating it
                if (System.IO.Directory.Exists(Server.MapPath("~/Docs/All/") + Session.SessionID))
                {
                    string deletelocation = Server.MapPath("~/Docs/All/") + Session.SessionID + "/";
                    DeleteDirectory(deletelocation);
                }

                //get all the distinct invoice module and invoices list with respect to party and date range 
                ObjRR.ModuleListWithInvoiceForExternalUser(ObjBulkInvoiceReport);
                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    List<dynamic> lstModule = ConvertingDataTabletoDynamic.ToDynamic(ds.Tables[0]);
                    IList lstDistModule = lstModule.Select(x => x.Module).Distinct().ToList();
                    string FilePath = "";


                    foreach (string Mod in lstDistModule)
                    {
                        //lstModule.Where(x => x.Module == Mod).ToList().ForEach(itemInv =>
                        //{
                        //    String ModuleName= itemInv.Module;
                        switch (Mod)
                        {
                            //Here ds is list of invoice of a module between two dates 
                            case "IMPYard":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET FCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforYard((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "IMPDestuff":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "LCL INVOICE AFTER DESTUFFING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforDESTUFFING((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPDeli":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "ASSESSMENT SHEET LCL";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforGodown((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPLod":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "LOADED CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforLoadContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXP": //Change For Mode EXPMovement
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER MOVEMENT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "CCIN":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CCIN ENTRY";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCCINEntry((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BTT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BTT";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTT((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "AUC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "Auction";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforAuction((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EMPTY CONTAINER PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEmptyContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "ECTrns":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EMPTY CONTAINER TRANSFER";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforEmptyContainer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "IMPSC":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "SEAL CUTTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforSealCutting((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPCRGSHFT":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CARGO SHIFTING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforCargoSF((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "Fumigation":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "FUMIGATION";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforFumigationInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPCS":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EXPORT CONTAINER STUFFING";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainerStuffingInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "BTTCon":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "EXPORT BTT CONTAINER ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBTTContainerInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            ////// written by vineet dated 08/06/2020

                            case "BND":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND DELIVERY PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBND((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "BNDadv":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND ADVANCED PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondWhiteField((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "BNDAdvance":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND ADVANCED PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBondAdvanceWhiteField((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "BNDUnloading":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "BOND UNLOADING PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforBonUnloadingInvoice((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "EXPREF":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "REEFER PAYMENT SHEET ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforReefer((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "RESINDIV":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "RESERVATION INVOICE (INDIVIDUAL) ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingReservationBulkPDFforREV((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "RESERV":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "RESERVATION ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingReservationBulkPDFforGE((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            case "Pallatisation":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "Pallatisation ";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GenerateBulkPdfForPallatisation((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                            case "EXPCSI":
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                ModuleName = "CONTAINER STUFFING PAYMENT SHEET";
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforContainerStuffing((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;

                            // end of vineet code



                            default:
                                ObjBulkInvoiceReport.InvoiceModule = Mod;
                                //case statement for printing name of invoices                                
                                if (Mod == "GE") { ModuleName = "GATE ENTRY"; }
                                else if (Mod == "IMPFCLLCL") { ModuleName = "FCL To LCL CONVERSION"; }
                                else if (Mod == "MiscInv") { ModuleName = "MISCELLANEOUS"; }
                                /*  else if (Mod == "EXPCS") { ModuleName = "EXPORT CONTAINER STUFFING"; }*/
                                else if (Mod == "RENT") { ModuleName = "RENT"; }
                                /*else if (Mod == "RESERV") { ModuleName = "RESERVATION"; }*/ // commented by vineet
                                else if (Mod == "IRR") { ModuleName = "IRR"; }
                                else if (Mod == "INVDEBT") { ModuleName = "CONTAINER DEBIT INVOICE"; }
                                else if (Mod == "EXPRRCD") { ModuleName = "EXPORT RR CREDIT DEBIT"; }
                                else ModuleName = Mod;
                                ObjBulkInvoiceReport.All = "All";
                                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);
                                FilePath = GeneratingBulkPDFforGE((DataSet)ObjRR.DBResponse.Data, ModuleName, ObjBulkInvoiceReport.All);
                                break;
                        }
                        //});

                    }
                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }

            else
            {
                // List<WFLDInvoiceGate> WFLDInvoiceGateList = ObjRR.GetBulkInvoiceDetailsForPrint(ObjBulkInvoiceReport);//, objLogin.Uid
                ObjRR.GenericBulkInvoiceDetailsForPrintForExternal(ObjBulkInvoiceReport);//, objLogin.Uid

                if (ObjRR.DBResponse.Status == 1)
                {
                    DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                    //string FilePath = GeneratingBulkPDF(WFLDInvoiceGateList, ObjBulkInvoiceReport.InvoiceModuleName);
                    string FilePath = "";
                    switch (ObjBulkInvoiceReport.InvoiceModule)
                    {
                        case "IMPYard":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforYard(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDestuff":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforDESTUFFING(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPDeli":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforGodown(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPLod":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforLoadContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXP":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "CCIN":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCCINEntry(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BTT":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforBTT(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "AUC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforAuction(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEmptyContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "ECTrns":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforEmptyContainer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "IMPSC":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforSealCutting(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPCRGSHFT":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforCargoSF(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "Fumigation":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforFumigationInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPCS":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainerStuffingInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BND":
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "bnd":
                            FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDadv":
                            FilePath = GeneratingBulkPDFforBondWhiteField(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDAdv":
                            FilePath = GeneratingBulkPDFforBondWhiteField(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDAdvance":
                            FilePath = GeneratingBulkPDFforBondAdvanceWhiteField(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "BNDUnloading":
                            FilePath = GeneratingBulkPDFforBonUnloadingInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            //FilePath = GeneratingBulkPDFforBND(ds, ObjBulkInvoiceReport.InvoiceModuleName);
                            break;
                        case "BTTCon":

                            FilePath = GeneratingBulkPDFforBTTContainerInvoice(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                        case "RESERV":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingReservationBulkPDFforGE(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;

                        case "RESINDIV":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingReservationBulkPDFforREV(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPREF":
                            FilePath = GeneratingBulkPDFforReefer(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "Pallatisation":
                            FilePath = GenerateBulkPdfForPallatisation(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        case "EXPCSI":
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforContainerStuffing(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                        default:
                            ObjBulkInvoiceReport.All = "";
                            FilePath = GeneratingBulkPDFforGE(ds, ObjBulkInvoiceReport.InvoiceModuleName, ObjBulkInvoiceReport.All);
                            break;
                    }

                    return Json(new { Status = 1, Data = FilePath });
                }
                else
                    return Json(new { Status = -1, Data = "No Record Found." });
            }
        }



     

        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfInvoiceDateWiseForExternalUser(string FromDate, string ToDate, string invoiceType)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            List<invoiceLIst> LstinvoiceLIst = new List<invoiceLIst>();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetInvoiceListForExternalUser(FromDate, ToDate, invoiceType,objLogin.EximTraderId);//, objLogin.Uid
            if (ObjRR.DBResponse.Data != null)
            {
                //LstinvoiceLIst = (List<invoiceLIst>)ObjRR.DBResponse.Data;
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }
            else
            {
                return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
            }

        }


        #endregion


        #region BulkCreaditNoteReport For External User
        [HttpGet]
        public ActionResult BulkCreaditNoteReportForExternalUser()
        {

            //ExportRepository objExport = new ExportRepository();
            //objExport.GetPaymentParty();
            //if (objExport.DBResponse.Status > 0)
            //    ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            //else
            //    ViewBag.PaymentParty = null;
            return PartialView();
        }




        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintCRNoteForExternalUser(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            Login objLogin = (Login)Session["LoginUser"];
            objRepo.PrintDetailsForBulkCRNoteForExternalUser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "C", objLogin.EximTraderId);
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }
        #endregion
        #region BulkDebitnoteReport For External User
        [HttpGet]
        public ActionResult BulkDebitnoteReportForExternalUser()
        {

            //ExportRepository objExport = new ExportRepository();
            //objExport.GetPaymentParty();
            //if (objExport.DBResponse.Status > 0)
            //    ViewBag.PaymentParty = JsonConvert.SerializeObject(objExport.DBResponse.Data);
            //else
            //    ViewBag.PaymentParty = null;
            return PartialView();
        }
        [HttpPost]
        [CustomValidateAntiForgeryToken]
        public JsonResult PrintDRNoteForExternalUser(FormCollection fc)
        {
            //objRR.GetBulkDebitNoteReport(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"));
            VIZ_ReportRepository objRepo = new VIZ_ReportRepository();
            PrintModelOfBulkCrCompany objCR = new PrintModelOfBulkCrCompany();
            Login objLogin = (Login)Session["LoginUser"];
            objRepo.PrintDetailsForBulkCRNoteForExternalUser(Convert.ToDateTime(fc["PeriodFrom"]).ToString("yyyy/MM/dd"), Convert.ToDateTime(fc["PeriodTo"]).ToString("yyyy/MM/dd"), "D", objLogin.EximTraderId);
            if (objRepo.DBResponse.Data != null)
            {
                objCR = (PrintModelOfBulkCrCompany)objRepo.DBResponse.Data;
                string Path = GenerateDRNotePDF(objCR);
                return Json(new { Status = 1, Message = Path });
            }
            else
            {
                return Json(new { Status = -1, Message = "error" });
            }
        }


        #endregion




        #region Bulk Receipt  Report For External User
        [HttpGet]
        public ActionResult BulkReceiptReportForExternalUser()
        {
            return PartialView();
        }
        [HttpPost]
        //[ValidateAntiForgeryToken]
        public JsonResult GetBulkReceiptReportForExternalUser(BulkReceiptReport ObjBulkReceiptReport)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetBulkCashreceiptForExternalUser(ObjBulkReceiptReport.PeriodFrom, ObjBulkReceiptReport.PeriodTo, ObjBulkReceiptReport.ReceiptNumber, objLogin.EximTraderId);
            if (ObjRR.DBResponse.Status == 1)
            {
                DataSet ds = (DataSet)ObjRR.DBResponse.Data;
                string Path = GenerateBulkReceiptReport(ds);
                return Json(new { Status = 1, Message = Path });
            }
            return Json(new { Status = 0, Message = "No Data Found" });
        }

       
        [HttpGet]
        [CustomValidateAntiForgeryToken]
        public ActionResult ListOfReceiptDateWiseForExternalUser(string FromDate, string ToDate)
        {
            VIZ_ReportRepository ObjRR = new VIZ_ReportRepository();
            Login objLogin = (Login)Session["LoginUser"];
            ObjRR.GetReceiptListForExternalUser(FromDate, ToDate,objLogin.EximTraderId);
            return Json(ObjRR.DBResponse, JsonRequestBehavior.AllowGet);
        }
        #endregion

    }

}






